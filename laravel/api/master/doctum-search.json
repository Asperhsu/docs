{"items":[{"t":"F","n":"Illuminate\\Events\\queueable","p":"Illuminate/Events.html#function_queueable","d":"<p>Create a new queued Closure event listener.</p>"},{"t":"F","n":"\\__","p":"[Global_Namespace].html#function___","d":"<p>Translate the given message.</p>"},{"t":"F","n":"\\abort","p":"[Global_Namespace].html#function_abort","d":"<p>Throw an HttpException with the given data.</p>"},{"t":"F","n":"\\abort_if","p":"[Global_Namespace].html#function_abort_if","d":"<p>Throw an HttpException with the given data if the given condition is true.</p>"},{"t":"F","n":"\\abort_unless","p":"[Global_Namespace].html#function_abort_unless","d":"<p>Throw an HttpException with the given data unless the given condition is true.</p>"},{"t":"F","n":"\\action","p":"[Global_Namespace].html#function_action","d":"<p>Generate the URL to a controller action.</p>"},{"t":"F","n":"\\app","p":"[Global_Namespace].html#function_app","d":"<p>Get the available container instance.</p>"},{"t":"F","n":"\\app_path","p":"[Global_Namespace].html#function_app_path","d":"<p>Get the path to the application folder.</p>"},{"t":"F","n":"\\append_config","p":"[Global_Namespace].html#function_append_config","d":"<p>Assign high numeric IDs to a config item to force appending.</p>"},{"t":"F","n":"\\array_add","p":"[Global_Namespace].html#function_array_add","d":"<p>Add an element to an array using &quot;dot&quot; notation if it doesn't exist.</p>"},{"t":"F","n":"\\array_collapse","p":"[Global_Namespace].html#function_array_collapse","d":"<p>Collapse an array of arrays into a single array.</p>"},{"t":"F","n":"\\array_divide","p":"[Global_Namespace].html#function_array_divide","d":"<p>Divide an array into two arrays. One with keys and the other with values.</p>"},{"t":"F","n":"\\array_dot","p":"[Global_Namespace].html#function_array_dot","d":"<p>Flatten a multi-dimensional associative array with dots.</p>"},{"t":"F","n":"\\array_except","p":"[Global_Namespace].html#function_array_except","d":"<p>Get all of the given array except for a specified array of keys.</p>"},{"t":"F","n":"\\array_first","p":"[Global_Namespace].html#function_array_first","d":"<p>Return the first element in an array passing a given truth test.</p>"},{"t":"F","n":"\\array_flatten","p":"[Global_Namespace].html#function_array_flatten","d":"<p>Flatten a multi-dimensional array into a single level.</p>"},{"t":"F","n":"\\array_forget","p":"[Global_Namespace].html#function_array_forget","d":"<p>Remove one or many array items from a given array using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\array_get","p":"[Global_Namespace].html#function_array_get","d":"<p>Get an item from an array using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\array_has","p":"[Global_Namespace].html#function_array_has","d":"<p>Check if an item or items exist in an array using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\array_last","p":"[Global_Namespace].html#function_array_last","d":"<p>Return the last element in an array passing a given truth test.</p>"},{"t":"F","n":"\\array_only","p":"[Global_Namespace].html#function_array_only","d":"<p>Get a subset of the items from the given array.</p>"},{"t":"F","n":"\\array_pluck","p":"[Global_Namespace].html#function_array_pluck","d":"<p>Pluck an array of values from an array.</p>"},{"t":"F","n":"\\array_prepend","p":"[Global_Namespace].html#function_array_prepend","d":"<p>Push an item onto the beginning of an array.</p>"},{"t":"F","n":"\\array_pull","p":"[Global_Namespace].html#function_array_pull","d":"<p>Get a value from the array, and remove it.</p>"},{"t":"F","n":"\\array_random","p":"[Global_Namespace].html#function_array_random","d":"<p>Get a random value from an array.</p>"},{"t":"F","n":"\\array_set","p":"[Global_Namespace].html#function_array_set","d":"<p>Set an array item to a given value using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\array_sort","p":"[Global_Namespace].html#function_array_sort","d":"<p>Sort the array by the given callback or attribute name.</p>"},{"t":"F","n":"\\array_sort_recursive","p":"[Global_Namespace].html#function_array_sort_recursive","d":"<p>Recursively sort an array by keys and values.</p>"},{"t":"F","n":"\\array_where","p":"[Global_Namespace].html#function_array_where","d":"<p>Filter the array using the given callback.</p>"},{"t":"F","n":"\\array_wrap","p":"[Global_Namespace].html#function_array_wrap","d":"<p>If the given value is not an array, wrap it in one.</p>"},{"t":"F","n":"\\asset","p":"[Global_Namespace].html#function_asset","d":"<p>Generate an asset path for the application.</p>"},{"t":"F","n":"\\auth","p":"[Global_Namespace].html#function_auth","d":"<p>Get the available auth instance.</p>"},{"t":"F","n":"\\back","p":"[Global_Namespace].html#function_back","d":"<p>Create a new redirect response to the previous location.</p>"},{"t":"F","n":"\\base_path","p":"[Global_Namespace].html#function_base_path","d":"<p>Get the path to the base of the install.</p>"},{"t":"F","n":"\\bcrypt","p":"[Global_Namespace].html#function_bcrypt","d":"<p>Hash the given value against the bcrypt algorithm.</p>"},{"t":"F","n":"\\blank","p":"[Global_Namespace].html#function_blank","d":"<p>Determine if the given value is &quot;blank&quot;.</p>"},{"t":"F","n":"\\broadcast","p":"[Global_Namespace].html#function_broadcast","d":"<p>Begin broadcasting an event.</p>"},{"t":"F","n":"\\cache","p":"[Global_Namespace].html#function_cache","d":"<p>Get / set the specified cache value.</p>"},{"t":"F","n":"\\camel_case","p":"[Global_Namespace].html#function_camel_case","d":"<p>Convert a value to camel case.</p>"},{"t":"F","n":"\\class_basename","p":"[Global_Namespace].html#function_class_basename","d":"<p>Get the class &quot;basename&quot; of the given object / class.</p>"},{"t":"F","n":"\\class_uses_recursive","p":"[Global_Namespace].html#function_class_uses_recursive","d":"<p>Returns all traits used by a class, its parent classes and trait of their traits.</p>"},{"t":"F","n":"\\collect","p":"[Global_Namespace].html#function_collect","d":"<p>Create a collection from the given value.</p>"},{"t":"F","n":"\\config","p":"[Global_Namespace].html#function_config","d":"<p>Get / set the specified configuration value.</p>"},{"t":"F","n":"\\config_path","p":"[Global_Namespace].html#function_config_path","d":"<p>Get the configuration path.</p>"},{"t":"F","n":"\\cookie","p":"[Global_Namespace].html#function_cookie","d":"<p>Create a new cookie instance.</p>"},{"t":"F","n":"\\csrf_field","p":"[Global_Namespace].html#function_csrf_field","d":"<p>Generate a CSRF token form field.</p>"},{"t":"F","n":"\\csrf_token","p":"[Global_Namespace].html#function_csrf_token","d":"<p>Get the CSRF token value.</p>"},{"t":"F","n":"\\data_fill","p":"[Global_Namespace].html#function_data_fill","d":"<p>Fill in data where it's missing.</p>"},{"t":"F","n":"\\data_get","p":"[Global_Namespace].html#function_data_get","d":"<p>Get an item from an array or object using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\data_set","p":"[Global_Namespace].html#function_data_set","d":"<p>Set an item on an array or object using dot notation.</p>"},{"t":"F","n":"\\database_path","p":"[Global_Namespace].html#function_database_path","d":"<p>Get the database path.</p>"},{"t":"F","n":"\\dd","p":"[Global_Namespace].html#function_dd","d":"<p>Dump the passed variables and end the script.</p>"},{"t":"F","n":"\\decrypt","p":"[Global_Namespace].html#function_decrypt","d":"<p>Decrypt the given value.</p>"},{"t":"F","n":"\\dispatch","p":"[Global_Namespace].html#function_dispatch","d":"<p>Dispatch a job to its appropriate handler.</p>"},{"t":"F","n":"\\dispatch_now","p":"[Global_Namespace].html#function_dispatch_now","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"F","n":"\\dispatch_sync","p":"[Global_Namespace].html#function_dispatch_sync","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"F","n":"\\e","p":"[Global_Namespace].html#function_e","d":"<p>Encode HTML special characters in a string.</p>"},{"t":"F","n":"\\elixir","p":"[Global_Namespace].html#function_elixir","d":"<p>Get the path to a versioned Elixir file.</p>"},{"t":"F","n":"\\encrypt","p":"[Global_Namespace].html#function_encrypt","d":"<p>Encrypt the given value.</p>"},{"t":"F","n":"\\ends_with","p":"[Global_Namespace].html#function_ends_with","d":"<p>Determine if a given string ends with a given substring.</p>"},{"t":"F","n":"\\env","p":"[Global_Namespace].html#function_env","d":"<p>Gets the value of an environment variable.</p>"},{"t":"F","n":"\\event","p":"[Global_Namespace].html#function_event","d":"<p>Dispatch an event and call the listeners.</p>"},{"t":"F","n":"\\factory","p":"[Global_Namespace].html#function_factory","d":"<p>Create a model factory builder for a given class and amount.</p>"},{"t":"F","n":"\\fake","p":"[Global_Namespace].html#function_fake","d":"<p>Get a faker instance.</p>"},{"t":"F","n":"\\filled","p":"[Global_Namespace].html#function_filled","d":"<p>Determine if a value is &quot;filled&quot;.</p>"},{"t":"F","n":"\\head","p":"[Global_Namespace].html#function_head","d":"<p>Get the first element of an array. Useful for method chaining.</p>"},{"t":"F","n":"\\info","p":"[Global_Namespace].html#function_info","d":"<p>Write some information to the log.</p>"},{"t":"F","n":"\\kebab_case","p":"[Global_Namespace].html#function_kebab_case","d":"<p>Convert a string to kebab case.</p>"},{"t":"F","n":"\\lang_path","p":"[Global_Namespace].html#function_lang_path","d":"<p>Get the path to the language folder.</p>"},{"t":"F","n":"\\last","p":"[Global_Namespace].html#function_last","d":"<p>Get the last element from an array.</p>"},{"t":"F","n":"\\logger","p":"[Global_Namespace].html#function_logger","d":"<p>Log a debug message to the logs.</p>"},{"t":"F","n":"\\logs","p":"[Global_Namespace].html#function_logs","d":"<p>Get a log driver instance.</p>"},{"t":"F","n":"\\method_field","p":"[Global_Namespace].html#function_method_field","d":"<p>Generate a form field to spoof the HTTP verb used by forms.</p>"},{"t":"F","n":"\\mix","p":"[Global_Namespace].html#function_mix","d":"<p>Get the path to a versioned Mix file.</p>"},{"t":"F","n":"\\now","p":"[Global_Namespace].html#function_now","d":"<p>Create a new Carbon instance for the current time.</p>"},{"t":"F","n":"\\object_get","p":"[Global_Namespace].html#function_object_get","d":"<p>Get an item from an object using &quot;dot&quot; notation.</p>"},{"t":"F","n":"\\old","p":"[Global_Namespace].html#function_old","d":"<p>Retrieve an old input item.</p>"},{"t":"F","n":"\\optional","p":"[Global_Namespace].html#function_optional","d":"<p>Provide access to optional objects.</p>"},{"t":"F","n":"\\policy","p":"[Global_Namespace].html#function_policy","d":"<p>Get a policy instance for a given class.</p>"},{"t":"F","n":"\\precognitive","p":"[Global_Namespace].html#function_precognitive","d":"<p>Handle a Precognition controller hook.</p>"},{"t":"F","n":"\\preg_replace_array","p":"[Global_Namespace].html#function_preg_replace_array","d":"<p>Replace a given pattern with each value in the array in sequentially.</p>"},{"t":"F","n":"\\public_path","p":"[Global_Namespace].html#function_public_path","d":"<p>Get the path to the public folder.</p>"},{"t":"F","n":"\\redirect","p":"[Global_Namespace].html#function_redirect","d":"<p>Get an instance of the redirector.</p>"},{"t":"F","n":"\\report","p":"[Global_Namespace].html#function_report","d":"<p>Report an exception.</p>"},{"t":"F","n":"\\report_if","p":"[Global_Namespace].html#function_report_if","d":"<p>Report an exception if the given condition is true.</p>"},{"t":"F","n":"\\report_unless","p":"[Global_Namespace].html#function_report_unless","d":"<p>Report an exception unless the given condition is true.</p>"},{"t":"F","n":"\\request","p":"[Global_Namespace].html#function_request","d":"<p>Get an instance of the current request or an input item from the request.</p>"},{"t":"F","n":"\\rescue","p":"[Global_Namespace].html#function_rescue","d":"<p>Catch a potential exception and return a default value.</p>"},{"t":"F","n":"\\resolve","p":"[Global_Namespace].html#function_resolve","d":"<p>Resolve a service from the container.</p>"},{"t":"F","n":"\\resource_path","p":"[Global_Namespace].html#function_resource_path","d":"<p>Get the path to the resources folder.</p>"},{"t":"F","n":"\\response","p":"[Global_Namespace].html#function_response","d":"<p>Return a new response from the application.</p>"},{"t":"F","n":"\\retry","p":"[Global_Namespace].html#function_retry","d":"<p>Retry an operation a given number of times.</p>"},{"t":"F","n":"\\route","p":"[Global_Namespace].html#function_route","d":"<p>Generate the URL to a named route.</p>"},{"t":"F","n":"\\secure_asset","p":"[Global_Namespace].html#function_secure_asset","d":"<p>Generate an asset path for the application.</p>"},{"t":"F","n":"\\secure_url","p":"[Global_Namespace].html#function_secure_url","d":"<p>Generate a HTTPS url for the application.</p>"},{"t":"F","n":"\\session","p":"[Global_Namespace].html#function_session","d":"<p>Get / set the specified session value.</p>"},{"t":"F","n":"\\snake_case","p":"[Global_Namespace].html#function_snake_case","d":"<p>Convert a string to snake case.</p>"},{"t":"F","n":"\\starts_with","p":"[Global_Namespace].html#function_starts_with","d":"<p>Determine if a given string starts with a given substring.</p>"},{"t":"F","n":"\\storage_path","p":"[Global_Namespace].html#function_storage_path","d":"<p>Get the path to the storage folder.</p>"},{"t":"F","n":"\\str","p":"[Global_Namespace].html#function_str","d":"<p>Get a new stringable object from the given string.</p>"},{"t":"F","n":"\\str_after","p":"[Global_Namespace].html#function_str_after","d":"<p>Return the remainder of a string after a given value.</p>"},{"t":"F","n":"\\str_before","p":"[Global_Namespace].html#function_str_before","d":"<p>Get the portion of a string before a given value.</p>"},{"t":"F","n":"\\str_contains","p":"[Global_Namespace].html#function_str_contains","d":"<p>Determine if a given string contains a given substring.</p>"},{"t":"F","n":"\\str_finish","p":"[Global_Namespace].html#function_str_finish","d":"<p>Cap a string with a single instance of a given value.</p>"},{"t":"F","n":"\\str_is","p":"[Global_Namespace].html#function_str_is","d":"<p>Determine if a given string matches a given pattern.</p>"},{"t":"F","n":"\\str_limit","p":"[Global_Namespace].html#function_str_limit","d":"<p>Limit the number of characters in a string.</p>"},{"t":"F","n":"\\str_plural","p":"[Global_Namespace].html#function_str_plural","d":"<p>Get the plural form of an English word.</p>"},{"t":"F","n":"\\str_random","p":"[Global_Namespace].html#function_str_random","d":"<p>Generate a more truly &quot;random&quot; alpha-numeric string.</p>"},{"t":"F","n":"\\str_replace_array","p":"[Global_Namespace].html#function_str_replace_array","d":"<p>Replace a given value in the string sequentially with an array.</p>"},{"t":"F","n":"\\str_replace_first","p":"[Global_Namespace].html#function_str_replace_first","d":"<p>Replace the first occurrence of a given value in the string.</p>"},{"t":"F","n":"\\str_replace_last","p":"[Global_Namespace].html#function_str_replace_last","d":"<p>Replace the last occurrence of a given value in the string.</p>"},{"t":"F","n":"\\str_singular","p":"[Global_Namespace].html#function_str_singular","d":"<p>Get the singular form of an English word.</p>"},{"t":"F","n":"\\str_slug","p":"[Global_Namespace].html#function_str_slug","d":"<p>Generate a URL friendly &quot;slug&quot; from a given string.</p>"},{"t":"F","n":"\\str_start","p":"[Global_Namespace].html#function_str_start","d":"<p>Begin a string with a single instance of a given value.</p>"},{"t":"F","n":"\\studly_case","p":"[Global_Namespace].html#function_studly_case","d":"<p>Convert a value to studly caps case.</p>"},{"t":"F","n":"\\tap","p":"[Global_Namespace].html#function_tap","d":"<p>Call the given Closure with the given value then return the value.</p>"},{"t":"F","n":"\\throw_if","p":"[Global_Namespace].html#function_throw_if","d":"<p>Throw the given exception if the given condition is true.</p>"},{"t":"F","n":"\\throw_unless","p":"[Global_Namespace].html#function_throw_unless","d":"<p>Throw the given exception unless the given condition is true.</p>"},{"t":"F","n":"\\title_case","p":"[Global_Namespace].html#function_title_case","d":"<p>Convert a value to title case.</p>"},{"t":"F","n":"\\to_route","p":"[Global_Namespace].html#function_to_route","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"F","n":"\\today","p":"[Global_Namespace].html#function_today","d":"<p>Create a new Carbon instance for the current date.</p>"},{"t":"F","n":"\\trait_uses_recursive","p":"[Global_Namespace].html#function_trait_uses_recursive","d":"<p>Returns all traits used by a trait and its traits.</p>"},{"t":"F","n":"\\trans","p":"[Global_Namespace].html#function_trans","d":"<p>Translate the given message.</p>"},{"t":"F","n":"\\trans_choice","p":"[Global_Namespace].html#function_trans_choice","d":"<p>Translates the given message based on a count.</p>"},{"t":"F","n":"\\transform","p":"[Global_Namespace].html#function_transform","d":"<p>Transform the given value if it is present.</p>"},{"t":"F","n":"\\url","p":"[Global_Namespace].html#function_url","d":"<p>Generate a url for the application.</p>"},{"t":"F","n":"\\validator","p":"[Global_Namespace].html#function_validator","d":"<p>Create a new Validator instance.</p>"},{"t":"F","n":"\\value","p":"[Global_Namespace].html#function_value","d":"<p>Return the default value of the given value.</p>"},{"t":"F","n":"\\view","p":"[Global_Namespace].html#function_view","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"F","n":"\\windows_os","p":"[Global_Namespace].html#function_windows_os","d":"<p>Determine whether the current environment is Windows based.</p>"},{"t":"F","n":"\\with","p":"[Global_Namespace].html#function_with","d":"<p>Return the given value, optionally passed through the given callback.</p>"},{"t":"C","n":"Illuminate\\Auth\\Access\\AuthorizationException","p":"Illuminate/Auth/Access/AuthorizationException.html","d":null,"f":{"n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Auth\\Access\\Events\\GateEvaluated","p":"Illuminate/Auth/Access/Events/GateEvaluated.html","d":null,"f":{"n":"Illuminate\\Auth\\Access\\Events","p":"Illuminate/Auth/Access/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Access\\Gate","p":"Illuminate/Auth/Access/Gate.html","d":null,"f":{"n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"}},{"t":"T","n":"Illuminate\\Auth\\Access\\HandlesAuthorization","p":"Illuminate/Auth/Access/HandlesAuthorization.html","d":null,"f":{"n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Auth\\Access\\Response","p":"Illuminate/Auth/Access/Response.html","d":null,"f":{"n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Auth\\AuthManager","p":"Illuminate/Auth/AuthManager.html","d":"","f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\AuthServiceProvider","p":"Illuminate/Auth/AuthServiceProvider.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"T","n":"Illuminate\\Auth\\Authenticatable","p":"Illuminate/Auth/Authenticatable.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\AuthenticationException","p":"Illuminate/Auth/AuthenticationException.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\Console\\ClearResetsCommand","p":"Illuminate/Auth/Console/ClearResetsCommand.html","d":null,"f":{"n":"Illuminate\\Auth\\Console","p":"Illuminate/Auth/Console.html"}},{"t":"T","n":"Illuminate\\Auth\\CreatesUserProviders","p":"Illuminate/Auth/CreatesUserProviders.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\DatabaseUserProvider","p":"Illuminate/Auth/DatabaseUserProvider.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\EloquentUserProvider","p":"Illuminate/Auth/EloquentUserProvider.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Attempting","p":"Illuminate/Auth/Events/Attempting.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Authenticated","p":"Illuminate/Auth/Events/Authenticated.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\CurrentDeviceLogout","p":"Illuminate/Auth/Events/CurrentDeviceLogout.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Failed","p":"Illuminate/Auth/Events/Failed.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Lockout","p":"Illuminate/Auth/Events/Lockout.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Login","p":"Illuminate/Auth/Events/Login.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Logout","p":"Illuminate/Auth/Events/Logout.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\OtherDeviceLogout","p":"Illuminate/Auth/Events/OtherDeviceLogout.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\PasswordReset","p":"Illuminate/Auth/Events/PasswordReset.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Registered","p":"Illuminate/Auth/Events/Registered.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Validated","p":"Illuminate/Auth/Events/Validated.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\Events\\Verified","p":"Illuminate/Auth/Events/Verified.html","d":null,"f":{"n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"}},{"t":"C","n":"Illuminate\\Auth\\GenericUser","p":"Illuminate/Auth/GenericUser.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"T","n":"Illuminate\\Auth\\GuardHelpers","p":"Illuminate/Auth/GuardHelpers.html","d":"<p>These methods are typically the same across all guards.</p>","f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\Listeners\\SendEmailVerificationNotification","p":"Illuminate/Auth/Listeners/SendEmailVerificationNotification.html","d":null,"f":{"n":"Illuminate\\Auth\\Listeners","p":"Illuminate/Auth/Listeners.html"}},{"t":"C","n":"Illuminate\\Auth\\Middleware\\Authenticate","p":"Illuminate/Auth/Middleware/Authenticate.html","d":null,"f":{"n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"}},{"t":"C","n":"Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth","p":"Illuminate/Auth/Middleware/AuthenticateWithBasicAuth.html","d":null,"f":{"n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"}},{"t":"C","n":"Illuminate\\Auth\\Middleware\\Authorize","p":"Illuminate/Auth/Middleware/Authorize.html","d":null,"f":{"n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"}},{"t":"C","n":"Illuminate\\Auth\\Middleware\\EnsureEmailIsVerified","p":"Illuminate/Auth/Middleware/EnsureEmailIsVerified.html","d":null,"f":{"n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"}},{"t":"C","n":"Illuminate\\Auth\\Middleware\\RequirePassword","p":"Illuminate/Auth/Middleware/RequirePassword.html","d":null,"f":{"n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"}},{"t":"T","n":"Illuminate\\Auth\\MustVerifyEmail","p":"Illuminate/Auth/MustVerifyEmail.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\Notifications\\ResetPassword","p":"Illuminate/Auth/Notifications/ResetPassword.html","d":null,"f":{"n":"Illuminate\\Auth\\Notifications","p":"Illuminate/Auth/Notifications.html"}},{"t":"C","n":"Illuminate\\Auth\\Notifications\\VerifyEmail","p":"Illuminate/Auth/Notifications/VerifyEmail.html","d":null,"f":{"n":"Illuminate\\Auth\\Notifications","p":"Illuminate/Auth/Notifications.html"}},{"t":"T","n":"Illuminate\\Auth\\Passwords\\CanResetPassword","p":"Illuminate/Auth/Passwords/CanResetPassword.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\PasswordBroker","p":"Illuminate/Auth/Passwords/PasswordBroker.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html","d":"","f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider","p":"Illuminate/Auth/Passwords/PasswordResetServiceProvider.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html","d":null,"f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"C","n":"Illuminate\\Auth\\Recaller","p":"Illuminate/Auth/Recaller.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\RequestGuard","p":"Illuminate/Auth/RequestGuard.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\SessionGuard","p":"Illuminate/Auth/SessionGuard.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Auth\\TokenGuard","p":"Illuminate/Auth/TokenGuard.html","d":null,"f":{"n":"Illuminate\\Auth","p":"Illuminate/Auth.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastController","p":"Illuminate/Broadcasting/BroadcastController.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastEvent","p":"Illuminate/Broadcasting/BroadcastEvent.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastException","p":"Illuminate/Broadcasting/BroadcastException.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastManager","p":"Illuminate/Broadcasting/BroadcastManager.html","d":"","f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\BroadcastServiceProvider","p":"Illuminate/Broadcasting/BroadcastServiceProvider.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html","d":"","f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\NullBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/NullBroadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"T","n":"Illuminate\\Broadcasting\\Broadcasters\\UsePusherChannelConventions","p":"Illuminate/Broadcasting/Broadcasters/UsePusherChannelConventions.html","d":null,"f":{"n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\Channel","p":"Illuminate/Broadcasting/Channel.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\EncryptedPrivateChannel","p":"Illuminate/Broadcasting/EncryptedPrivateChannel.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"T","n":"Illuminate\\Broadcasting\\InteractsWithBroadcasting","p":"Illuminate/Broadcasting/InteractsWithBroadcasting.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"T","n":"Illuminate\\Broadcasting\\InteractsWithSockets","p":"Illuminate/Broadcasting/InteractsWithSockets.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\PendingBroadcast","p":"Illuminate/Broadcasting/PendingBroadcast.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\PresenceChannel","p":"Illuminate/Broadcasting/PresenceChannel.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\PrivateChannel","p":"Illuminate/Broadcasting/PrivateChannel.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Broadcasting\\UniqueBroadcastEvent","p":"Illuminate/Broadcasting/UniqueBroadcastEvent.html","d":null,"f":{"n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Bus\\Batch","p":"Illuminate/Bus/Batch.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\BatchFactory","p":"Illuminate/Bus/BatchFactory.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\BatchRepository","p":"Illuminate/Bus/BatchRepository.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"T","n":"Illuminate\\Bus\\Batchable","p":"Illuminate/Bus/Batchable.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\BusServiceProvider","p":"Illuminate/Bus/BusServiceProvider.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\DatabaseBatchRepository","p":"Illuminate/Bus/DatabaseBatchRepository.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\Dispatcher","p":"Illuminate/Bus/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\Events\\BatchDispatched","p":"Illuminate/Bus/Events/BatchDispatched.html","d":null,"f":{"n":"Illuminate\\Bus\\Events","p":"Illuminate/Bus/Events.html"}},{"t":"C","n":"Illuminate\\Bus\\PendingBatch","p":"Illuminate/Bus/PendingBatch.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\PrunableBatchRepository","p":"Illuminate/Bus/PrunableBatchRepository.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"T","n":"Illuminate\\Bus\\Queueable","p":"Illuminate/Bus/Queueable.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\UniqueLock","p":"Illuminate/Bus/UniqueLock.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Bus\\UpdatedBatchJobCounts","p":"Illuminate/Bus/UpdatedBatchJobCounts.html","d":null,"f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"C","n":"Illuminate\\Cache\\ApcStore","p":"Illuminate/Cache/ApcStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\ApcWrapper","p":"Illuminate/Cache/ApcWrapper.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\ArrayLock","p":"Illuminate/Cache/ArrayLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\ArrayStore","p":"Illuminate/Cache/ArrayStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\CacheLock","p":"Illuminate/Cache/CacheLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\CacheManager","p":"Illuminate/Cache/CacheManager.html","d":"","f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\CacheServiceProvider","p":"Illuminate/Cache/CacheServiceProvider.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\Console\\CacheTableCommand","p":"Illuminate/Cache/Console/CacheTableCommand.html","d":null,"f":{"n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"}},{"t":"C","n":"Illuminate\\Cache\\Console\\ClearCommand","p":"Illuminate/Cache/Console/ClearCommand.html","d":null,"f":{"n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"}},{"t":"C","n":"Illuminate\\Cache\\Console\\ForgetCommand","p":"Illuminate/Cache/Console/ForgetCommand.html","d":null,"f":{"n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"}},{"t":"C","n":"Illuminate\\Cache\\Console\\PruneStaleTagsCommand","p":"Illuminate/Cache/Console/PruneStaleTagsCommand.html","d":null,"f":{"n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"}},{"t":"C","n":"Illuminate\\Cache\\DatabaseLock","p":"Illuminate/Cache/DatabaseLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\DatabaseStore","p":"Illuminate/Cache/DatabaseStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\DynamoDbLock","p":"Illuminate/Cache/DynamoDbLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\DynamoDbStore","p":"Illuminate/Cache/DynamoDbStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\CacheEvent","p":"Illuminate/Cache/Events/CacheEvent.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\CacheHit","p":"Illuminate/Cache/Events/CacheHit.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\CacheMissed","p":"Illuminate/Cache/Events/CacheMissed.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\KeyForgotten","p":"Illuminate/Cache/Events/KeyForgotten.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\Events\\KeyWritten","p":"Illuminate/Cache/Events/KeyWritten.html","d":null,"f":{"n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"}},{"t":"C","n":"Illuminate\\Cache\\FileLock","p":"Illuminate/Cache/FileLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\FileStore","p":"Illuminate/Cache/FileStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"T","n":"Illuminate\\Cache\\HasCacheLock","p":"Illuminate/Cache/HasCacheLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\Lock","p":"Illuminate/Cache/Lock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\LuaScripts","p":"Illuminate/Cache/LuaScripts.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\MemcachedConnector","p":"Illuminate/Cache/MemcachedConnector.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\MemcachedLock","p":"Illuminate/Cache/MemcachedLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\MemcachedStore","p":"Illuminate/Cache/MemcachedStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\NoLock","p":"Illuminate/Cache/NoLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\NullStore","p":"Illuminate/Cache/NullStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\PhpRedisLock","p":"Illuminate/Cache/PhpRedisLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\RateLimiter","p":"Illuminate/Cache/RateLimiter.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\RateLimiting\\GlobalLimit","p":"Illuminate/Cache/RateLimiting/GlobalLimit.html","d":null,"f":{"n":"Illuminate\\Cache\\RateLimiting","p":"Illuminate/Cache/RateLimiting.html"}},{"t":"C","n":"Illuminate\\Cache\\RateLimiting\\Limit","p":"Illuminate/Cache/RateLimiting/Limit.html","d":null,"f":{"n":"Illuminate\\Cache\\RateLimiting","p":"Illuminate/Cache/RateLimiting.html"}},{"t":"C","n":"Illuminate\\Cache\\RateLimiting\\Unlimited","p":"Illuminate/Cache/RateLimiting/Unlimited.html","d":null,"f":{"n":"Illuminate\\Cache\\RateLimiting","p":"Illuminate/Cache/RateLimiting.html"}},{"t":"C","n":"Illuminate\\Cache\\RedisLock","p":"Illuminate/Cache/RedisLock.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\RedisStore","p":"Illuminate/Cache/RedisStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\RedisTagSet","p":"Illuminate/Cache/RedisTagSet.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\RedisTaggedCache","p":"Illuminate/Cache/RedisTaggedCache.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\Repository","p":"Illuminate/Cache/Repository.html","d":"","f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"T","n":"Illuminate\\Cache\\RetrievesMultipleKeys","p":"Illuminate/Cache/RetrievesMultipleKeys.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\TagSet","p":"Illuminate/Cache/TagSet.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\TaggableStore","p":"Illuminate/Cache/TaggableStore.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Cache\\TaggedCache","p":"Illuminate/Cache/TaggedCache.html","d":null,"f":{"n":"Illuminate\\Cache","p":"Illuminate/Cache.html"}},{"t":"C","n":"Illuminate\\Config\\Repository","p":"Illuminate/Config/Repository.html","d":null,"f":{"n":"Illuminate\\Config","p":"Illuminate/Config.html"}},{"t":"C","n":"Illuminate\\Console\\Application","p":"Illuminate/Console/Application.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\BufferedConsoleOutput","p":"Illuminate/Console/BufferedConsoleOutput.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\CacheCommandMutex","p":"Illuminate/Console/CacheCommandMutex.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\Command","p":"Illuminate/Console/Command.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\CommandMutex","p":"Illuminate/Console/CommandMutex.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"T","n":"Illuminate\\Console\\Concerns\\CallsCommands","p":"Illuminate/Console/Concerns/CallsCommands.html","d":null,"f":{"n":"Illuminate\\Console\\Concerns","p":"Illuminate/Console/Concerns.html"}},{"t":"T","n":"Illuminate\\Console\\Concerns\\CreatesMatchingTest","p":"Illuminate/Console/Concerns/CreatesMatchingTest.html","d":null,"f":{"n":"Illuminate\\Console\\Concerns","p":"Illuminate/Console/Concerns.html"}},{"t":"T","n":"Illuminate\\Console\\Concerns\\HasParameters","p":"Illuminate/Console/Concerns/HasParameters.html","d":null,"f":{"n":"Illuminate\\Console\\Concerns","p":"Illuminate/Console/Concerns.html"}},{"t":"T","n":"Illuminate\\Console\\Concerns\\InteractsWithIO","p":"Illuminate/Console/Concerns/InteractsWithIO.html","d":null,"f":{"n":"Illuminate\\Console\\Concerns","p":"Illuminate/Console/Concerns.html"}},{"t":"T","n":"Illuminate\\Console\\Concerns\\InteractsWithSignals","p":"Illuminate/Console/Concerns/InteractsWithSignals.html","d":null,"f":{"n":"Illuminate\\Console\\Concerns","p":"Illuminate/Console/Concerns.html"}},{"t":"T","n":"Illuminate\\Console\\Concerns\\PromptsForMissingInput","p":"Illuminate/Console/Concerns/PromptsForMissingInput.html","d":null,"f":{"n":"Illuminate\\Console\\Concerns","p":"Illuminate/Console/Concerns.html"}},{"t":"T","n":"Illuminate\\Console\\ConfirmableTrait","p":"Illuminate/Console/ConfirmableTrait.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\ContainerCommandLoader","p":"Illuminate/Console/ContainerCommandLoader.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\Contracts\\NewLineAware","p":"Illuminate/Console/Contracts/NewLineAware.html","d":null,"f":{"n":"Illuminate\\Console\\Contracts","p":"Illuminate/Console/Contracts.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\ArtisanStarting","p":"Illuminate/Console/Events/ArtisanStarting.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\CommandFinished","p":"Illuminate/Console/Events/CommandFinished.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\CommandStarting","p":"Illuminate/Console/Events/CommandStarting.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\ScheduledBackgroundTaskFinished","p":"Illuminate/Console/Events/ScheduledBackgroundTaskFinished.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\ScheduledTaskFailed","p":"Illuminate/Console/Events/ScheduledTaskFailed.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\ScheduledTaskFinished","p":"Illuminate/Console/Events/ScheduledTaskFinished.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\ScheduledTaskSkipped","p":"Illuminate/Console/Events/ScheduledTaskSkipped.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\Events\\ScheduledTaskStarting","p":"Illuminate/Console/Events/ScheduledTaskStarting.html","d":null,"f":{"n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"}},{"t":"C","n":"Illuminate\\Console\\GeneratorCommand","p":"Illuminate/Console/GeneratorCommand.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\OutputStyle","p":"Illuminate/Console/OutputStyle.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\Parser","p":"Illuminate/Console/Parser.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\QuestionHelper","p":"Illuminate/Console/QuestionHelper.html","d":null,"f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\CacheAware","p":"Illuminate/Console/Scheduling/CacheAware.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\CacheEventMutex","p":"Illuminate/Console/Scheduling/CacheEventMutex.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\CacheSchedulingMutex","p":"Illuminate/Console/Scheduling/CacheSchedulingMutex.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\CallbackEvent","p":"Illuminate/Console/Scheduling/CallbackEvent.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\CommandBuilder","p":"Illuminate/Console/Scheduling/CommandBuilder.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\Event","p":"Illuminate/Console/Scheduling/Event.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\EventMutex","p":"Illuminate/Console/Scheduling/EventMutex.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"T","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\Schedule","p":"Illuminate/Console/Scheduling/Schedule.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\ScheduleClearCacheCommand","p":"Illuminate/Console/Scheduling/ScheduleClearCacheCommand.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\ScheduleFinishCommand","p":"Illuminate/Console/Scheduling/ScheduleFinishCommand.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\ScheduleListCommand","p":"Illuminate/Console/Scheduling/ScheduleListCommand.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\ScheduleRunCommand","p":"Illuminate/Console/Scheduling/ScheduleRunCommand.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\ScheduleTestCommand","p":"Illuminate/Console/Scheduling/ScheduleTestCommand.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\ScheduleWorkCommand","p":"Illuminate/Console/Scheduling/ScheduleWorkCommand.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Scheduling\\SchedulingMutex","p":"Illuminate/Console/Scheduling/SchedulingMutex.html","d":null,"f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"C","n":"Illuminate\\Console\\Signals","p":"Illuminate/Console/Signals.html","d":"","f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Alert","p":"Illuminate/Console/View/Components/Alert.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Ask","p":"Illuminate/Console/View/Components/Ask.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\AskWithCompletion","p":"Illuminate/Console/View/Components/AskWithCompletion.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\BulletList","p":"Illuminate/Console/View/Components/BulletList.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Choice","p":"Illuminate/Console/View/Components/Choice.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Component","p":"Illuminate/Console/View/Components/Component.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Confirm","p":"Illuminate/Console/View/Components/Confirm.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Error","p":"Illuminate/Console/View/Components/Error.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Factory","p":"Illuminate/Console/View/Components/Factory.html","d":"","f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Info","p":"Illuminate/Console/View/Components/Info.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Line","p":"Illuminate/Console/View/Components/Line.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Mutators\\EnsureDynamicContentIsHighlighted","p":"Illuminate/Console/View/Components/Mutators/EnsureDynamicContentIsHighlighted.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components\\Mutators","p":"Illuminate/Console/View/Components/Mutators.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Mutators\\EnsureNoPunctuation","p":"Illuminate/Console/View/Components/Mutators/EnsureNoPunctuation.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components\\Mutators","p":"Illuminate/Console/View/Components/Mutators.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Mutators\\EnsurePunctuation","p":"Illuminate/Console/View/Components/Mutators/EnsurePunctuation.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components\\Mutators","p":"Illuminate/Console/View/Components/Mutators.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Mutators\\EnsureRelativePaths","p":"Illuminate/Console/View/Components/Mutators/EnsureRelativePaths.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components\\Mutators","p":"Illuminate/Console/View/Components/Mutators.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Task","p":"Illuminate/Console/View/Components/Task.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\TwoColumnDetail","p":"Illuminate/Console/View/Components/TwoColumnDetail.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Console\\View\\Components\\Warn","p":"Illuminate/Console/View/Components/Warn.html","d":null,"f":{"n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"}},{"t":"C","n":"Illuminate\\Container\\BoundMethod","p":"Illuminate/Container/BoundMethod.html","d":null,"f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Container\\Container","p":"Illuminate/Container/Container.html","d":null,"f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Container\\ContextualBindingBuilder","p":"Illuminate/Container/ContextualBindingBuilder.html","d":null,"f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Container\\EntryNotFoundException","p":"Illuminate/Container/EntryNotFoundException.html","d":null,"f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Container\\RewindableGenerator","p":"Illuminate/Container/RewindableGenerator.html","d":null,"f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Container\\Util","p":"Illuminate/Container/Util.html","d":"","f":{"n":"Illuminate\\Container","p":"Illuminate/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Access\\Authorizable","p":"Illuminate/Contracts/Auth/Access/Authorizable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Access\\Gate","p":"Illuminate/Contracts/Auth/Access/Gate.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Authenticatable","p":"Illuminate/Contracts/Auth/Authenticatable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\CanResetPassword","p":"Illuminate/Contracts/Auth/CanResetPassword.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Factory","p":"Illuminate/Contracts/Auth/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Guard","p":"Illuminate/Contracts/Auth/Guard.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\Middleware\\AuthenticatesRequests","p":"Illuminate/Contracts/Auth/Middleware/AuthenticatesRequests.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth\\Middleware","p":"Illuminate/Contracts/Auth/Middleware.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\PasswordBroker","p":"Illuminate/Contracts/Auth/PasswordBroker.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\PasswordBrokerFactory","p":"Illuminate/Contracts/Auth/PasswordBrokerFactory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\StatefulGuard","p":"Illuminate/Contracts/Auth/StatefulGuard.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Auth\\UserProvider","p":"Illuminate/Contracts/Auth/UserProvider.html","d":null,"f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\Factory","p":"Illuminate/Contracts/Broadcasting/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\HasBroadcastChannel","p":"Illuminate/Contracts/Broadcasting/HasBroadcastChannel.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBeUnique","p":"Illuminate/Contracts/Broadcasting/ShouldBeUnique.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcast.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcastNow","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcastNow.html","d":null,"f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"C","n":"Illuminate\\Contracts\\Bus\\Dispatcher","p":"Illuminate/Contracts/Bus/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"}},{"t":"C","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\Factory","p":"Illuminate/Contracts/Cache/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\Lock","p":"Illuminate/Contracts/Cache/Lock.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\LockProvider","p":"Illuminate/Contracts/Cache/LockProvider.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\LockTimeoutException","p":"Illuminate/Contracts/Cache/LockTimeoutException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\Repository","p":"Illuminate/Contracts/Cache/Repository.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cache\\Store","p":"Illuminate/Contracts/Cache/Store.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"C","n":"Illuminate\\Contracts\\Config\\Repository","p":"Illuminate/Contracts/Config/Repository.html","d":null,"f":{"n":"Illuminate\\Contracts\\Config","p":"Illuminate/Contracts/Config.html"}},{"t":"C","n":"Illuminate\\Contracts\\Console\\Application","p":"Illuminate/Contracts/Console/Application.html","d":null,"f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"C","n":"Illuminate\\Contracts\\Console\\Isolatable","p":"Illuminate/Contracts/Console/Isolatable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"C","n":"Illuminate\\Contracts\\Console\\Kernel","p":"Illuminate/Contracts/Console/Kernel.html","d":null,"f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"C","n":"Illuminate\\Contracts\\Console\\PromptsForMissingInput","p":"Illuminate/Contracts/Console/PromptsForMissingInput.html","d":null,"f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"C","n":"Illuminate\\Contracts\\Container\\BindingResolutionException","p":"Illuminate/Contracts/Container/BindingResolutionException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Container\\CircularDependencyException","p":"Illuminate/Contracts/Container/CircularDependencyException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Container\\Container","p":"Illuminate/Contracts/Container/Container.html","d":null,"f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html","d":null,"f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cookie\\Factory","p":"Illuminate/Contracts/Cookie/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"}},{"t":"C","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory","p":"Illuminate/Contracts/Cookie/QueueingFactory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Eloquent\\Builder","p":"Illuminate/Contracts/Database/Eloquent/Builder.html","d":"<p>This interface is intentionally empty and exists to improve IDE support.</p>","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Eloquent\\Castable","p":"Illuminate/Contracts/Database/Eloquent/Castable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsAttributes","p":"Illuminate/Contracts/Database/Eloquent/CastsAttributes.html","d":"","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsInboundAttributes","p":"Illuminate/Contracts/Database/Eloquent/CastsInboundAttributes.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Eloquent\\DeviatesCastableAttributes","p":"Illuminate/Contracts/Database/Eloquent/DeviatesCastableAttributes.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Eloquent\\SerializesCastableAttributes","p":"Illuminate/Contracts/Database/Eloquent/SerializesCastableAttributes.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Eloquent\\SupportsPartialRelations","p":"Illuminate/Contracts/Database/Eloquent/SupportsPartialRelations.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Events\\MigrationEvent","p":"Illuminate/Contracts/Database/Events/MigrationEvent.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database\\Events","p":"Illuminate/Contracts/Database/Events.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\ModelIdentifier","p":"Illuminate/Contracts/Database/ModelIdentifier.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database","p":"Illuminate/Contracts/Database.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Query\\Builder","p":"Illuminate/Contracts/Database/Query/Builder.html","d":"<p>This interface is intentionally empty and exists to improve IDE support.</p>","f":{"n":"Illuminate\\Contracts\\Database\\Query","p":"Illuminate/Contracts/Database/Query.html"}},{"t":"C","n":"Illuminate\\Contracts\\Database\\Query\\Expression","p":"Illuminate/Contracts/Database/Query/Expression.html","d":null,"f":{"n":"Illuminate\\Contracts\\Database\\Query","p":"Illuminate/Contracts/Database/Query.html"}},{"t":"C","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler","p":"Illuminate/Contracts/Debug/ExceptionHandler.html","d":null,"f":{"n":"Illuminate\\Contracts\\Debug","p":"Illuminate/Contracts/Debug.html"}},{"t":"C","n":"Illuminate\\Contracts\\Encryption\\DecryptException","p":"Illuminate/Contracts/Encryption/DecryptException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"C","n":"Illuminate\\Contracts\\Encryption\\EncryptException","p":"Illuminate/Contracts/Encryption/EncryptException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"C","n":"Illuminate\\Contracts\\Encryption\\Encrypter","p":"Illuminate/Contracts/Encryption/Encrypter.html","d":null,"f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"C","n":"Illuminate\\Contracts\\Encryption\\StringEncrypter","p":"Illuminate/Contracts/Encryption/StringEncrypter.html","d":null,"f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"C","n":"Illuminate\\Contracts\\Events\\Dispatcher","p":"Illuminate/Contracts/Events/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Events","p":"Illuminate/Contracts/Events.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\Cloud","p":"Illuminate/Contracts/Filesystem/Cloud.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\Factory","p":"Illuminate/Contracts/Filesystem/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\FileNotFoundException","p":"Illuminate/Contracts/Filesystem/FileNotFoundException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\Filesystem","p":"Illuminate/Contracts/Filesystem/Filesystem.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Filesystem\\LockTimeoutException","p":"Illuminate/Contracts/Filesystem/LockTimeoutException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"C","n":"Illuminate\\Contracts\\Foundation\\Application","p":"Illuminate/Contracts/Foundation/Application.html","d":null,"f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Foundation\\CachesConfiguration","p":"Illuminate/Contracts/Foundation/CachesConfiguration.html","d":null,"f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Foundation\\CachesRoutes","p":"Illuminate/Contracts/Foundation/CachesRoutes.html","d":null,"f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Foundation\\ExceptionRenderer","p":"Illuminate/Contracts/Foundation/ExceptionRenderer.html","d":null,"f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html","d":null,"f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Hashing\\Hasher","p":"Illuminate/Contracts/Hashing/Hasher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Hashing","p":"Illuminate/Contracts/Hashing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Http\\Kernel","p":"Illuminate/Contracts/Http/Kernel.html","d":null,"f":{"n":"Illuminate\\Contracts\\Http","p":"Illuminate/Contracts/Http.html"}},{"t":"C","n":"Illuminate\\Contracts\\Mail\\Attachable","p":"Illuminate/Contracts/Mail/Attachable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"C","n":"Illuminate\\Contracts\\Mail\\Factory","p":"Illuminate/Contracts/Mail/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"C","n":"Illuminate\\Contracts\\Mail\\MailQueue","p":"Illuminate/Contracts/Mail/MailQueue.html","d":null,"f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"C","n":"Illuminate\\Contracts\\Mail\\Mailable","p":"Illuminate/Contracts/Mail/Mailable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"C","n":"Illuminate\\Contracts\\Mail\\Mailer","p":"Illuminate/Contracts/Mail/Mailer.html","d":null,"f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"C","n":"Illuminate\\Contracts\\Notifications\\Dispatcher","p":"Illuminate/Contracts/Notifications/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"}},{"t":"C","n":"Illuminate\\Contracts\\Notifications\\Factory","p":"Illuminate/Contracts/Notifications/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator","p":"Illuminate/Contracts/Pagination/CursorPaginator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pagination\\Paginator","p":"Illuminate/Contracts/Pagination/Paginator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pipeline\\Hub","p":"Illuminate/Contracts/Pipeline/Hub.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"}},{"t":"C","n":"Illuminate\\Contracts\\Pipeline\\Pipeline","p":"Illuminate/Contracts/Pipeline/Pipeline.html","d":null,"f":{"n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"}},{"t":"C","n":"Illuminate\\Contracts\\Process\\InvokedProcess","p":"Illuminate/Contracts/Process/InvokedProcess.html","d":null,"f":{"n":"Illuminate\\Contracts\\Process","p":"Illuminate/Contracts/Process.html"}},{"t":"C","n":"Illuminate\\Contracts\\Process\\ProcessResult","p":"Illuminate/Contracts/Process/ProcessResult.html","d":null,"f":{"n":"Illuminate\\Contracts\\Process","p":"Illuminate/Contracts/Process.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\ClearableQueue","p":"Illuminate/Contracts/Queue/ClearableQueue.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\EntityNotFoundException","p":"Illuminate/Contracts/Queue/EntityNotFoundException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\EntityResolver","p":"Illuminate/Contracts/Queue/EntityResolver.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\Factory","p":"Illuminate/Contracts/Queue/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\Job","p":"Illuminate/Contracts/Queue/Job.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\Monitor","p":"Illuminate/Contracts/Queue/Monitor.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\Queue","p":"Illuminate/Contracts/Queue/Queue.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\QueueableCollection","p":"Illuminate/Contracts/Queue/QueueableCollection.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\QueueableEntity","p":"Illuminate/Contracts/Queue/QueueableEntity.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\ShouldBeEncrypted","p":"Illuminate/Contracts/Queue/ShouldBeEncrypted.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\ShouldBeUnique","p":"Illuminate/Contracts/Queue/ShouldBeUnique.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\ShouldBeUniqueUntilProcessing","p":"Illuminate/Contracts/Queue/ShouldBeUniqueUntilProcessing.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Queue\\ShouldQueue","p":"Illuminate/Contracts/Queue/ShouldQueue.html","d":null,"f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"C","n":"Illuminate\\Contracts\\Redis\\Connection","p":"Illuminate/Contracts/Redis/Connection.html","d":null,"f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"C","n":"Illuminate\\Contracts\\Redis\\Connector","p":"Illuminate/Contracts/Redis/Connector.html","d":null,"f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"C","n":"Illuminate\\Contracts\\Redis\\Factory","p":"Illuminate/Contracts/Redis/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"C","n":"Illuminate\\Contracts\\Redis\\LimiterTimeoutException","p":"Illuminate/Contracts/Redis/LimiterTimeoutException.html","d":null,"f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar","p":"Illuminate/Contracts/Routing/BindingRegistrar.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\Registrar","p":"Illuminate/Contracts/Routing/Registrar.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\ResponseFactory","p":"Illuminate/Contracts/Routing/ResponseFactory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\UrlGenerator","p":"Illuminate/Contracts/Routing/UrlGenerator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Routing\\UrlRoutable","p":"Illuminate/Contracts/Routing/UrlRoutable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"C","n":"Illuminate\\Contracts\\Session\\Middleware\\AuthenticatesSessions","p":"Illuminate/Contracts/Session/Middleware/AuthenticatesSessions.html","d":null,"f":{"n":"Illuminate\\Contracts\\Session\\Middleware","p":"Illuminate/Contracts/Session/Middleware.html"}},{"t":"C","n":"Illuminate\\Contracts\\Session\\Session","p":"Illuminate/Contracts/Session/Session.html","d":null,"f":{"n":"Illuminate\\Contracts\\Session","p":"Illuminate/Contracts/Session.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Arrayable","p":"Illuminate/Contracts/Support/Arrayable.html","d":"","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\CanBeEscapedWhenCastToString","p":"Illuminate/Contracts/Support/CanBeEscapedWhenCastToString.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\DeferrableProvider","p":"Illuminate/Contracts/Support/DeferrableProvider.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\DeferringDisplayableValue","p":"Illuminate/Contracts/Support/DeferringDisplayableValue.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Htmlable","p":"Illuminate/Contracts/Support/Htmlable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Jsonable","p":"Illuminate/Contracts/Support/Jsonable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\MessageBag","p":"Illuminate/Contracts/Support/MessageBag.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\MessageProvider","p":"Illuminate/Contracts/Support/MessageProvider.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Renderable","p":"Illuminate/Contracts/Support/Renderable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\Responsable","p":"Illuminate/Contracts/Support/Responsable.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Support\\ValidatedData","p":"Illuminate/Contracts/Support/ValidatedData.html","d":null,"f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"C","n":"Illuminate\\Contracts\\Translation\\HasLocalePreference","p":"Illuminate/Contracts/Translation/HasLocalePreference.html","d":null,"f":{"n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Translation\\Loader","p":"Illuminate/Contracts/Translation/Loader.html","d":null,"f":{"n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Translation\\Translator","p":"Illuminate/Contracts/Translation/Translator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\DataAwareRule","p":"Illuminate/Contracts/Validation/DataAwareRule.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\Factory","p":"Illuminate/Contracts/Validation/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\ImplicitRule","p":"Illuminate/Contracts/Validation/ImplicitRule.html","d":"","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\InvokableRule","p":"Illuminate/Contracts/Validation/InvokableRule.html","d":"","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\Rule","p":"Illuminate/Contracts/Validation/Rule.html","d":"","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\UncompromisedVerifier","p":"Illuminate/Contracts/Validation/UncompromisedVerifier.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\ValidatesWhenResolved","p":"Illuminate/Contracts/Validation/ValidatesWhenResolved.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\ValidationRule","p":"Illuminate/Contracts/Validation/ValidationRule.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\Validator","p":"Illuminate/Contracts/Validation/Validator.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\Validation\\ValidatorAwareRule","p":"Illuminate/Contracts/Validation/ValidatorAwareRule.html","d":null,"f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"C","n":"Illuminate\\Contracts\\View\\Engine","p":"Illuminate/Contracts/View/Engine.html","d":null,"f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"C","n":"Illuminate\\Contracts\\View\\Factory","p":"Illuminate/Contracts/View/Factory.html","d":null,"f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"C","n":"Illuminate\\Contracts\\View\\View","p":"Illuminate/Contracts/View/View.html","d":null,"f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"C","n":"Illuminate\\Contracts\\View\\ViewCompilationException","p":"Illuminate/Contracts/View/ViewCompilationException.html","d":null,"f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"C","n":"Illuminate\\Cookie\\CookieJar","p":"Illuminate/Cookie/CookieJar.html","d":null,"f":{"n":"Illuminate\\Cookie","p":"Illuminate/Cookie.html"}},{"t":"C","n":"Illuminate\\Cookie\\CookieServiceProvider","p":"Illuminate/Cookie/CookieServiceProvider.html","d":null,"f":{"n":"Illuminate\\Cookie","p":"Illuminate/Cookie.html"}},{"t":"C","n":"Illuminate\\Cookie\\CookieValuePrefix","p":"Illuminate/Cookie/CookieValuePrefix.html","d":null,"f":{"n":"Illuminate\\Cookie","p":"Illuminate/Cookie.html"}},{"t":"C","n":"Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse","p":"Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.html","d":null,"f":{"n":"Illuminate\\Cookie\\Middleware","p":"Illuminate/Cookie/Middleware.html"}},{"t":"C","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies","p":"Illuminate/Cookie/Middleware/EncryptCookies.html","d":null,"f":{"n":"Illuminate\\Cookie\\Middleware","p":"Illuminate/Cookie/Middleware.html"}},{"t":"C","n":"Illuminate\\Database\\Capsule\\Manager","p":"Illuminate/Database/Capsule/Manager.html","d":null,"f":{"n":"Illuminate\\Database\\Capsule","p":"Illuminate/Database/Capsule.html"}},{"t":"C","n":"Illuminate\\Database\\ClassMorphViolationException","p":"Illuminate/Database/ClassMorphViolationException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"T","n":"Illuminate\\Database\\Concerns\\BuildsQueries","p":"Illuminate/Database/Concerns/BuildsQueries.html","d":null,"f":{"n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Concerns\\CompilesJsonPaths","p":"Illuminate/Database/Concerns/CompilesJsonPaths.html","d":null,"f":{"n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Concerns\\ExplainsQueries","p":"Illuminate/Database/Concerns/ExplainsQueries.html","d":null,"f":{"n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Concerns\\ManagesTransactions","p":"Illuminate/Database/Concerns/ManagesTransactions.html","d":null,"f":{"n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Concerns\\ParsesSearchPath","p":"Illuminate/Database/Concerns/ParsesSearchPath.html","d":null,"f":{"n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"}},{"t":"C","n":"Illuminate\\Database\\ConfigurationUrlParser","p":"Illuminate/Database/ConfigurationUrlParser.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Connection","p":"Illuminate/Database/Connection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\ConnectionInterface","p":"Illuminate/Database/ConnectionInterface.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\ConnectionResolver","p":"Illuminate/Database/ConnectionResolver.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\ConnectionResolverInterface","p":"Illuminate/Database/ConnectionResolverInterface.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\ConnectionFactory","p":"Illuminate/Database/Connectors/ConnectionFactory.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\Connector","p":"Illuminate/Database/Connectors/Connector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\ConnectorInterface","p":"Illuminate/Database/Connectors/ConnectorInterface.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\MySqlConnector","p":"Illuminate/Database/Connectors/MySqlConnector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\PostgresConnector","p":"Illuminate/Database/Connectors/PostgresConnector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\SQLiteConnector","p":"Illuminate/Database/Connectors/SQLiteConnector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Connectors\\SqlServerConnector","p":"Illuminate/Database/Connectors/SqlServerConnector.html","d":null,"f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\DbCommand","p":"Illuminate/Database/Console/DbCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\DumpCommand","p":"Illuminate/Database/Console/DumpCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand","p":"Illuminate/Database/Console/Factories/FactoryMakeCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Factories","p":"Illuminate/Database/Console/Factories.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\BaseCommand","p":"Illuminate/Database/Console/Migrations/BaseCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\FreshCommand","p":"Illuminate/Database/Console/Migrations/FreshCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\InstallCommand","p":"Illuminate/Database/Console/Migrations/InstallCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\ResetCommand","p":"Illuminate/Database/Console/Migrations/ResetCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\RollbackCommand","p":"Illuminate/Database/Console/Migrations/RollbackCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand","p":"Illuminate/Database/Console/Migrations/StatusCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Migrations\\TableGuesser","p":"Illuminate/Database/Console/Migrations/TableGuesser.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\MonitorCommand","p":"Illuminate/Database/Console/MonitorCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\PruneCommand","p":"Illuminate/Database/Console/PruneCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand","p":"Illuminate/Database/Console/Seeds/SeedCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Seeds","p":"Illuminate/Database/Console/Seeds.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Seeds","p":"Illuminate/Database/Console/Seeds.html"}},{"t":"T","n":"Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents","p":"Illuminate/Database/Console/Seeds/WithoutModelEvents.html","d":null,"f":{"n":"Illuminate\\Database\\Console\\Seeds","p":"Illuminate/Database/Console/Seeds.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\ShowCommand","p":"Illuminate/Database/Console/ShowCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\ShowModelCommand","p":"Illuminate/Database/Console/ShowModelCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\TableCommand","p":"Illuminate/Database/Console/TableCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\Console\\WipeCommand","p":"Illuminate/Database/Console/WipeCommand.html","d":null,"f":{"n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"}},{"t":"C","n":"Illuminate\\Database\\DBAL\\TimestampType","p":"Illuminate/Database/DBAL/TimestampType.html","d":null,"f":{"n":"Illuminate\\Database\\DBAL","p":"Illuminate/Database/DBAL.html"}},{"t":"C","n":"Illuminate\\Database\\DatabaseManager","p":"Illuminate/Database/DatabaseManager.html","d":"","f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\DatabaseServiceProvider","p":"Illuminate/Database/DatabaseServiceProvider.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\DatabaseTransactionRecord","p":"Illuminate/Database/DatabaseTransactionRecord.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\DatabaseTransactionsManager","p":"Illuminate/Database/DatabaseTransactionsManager.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\DeadlockException","p":"Illuminate/Database/DeadlockException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"T","n":"Illuminate\\Database\\DetectsConcurrencyErrors","p":"Illuminate/Database/DetectsConcurrencyErrors.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"T","n":"Illuminate\\Database\\DetectsLostConnections","p":"Illuminate/Database/DetectsLostConnections.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\BroadcastableModelEventOccurred","p":"Illuminate/Database/Eloquent/BroadcastableModelEventOccurred.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Builder","p":"Illuminate/Database/Eloquent/Builder.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\ArrayObject","p":"Illuminate/Database/Eloquent/Casts/ArrayObject.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\AsArrayObject","p":"Illuminate/Database/Eloquent/Casts/AsArrayObject.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\AsCollection","p":"Illuminate/Database/Eloquent/Casts/AsCollection.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedArrayObject","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedArrayObject.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedCollection","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedCollection.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumArrayObject","p":"Illuminate/Database/Eloquent/Casts/AsEnumArrayObject.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumCollection","p":"Illuminate/Database/Eloquent/Casts/AsEnumCollection.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\AsStringable","p":"Illuminate/Database/Eloquent/Casts/AsStringable.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Casts\\Attribute","p":"Illuminate/Database/Eloquent/Casts/Attribute.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Collection","p":"Illuminate/Database/Eloquent/Collection.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUlids","p":"Illuminate/Database/Eloquent/Concerns/HasUlids.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUuids","p":"Illuminate/Database/Eloquent/Concerns/HasUuids.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToManyRelationship","p":"Illuminate/Database/Eloquent/Factories/BelongsToManyRelationship.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Factories","p":"Illuminate/Database/Eloquent/Factories.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToRelationship","p":"Illuminate/Database/Eloquent/Factories/BelongsToRelationship.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Factories","p":"Illuminate/Database/Eloquent/Factories.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Factories\\CrossJoinSequence","p":"Illuminate/Database/Eloquent/Factories/CrossJoinSequence.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Factories","p":"Illuminate/Database/Eloquent/Factories.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory","p":"Illuminate/Database/Eloquent/Factories/Factory.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent\\Factories","p":"Illuminate/Database/Eloquent/Factories.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Factories\\HasFactory","p":"Illuminate/Database/Eloquent/Factories/HasFactory.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Factories","p":"Illuminate/Database/Eloquent/Factories.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Factories\\Relationship","p":"Illuminate/Database/Eloquent/Factories/Relationship.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Factories","p":"Illuminate/Database/Eloquent/Factories.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Factories\\Sequence","p":"Illuminate/Database/Eloquent/Factories/Sequence.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Factories","p":"Illuminate/Database/Eloquent/Factories.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\HigherOrderBuilderProxy","p":"Illuminate/Database/Eloquent/HigherOrderBuilderProxy.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\InvalidCastException","p":"Illuminate/Database/Eloquent/InvalidCastException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\JsonEncodingException","p":"Illuminate/Database/Eloquent/JsonEncodingException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\MassAssignmentException","p":"Illuminate/Database/Eloquent/MassAssignmentException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\MassPrunable","p":"Illuminate/Database/Eloquent/MassPrunable.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\MissingAttributeException","p":"Illuminate/Database/Eloquent/MissingAttributeException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Model","p":"Illuminate/Database/Eloquent/Model.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\ModelNotFoundException","p":"Illuminate/Database/Eloquent/ModelNotFoundException.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\PendingHasThroughRelationship","p":"Illuminate/Database/Eloquent/PendingHasThroughRelationship.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Prunable","p":"Illuminate/Database/Eloquent/Prunable.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\QueueEntityResolver","p":"Illuminate/Database/Eloquent/QueueEntityResolver.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\RelationNotFoundException","p":"Illuminate/Database/Eloquent/RelationNotFoundException.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\ComparesRelatedModels","p":"Illuminate/Database/Eloquent/Relations/Concerns/ComparesRelatedModels.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithDictionary","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithDictionary.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\SupportsDefaultModels","p":"Illuminate/Database/Eloquent/Relations/Concerns/SupportsDefaultModels.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasMany","p":"Illuminate/Database/Eloquent/Relations/HasMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne","p":"Illuminate/Database/Eloquent/Relations/HasOne.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneThrough","p":"Illuminate/Database/Eloquent/Relations/HasOneThrough.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\Pivot","p":"Illuminate/Database/Eloquent/Relations/Pivot.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation","p":"Illuminate/Database/Eloquent/Relations/Relation.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\Scope","p":"Illuminate/Database/Eloquent/Scope.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"T","n":"Illuminate\\Database\\Eloquent\\SoftDeletes","p":"Illuminate/Database/Eloquent/SoftDeletes.html","d":"","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html","d":null,"f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\ConnectionEstablished","p":"Illuminate/Database/Events/ConnectionEstablished.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\ConnectionEvent","p":"Illuminate/Database/Events/ConnectionEvent.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\DatabaseBusy","p":"Illuminate/Database/Events/DatabaseBusy.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\DatabaseRefreshed","p":"Illuminate/Database/Events/DatabaseRefreshed.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\MigrationEnded","p":"Illuminate/Database/Events/MigrationEnded.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\MigrationEvent","p":"Illuminate/Database/Events/MigrationEvent.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\MigrationStarted","p":"Illuminate/Database/Events/MigrationStarted.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\MigrationsEnded","p":"Illuminate/Database/Events/MigrationsEnded.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\MigrationsEvent","p":"Illuminate/Database/Events/MigrationsEvent.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\MigrationsStarted","p":"Illuminate/Database/Events/MigrationsStarted.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\ModelsPruned","p":"Illuminate/Database/Events/ModelsPruned.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\NoPendingMigrations","p":"Illuminate/Database/Events/NoPendingMigrations.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\QueryExecuted","p":"Illuminate/Database/Events/QueryExecuted.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\SchemaDumped","p":"Illuminate/Database/Events/SchemaDumped.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\SchemaLoaded","p":"Illuminate/Database/Events/SchemaLoaded.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\StatementPrepared","p":"Illuminate/Database/Events/StatementPrepared.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\TransactionBeginning","p":"Illuminate/Database/Events/TransactionBeginning.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\TransactionCommitted","p":"Illuminate/Database/Events/TransactionCommitted.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\TransactionCommitting","p":"Illuminate/Database/Events/TransactionCommitting.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Events\\TransactionRolledBack","p":"Illuminate/Database/Events/TransactionRolledBack.html","d":null,"f":{"n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"}},{"t":"C","n":"Illuminate\\Database\\Grammar","p":"Illuminate/Database/Grammar.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\LazyLoadingViolationException","p":"Illuminate/Database/LazyLoadingViolationException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\LostConnectionException","p":"Illuminate/Database/LostConnectionException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\MigrationServiceProvider","p":"Illuminate/Database/MigrationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\Migration","p":"Illuminate/Database/Migrations/Migration.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\MigrationCreator","p":"Illuminate/Database/Migrations/MigrationCreator.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\Migrations\\Migrator","p":"Illuminate/Database/Migrations/Migrator.html","d":null,"f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"C","n":"Illuminate\\Database\\MultipleColumnsSelectedException","p":"Illuminate/Database/MultipleColumnsSelectedException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\MultipleRecordsFoundException","p":"Illuminate/Database/MultipleRecordsFoundException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\MySqlConnection","p":"Illuminate/Database/MySqlConnection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"T","n":"Illuminate\\Database\\PDO\\Concerns\\ConnectsToDatabase","p":"Illuminate/Database/PDO/Concerns/ConnectsToDatabase.html","d":null,"f":{"n":"Illuminate\\Database\\PDO\\Concerns","p":"Illuminate/Database/PDO/Concerns.html"}},{"t":"C","n":"Illuminate\\Database\\PDO\\Connection","p":"Illuminate/Database/PDO/Connection.html","d":null,"f":{"n":"Illuminate\\Database\\PDO","p":"Illuminate/Database/PDO.html"}},{"t":"C","n":"Illuminate\\Database\\PDO\\MySqlDriver","p":"Illuminate/Database/PDO/MySqlDriver.html","d":null,"f":{"n":"Illuminate\\Database\\PDO","p":"Illuminate/Database/PDO.html"}},{"t":"C","n":"Illuminate\\Database\\PDO\\PostgresDriver","p":"Illuminate/Database/PDO/PostgresDriver.html","d":null,"f":{"n":"Illuminate\\Database\\PDO","p":"Illuminate/Database/PDO.html"}},{"t":"C","n":"Illuminate\\Database\\PDO\\SQLiteDriver","p":"Illuminate/Database/PDO/SQLiteDriver.html","d":null,"f":{"n":"Illuminate\\Database\\PDO","p":"Illuminate/Database/PDO.html"}},{"t":"C","n":"Illuminate\\Database\\PDO\\SqlServerConnection","p":"Illuminate/Database/PDO/SqlServerConnection.html","d":null,"f":{"n":"Illuminate\\Database\\PDO","p":"Illuminate/Database/PDO.html"}},{"t":"C","n":"Illuminate\\Database\\PDO\\SqlServerDriver","p":"Illuminate/Database/PDO/SqlServerDriver.html","d":null,"f":{"n":"Illuminate\\Database\\PDO","p":"Illuminate/Database/PDO.html"}},{"t":"C","n":"Illuminate\\Database\\PostgresConnection","p":"Illuminate/Database/PostgresConnection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\QueryException","p":"Illuminate/Database/QueryException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Builder","p":"Illuminate/Database/Query/Builder.html","d":null,"f":{"n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Expression","p":"Illuminate/Database/Query/Expression.html","d":null,"f":{"n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\Grammar","p":"Illuminate/Database/Query/Grammars/Grammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\IndexHint","p":"Illuminate/Database/Query/IndexHint.html","d":null,"f":{"n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\JoinClause","p":"Illuminate/Database/Query/JoinClause.html","d":null,"f":{"n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\MySqlProcessor","p":"Illuminate/Database/Query/Processors/MySqlProcessor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\PostgresProcessor","p":"Illuminate/Database/Query/Processors/PostgresProcessor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\Processor","p":"Illuminate/Database/Query/Processors/Processor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\SQLiteProcessor","p":"Illuminate/Database/Query/Processors/SQLiteProcessor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\Query\\Processors\\SqlServerProcessor","p":"Illuminate/Database/Query/Processors/SqlServerProcessor.html","d":null,"f":{"n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"}},{"t":"C","n":"Illuminate\\Database\\RecordsNotFoundException","p":"Illuminate/Database/RecordsNotFoundException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\SQLiteConnection","p":"Illuminate/Database/SQLiteConnection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\SQLiteDatabaseDoesNotExistException","p":"Illuminate/Database/SQLiteDatabaseDoesNotExistException.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Blueprint","p":"Illuminate/Database/Schema/Blueprint.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Builder","p":"Illuminate/Database/Schema/Builder.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\ColumnDefinition","p":"Illuminate/Database/Schema/ColumnDefinition.html","d":"","f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\ForeignIdColumnDefinition","p":"Illuminate/Database/Schema/ForeignIdColumnDefinition.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html","d":"","f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar","p":"Illuminate/Database/Schema/Grammars/Grammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\RenameColumn","p":"Illuminate/Database/Schema/Grammars/RenameColumn.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html","d":null,"f":{"n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\IndexDefinition","p":"Illuminate/Database/Schema/IndexDefinition.html","d":"","f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\MySqlBuilder","p":"Illuminate/Database/Schema/MySqlBuilder.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\MySqlSchemaState","p":"Illuminate/Database/Schema/MySqlSchemaState.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\PostgresBuilder","p":"Illuminate/Database/Schema/PostgresBuilder.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\PostgresSchemaState","p":"Illuminate/Database/Schema/PostgresSchemaState.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\SQLiteBuilder","p":"Illuminate/Database/Schema/SQLiteBuilder.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\SchemaState","p":"Illuminate/Database/Schema/SchemaState.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\SqlServerBuilder","p":"Illuminate/Database/Schema/SqlServerBuilder.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Schema\\SqliteSchemaState","p":"Illuminate/Database/Schema/SqliteSchemaState.html","d":null,"f":{"n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"}},{"t":"C","n":"Illuminate\\Database\\Seeder","p":"Illuminate/Database/Seeder.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Database\\SqlServerConnection","p":"Illuminate/Database/SqlServerConnection.html","d":null,"f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"C","n":"Illuminate\\Encryption\\Encrypter","p":"Illuminate/Encryption/Encrypter.html","d":null,"f":{"n":"Illuminate\\Encryption","p":"Illuminate/Encryption.html"}},{"t":"C","n":"Illuminate\\Encryption\\EncryptionServiceProvider","p":"Illuminate/Encryption/EncryptionServiceProvider.html","d":null,"f":{"n":"Illuminate\\Encryption","p":"Illuminate/Encryption.html"}},{"t":"C","n":"Illuminate\\Encryption\\MissingAppKeyException","p":"Illuminate/Encryption/MissingAppKeyException.html","d":null,"f":{"n":"Illuminate\\Encryption","p":"Illuminate/Encryption.html"}},{"t":"C","n":"Illuminate\\Events\\CallQueuedListener","p":"Illuminate/Events/CallQueuedListener.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Events\\Dispatcher","p":"Illuminate/Events/Dispatcher.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Events\\EventServiceProvider","p":"Illuminate/Events/EventServiceProvider.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Events\\InvokeQueuedClosure","p":"Illuminate/Events/InvokeQueuedClosure.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Events\\NullDispatcher","p":"Illuminate/Events/NullDispatcher.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Events\\QueuedClosure","p":"Illuminate/Events/QueuedClosure.html","d":null,"f":{"n":"Illuminate\\Events","p":"Illuminate/Events.html"}},{"t":"C","n":"Illuminate\\Filesystem\\AwsS3V3Adapter","p":"Illuminate/Filesystem/AwsS3V3Adapter.html","d":null,"f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Filesystem\\Filesystem","p":"Illuminate/Filesystem/Filesystem.html","d":null,"f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Filesystem\\FilesystemAdapter","p":"Illuminate/Filesystem/FilesystemAdapter.html","d":"","f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Filesystem\\FilesystemManager","p":"Illuminate/Filesystem/FilesystemManager.html","d":"","f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Filesystem\\FilesystemServiceProvider","p":"Illuminate/Filesystem/FilesystemServiceProvider.html","d":null,"f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Filesystem\\LockableFile","p":"Illuminate/Filesystem/LockableFile.html","d":null,"f":{"n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"}},{"t":"C","n":"Illuminate\\Foundation\\AliasLoader","p":"Illuminate/Foundation/AliasLoader.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Application","p":"Illuminate/Foundation/Application.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable","p":"Illuminate/Foundation/Auth/Access/Authorizable.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth\\Access","p":"Illuminate/Foundation/Auth/Access.html"}},{"t":"T","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth\\Access","p":"Illuminate/Foundation/Auth/Access.html"}},{"t":"C","n":"Illuminate\\Foundation\\Auth\\EmailVerificationRequest","p":"Illuminate/Foundation/Auth/EmailVerificationRequest.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"C","n":"Illuminate\\Foundation\\Auth\\User","p":"Illuminate/Foundation/Auth/User.html","d":null,"f":{"n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\BootProviders","p":"Illuminate/Foundation/Bootstrap/BootProviders.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\RegisterFacades","p":"Illuminate/Foundation/Bootstrap/RegisterFacades.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\RegisterProviders","p":"Illuminate/Foundation/Bootstrap/RegisterProviders.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bootstrap\\SetRequestForConsole","p":"Illuminate/Foundation/Bootstrap/SetRequestForConsole.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"}},{"t":"T","n":"Illuminate\\Foundation\\Bus\\Dispatchable","p":"Illuminate/Foundation/Bus/Dispatchable.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"}},{"t":"T","n":"Illuminate\\Foundation\\Bus\\DispatchesJobs","p":"Illuminate/Foundation/Bus/DispatchesJobs.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bus\\PendingChain","p":"Illuminate/Foundation/Bus/PendingChain.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bus\\PendingClosureDispatch","p":"Illuminate/Foundation/Bus/PendingClosureDispatch.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"}},{"t":"C","n":"Illuminate\\Foundation\\Bus\\PendingDispatch","p":"Illuminate/Foundation/Bus/PendingDispatch.html","d":null,"f":{"n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"}},{"t":"C","n":"Illuminate\\Foundation\\CacheBasedMaintenanceMode","p":"Illuminate/Foundation/CacheBasedMaintenanceMode.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\ComposerScripts","p":"Illuminate/Foundation/ComposerScripts.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"T","n":"Illuminate\\Foundation\\Concerns\\ResolvesDumpSource","p":"Illuminate/Foundation/Concerns/ResolvesDumpSource.html","d":null,"f":{"n":"Illuminate\\Foundation\\Concerns","p":"Illuminate/Foundation/Concerns.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\AboutCommand","p":"Illuminate/Foundation/Console/AboutCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\CastMakeCommand","p":"Illuminate/Foundation/Console/CastMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ChannelMakeCommand","p":"Illuminate/Foundation/Console/ChannelMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ClearCompiledCommand","p":"Illuminate/Foundation/Console/ClearCompiledCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\CliDumper","p":"Illuminate/Foundation/Console/CliDumper.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ClosureCommand","p":"Illuminate/Foundation/Console/ClosureCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ConfigCacheCommand","p":"Illuminate/Foundation/Console/ConfigCacheCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ConfigClearCommand","p":"Illuminate/Foundation/Console/ConfigClearCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\DocsCommand","p":"Illuminate/Foundation/Console/DocsCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\DownCommand","p":"Illuminate/Foundation/Console/DownCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EnvironmentCommand","p":"Illuminate/Foundation/Console/EnvironmentCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand","p":"Illuminate/Foundation/Console/EnvironmentDecryptCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand","p":"Illuminate/Foundation/Console/EnvironmentEncryptCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EventCacheCommand","p":"Illuminate/Foundation/Console/EventCacheCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EventClearCommand","p":"Illuminate/Foundation/Console/EventClearCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EventGenerateCommand","p":"Illuminate/Foundation/Console/EventGenerateCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EventListCommand","p":"Illuminate/Foundation/Console/EventListCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\EventMakeCommand","p":"Illuminate/Foundation/Console/EventMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ExceptionMakeCommand","p":"Illuminate/Foundation/Console/ExceptionMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\JobMakeCommand","p":"Illuminate/Foundation/Console/JobMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\Kernel","p":"Illuminate/Foundation/Console/Kernel.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\LangPublishCommand","p":"Illuminate/Foundation/Console/LangPublishCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\MailMakeCommand","p":"Illuminate/Foundation/Console/MailMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand","p":"Illuminate/Foundation/Console/ModelMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\OptimizeClearCommand","p":"Illuminate/Foundation/Console/OptimizeClearCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\OptimizeCommand","p":"Illuminate/Foundation/Console/OptimizeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\PackageDiscoverCommand","p":"Illuminate/Foundation/Console/PackageDiscoverCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ProviderMakeCommand","p":"Illuminate/Foundation/Console/ProviderMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\QueuedCommand","p":"Illuminate/Foundation/Console/QueuedCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RequestMakeCommand","p":"Illuminate/Foundation/Console/RequestMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ResourceMakeCommand","p":"Illuminate/Foundation/Console/ResourceMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand","p":"Illuminate/Foundation/Console/RouteCacheCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RouteClearCommand","p":"Illuminate/Foundation/Console/RouteClearCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RouteListCommand","p":"Illuminate/Foundation/Console/RouteListCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\RuleMakeCommand","p":"Illuminate/Foundation/Console/RuleMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ScopeMakeCommand","p":"Illuminate/Foundation/Console/ScopeMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ServeCommand","p":"Illuminate/Foundation/Console/ServeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\StorageLinkCommand","p":"Illuminate/Foundation/Console/StorageLinkCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\StubPublishCommand","p":"Illuminate/Foundation/Console/StubPublishCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\TestMakeCommand","p":"Illuminate/Foundation/Console/TestMakeCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\UpCommand","p":"Illuminate/Foundation/Console/UpCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand","p":"Illuminate/Foundation/Console/VendorPublishCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ViewCacheCommand","p":"Illuminate/Foundation/Console/ViewCacheCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\Console\\ViewClearCommand","p":"Illuminate/Foundation/Console/ViewClearCommand.html","d":null,"f":{"n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"}},{"t":"C","n":"Illuminate\\Foundation\\EnvironmentDetector","p":"Illuminate/Foundation/EnvironmentDetector.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Events\\DiscoverEvents","p":"Illuminate/Foundation/Events/DiscoverEvents.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"T","n":"Illuminate\\Foundation\\Events\\Dispatchable","p":"Illuminate/Foundation/Events/Dispatchable.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Events\\LocaleUpdated","p":"Illuminate/Foundation/Events/LocaleUpdated.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Events\\MaintenanceModeDisabled","p":"Illuminate/Foundation/Events/MaintenanceModeDisabled.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Events\\MaintenanceModeEnabled","p":"Illuminate/Foundation/Events/MaintenanceModeEnabled.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Events\\PublishingStubs","p":"Illuminate/Foundation/Events/PublishingStubs.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Events\\VendorTagPublished","p":"Illuminate/Foundation/Events/VendorTagPublished.html","d":null,"f":{"n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Exceptions\\Handler","p":"Illuminate/Foundation/Exceptions/Handler.html","d":null,"f":{"n":"Illuminate\\Foundation\\Exceptions","p":"Illuminate/Foundation/Exceptions.html"}},{"t":"C","n":"Illuminate\\Foundation\\Exceptions\\RegisterErrorViewPaths","p":"Illuminate/Foundation/Exceptions/RegisterErrorViewPaths.html","d":null,"f":{"n":"Illuminate\\Foundation\\Exceptions","p":"Illuminate/Foundation/Exceptions.html"}},{"t":"C","n":"Illuminate\\Foundation\\Exceptions\\ReportableHandler","p":"Illuminate/Foundation/Exceptions/ReportableHandler.html","d":null,"f":{"n":"Illuminate\\Foundation\\Exceptions","p":"Illuminate/Foundation/Exceptions.html"}},{"t":"C","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsExceptionRenderer","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsExceptionRenderer.html","d":null,"f":{"n":"Illuminate\\Foundation\\Exceptions\\Whoops","p":"Illuminate/Foundation/Exceptions/Whoops.html"}},{"t":"C","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsHandler","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsHandler.html","d":null,"f":{"n":"Illuminate\\Foundation\\Exceptions\\Whoops","p":"Illuminate/Foundation/Exceptions/Whoops.html"}},{"t":"C","n":"Illuminate\\Foundation\\FileBasedMaintenanceMode","p":"Illuminate/Foundation/FileBasedMaintenanceMode.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Events\\RequestHandled","p":"Illuminate/Foundation/Http/Events/RequestHandled.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Events","p":"Illuminate/Foundation/Http/Events.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\FormRequest","p":"Illuminate/Foundation/Http/FormRequest.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http","p":"Illuminate/Foundation/Http.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\HtmlDumper","p":"Illuminate/Foundation/Http/HtmlDumper.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http","p":"Illuminate/Foundation/Http.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Kernel","p":"Illuminate/Foundation/Http/Kernel.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http","p":"Illuminate/Foundation/Http.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\MaintenanceModeBypassCookie","p":"Illuminate/Foundation/Http/MaintenanceModeBypassCookie.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http","p":"Illuminate/Foundation/Http.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode","p":"Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull","p":"Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests","p":"Illuminate/Foundation/Http/Middleware/HandlePrecognitiveRequests.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance","p":"Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\TrimStrings","p":"Illuminate/Foundation/Http/Middleware/TrimStrings.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize","p":"Illuminate/Foundation/Http/Middleware/ValidatePostSize.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html","d":null,"f":{"n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Foundation\\Inspiring","p":"Illuminate/Foundation/Inspiring.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\MaintenanceModeManager","p":"Illuminate/Foundation/MaintenanceModeManager.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Mix","p":"Illuminate/Foundation/Mix.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\PackageManifest","p":"Illuminate/Foundation/PackageManifest.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Precognition","p":"Illuminate/Foundation/Precognition.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\ProviderRepository","p":"Illuminate/Foundation/ProviderRepository.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\ComposerServiceProvider","p":"Illuminate/Foundation/Providers/ComposerServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider","p":"Illuminate/Foundation/Providers/ConsoleSupportServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\FormRequestServiceProvider","p":"Illuminate/Foundation/Providers/FormRequestServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Routing\\PrecognitionCallableDispatcher","p":"Illuminate/Foundation/Routing/PrecognitionCallableDispatcher.html","d":null,"f":{"n":"Illuminate\\Foundation\\Routing","p":"Illuminate/Foundation/Routing.html"}},{"t":"C","n":"Illuminate\\Foundation\\Routing\\PrecognitionControllerDispatcher","p":"Illuminate/Foundation/Routing/PrecognitionControllerDispatcher.html","d":null,"f":{"n":"Illuminate\\Foundation\\Routing","p":"Illuminate/Foundation/Routing.html"}},{"t":"C","n":"Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider","p":"Illuminate/Foundation/Support/Providers/AuthServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Support\\Providers","p":"Illuminate/Foundation/Support/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html","d":null,"f":{"n":"Illuminate\\Foundation\\Support\\Providers","p":"Illuminate/Foundation/Support/Providers.html"}},{"t":"C","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html","d":"","f":{"n":"Illuminate\\Foundation\\Support\\Providers","p":"Illuminate/Foundation/Support/Providers.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithConsole","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithConsole.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDeprecationHandling","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDeprecationHandling.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithRedis","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithRedis.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithTime","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithTime.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithViews","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithViews.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\DatabaseMigrations","p":"Illuminate/Foundation/Testing/DatabaseMigrations.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\DatabaseTransactions","p":"Illuminate/Foundation/Testing/DatabaseTransactions.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\DatabaseTruncation","p":"Illuminate/Foundation/Testing/DatabaseTruncation.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\LazilyRefreshDatabase","p":"Illuminate/Foundation/Testing/LazilyRefreshDatabase.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase","p":"Illuminate/Foundation/Testing/RefreshDatabase.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"C","n":"Illuminate\\Foundation\\Testing\\RefreshDatabaseState","p":"Illuminate/Foundation/Testing/RefreshDatabaseState.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"C","n":"Illuminate\\Foundation\\Testing\\TestCase","p":"Illuminate/Foundation/Testing/TestCase.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\Traits\\CanConfigureMigrationCommands","p":"Illuminate/Foundation/Testing/Traits/CanConfigureMigrationCommands.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing\\Traits","p":"Illuminate/Foundation/Testing/Traits.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\WithFaker","p":"Illuminate/Foundation/Testing/WithFaker.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\WithoutEvents","p":"Illuminate/Foundation/Testing/WithoutEvents.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Testing\\WithoutMiddleware","p":"Illuminate/Foundation/Testing/WithoutMiddleware.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"C","n":"Illuminate\\Foundation\\Testing\\Wormhole","p":"Illuminate/Foundation/Testing/Wormhole.html","d":null,"f":{"n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"}},{"t":"T","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests","p":"Illuminate/Foundation/Validation/ValidatesRequests.html","d":null,"f":{"n":"Illuminate\\Foundation\\Validation","p":"Illuminate/Foundation/Validation.html"}},{"t":"C","n":"Illuminate\\Foundation\\Vite","p":"Illuminate/Foundation/Vite.html","d":null,"f":{"n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"}},{"t":"C","n":"Illuminate\\Hashing\\AbstractHasher","p":"Illuminate/Hashing/AbstractHasher.html","d":null,"f":{"n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"}},{"t":"C","n":"Illuminate\\Hashing\\Argon2IdHasher","p":"Illuminate/Hashing/Argon2IdHasher.html","d":null,"f":{"n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"}},{"t":"C","n":"Illuminate\\Hashing\\ArgonHasher","p":"Illuminate/Hashing/ArgonHasher.html","d":null,"f":{"n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"}},{"t":"C","n":"Illuminate\\Hashing\\BcryptHasher","p":"Illuminate/Hashing/BcryptHasher.html","d":null,"f":{"n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"}},{"t":"C","n":"Illuminate\\Hashing\\HashManager","p":"Illuminate/Hashing/HashManager.html","d":"","f":{"n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"}},{"t":"C","n":"Illuminate\\Hashing\\HashServiceProvider","p":"Illuminate/Hashing/HashServiceProvider.html","d":null,"f":{"n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"}},{"t":"T","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html","d":null,"f":{"n":"Illuminate\\Http\\Client\\Concerns","p":"Illuminate/Http/Client/Concerns.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\ConnectionException","p":"Illuminate/Http/Client/ConnectionException.html","d":null,"f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\Events\\ConnectionFailed","p":"Illuminate/Http/Client/Events/ConnectionFailed.html","d":null,"f":{"n":"Illuminate\\Http\\Client\\Events","p":"Illuminate/Http/Client/Events.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\Events\\RequestSending","p":"Illuminate/Http/Client/Events/RequestSending.html","d":null,"f":{"n":"Illuminate\\Http\\Client\\Events","p":"Illuminate/Http/Client/Events.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\Events\\ResponseReceived","p":"Illuminate/Http/Client/Events/ResponseReceived.html","d":null,"f":{"n":"Illuminate\\Http\\Client\\Events","p":"Illuminate/Http/Client/Events.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\Factory","p":"Illuminate/Http/Client/Factory.html","d":"","f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\HttpClientException","p":"Illuminate/Http/Client/HttpClientException.html","d":null,"f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\PendingRequest","p":"Illuminate/Http/Client/PendingRequest.html","d":null,"f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\Pool","p":"Illuminate/Http/Client/Pool.html","d":"","f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\Request","p":"Illuminate/Http/Client/Request.html","d":null,"f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\RequestException","p":"Illuminate/Http/Client/RequestException.html","d":null,"f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\Response","p":"Illuminate/Http/Client/Response.html","d":null,"f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"C","n":"Illuminate\\Http\\Client\\ResponseSequence","p":"Illuminate/Http/Client/ResponseSequence.html","d":null,"f":{"n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"}},{"t":"T","n":"Illuminate\\Http\\Concerns\\CanBePrecognitive","p":"Illuminate/Http/Concerns/CanBePrecognitive.html","d":null,"f":{"n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"}},{"t":"T","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html","d":null,"f":{"n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"}},{"t":"T","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html","d":null,"f":{"n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"}},{"t":"T","n":"Illuminate\\Http\\Concerns\\InteractsWithInput","p":"Illuminate/Http/Concerns/InteractsWithInput.html","d":null,"f":{"n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"}},{"t":"C","n":"Illuminate\\Http\\Exceptions\\HttpResponseException","p":"Illuminate/Http/Exceptions/HttpResponseException.html","d":null,"f":{"n":"Illuminate\\Http\\Exceptions","p":"Illuminate/Http/Exceptions.html"}},{"t":"C","n":"Illuminate\\Http\\Exceptions\\PostTooLargeException","p":"Illuminate/Http/Exceptions/PostTooLargeException.html","d":null,"f":{"n":"Illuminate\\Http\\Exceptions","p":"Illuminate/Http/Exceptions.html"}},{"t":"C","n":"Illuminate\\Http\\Exceptions\\ThrottleRequestsException","p":"Illuminate/Http/Exceptions/ThrottleRequestsException.html","d":null,"f":{"n":"Illuminate\\Http\\Exceptions","p":"Illuminate/Http/Exceptions.html"}},{"t":"C","n":"Illuminate\\Http\\File","p":"Illuminate/Http/File.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"T","n":"Illuminate\\Http\\FileHelpers","p":"Illuminate/Http/FileHelpers.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\JsonResponse","p":"Illuminate/Http/JsonResponse.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\AddLinkHeadersForPreloadedAssets","p":"Illuminate/Http/Middleware/AddLinkHeadersForPreloadedAssets.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\CheckResponseForModifications","p":"Illuminate/Http/Middleware/CheckResponseForModifications.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\FrameGuard","p":"Illuminate/Http/Middleware/FrameGuard.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\HandleCors","p":"Illuminate/Http/Middleware/HandleCors.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\SetCacheHeaders","p":"Illuminate/Http/Middleware/SetCacheHeaders.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\TrustHosts","p":"Illuminate/Http/Middleware/TrustHosts.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\Middleware\\TrustProxies","p":"Illuminate/Http/Middleware/TrustProxies.html","d":null,"f":{"n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"}},{"t":"C","n":"Illuminate\\Http\\RedirectResponse","p":"Illuminate/Http/RedirectResponse.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\Request","p":"Illuminate/Http/Request.html","d":"","f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"T","n":"Illuminate\\Http\\Resources\\CollectsResources","p":"Illuminate/Http/Resources/CollectsResources.html","d":null,"f":{"n":"Illuminate\\Http\\Resources","p":"Illuminate/Http/Resources.html"}},{"t":"T","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html","d":null,"f":{"n":"Illuminate\\Http\\Resources","p":"Illuminate/Http/Resources.html"}},{"t":"T","n":"Illuminate\\Http\\Resources\\DelegatesToResource","p":"Illuminate/Http/Resources/DelegatesToResource.html","d":null,"f":{"n":"Illuminate\\Http\\Resources","p":"Illuminate/Http/Resources.html"}},{"t":"C","n":"Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection","p":"Illuminate/Http/Resources/Json/AnonymousResourceCollection.html","d":null,"f":{"n":"Illuminate\\Http\\Resources\\Json","p":"Illuminate/Http/Resources/Json.html"}},{"t":"C","n":"Illuminate\\Http\\Resources\\Json\\JsonResource","p":"Illuminate/Http/Resources/Json/JsonResource.html","d":null,"f":{"n":"Illuminate\\Http\\Resources\\Json","p":"Illuminate/Http/Resources/Json.html"}},{"t":"C","n":"Illuminate\\Http\\Resources\\Json\\PaginatedResourceResponse","p":"Illuminate/Http/Resources/Json/PaginatedResourceResponse.html","d":null,"f":{"n":"Illuminate\\Http\\Resources\\Json","p":"Illuminate/Http/Resources/Json.html"}},{"t":"C","n":"Illuminate\\Http\\Resources\\Json\\ResourceCollection","p":"Illuminate/Http/Resources/Json/ResourceCollection.html","d":null,"f":{"n":"Illuminate\\Http\\Resources\\Json","p":"Illuminate/Http/Resources/Json.html"}},{"t":"C","n":"Illuminate\\Http\\Resources\\Json\\ResourceResponse","p":"Illuminate/Http/Resources/Json/ResourceResponse.html","d":null,"f":{"n":"Illuminate\\Http\\Resources\\Json","p":"Illuminate/Http/Resources/Json.html"}},{"t":"C","n":"Illuminate\\Http\\Resources\\MergeValue","p":"Illuminate/Http/Resources/MergeValue.html","d":null,"f":{"n":"Illuminate\\Http\\Resources","p":"Illuminate/Http/Resources.html"}},{"t":"C","n":"Illuminate\\Http\\Resources\\MissingValue","p":"Illuminate/Http/Resources/MissingValue.html","d":null,"f":{"n":"Illuminate\\Http\\Resources","p":"Illuminate/Http/Resources.html"}},{"t":"C","n":"Illuminate\\Http\\Resources\\PotentiallyMissing","p":"Illuminate/Http/Resources/PotentiallyMissing.html","d":null,"f":{"n":"Illuminate\\Http\\Resources","p":"Illuminate/Http/Resources.html"}},{"t":"C","n":"Illuminate\\Http\\Response","p":"Illuminate/Http/Response.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"T","n":"Illuminate\\Http\\ResponseTrait","p":"Illuminate/Http/ResponseTrait.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Http\\Testing\\File","p":"Illuminate/Http/Testing/File.html","d":null,"f":{"n":"Illuminate\\Http\\Testing","p":"Illuminate/Http/Testing.html"}},{"t":"C","n":"Illuminate\\Http\\Testing\\FileFactory","p":"Illuminate/Http/Testing/FileFactory.html","d":null,"f":{"n":"Illuminate\\Http\\Testing","p":"Illuminate/Http/Testing.html"}},{"t":"C","n":"Illuminate\\Http\\Testing\\MimeType","p":"Illuminate/Http/Testing/MimeType.html","d":null,"f":{"n":"Illuminate\\Http\\Testing","p":"Illuminate/Http/Testing.html"}},{"t":"C","n":"Illuminate\\Http\\UploadedFile","p":"Illuminate/Http/UploadedFile.html","d":null,"f":{"n":"Illuminate\\Http","p":"Illuminate/Http.html"}},{"t":"C","n":"Illuminate\\Log\\Events\\MessageLogged","p":"Illuminate/Log/Events/MessageLogged.html","d":null,"f":{"n":"Illuminate\\Log\\Events","p":"Illuminate/Log/Events.html"}},{"t":"C","n":"Illuminate\\Log\\LogManager","p":"Illuminate/Log/LogManager.html","d":"","f":{"n":"Illuminate\\Log","p":"Illuminate/Log.html"}},{"t":"C","n":"Illuminate\\Log\\LogServiceProvider","p":"Illuminate/Log/LogServiceProvider.html","d":null,"f":{"n":"Illuminate\\Log","p":"Illuminate/Log.html"}},{"t":"C","n":"Illuminate\\Log\\Logger","p":"Illuminate/Log/Logger.html","d":null,"f":{"n":"Illuminate\\Log","p":"Illuminate/Log.html"}},{"t":"T","n":"Illuminate\\Log\\ParsesLogConfiguration","p":"Illuminate/Log/ParsesLogConfiguration.html","d":null,"f":{"n":"Illuminate\\Log","p":"Illuminate/Log.html"}},{"t":"C","n":"Illuminate\\Mail\\Attachment","p":"Illuminate/Mail/Attachment.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Events\\MessageSending","p":"Illuminate/Mail/Events/MessageSending.html","d":null,"f":{"n":"Illuminate\\Mail\\Events","p":"Illuminate/Mail/Events.html"}},{"t":"C","n":"Illuminate\\Mail\\Events\\MessageSent","p":"Illuminate/Mail/Events/MessageSent.html","d":"","f":{"n":"Illuminate\\Mail\\Events","p":"Illuminate/Mail/Events.html"}},{"t":"C","n":"Illuminate\\Mail\\MailManager","p":"Illuminate/Mail/MailManager.html","d":"","f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\MailServiceProvider","p":"Illuminate/Mail/MailServiceProvider.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailable","p":"Illuminate/Mail/Mailable.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailables\\Address","p":"Illuminate/Mail/Mailables/Address.html","d":null,"f":{"n":"Illuminate\\Mail\\Mailables","p":"Illuminate/Mail/Mailables.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailables\\Attachment","p":"Illuminate/Mail/Mailables/Attachment.html","d":null,"f":{"n":"Illuminate\\Mail\\Mailables","p":"Illuminate/Mail/Mailables.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailables\\Content","p":"Illuminate/Mail/Mailables/Content.html","d":null,"f":{"n":"Illuminate\\Mail\\Mailables","p":"Illuminate/Mail/Mailables.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailables\\Envelope","p":"Illuminate/Mail/Mailables/Envelope.html","d":null,"f":{"n":"Illuminate\\Mail\\Mailables","p":"Illuminate/Mail/Mailables.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailables\\Headers","p":"Illuminate/Mail/Mailables/Headers.html","d":null,"f":{"n":"Illuminate\\Mail\\Mailables","p":"Illuminate/Mail/Mailables.html"}},{"t":"C","n":"Illuminate\\Mail\\Mailer","p":"Illuminate/Mail/Mailer.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Markdown","p":"Illuminate/Mail/Markdown.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Message","p":"Illuminate/Mail/Message.html","d":"","f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\PendingMail","p":"Illuminate/Mail/PendingMail.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\SendQueuedMailable","p":"Illuminate/Mail/SendQueuedMailable.html","d":null,"f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\SentMessage","p":"Illuminate/Mail/SentMessage.html","d":"","f":{"n":"Illuminate\\Mail","p":"Illuminate/Mail.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\ArrayTransport","p":"Illuminate/Mail/Transport/ArrayTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\LogTransport","p":"Illuminate/Mail/Transport/LogTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\SesTransport","p":"Illuminate/Mail/Transport/SesTransport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Mail\\Transport\\SesV2Transport","p":"Illuminate/Mail/Transport/SesV2Transport.html","d":null,"f":{"n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"}},{"t":"C","n":"Illuminate\\Notifications\\Action","p":"Illuminate/Notifications/Action.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\AnonymousNotifiable","p":"Illuminate/Notifications/AnonymousNotifiable.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\ChannelManager","p":"Illuminate/Notifications/ChannelManager.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\Channels\\BroadcastChannel","p":"Illuminate/Notifications/Channels/BroadcastChannel.html","d":null,"f":{"n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"}},{"t":"C","n":"Illuminate\\Notifications\\Channels\\DatabaseChannel","p":"Illuminate/Notifications/Channels/DatabaseChannel.html","d":null,"f":{"n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"}},{"t":"C","n":"Illuminate\\Notifications\\Channels\\MailChannel","p":"Illuminate/Notifications/Channels/MailChannel.html","d":null,"f":{"n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"}},{"t":"C","n":"Illuminate\\Notifications\\Console\\NotificationTableCommand","p":"Illuminate/Notifications/Console/NotificationTableCommand.html","d":null,"f":{"n":"Illuminate\\Notifications\\Console","p":"Illuminate/Notifications/Console.html"}},{"t":"C","n":"Illuminate\\Notifications\\DatabaseNotification","p":"Illuminate/Notifications/DatabaseNotification.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\DatabaseNotificationCollection","p":"Illuminate/Notifications/DatabaseNotificationCollection.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html","d":null,"f":{"n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"}},{"t":"C","n":"Illuminate\\Notifications\\Events\\NotificationFailed","p":"Illuminate/Notifications/Events/NotificationFailed.html","d":null,"f":{"n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"}},{"t":"C","n":"Illuminate\\Notifications\\Events\\NotificationSending","p":"Illuminate/Notifications/Events/NotificationSending.html","d":null,"f":{"n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"}},{"t":"C","n":"Illuminate\\Notifications\\Events\\NotificationSent","p":"Illuminate/Notifications/Events/NotificationSent.html","d":null,"f":{"n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"}},{"t":"T","n":"Illuminate\\Notifications\\HasDatabaseNotifications","p":"Illuminate/Notifications/HasDatabaseNotifications.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\BroadcastMessage","p":"Illuminate/Notifications/Messages/BroadcastMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\DatabaseMessage","p":"Illuminate/Notifications/Messages/DatabaseMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\MailMessage","p":"Illuminate/Notifications/Messages/MailMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"C","n":"Illuminate\\Notifications\\Messages\\SimpleMessage","p":"Illuminate/Notifications/Messages/SimpleMessage.html","d":null,"f":{"n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"}},{"t":"T","n":"Illuminate\\Notifications\\Notifiable","p":"Illuminate/Notifications/Notifiable.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\Notification","p":"Illuminate/Notifications/Notification.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\NotificationSender","p":"Illuminate/Notifications/NotificationSender.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\NotificationServiceProvider","p":"Illuminate/Notifications/NotificationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"T","n":"Illuminate\\Notifications\\RoutesNotifications","p":"Illuminate/Notifications/RoutesNotifications.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Notifications\\SendQueuedNotifications","p":"Illuminate/Notifications/SendQueuedNotifications.html","d":null,"f":{"n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"}},{"t":"C","n":"Illuminate\\Pagination\\AbstractCursorPaginator","p":"Illuminate/Pagination/AbstractCursorPaginator.html","d":"","f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\AbstractPaginator","p":"Illuminate/Pagination/AbstractPaginator.html","d":"","f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\Cursor","p":"Illuminate/Pagination/Cursor.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\CursorPaginator","p":"Illuminate/Pagination/CursorPaginator.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\LengthAwarePaginator","p":"Illuminate/Pagination/LengthAwarePaginator.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\PaginationServiceProvider","p":"Illuminate/Pagination/PaginationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\PaginationState","p":"Illuminate/Pagination/PaginationState.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\Paginator","p":"Illuminate/Pagination/Paginator.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pagination\\UrlWindow","p":"Illuminate/Pagination/UrlWindow.html","d":null,"f":{"n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"}},{"t":"C","n":"Illuminate\\Pipeline\\Hub","p":"Illuminate/Pipeline/Hub.html","d":null,"f":{"n":"Illuminate\\Pipeline","p":"Illuminate/Pipeline.html"}},{"t":"C","n":"Illuminate\\Pipeline\\Pipeline","p":"Illuminate/Pipeline/Pipeline.html","d":null,"f":{"n":"Illuminate\\Pipeline","p":"Illuminate/Pipeline.html"}},{"t":"C","n":"Illuminate\\Pipeline\\PipelineServiceProvider","p":"Illuminate/Pipeline/PipelineServiceProvider.html","d":null,"f":{"n":"Illuminate\\Pipeline","p":"Illuminate/Pipeline.html"}},{"t":"C","n":"Illuminate\\Process\\Exceptions\\ProcessFailedException","p":"Illuminate/Process/Exceptions/ProcessFailedException.html","d":null,"f":{"n":"Illuminate\\Process\\Exceptions","p":"Illuminate/Process/Exceptions.html"}},{"t":"C","n":"Illuminate\\Process\\Exceptions\\ProcessTimedOutException","p":"Illuminate/Process/Exceptions/ProcessTimedOutException.html","d":null,"f":{"n":"Illuminate\\Process\\Exceptions","p":"Illuminate/Process/Exceptions.html"}},{"t":"C","n":"Illuminate\\Process\\Factory","p":"Illuminate/Process/Factory.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\FakeInvokedProcess","p":"Illuminate/Process/FakeInvokedProcess.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\FakeProcessDescription","p":"Illuminate/Process/FakeProcessDescription.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\FakeProcessResult","p":"Illuminate/Process/FakeProcessResult.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\FakeProcessSequence","p":"Illuminate/Process/FakeProcessSequence.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\InvokedProcess","p":"Illuminate/Process/InvokedProcess.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\InvokedProcessPool","p":"Illuminate/Process/InvokedProcessPool.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\PendingProcess","p":"Illuminate/Process/PendingProcess.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\Pool","p":"Illuminate/Process/Pool.html","d":"","f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\ProcessPoolResults","p":"Illuminate/Process/ProcessPoolResults.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Process\\ProcessResult","p":"Illuminate/Process/ProcessResult.html","d":null,"f":{"n":"Illuminate\\Process","p":"Illuminate/Process.html"}},{"t":"C","n":"Illuminate\\Queue\\BeanstalkdQueue","p":"Illuminate/Queue/BeanstalkdQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\CallQueuedClosure","p":"Illuminate/Queue/CallQueuedClosure.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\CallQueuedHandler","p":"Illuminate/Queue/CallQueuedHandler.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Capsule\\Manager","p":"Illuminate/Queue/Capsule/Manager.html","d":"","f":{"n":"Illuminate\\Queue\\Capsule","p":"Illuminate/Queue/Capsule.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\BeanstalkdConnector","p":"Illuminate/Queue/Connectors/BeanstalkdConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\ConnectorInterface","p":"Illuminate/Queue/Connectors/ConnectorInterface.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\DatabaseConnector","p":"Illuminate/Queue/Connectors/DatabaseConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\NullConnector","p":"Illuminate/Queue/Connectors/NullConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\RedisConnector","p":"Illuminate/Queue/Connectors/RedisConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\SqsConnector","p":"Illuminate/Queue/Connectors/SqsConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Connectors\\SyncConnector","p":"Illuminate/Queue/Connectors/SyncConnector.html","d":null,"f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\BatchesTableCommand","p":"Illuminate/Queue/Console/BatchesTableCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\ClearCommand","p":"Illuminate/Queue/Console/ClearCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\FailedTableCommand","p":"Illuminate/Queue/Console/FailedTableCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\FlushFailedCommand","p":"Illuminate/Queue/Console/FlushFailedCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\ForgetFailedCommand","p":"Illuminate/Queue/Console/ForgetFailedCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\ListFailedCommand","p":"Illuminate/Queue/Console/ListFailedCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\ListenCommand","p":"Illuminate/Queue/Console/ListenCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\MonitorCommand","p":"Illuminate/Queue/Console/MonitorCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\PruneBatchesCommand","p":"Illuminate/Queue/Console/PruneBatchesCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\PruneFailedJobsCommand","p":"Illuminate/Queue/Console/PruneFailedJobsCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\RestartCommand","p":"Illuminate/Queue/Console/RestartCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\RetryBatchCommand","p":"Illuminate/Queue/Console/RetryBatchCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\RetryCommand","p":"Illuminate/Queue/Console/RetryCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\TableCommand","p":"Illuminate/Queue/Console/TableCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\Console\\WorkCommand","p":"Illuminate/Queue/Console/WorkCommand.html","d":null,"f":{"n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"}},{"t":"C","n":"Illuminate\\Queue\\DatabaseQueue","p":"Illuminate/Queue/DatabaseQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobExceptionOccurred","p":"Illuminate/Queue/Events/JobExceptionOccurred.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobFailed","p":"Illuminate/Queue/Events/JobFailed.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobProcessed","p":"Illuminate/Queue/Events/JobProcessed.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobProcessing","p":"Illuminate/Queue/Events/JobProcessing.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobQueued","p":"Illuminate/Queue/Events/JobQueued.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobReleasedAfterException","p":"Illuminate/Queue/Events/JobReleasedAfterException.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\JobRetryRequested","p":"Illuminate/Queue/Events/JobRetryRequested.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\Looping","p":"Illuminate/Queue/Events/Looping.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\QueueBusy","p":"Illuminate/Queue/Events/QueueBusy.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Events\\WorkerStopping","p":"Illuminate/Queue/Events/WorkerStopping.html","d":null,"f":{"n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\DynamoDbFailedJobProvider","p":"Illuminate/Queue/Failed/DynamoDbFailedJobProvider.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"C","n":"Illuminate\\Queue\\Failed\\PrunableFailedJobProvider","p":"Illuminate/Queue/Failed/PrunableFailedJobProvider.html","d":null,"f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"T","n":"Illuminate\\Queue\\InteractsWithQueue","p":"Illuminate/Queue/InteractsWithQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\InvalidPayloadException","p":"Illuminate/Queue/InvalidPayloadException.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\DatabaseJob","p":"Illuminate/Queue/Jobs/DatabaseJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\Job","p":"Illuminate/Queue/Jobs/Job.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\JobName","p":"Illuminate/Queue/Jobs/JobName.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\RedisJob","p":"Illuminate/Queue/Jobs/RedisJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\SqsJob","p":"Illuminate/Queue/Jobs/SqsJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Jobs\\SyncJob","p":"Illuminate/Queue/Jobs/SyncJob.html","d":null,"f":{"n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"}},{"t":"C","n":"Illuminate\\Queue\\Listener","p":"Illuminate/Queue/Listener.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\ListenerOptions","p":"Illuminate/Queue/ListenerOptions.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\LuaScripts","p":"Illuminate/Queue/LuaScripts.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\ManuallyFailedException","p":"Illuminate/Queue/ManuallyFailedException.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\MaxAttemptsExceededException","p":"Illuminate/Queue/MaxAttemptsExceededException.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Middleware\\RateLimited","p":"Illuminate/Queue/Middleware/RateLimited.html","d":null,"f":{"n":"Illuminate\\Queue\\Middleware","p":"Illuminate/Queue/Middleware.html"}},{"t":"C","n":"Illuminate\\Queue\\Middleware\\RateLimitedWithRedis","p":"Illuminate/Queue/Middleware/RateLimitedWithRedis.html","d":null,"f":{"n":"Illuminate\\Queue\\Middleware","p":"Illuminate/Queue/Middleware.html"}},{"t":"C","n":"Illuminate\\Queue\\Middleware\\SkipIfBatchCancelled","p":"Illuminate/Queue/Middleware/SkipIfBatchCancelled.html","d":null,"f":{"n":"Illuminate\\Queue\\Middleware","p":"Illuminate/Queue/Middleware.html"}},{"t":"C","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html","d":null,"f":{"n":"Illuminate\\Queue\\Middleware","p":"Illuminate/Queue/Middleware.html"}},{"t":"C","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptionsWithRedis","p":"Illuminate/Queue/Middleware/ThrottlesExceptionsWithRedis.html","d":null,"f":{"n":"Illuminate\\Queue\\Middleware","p":"Illuminate/Queue/Middleware.html"}},{"t":"C","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html","d":null,"f":{"n":"Illuminate\\Queue\\Middleware","p":"Illuminate/Queue/Middleware.html"}},{"t":"C","n":"Illuminate\\Queue\\NullQueue","p":"Illuminate/Queue/NullQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Queue","p":"Illuminate/Queue/Queue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\QueueManager","p":"Illuminate/Queue/QueueManager.html","d":"","f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\QueueServiceProvider","p":"Illuminate/Queue/QueueServiceProvider.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\RedisQueue","p":"Illuminate/Queue/RedisQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"T","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"T","n":"Illuminate\\Queue\\SerializesModels","p":"Illuminate/Queue/SerializesModels.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\SqsQueue","p":"Illuminate/Queue/SqsQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\SyncQueue","p":"Illuminate/Queue/SyncQueue.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\Worker","p":"Illuminate/Queue/Worker.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Queue\\WorkerOptions","p":"Illuminate/Queue/WorkerOptions.html","d":null,"f":{"n":"Illuminate\\Queue","p":"Illuminate/Queue.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\Connection","p":"Illuminate/Redis/Connections/Connection.html","d":null,"f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"T","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html","d":null,"f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\PhpRedisClusterConnection","p":"Illuminate/Redis/Connections/PhpRedisClusterConnection.html","d":null,"f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection","p":"Illuminate/Redis/Connections/PhpRedisConnection.html","d":"","f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\PredisClusterConnection","p":"Illuminate/Redis/Connections/PredisClusterConnection.html","d":null,"f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connections\\PredisConnection","p":"Illuminate/Redis/Connections/PredisConnection.html","d":"","f":{"n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"}},{"t":"C","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html","d":null,"f":{"n":"Illuminate\\Redis\\Connectors","p":"Illuminate/Redis/Connectors.html"}},{"t":"C","n":"Illuminate\\Redis\\Connectors\\PredisConnector","p":"Illuminate/Redis/Connectors/PredisConnector.html","d":null,"f":{"n":"Illuminate\\Redis\\Connectors","p":"Illuminate/Redis/Connectors.html"}},{"t":"C","n":"Illuminate\\Redis\\Events\\CommandExecuted","p":"Illuminate/Redis/Events/CommandExecuted.html","d":null,"f":{"n":"Illuminate\\Redis\\Events","p":"Illuminate/Redis/Events.html"}},{"t":"C","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiter","p":"Illuminate/Redis/Limiters/ConcurrencyLimiter.html","d":null,"f":{"n":"Illuminate\\Redis\\Limiters","p":"Illuminate/Redis/Limiters.html"}},{"t":"C","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiterBuilder","p":"Illuminate/Redis/Limiters/ConcurrencyLimiterBuilder.html","d":null,"f":{"n":"Illuminate\\Redis\\Limiters","p":"Illuminate/Redis/Limiters.html"}},{"t":"C","n":"Illuminate\\Redis\\Limiters\\DurationLimiter","p":"Illuminate/Redis/Limiters/DurationLimiter.html","d":null,"f":{"n":"Illuminate\\Redis\\Limiters","p":"Illuminate/Redis/Limiters.html"}},{"t":"C","n":"Illuminate\\Redis\\Limiters\\DurationLimiterBuilder","p":"Illuminate/Redis/Limiters/DurationLimiterBuilder.html","d":null,"f":{"n":"Illuminate\\Redis\\Limiters","p":"Illuminate/Redis/Limiters.html"}},{"t":"C","n":"Illuminate\\Redis\\RedisManager","p":"Illuminate/Redis/RedisManager.html","d":"","f":{"n":"Illuminate\\Redis","p":"Illuminate/Redis.html"}},{"t":"C","n":"Illuminate\\Redis\\RedisServiceProvider","p":"Illuminate/Redis/RedisServiceProvider.html","d":null,"f":{"n":"Illuminate\\Redis","p":"Illuminate/Redis.html"}},{"t":"C","n":"Illuminate\\Routing\\AbstractRouteCollection","p":"Illuminate/Routing/AbstractRouteCollection.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\CallableDispatcher","p":"Illuminate/Routing/CallableDispatcher.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\CompiledRouteCollection","p":"Illuminate/Routing/CompiledRouteCollection.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand","p":"Illuminate/Routing/Console/ControllerMakeCommand.html","d":null,"f":{"n":"Illuminate\\Routing\\Console","p":"Illuminate/Routing/Console.html"}},{"t":"C","n":"Illuminate\\Routing\\Console\\MiddlewareMakeCommand","p":"Illuminate/Routing/Console/MiddlewareMakeCommand.html","d":null,"f":{"n":"Illuminate\\Routing\\Console","p":"Illuminate/Routing/Console.html"}},{"t":"C","n":"Illuminate\\Routing\\Contracts\\CallableDispatcher","p":"Illuminate/Routing/Contracts/CallableDispatcher.html","d":null,"f":{"n":"Illuminate\\Routing\\Contracts","p":"Illuminate/Routing/Contracts.html"}},{"t":"C","n":"Illuminate\\Routing\\Contracts\\ControllerDispatcher","p":"Illuminate/Routing/Contracts/ControllerDispatcher.html","d":null,"f":{"n":"Illuminate\\Routing\\Contracts","p":"Illuminate/Routing/Contracts.html"}},{"t":"C","n":"Illuminate\\Routing\\Controller","p":"Illuminate/Routing/Controller.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ControllerDispatcher","p":"Illuminate/Routing/ControllerDispatcher.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ControllerMiddlewareOptions","p":"Illuminate/Routing/ControllerMiddlewareOptions.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Controllers\\HasMiddleware","p":"Illuminate/Routing/Controllers/HasMiddleware.html","d":null,"f":{"n":"Illuminate\\Routing\\Controllers","p":"Illuminate/Routing/Controllers.html"}},{"t":"C","n":"Illuminate\\Routing\\Controllers\\Middleware","p":"Illuminate/Routing/Controllers/Middleware.html","d":null,"f":{"n":"Illuminate\\Routing\\Controllers","p":"Illuminate/Routing/Controllers.html"}},{"t":"T","n":"Illuminate\\Routing\\CreatesRegularExpressionRouteConstraints","p":"Illuminate/Routing/CreatesRegularExpressionRouteConstraints.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Events\\RouteMatched","p":"Illuminate/Routing/Events/RouteMatched.html","d":null,"f":{"n":"Illuminate\\Routing\\Events","p":"Illuminate/Routing/Events.html"}},{"t":"C","n":"Illuminate\\Routing\\Events\\Routing","p":"Illuminate/Routing/Events/Routing.html","d":null,"f":{"n":"Illuminate\\Routing\\Events","p":"Illuminate/Routing/Events.html"}},{"t":"C","n":"Illuminate\\Routing\\Exceptions\\BackedEnumCaseNotFoundException","p":"Illuminate/Routing/Exceptions/BackedEnumCaseNotFoundException.html","d":null,"f":{"n":"Illuminate\\Routing\\Exceptions","p":"Illuminate/Routing/Exceptions.html"}},{"t":"C","n":"Illuminate\\Routing\\Exceptions\\InvalidSignatureException","p":"Illuminate/Routing/Exceptions/InvalidSignatureException.html","d":null,"f":{"n":"Illuminate\\Routing\\Exceptions","p":"Illuminate/Routing/Exceptions.html"}},{"t":"C","n":"Illuminate\\Routing\\Exceptions\\StreamedResponseException","p":"Illuminate/Routing/Exceptions/StreamedResponseException.html","d":null,"f":{"n":"Illuminate\\Routing\\Exceptions","p":"Illuminate/Routing/Exceptions.html"}},{"t":"C","n":"Illuminate\\Routing\\Exceptions\\UrlGenerationException","p":"Illuminate/Routing/Exceptions/UrlGenerationException.html","d":null,"f":{"n":"Illuminate\\Routing\\Exceptions","p":"Illuminate/Routing/Exceptions.html"}},{"t":"C","n":"Illuminate\\Routing\\ImplicitRouteBinding","p":"Illuminate/Routing/ImplicitRouteBinding.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\HostValidator","p":"Illuminate/Routing/Matching/HostValidator.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\MethodValidator","p":"Illuminate/Routing/Matching/MethodValidator.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\SchemeValidator","p":"Illuminate/Routing/Matching/SchemeValidator.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\UriValidator","p":"Illuminate/Routing/Matching/UriValidator.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\Matching\\ValidatorInterface","p":"Illuminate/Routing/Matching/ValidatorInterface.html","d":null,"f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"C","n":"Illuminate\\Routing\\MiddlewareNameResolver","p":"Illuminate/Routing/MiddlewareNameResolver.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Middleware\\SubstituteBindings","p":"Illuminate/Routing/Middleware/SubstituteBindings.html","d":null,"f":{"n":"Illuminate\\Routing\\Middleware","p":"Illuminate/Routing/Middleware.html"}},{"t":"C","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests","p":"Illuminate/Routing/Middleware/ThrottleRequests.html","d":null,"f":{"n":"Illuminate\\Routing\\Middleware","p":"Illuminate/Routing/Middleware.html"}},{"t":"C","n":"Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis","p":"Illuminate/Routing/Middleware/ThrottleRequestsWithRedis.html","d":null,"f":{"n":"Illuminate\\Routing\\Middleware","p":"Illuminate/Routing/Middleware.html"}},{"t":"C","n":"Illuminate\\Routing\\Middleware\\ValidateSignature","p":"Illuminate/Routing/Middleware/ValidateSignature.html","d":null,"f":{"n":"Illuminate\\Routing\\Middleware","p":"Illuminate/Routing/Middleware.html"}},{"t":"C","n":"Illuminate\\Routing\\PendingResourceRegistration","p":"Illuminate/Routing/PendingResourceRegistration.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Pipeline","p":"Illuminate/Routing/Pipeline.html","d":"<p>This extended pipeline catches any exceptions that occur during each slice.</p>","f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RedirectController","p":"Illuminate/Routing/RedirectController.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Redirector","p":"Illuminate/Routing/Redirector.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ResourceRegistrar","p":"Illuminate/Routing/ResourceRegistrar.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ResponseFactory","p":"Illuminate/Routing/ResponseFactory.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Route","p":"Illuminate/Routing/Route.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteAction","p":"Illuminate/Routing/RouteAction.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteBinding","p":"Illuminate/Routing/RouteBinding.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteCollection","p":"Illuminate/Routing/RouteCollection.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteCollectionInterface","p":"Illuminate/Routing/RouteCollectionInterface.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"T","n":"Illuminate\\Routing\\RouteDependencyResolverTrait","p":"Illuminate/Routing/RouteDependencyResolverTrait.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteFileRegistrar","p":"Illuminate/Routing/RouteFileRegistrar.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteGroup","p":"Illuminate/Routing/RouteGroup.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteParameterBinder","p":"Illuminate/Routing/RouteParameterBinder.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteRegistrar","p":"Illuminate/Routing/RouteRegistrar.html","d":"","f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteSignatureParameters","p":"Illuminate/Routing/RouteSignatureParameters.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteUri","p":"Illuminate/Routing/RouteUri.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RouteUrlGenerator","p":"Illuminate/Routing/RouteUrlGenerator.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\Router","p":"Illuminate/Routing/Router.html","d":"","f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\RoutingServiceProvider","p":"Illuminate/Routing/RoutingServiceProvider.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\SortedMiddleware","p":"Illuminate/Routing/SortedMiddleware.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\UrlGenerator","p":"Illuminate/Routing/UrlGenerator.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Routing\\ViewController","p":"Illuminate/Routing/ViewController.html","d":null,"f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"C","n":"Illuminate\\Session\\ArraySessionHandler","p":"Illuminate/Session/ArraySessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\CacheBasedSessionHandler","p":"Illuminate/Session/CacheBasedSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\Console\\SessionTableCommand","p":"Illuminate/Session/Console/SessionTableCommand.html","d":null,"f":{"n":"Illuminate\\Session\\Console","p":"Illuminate/Session/Console.html"}},{"t":"C","n":"Illuminate\\Session\\CookieSessionHandler","p":"Illuminate/Session/CookieSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\DatabaseSessionHandler","p":"Illuminate/Session/DatabaseSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\EncryptedStore","p":"Illuminate/Session/EncryptedStore.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\ExistenceAwareInterface","p":"Illuminate/Session/ExistenceAwareInterface.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\FileSessionHandler","p":"Illuminate/Session/FileSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\Middleware\\AuthenticateSession","p":"Illuminate/Session/Middleware/AuthenticateSession.html","d":null,"f":{"n":"Illuminate\\Session\\Middleware","p":"Illuminate/Session/Middleware.html"}},{"t":"C","n":"Illuminate\\Session\\Middleware\\StartSession","p":"Illuminate/Session/Middleware/StartSession.html","d":null,"f":{"n":"Illuminate\\Session\\Middleware","p":"Illuminate/Session/Middleware.html"}},{"t":"C","n":"Illuminate\\Session\\NullSessionHandler","p":"Illuminate/Session/NullSessionHandler.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\SessionManager","p":"Illuminate/Session/SessionManager.html","d":"","f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\SessionServiceProvider","p":"Illuminate/Session/SessionServiceProvider.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\Store","p":"Illuminate/Session/Store.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\SymfonySessionDecorator","p":"Illuminate/Session/SymfonySessionDecorator.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Session\\TokenMismatchException","p":"Illuminate/Session/TokenMismatchException.html","d":null,"f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"C","n":"Illuminate\\Support\\AggregateServiceProvider","p":"Illuminate/Support/AggregateServiceProvider.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Arr","p":"Illuminate/Support/Arr.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Benchmark","p":"Illuminate/Support/Benchmark.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Carbon","p":"Illuminate/Support/Carbon.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Collection","p":"Illuminate/Support/Collection.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Composer","p":"Illuminate/Support/Composer.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\ConfigurationUrlParser","p":"Illuminate/Support/ConfigurationUrlParser.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\DateFactory","p":"Illuminate/Support/DateFactory.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Enumerable","p":"Illuminate/Support/Enumerable.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Env","p":"Illuminate/Support/Env.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Exceptions\\MathException","p":"Illuminate/Support/Exceptions/MathException.html","d":null,"f":{"n":"Illuminate\\Support\\Exceptions","p":"Illuminate/Support/Exceptions.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\App","p":"Illuminate/Support/Facades/App.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Artisan","p":"Illuminate/Support/Facades/Artisan.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Auth","p":"Illuminate/Support/Facades/Auth.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Blade","p":"Illuminate/Support/Facades/Blade.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Broadcast","p":"Illuminate/Support/Facades/Broadcast.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Bus","p":"Illuminate/Support/Facades/Bus.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Cache","p":"Illuminate/Support/Facades/Cache.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Config","p":"Illuminate/Support/Facades/Config.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Cookie","p":"Illuminate/Support/Facades/Cookie.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Crypt","p":"Illuminate/Support/Facades/Crypt.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\DB","p":"Illuminate/Support/Facades/DB.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Date","p":"Illuminate/Support/Facades/Date.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Event","p":"Illuminate/Support/Facades/Event.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Facade","p":"Illuminate/Support/Facades/Facade.html","d":null,"f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\File","p":"Illuminate/Support/Facades/File.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Gate","p":"Illuminate/Support/Facades/Gate.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Hash","p":"Illuminate/Support/Facades/Hash.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Http","p":"Illuminate/Support/Facades/Http.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Lang","p":"Illuminate/Support/Facades/Lang.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Log","p":"Illuminate/Support/Facades/Log.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Mail","p":"Illuminate/Support/Facades/Mail.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Notification","p":"Illuminate/Support/Facades/Notification.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\ParallelTesting","p":"Illuminate/Support/Facades/ParallelTesting.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Password","p":"Illuminate/Support/Facades/Password.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Process","p":"Illuminate/Support/Facades/Process.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Queue","p":"Illuminate/Support/Facades/Queue.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\RateLimiter","p":"Illuminate/Support/Facades/RateLimiter.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Redirect","p":"Illuminate/Support/Facades/Redirect.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Redis","p":"Illuminate/Support/Facades/Redis.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Request","p":"Illuminate/Support/Facades/Request.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Response","p":"Illuminate/Support/Facades/Response.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Route","p":"Illuminate/Support/Facades/Route.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Schema","p":"Illuminate/Support/Facades/Schema.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Session","p":"Illuminate/Support/Facades/Session.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Storage","p":"Illuminate/Support/Facades/Storage.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\URL","p":"Illuminate/Support/Facades/URL.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Validator","p":"Illuminate/Support/Facades/Validator.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\View","p":"Illuminate/Support/Facades/View.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Facades\\Vite","p":"Illuminate/Support/Facades/Vite.html","d":"","f":{"n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"}},{"t":"C","n":"Illuminate\\Support\\Fluent","p":"Illuminate/Support/Fluent.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\HigherOrderCollectionProxy","p":"Illuminate/Support/HigherOrderCollectionProxy.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\HigherOrderTapProxy","p":"Illuminate/Support/HigherOrderTapProxy.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\HigherOrderWhenProxy","p":"Illuminate/Support/HigherOrderWhenProxy.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\HtmlString","p":"Illuminate/Support/HtmlString.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"T","n":"Illuminate\\Support\\InteractsWithTime","p":"Illuminate/Support/InteractsWithTime.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\ItemNotFoundException","p":"Illuminate/Support/ItemNotFoundException.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Js","p":"Illuminate/Support/Js.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\LazyCollection","p":"Illuminate/Support/LazyCollection.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Lottery","p":"Illuminate/Support/Lottery.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Manager","p":"Illuminate/Support/Manager.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\MessageBag","p":"Illuminate/Support/MessageBag.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\MultipleInstanceManager","p":"Illuminate/Support/MultipleInstanceManager.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\MultipleItemsFoundException","p":"Illuminate/Support/MultipleItemsFoundException.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\NamespacedItemResolver","p":"Illuminate/Support/NamespacedItemResolver.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Optional","p":"Illuminate/Support/Optional.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Pluralizer","p":"Illuminate/Support/Pluralizer.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\ProcessUtils","p":"Illuminate/Support/ProcessUtils.html","d":"<p>ProcessUtils is a bunch of utility methods.</p>","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Reflector","p":"Illuminate/Support/Reflector.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\ServiceProvider","p":"Illuminate/Support/ServiceProvider.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Str","p":"Illuminate/Support/Str.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Stringable","p":"Illuminate/Support/Stringable.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake","p":"Illuminate/Support/Testing/Fakes/BatchFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake","p":"Illuminate/Support/Testing/Fakes/BusFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake","p":"Illuminate/Support/Testing/Fakes/EventFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\Fake","p":"Illuminate/Support/Testing/Fakes/Fake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake","p":"Illuminate/Support/Testing/Fakes/MailFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\PendingBatchFake","p":"Illuminate/Support/Testing/Fakes/PendingBatchFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\PendingChainFake","p":"Illuminate/Support/Testing/Fakes/PendingChainFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake","p":"Illuminate/Support/Testing/Fakes/QueueFake.html","d":null,"f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"C","n":"Illuminate\\Support\\Timebox","p":"Illuminate/Support/Timebox.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\Conditionable","p":"Illuminate/Support/Traits/Conditionable.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\EnumeratesValues","p":"Illuminate/Support/Traits/EnumeratesValues.html","d":"","f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\ForwardsCalls","p":"Illuminate/Support/Traits/ForwardsCalls.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\Localizable","p":"Illuminate/Support/Traits/Localizable.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\Macroable","p":"Illuminate/Support/Traits/Macroable.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\ReflectsClosures","p":"Illuminate/Support/Traits/ReflectsClosures.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"T","n":"Illuminate\\Support\\Traits\\Tappable","p":"Illuminate/Support/Traits/Tappable.html","d":null,"f":{"n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"}},{"t":"C","n":"Illuminate\\Support\\ValidatedInput","p":"Illuminate/Support/ValidatedInput.html","d":null,"f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Support\\ViewErrorBag","p":"Illuminate/Support/ViewErrorBag.html","d":"","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"C","n":"Illuminate\\Testing\\Assert","p":"Illuminate/Testing/Assert.html","d":"","f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\AssertableJsonString","p":"Illuminate/Testing/AssertableJsonString.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"T","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html","d":null,"f":{"n":"Illuminate\\Testing\\Concerns","p":"Illuminate/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Testing\\Concerns\\RunsInParallel","p":"Illuminate/Testing/Concerns/RunsInParallel.html","d":null,"f":{"n":"Illuminate\\Testing\\Concerns","p":"Illuminate/Testing/Concerns.html"}},{"t":"T","n":"Illuminate\\Testing\\Concerns\\TestDatabases","p":"Illuminate/Testing/Concerns/TestDatabases.html","d":null,"f":{"n":"Illuminate\\Testing\\Concerns","p":"Illuminate/Testing/Concerns.html"}},{"t":"C","n":"Illuminate\\Testing\\Constraints\\ArraySubset","p":"Illuminate/Testing/Constraints/ArraySubset.html","d":"","f":{"n":"Illuminate\\Testing\\Constraints","p":"Illuminate/Testing/Constraints.html"}},{"t":"C","n":"Illuminate\\Testing\\Constraints\\CountInDatabase","p":"Illuminate/Testing/Constraints/CountInDatabase.html","d":null,"f":{"n":"Illuminate\\Testing\\Constraints","p":"Illuminate/Testing/Constraints.html"}},{"t":"C","n":"Illuminate\\Testing\\Constraints\\HasInDatabase","p":"Illuminate/Testing/Constraints/HasInDatabase.html","d":null,"f":{"n":"Illuminate\\Testing\\Constraints","p":"Illuminate/Testing/Constraints.html"}},{"t":"C","n":"Illuminate\\Testing\\Constraints\\NotSoftDeletedInDatabase","p":"Illuminate/Testing/Constraints/NotSoftDeletedInDatabase.html","d":null,"f":{"n":"Illuminate\\Testing\\Constraints","p":"Illuminate/Testing/Constraints.html"}},{"t":"C","n":"Illuminate\\Testing\\Constraints\\SeeInOrder","p":"Illuminate/Testing/Constraints/SeeInOrder.html","d":null,"f":{"n":"Illuminate\\Testing\\Constraints","p":"Illuminate/Testing/Constraints.html"}},{"t":"C","n":"Illuminate\\Testing\\Constraints\\SoftDeletedInDatabase","p":"Illuminate/Testing/Constraints/SoftDeletedInDatabase.html","d":null,"f":{"n":"Illuminate\\Testing\\Constraints","p":"Illuminate/Testing/Constraints.html"}},{"t":"C","n":"Illuminate\\Testing\\Exceptions\\InvalidArgumentException","p":"Illuminate/Testing/Exceptions/InvalidArgumentException.html","d":null,"f":{"n":"Illuminate\\Testing\\Exceptions","p":"Illuminate/Testing/Exceptions.html"}},{"t":"C","n":"Illuminate\\Testing\\Fluent\\AssertableJson","p":"Illuminate/Testing/Fluent/AssertableJson.html","d":null,"f":{"n":"Illuminate\\Testing\\Fluent","p":"Illuminate/Testing/Fluent.html"}},{"t":"T","n":"Illuminate\\Testing\\Fluent\\Concerns\\Debugging","p":"Illuminate/Testing/Fluent/Concerns/Debugging.html","d":null,"f":{"n":"Illuminate\\Testing\\Fluent\\Concerns","p":"Illuminate/Testing/Fluent/Concerns.html"}},{"t":"T","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has","p":"Illuminate/Testing/Fluent/Concerns/Has.html","d":null,"f":{"n":"Illuminate\\Testing\\Fluent\\Concerns","p":"Illuminate/Testing/Fluent/Concerns.html"}},{"t":"T","n":"Illuminate\\Testing\\Fluent\\Concerns\\Interaction","p":"Illuminate/Testing/Fluent/Concerns/Interaction.html","d":null,"f":{"n":"Illuminate\\Testing\\Fluent\\Concerns","p":"Illuminate/Testing/Fluent/Concerns.html"}},{"t":"T","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching","p":"Illuminate/Testing/Fluent/Concerns/Matching.html","d":null,"f":{"n":"Illuminate\\Testing\\Fluent\\Concerns","p":"Illuminate/Testing/Fluent/Concerns.html"}},{"t":"C","n":"Illuminate\\Testing\\LoggedExceptionCollection","p":"Illuminate/Testing/LoggedExceptionCollection.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\ParallelConsoleOutput","p":"Illuminate/Testing/ParallelConsoleOutput.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\ParallelRunner","p":"Illuminate/Testing/ParallelRunner.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\ParallelTesting","p":"Illuminate/Testing/ParallelTesting.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\ParallelTestingServiceProvider","p":"Illuminate/Testing/ParallelTestingServiceProvider.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\PendingCommand","p":"Illuminate/Testing/PendingCommand.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\TestComponent","p":"Illuminate/Testing/TestComponent.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\TestResponse","p":"Illuminate/Testing/TestResponse.html","d":"","f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Testing\\TestView","p":"Illuminate/Testing/TestView.html","d":null,"f":{"n":"Illuminate\\Testing","p":"Illuminate/Testing.html"}},{"t":"C","n":"Illuminate\\Translation\\ArrayLoader","p":"Illuminate/Translation/ArrayLoader.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\FileLoader","p":"Illuminate/Translation/FileLoader.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\MessageSelector","p":"Illuminate/Translation/MessageSelector.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\PotentiallyTranslatedString","p":"Illuminate/Translation/PotentiallyTranslatedString.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\TranslationServiceProvider","p":"Illuminate/Translation/TranslationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Translation\\Translator","p":"Illuminate/Translation/Translator.html","d":null,"f":{"n":"Illuminate\\Translation","p":"Illuminate/Translation.html"}},{"t":"C","n":"Illuminate\\Validation\\ClosureValidationRule","p":"Illuminate/Validation/ClosureValidationRule.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\Concerns\\FilterEmailValidation","p":"Illuminate/Validation/Concerns/FilterEmailValidation.html","d":null,"f":{"n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"}},{"t":"T","n":"Illuminate\\Validation\\Concerns\\FormatsMessages","p":"Illuminate/Validation/Concerns/FormatsMessages.html","d":null,"f":{"n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"}},{"t":"T","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html","d":null,"f":{"n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"}},{"t":"T","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html","d":null,"f":{"n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"}},{"t":"C","n":"Illuminate\\Validation\\ConditionalRules","p":"Illuminate/Validation/ConditionalRules.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\DatabasePresenceVerifier","p":"Illuminate/Validation/DatabasePresenceVerifier.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\DatabasePresenceVerifierInterface","p":"Illuminate/Validation/DatabasePresenceVerifierInterface.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\Factory","p":"Illuminate/Validation/Factory.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\InvokableValidationRule","p":"Illuminate/Validation/InvokableValidationRule.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\NestedRules","p":"Illuminate/Validation/NestedRules.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\NotPwnedVerifier","p":"Illuminate/Validation/NotPwnedVerifier.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\PresenceVerifierInterface","p":"Illuminate/Validation/PresenceVerifierInterface.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\Rule","p":"Illuminate/Validation/Rule.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"T","n":"Illuminate\\Validation\\Rules\\DatabaseRule","p":"Illuminate/Validation/Rules/DatabaseRule.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\Dimensions","p":"Illuminate/Validation/Rules/Dimensions.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\Enum","p":"Illuminate/Validation/Rules/Enum.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\ExcludeIf","p":"Illuminate/Validation/Rules/ExcludeIf.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\Exists","p":"Illuminate/Validation/Rules/Exists.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\File","p":"Illuminate/Validation/Rules/File.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\ImageFile","p":"Illuminate/Validation/Rules/ImageFile.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\In","p":"Illuminate/Validation/Rules/In.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\NotIn","p":"Illuminate/Validation/Rules/NotIn.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\Password","p":"Illuminate/Validation/Rules/Password.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\ProhibitedIf","p":"Illuminate/Validation/Rules/ProhibitedIf.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\RequiredIf","p":"Illuminate/Validation/Rules/RequiredIf.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\Rules\\Unique","p":"Illuminate/Validation/Rules/Unique.html","d":null,"f":{"n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"}},{"t":"C","n":"Illuminate\\Validation\\UnauthorizedException","p":"Illuminate/Validation/UnauthorizedException.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"T","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html","d":"<p>Provides default implementation of ValidatesWhenResolved contract.</p>","f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\ValidationData","p":"Illuminate/Validation/ValidationData.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\ValidationException","p":"Illuminate/Validation/ValidationException.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\ValidationRuleParser","p":"Illuminate/Validation/ValidationRuleParser.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\ValidationServiceProvider","p":"Illuminate/Validation/ValidationServiceProvider.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\Validation\\Validator","p":"Illuminate/Validation/Validator.html","d":null,"f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"C","n":"Illuminate\\View\\AnonymousComponent","p":"Illuminate/View/AnonymousComponent.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\AppendableAttributeValue","p":"Illuminate/View/AppendableAttributeValue.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\Compilers\\BladeCompiler","p":"Illuminate/View/Compilers/BladeCompiler.html","d":null,"f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"C","n":"Illuminate\\View\\Compilers\\Compiler","p":"Illuminate/View/Compilers/Compiler.html","d":null,"f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"C","n":"Illuminate\\View\\Compilers\\CompilerInterface","p":"Illuminate/View/Compilers/CompilerInterface.html","d":null,"f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"C","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler","p":"Illuminate/View/Compilers/ComponentTagCompiler.html","d":"","f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesClasses","p":"Illuminate/View/Compilers/Concerns/CompilesClasses.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComments","p":"Illuminate/View/Compilers/Concerns/CompilesComments.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesErrors","p":"Illuminate/View/Compilers/Concerns/CompilesErrors.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesFragments","p":"Illuminate/View/Compilers/Concerns/CompilesFragments.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesHelpers","p":"Illuminate/View/Compilers/Concerns/CompilesHelpers.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesInjections","p":"Illuminate/View/Compilers/Concerns/CompilesInjections.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesJs","p":"Illuminate/View/Compilers/Concerns/CompilesJs.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesJson","p":"Illuminate/View/Compilers/Concerns/CompilesJson.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesRawPhp","p":"Illuminate/View/Compilers/Concerns/CompilesRawPhp.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStyles","p":"Illuminate/View/Compilers/Concerns/CompilesStyles.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesTranslations","p":"Illuminate/View/Compilers/Concerns/CompilesTranslations.html","d":null,"f":{"n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"}},{"t":"C","n":"Illuminate\\View\\Component","p":"Illuminate/View/Component.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ComponentAttributeBag","p":"Illuminate/View/ComponentAttributeBag.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ComponentSlot","p":"Illuminate/View/ComponentSlot.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesComponents","p":"Illuminate/View/Concerns/ManagesComponents.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesEvents","p":"Illuminate/View/Concerns/ManagesEvents.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesFragments","p":"Illuminate/View/Concerns/ManagesFragments.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesLayouts","p":"Illuminate/View/Concerns/ManagesLayouts.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesLoops","p":"Illuminate/View/Concerns/ManagesLoops.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesStacks","p":"Illuminate/View/Concerns/ManagesStacks.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"T","n":"Illuminate\\View\\Concerns\\ManagesTranslations","p":"Illuminate/View/Concerns/ManagesTranslations.html","d":null,"f":{"n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"}},{"t":"C","n":"Illuminate\\View\\DynamicComponent","p":"Illuminate/View/DynamicComponent.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\CompilerEngine","p":"Illuminate/View/Engines/CompilerEngine.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\Engine","p":"Illuminate/View/Engines/Engine.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\EngineResolver","p":"Illuminate/View/Engines/EngineResolver.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\FileEngine","p":"Illuminate/View/Engines/FileEngine.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Engines\\PhpEngine","p":"Illuminate/View/Engines/PhpEngine.html","d":null,"f":{"n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"}},{"t":"C","n":"Illuminate\\View\\Factory","p":"Illuminate/View/Factory.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\FileViewFinder","p":"Illuminate/View/FileViewFinder.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\InvokableComponentVariable","p":"Illuminate/View/InvokableComponentVariable.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\Middleware\\ShareErrorsFromSession","p":"Illuminate/View/Middleware/ShareErrorsFromSession.html","d":null,"f":{"n":"Illuminate\\View\\Middleware","p":"Illuminate/View/Middleware.html"}},{"t":"C","n":"Illuminate\\View\\View","p":"Illuminate/View/View.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ViewException","p":"Illuminate/View/ViewException.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ViewFinderInterface","p":"Illuminate/View/ViewFinderInterface.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ViewName","p":"Illuminate/View/ViewName.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"C","n":"Illuminate\\View\\ViewServiceProvider","p":"Illuminate/View/ViewServiceProvider.html","d":null,"f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"I","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html","f":{"n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"}},{"t":"I","n":"Illuminate\\Bus\\BatchRepository","p":"Illuminate/Bus/BatchRepository.html","f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"I","n":"Illuminate\\Bus\\PrunableBatchRepository","p":"Illuminate/Bus/PrunableBatchRepository.html","f":{"n":"Illuminate\\Bus","p":"Illuminate/Bus.html"}},{"t":"I","n":"Illuminate\\Console\\CommandMutex","p":"Illuminate/Console/CommandMutex.html","f":{"n":"Illuminate\\Console","p":"Illuminate/Console.html"}},{"t":"I","n":"Illuminate\\Console\\Contracts\\NewLineAware","p":"Illuminate/Console/Contracts/NewLineAware.html","f":{"n":"Illuminate\\Console\\Contracts","p":"Illuminate/Console/Contracts.html"}},{"t":"I","n":"Illuminate\\Console\\Scheduling\\CacheAware","p":"Illuminate/Console/Scheduling/CacheAware.html","f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"I","n":"Illuminate\\Console\\Scheduling\\EventMutex","p":"Illuminate/Console/Scheduling/EventMutex.html","f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"I","n":"Illuminate\\Console\\Scheduling\\SchedulingMutex","p":"Illuminate/Console/Scheduling/SchedulingMutex.html","f":{"n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Access\\Authorizable","p":"Illuminate/Contracts/Auth/Access/Authorizable.html","f":{"n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Access\\Gate","p":"Illuminate/Contracts/Auth/Access/Gate.html","f":{"n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Authenticatable","p":"Illuminate/Contracts/Auth/Authenticatable.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\CanResetPassword","p":"Illuminate/Contracts/Auth/CanResetPassword.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Factory","p":"Illuminate/Contracts/Auth/Factory.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Guard","p":"Illuminate/Contracts/Auth/Guard.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\Middleware\\AuthenticatesRequests","p":"Illuminate/Contracts/Auth/Middleware/AuthenticatesRequests.html","f":{"n":"Illuminate\\Contracts\\Auth\\Middleware","p":"Illuminate/Contracts/Auth/Middleware.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\PasswordBroker","p":"Illuminate/Contracts/Auth/PasswordBroker.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\PasswordBrokerFactory","p":"Illuminate/Contracts/Auth/PasswordBrokerFactory.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\StatefulGuard","p":"Illuminate/Contracts/Auth/StatefulGuard.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Auth\\UserProvider","p":"Illuminate/Contracts/Auth/UserProvider.html","f":{"n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\Factory","p":"Illuminate/Contracts/Broadcasting/Factory.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\HasBroadcastChannel","p":"Illuminate/Contracts/Broadcasting/HasBroadcastChannel.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBeUnique","p":"Illuminate/Contracts/Broadcasting/ShouldBeUnique.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcast.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcastNow","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcastNow.html","f":{"n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"}},{"t":"I","n":"Illuminate\\Contracts\\Bus\\Dispatcher","p":"Illuminate/Contracts/Bus/Dispatcher.html","f":{"n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"}},{"t":"I","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html","f":{"n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cache\\Factory","p":"Illuminate/Contracts/Cache/Factory.html","f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cache\\Lock","p":"Illuminate/Contracts/Cache/Lock.html","f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cache\\LockProvider","p":"Illuminate/Contracts/Cache/LockProvider.html","f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cache\\Repository","p":"Illuminate/Contracts/Cache/Repository.html","f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cache\\Store","p":"Illuminate/Contracts/Cache/Store.html","f":{"n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"}},{"t":"I","n":"Illuminate\\Contracts\\Config\\Repository","p":"Illuminate/Contracts/Config/Repository.html","f":{"n":"Illuminate\\Contracts\\Config","p":"Illuminate/Contracts/Config.html"}},{"t":"I","n":"Illuminate\\Contracts\\Console\\Application","p":"Illuminate/Contracts/Console/Application.html","f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"I","n":"Illuminate\\Contracts\\Console\\Isolatable","p":"Illuminate/Contracts/Console/Isolatable.html","f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"I","n":"Illuminate\\Contracts\\Console\\Kernel","p":"Illuminate/Contracts/Console/Kernel.html","f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"I","n":"Illuminate\\Contracts\\Console\\PromptsForMissingInput","p":"Illuminate/Contracts/Console/PromptsForMissingInput.html","f":{"n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"}},{"t":"I","n":"Illuminate\\Contracts\\Container\\Container","p":"Illuminate/Contracts/Container/Container.html","f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"I","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html","f":{"n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cookie\\Factory","p":"Illuminate/Contracts/Cookie/Factory.html","f":{"n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"}},{"t":"I","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory","p":"Illuminate/Contracts/Cookie/QueueingFactory.html","f":{"n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Eloquent\\Builder","p":"Illuminate/Contracts/Database/Eloquent/Builder.html","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Eloquent\\Castable","p":"Illuminate/Contracts/Database/Eloquent/Castable.html","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsAttributes","p":"Illuminate/Contracts/Database/Eloquent/CastsAttributes.html","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsInboundAttributes","p":"Illuminate/Contracts/Database/Eloquent/CastsInboundAttributes.html","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Eloquent\\DeviatesCastableAttributes","p":"Illuminate/Contracts/Database/Eloquent/DeviatesCastableAttributes.html","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Eloquent\\SerializesCastableAttributes","p":"Illuminate/Contracts/Database/Eloquent/SerializesCastableAttributes.html","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Eloquent\\SupportsPartialRelations","p":"Illuminate/Contracts/Database/Eloquent/SupportsPartialRelations.html","f":{"n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Events\\MigrationEvent","p":"Illuminate/Contracts/Database/Events/MigrationEvent.html","f":{"n":"Illuminate\\Contracts\\Database\\Events","p":"Illuminate/Contracts/Database/Events.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Query\\Builder","p":"Illuminate/Contracts/Database/Query/Builder.html","f":{"n":"Illuminate\\Contracts\\Database\\Query","p":"Illuminate/Contracts/Database/Query.html"}},{"t":"I","n":"Illuminate\\Contracts\\Database\\Query\\Expression","p":"Illuminate/Contracts/Database/Query/Expression.html","f":{"n":"Illuminate\\Contracts\\Database\\Query","p":"Illuminate/Contracts/Database/Query.html"}},{"t":"I","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler","p":"Illuminate/Contracts/Debug/ExceptionHandler.html","f":{"n":"Illuminate\\Contracts\\Debug","p":"Illuminate/Contracts/Debug.html"}},{"t":"I","n":"Illuminate\\Contracts\\Encryption\\Encrypter","p":"Illuminate/Contracts/Encryption/Encrypter.html","f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"I","n":"Illuminate\\Contracts\\Encryption\\StringEncrypter","p":"Illuminate/Contracts/Encryption/StringEncrypter.html","f":{"n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"}},{"t":"I","n":"Illuminate\\Contracts\\Events\\Dispatcher","p":"Illuminate/Contracts/Events/Dispatcher.html","f":{"n":"Illuminate\\Contracts\\Events","p":"Illuminate/Contracts/Events.html"}},{"t":"I","n":"Illuminate\\Contracts\\Filesystem\\Cloud","p":"Illuminate/Contracts/Filesystem/Cloud.html","f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"I","n":"Illuminate\\Contracts\\Filesystem\\Factory","p":"Illuminate/Contracts/Filesystem/Factory.html","f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"I","n":"Illuminate\\Contracts\\Filesystem\\Filesystem","p":"Illuminate/Contracts/Filesystem/Filesystem.html","f":{"n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"}},{"t":"I","n":"Illuminate\\Contracts\\Foundation\\Application","p":"Illuminate/Contracts/Foundation/Application.html","f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Foundation\\CachesConfiguration","p":"Illuminate/Contracts/Foundation/CachesConfiguration.html","f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Foundation\\CachesRoutes","p":"Illuminate/Contracts/Foundation/CachesRoutes.html","f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Foundation\\ExceptionRenderer","p":"Illuminate/Contracts/Foundation/ExceptionRenderer.html","f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html","f":{"n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Hashing\\Hasher","p":"Illuminate/Contracts/Hashing/Hasher.html","f":{"n":"Illuminate\\Contracts\\Hashing","p":"Illuminate/Contracts/Hashing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Http\\Kernel","p":"Illuminate/Contracts/Http/Kernel.html","f":{"n":"Illuminate\\Contracts\\Http","p":"Illuminate/Contracts/Http.html"}},{"t":"I","n":"Illuminate\\Contracts\\Mail\\Attachable","p":"Illuminate/Contracts/Mail/Attachable.html","f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"I","n":"Illuminate\\Contracts\\Mail\\Factory","p":"Illuminate/Contracts/Mail/Factory.html","f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"I","n":"Illuminate\\Contracts\\Mail\\MailQueue","p":"Illuminate/Contracts/Mail/MailQueue.html","f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"I","n":"Illuminate\\Contracts\\Mail\\Mailable","p":"Illuminate/Contracts/Mail/Mailable.html","f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"I","n":"Illuminate\\Contracts\\Mail\\Mailer","p":"Illuminate/Contracts/Mail/Mailer.html","f":{"n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"}},{"t":"I","n":"Illuminate\\Contracts\\Notifications\\Dispatcher","p":"Illuminate/Contracts/Notifications/Dispatcher.html","f":{"n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"}},{"t":"I","n":"Illuminate\\Contracts\\Notifications\\Factory","p":"Illuminate/Contracts/Notifications/Factory.html","f":{"n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator","p":"Illuminate/Contracts/Pagination/CursorPaginator.html","f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html","f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pagination\\Paginator","p":"Illuminate/Contracts/Pagination/Paginator.html","f":{"n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pipeline\\Hub","p":"Illuminate/Contracts/Pipeline/Hub.html","f":{"n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"}},{"t":"I","n":"Illuminate\\Contracts\\Pipeline\\Pipeline","p":"Illuminate/Contracts/Pipeline/Pipeline.html","f":{"n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"}},{"t":"I","n":"Illuminate\\Contracts\\Process\\InvokedProcess","p":"Illuminate/Contracts/Process/InvokedProcess.html","f":{"n":"Illuminate\\Contracts\\Process","p":"Illuminate/Contracts/Process.html"}},{"t":"I","n":"Illuminate\\Contracts\\Process\\ProcessResult","p":"Illuminate/Contracts/Process/ProcessResult.html","f":{"n":"Illuminate\\Contracts\\Process","p":"Illuminate/Contracts/Process.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\ClearableQueue","p":"Illuminate/Contracts/Queue/ClearableQueue.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\EntityResolver","p":"Illuminate/Contracts/Queue/EntityResolver.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\Factory","p":"Illuminate/Contracts/Queue/Factory.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\Job","p":"Illuminate/Contracts/Queue/Job.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\Monitor","p":"Illuminate/Contracts/Queue/Monitor.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\Queue","p":"Illuminate/Contracts/Queue/Queue.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\QueueableCollection","p":"Illuminate/Contracts/Queue/QueueableCollection.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\QueueableEntity","p":"Illuminate/Contracts/Queue/QueueableEntity.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\ShouldBeEncrypted","p":"Illuminate/Contracts/Queue/ShouldBeEncrypted.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\ShouldBeUnique","p":"Illuminate/Contracts/Queue/ShouldBeUnique.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\ShouldBeUniqueUntilProcessing","p":"Illuminate/Contracts/Queue/ShouldBeUniqueUntilProcessing.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Queue\\ShouldQueue","p":"Illuminate/Contracts/Queue/ShouldQueue.html","f":{"n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"}},{"t":"I","n":"Illuminate\\Contracts\\Redis\\Connection","p":"Illuminate/Contracts/Redis/Connection.html","f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"I","n":"Illuminate\\Contracts\\Redis\\Connector","p":"Illuminate/Contracts/Redis/Connector.html","f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"I","n":"Illuminate\\Contracts\\Redis\\Factory","p":"Illuminate/Contracts/Redis/Factory.html","f":{"n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar","p":"Illuminate/Contracts/Routing/BindingRegistrar.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\Registrar","p":"Illuminate/Contracts/Routing/Registrar.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\ResponseFactory","p":"Illuminate/Contracts/Routing/ResponseFactory.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\UrlGenerator","p":"Illuminate/Contracts/Routing/UrlGenerator.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Routing\\UrlRoutable","p":"Illuminate/Contracts/Routing/UrlRoutable.html","f":{"n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"}},{"t":"I","n":"Illuminate\\Contracts\\Session\\Middleware\\AuthenticatesSessions","p":"Illuminate/Contracts/Session/Middleware/AuthenticatesSessions.html","f":{"n":"Illuminate\\Contracts\\Session\\Middleware","p":"Illuminate/Contracts/Session/Middleware.html"}},{"t":"I","n":"Illuminate\\Contracts\\Session\\Session","p":"Illuminate/Contracts/Session/Session.html","f":{"n":"Illuminate\\Contracts\\Session","p":"Illuminate/Contracts/Session.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Arrayable","p":"Illuminate/Contracts/Support/Arrayable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\CanBeEscapedWhenCastToString","p":"Illuminate/Contracts/Support/CanBeEscapedWhenCastToString.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\DeferrableProvider","p":"Illuminate/Contracts/Support/DeferrableProvider.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\DeferringDisplayableValue","p":"Illuminate/Contracts/Support/DeferringDisplayableValue.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Htmlable","p":"Illuminate/Contracts/Support/Htmlable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Jsonable","p":"Illuminate/Contracts/Support/Jsonable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\MessageBag","p":"Illuminate/Contracts/Support/MessageBag.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\MessageProvider","p":"Illuminate/Contracts/Support/MessageProvider.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Renderable","p":"Illuminate/Contracts/Support/Renderable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\Responsable","p":"Illuminate/Contracts/Support/Responsable.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Support\\ValidatedData","p":"Illuminate/Contracts/Support/ValidatedData.html","f":{"n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"}},{"t":"I","n":"Illuminate\\Contracts\\Translation\\HasLocalePreference","p":"Illuminate/Contracts/Translation/HasLocalePreference.html","f":{"n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Translation\\Loader","p":"Illuminate/Contracts/Translation/Loader.html","f":{"n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Translation\\Translator","p":"Illuminate/Contracts/Translation/Translator.html","f":{"n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\DataAwareRule","p":"Illuminate/Contracts/Validation/DataAwareRule.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\Factory","p":"Illuminate/Contracts/Validation/Factory.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\ImplicitRule","p":"Illuminate/Contracts/Validation/ImplicitRule.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\InvokableRule","p":"Illuminate/Contracts/Validation/InvokableRule.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\Rule","p":"Illuminate/Contracts/Validation/Rule.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\UncompromisedVerifier","p":"Illuminate/Contracts/Validation/UncompromisedVerifier.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\ValidatesWhenResolved","p":"Illuminate/Contracts/Validation/ValidatesWhenResolved.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\ValidationRule","p":"Illuminate/Contracts/Validation/ValidationRule.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\Validator","p":"Illuminate/Contracts/Validation/Validator.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\Validation\\ValidatorAwareRule","p":"Illuminate/Contracts/Validation/ValidatorAwareRule.html","f":{"n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"}},{"t":"I","n":"Illuminate\\Contracts\\View\\Engine","p":"Illuminate/Contracts/View/Engine.html","f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"I","n":"Illuminate\\Contracts\\View\\Factory","p":"Illuminate/Contracts/View/Factory.html","f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"I","n":"Illuminate\\Contracts\\View\\View","p":"Illuminate/Contracts/View/View.html","f":{"n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"}},{"t":"I","n":"Illuminate\\Database\\ConnectionInterface","p":"Illuminate/Database/ConnectionInterface.html","f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"I","n":"Illuminate\\Database\\ConnectionResolverInterface","p":"Illuminate/Database/ConnectionResolverInterface.html","f":{"n":"Illuminate\\Database","p":"Illuminate/Database.html"}},{"t":"I","n":"Illuminate\\Database\\Connectors\\ConnectorInterface","p":"Illuminate/Database/Connectors/ConnectorInterface.html","f":{"n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"}},{"t":"I","n":"Illuminate\\Database\\Eloquent\\Scope","p":"Illuminate/Database/Eloquent/Scope.html","f":{"n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"}},{"t":"I","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html","f":{"n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"}},{"t":"I","n":"Illuminate\\Http\\Resources\\PotentiallyMissing","p":"Illuminate/Http/Resources/PotentiallyMissing.html","f":{"n":"Illuminate\\Http\\Resources","p":"Illuminate/Http/Resources.html"}},{"t":"I","n":"Illuminate\\Queue\\Connectors\\ConnectorInterface","p":"Illuminate/Queue/Connectors/ConnectorInterface.html","f":{"n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"}},{"t":"I","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html","f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"I","n":"Illuminate\\Queue\\Failed\\PrunableFailedJobProvider","p":"Illuminate/Queue/Failed/PrunableFailedJobProvider.html","f":{"n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"}},{"t":"I","n":"Illuminate\\Routing\\Contracts\\CallableDispatcher","p":"Illuminate/Routing/Contracts/CallableDispatcher.html","f":{"n":"Illuminate\\Routing\\Contracts","p":"Illuminate/Routing/Contracts.html"}},{"t":"I","n":"Illuminate\\Routing\\Contracts\\ControllerDispatcher","p":"Illuminate/Routing/Contracts/ControllerDispatcher.html","f":{"n":"Illuminate\\Routing\\Contracts","p":"Illuminate/Routing/Contracts.html"}},{"t":"I","n":"Illuminate\\Routing\\Controllers\\HasMiddleware","p":"Illuminate/Routing/Controllers/HasMiddleware.html","f":{"n":"Illuminate\\Routing\\Controllers","p":"Illuminate/Routing/Controllers.html"}},{"t":"I","n":"Illuminate\\Routing\\Matching\\ValidatorInterface","p":"Illuminate/Routing/Matching/ValidatorInterface.html","f":{"n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"}},{"t":"I","n":"Illuminate\\Routing\\RouteCollectionInterface","p":"Illuminate/Routing/RouteCollectionInterface.html","f":{"n":"Illuminate\\Routing","p":"Illuminate/Routing.html"}},{"t":"I","n":"Illuminate\\Session\\ExistenceAwareInterface","p":"Illuminate/Session/ExistenceAwareInterface.html","f":{"n":"Illuminate\\Session","p":"Illuminate/Session.html"}},{"t":"I","n":"Illuminate\\Support\\Enumerable","p":"Illuminate/Support/Enumerable.html","f":{"n":"Illuminate\\Support","p":"Illuminate/Support.html"}},{"t":"I","n":"Illuminate\\Support\\Testing\\Fakes\\Fake","p":"Illuminate/Support/Testing/Fakes/Fake.html","f":{"n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"}},{"t":"I","n":"Illuminate\\Validation\\DatabasePresenceVerifierInterface","p":"Illuminate/Validation/DatabasePresenceVerifierInterface.html","f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"I","n":"Illuminate\\Validation\\PresenceVerifierInterface","p":"Illuminate/Validation/PresenceVerifierInterface.html","f":{"n":"Illuminate\\Validation","p":"Illuminate/Validation.html"}},{"t":"I","n":"Illuminate\\View\\Compilers\\CompilerInterface","p":"Illuminate/View/Compilers/CompilerInterface.html","f":{"n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"}},{"t":"I","n":"Illuminate\\View\\ViewFinderInterface","p":"Illuminate/View/ViewFinderInterface.html","f":{"n":"Illuminate\\View","p":"Illuminate/View.html"}},{"t":"M","n":"Illuminate\\Auth\\Access\\AuthorizationException::__construct","p":"Illuminate/Auth/Access/AuthorizationException.html#method___construct","d":"<p>Create a new authorization exception instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\AuthorizationException::response","p":"Illuminate/Auth/Access/AuthorizationException.html#method_response","d":"<p>Get the response from the gate.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\AuthorizationException::setResponse","p":"Illuminate/Auth/Access/AuthorizationException.html#method_setResponse","d":"<p>Set the response from the gate.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\AuthorizationException::withStatus","p":"Illuminate/Auth/Access/AuthorizationException.html#method_withStatus","d":"<p>Set the HTTP response status code.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\AuthorizationException::asNotFound","p":"Illuminate/Auth/Access/AuthorizationException.html#method_asNotFound","d":"<p>Set the HTTP response status code to 404.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\AuthorizationException::hasStatus","p":"Illuminate/Auth/Access/AuthorizationException.html#method_hasStatus","d":"<p>Determine if the HTTP status code has been set.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\AuthorizationException::status","p":"Illuminate/Auth/Access/AuthorizationException.html#method_status","d":"<p>Get the HTTP status code.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\AuthorizationException::toResponse","p":"Illuminate/Auth/Access/AuthorizationException.html#method_toResponse","d":"<p>Create a deny response object from this exception.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Events\\GateEvaluated::__construct","p":"Illuminate/Auth/Access/Events/GateEvaluated.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::__construct","p":"Illuminate/Auth/Access/Gate.html#method___construct","d":"<p>Create a new gate instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::has","p":"Illuminate/Auth/Access/Gate.html#method_has","d":"<p>Determine if a given ability has been defined.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::allowIf","p":"Illuminate/Auth/Access/Gate.html#method_allowIf","d":"<p>Perform an on-demand authorization check. Throw an authorization exception if the condition or callback is false.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::denyIf","p":"Illuminate/Auth/Access/Gate.html#method_denyIf","d":"<p>Perform an on-demand authorization check. Throw an authorization exception if the condition or callback is true.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::authorizeOnDemand","p":"Illuminate/Auth/Access/Gate.html#method_authorizeOnDemand","d":"<p>Authorize a given condition or callback.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::define","p":"Illuminate/Auth/Access/Gate.html#method_define","d":"<p>Define a new ability.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resource","p":"Illuminate/Auth/Access/Gate.html#method_resource","d":"<p>Define abilities for a resource.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::buildAbilityCallback","p":"Illuminate/Auth/Access/Gate.html#method_buildAbilityCallback","d":"<p>Create the ability callback for a callback string.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::policy","p":"Illuminate/Auth/Access/Gate.html#method_policy","d":"<p>Define a policy class for a given class type.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::before","p":"Illuminate/Auth/Access/Gate.html#method_before","d":"<p>Register a callback to run before all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::after","p":"Illuminate/Auth/Access/Gate.html#method_after","d":"<p>Register a callback to run after all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::allows","p":"Illuminate/Auth/Access/Gate.html#method_allows","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::denies","p":"Illuminate/Auth/Access/Gate.html#method_denies","d":"<p>Determine if the given ability should be denied for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::check","p":"Illuminate/Auth/Access/Gate.html#method_check","d":"<p>Determine if all of the given abilities should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::any","p":"Illuminate/Auth/Access/Gate.html#method_any","d":"<p>Determine if any one of the given abilities should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::none","p":"Illuminate/Auth/Access/Gate.html#method_none","d":"<p>Determine if all of the given abilities should be denied for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::authorize","p":"Illuminate/Auth/Access/Gate.html#method_authorize","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::inspect","p":"Illuminate/Auth/Access/Gate.html#method_inspect","d":"<p>Inspect the user for the given ability.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::raw","p":"Illuminate/Auth/Access/Gate.html#method_raw","d":"<p>Get the raw result from the authorization callback.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::canBeCalledWithUser","p":"Illuminate/Auth/Access/Gate.html#method_canBeCalledWithUser","d":"<p>Determine whether the callback/method can be called with the given user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::methodAllowsGuests","p":"Illuminate/Auth/Access/Gate.html#method_methodAllowsGuests","d":"<p>Determine if the given class method allows guests.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callbackAllowsGuests","p":"Illuminate/Auth/Access/Gate.html#method_callbackAllowsGuests","d":"<p>Determine if the callback allows guests.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::parameterAllowsGuests","p":"Illuminate/Auth/Access/Gate.html#method_parameterAllowsGuests","d":"<p>Determine if the given parameter allows guests.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callAuthCallback","p":"Illuminate/Auth/Access/Gate.html#method_callAuthCallback","d":"<p>Resolve and call the appropriate authorization callback.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callBeforeCallbacks","p":"Illuminate/Auth/Access/Gate.html#method_callBeforeCallbacks","d":"<p>Call all of the before callbacks and return if a result is given.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callAfterCallbacks","p":"Illuminate/Auth/Access/Gate.html#method_callAfterCallbacks","d":"<p>Call all of the after callbacks with check result.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::dispatchGateEvaluatedEvent","p":"Illuminate/Auth/Access/Gate.html#method_dispatchGateEvaluatedEvent","d":"<p>Dispatch a gate evaluation event.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resolveAuthCallback","p":"Illuminate/Auth/Access/Gate.html#method_resolveAuthCallback","d":"<p>Resolve the callable for the given ability and arguments.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::getPolicyFor","p":"Illuminate/Auth/Access/Gate.html#method_getPolicyFor","d":"<p>Get a policy instance for a given class.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::guessPolicyName","p":"Illuminate/Auth/Access/Gate.html#method_guessPolicyName","d":"<p>Guess the policy name for the given class.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::guessPolicyNamesUsing","p":"Illuminate/Auth/Access/Gate.html#method_guessPolicyNamesUsing","d":"<p>Specify a callback to be used to guess policy names.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resolvePolicy","p":"Illuminate/Auth/Access/Gate.html#method_resolvePolicy","d":"<p>Build a policy class instance of the given type.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resolvePolicyCallback","p":"Illuminate/Auth/Access/Gate.html#method_resolvePolicyCallback","d":"<p>Resolve the callback for a policy check.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callPolicyBefore","p":"Illuminate/Auth/Access/Gate.html#method_callPolicyBefore","d":"<p>Call the &quot;before&quot; method on the given policy, if applicable.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::callPolicyMethod","p":"Illuminate/Auth/Access/Gate.html#method_callPolicyMethod","d":"<p>Call the appropriate method on the given policy.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::formatAbilityToMethod","p":"Illuminate/Auth/Access/Gate.html#method_formatAbilityToMethod","d":"<p>Format the policy ability into a method name.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::forUser","p":"Illuminate/Auth/Access/Gate.html#method_forUser","d":"<p>Get a gate instance for the given user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::resolveUser","p":"Illuminate/Auth/Access/Gate.html#method_resolveUser","d":"<p>Resolve the user from the user resolver.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::abilities","p":"Illuminate/Auth/Access/Gate.html#method_abilities","d":"<p>Get all of the defined abilities.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::policies","p":"Illuminate/Auth/Access/Gate.html#method_policies","d":"<p>Get all of the defined policies.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Gate::setContainer","p":"Illuminate/Auth/Access/Gate.html#method_setContainer","d":"<p>Set the container instance used by the gate.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\HandlesAuthorization::allow","p":"Illuminate/Auth/Access/HandlesAuthorization.html#method_allow","d":"<p>Create a new access response.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\HandlesAuthorization::deny","p":"Illuminate/Auth/Access/HandlesAuthorization.html#method_deny","d":"<p>Throws an unauthorized exception.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\HandlesAuthorization::denyWithStatus","p":"Illuminate/Auth/Access/HandlesAuthorization.html#method_denyWithStatus","d":"<p>Deny with a HTTP status code.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\HandlesAuthorization::denyAsNotFound","p":"Illuminate/Auth/Access/HandlesAuthorization.html#method_denyAsNotFound","d":"<p>Deny with a 404 HTTP status code.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::__construct","p":"Illuminate/Auth/Access/Response.html#method___construct","d":"<p>Create a new response.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::allow","p":"Illuminate/Auth/Access/Response.html#method_allow","d":"<p>Create a new &quot;allow&quot; Response.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::deny","p":"Illuminate/Auth/Access/Response.html#method_deny","d":"<p>Create a new &quot;deny&quot; Response.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::denyWithStatus","p":"Illuminate/Auth/Access/Response.html#method_denyWithStatus","d":"<p>Create a new &quot;deny&quot; Response with a HTTP status code.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::denyAsNotFound","p":"Illuminate/Auth/Access/Response.html#method_denyAsNotFound","d":"<p>Create a new &quot;deny&quot; Response with a 404 HTTP status code.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::allowed","p":"Illuminate/Auth/Access/Response.html#method_allowed","d":"<p>Determine if the response was allowed.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::denied","p":"Illuminate/Auth/Access/Response.html#method_denied","d":"<p>Determine if the response was denied.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::message","p":"Illuminate/Auth/Access/Response.html#method_message","d":"<p>Get the response message.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::code","p":"Illuminate/Auth/Access/Response.html#method_code","d":"<p>Get the response code / reason.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::authorize","p":"Illuminate/Auth/Access/Response.html#method_authorize","d":"<p>Throw authorization exception if response was denied.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::withStatus","p":"Illuminate/Auth/Access/Response.html#method_withStatus","d":"<p>Set the HTTP response status code.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::asNotFound","p":"Illuminate/Auth/Access/Response.html#method_asNotFound","d":"<p>Set the HTTP response status code to 404.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::status","p":"Illuminate/Auth/Access/Response.html#method_status","d":"<p>Get the HTTP status code.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::toArray","p":"Illuminate/Auth/Access/Response.html#method_toArray","d":"<p>Convert the response to an array.</p>"},{"t":"M","n":"Illuminate\\Auth\\Access\\Response::__toString","p":"Illuminate/Auth/Access/Response.html#method___toString","d":"<p>Get the string representation of the message.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::__construct","p":"Illuminate/Auth/AuthManager.html#method___construct","d":"<p>Create a new Auth manager instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::guard","p":"Illuminate/Auth/AuthManager.html#method_guard","d":"<p>Attempt to get the guard from the local cache.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::resolve","p":"Illuminate/Auth/AuthManager.html#method_resolve","d":"<p>Resolve the given guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::callCustomCreator","p":"Illuminate/Auth/AuthManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::createSessionDriver","p":"Illuminate/Auth/AuthManager.html#method_createSessionDriver","d":"<p>Create a session based authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::createTokenDriver","p":"Illuminate/Auth/AuthManager.html#method_createTokenDriver","d":"<p>Create a token based authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::getConfig","p":"Illuminate/Auth/AuthManager.html#method_getConfig","d":"<p>Get the guard configuration.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::getDefaultDriver","p":"Illuminate/Auth/AuthManager.html#method_getDefaultDriver","d":"<p>Get the default authentication driver name.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::shouldUse","p":"Illuminate/Auth/AuthManager.html#method_shouldUse","d":"<p>Set the default guard driver the factory should serve.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::setDefaultDriver","p":"Illuminate/Auth/AuthManager.html#method_setDefaultDriver","d":"<p>Set the default authentication driver name.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::viaRequest","p":"Illuminate/Auth/AuthManager.html#method_viaRequest","d":"<p>Register a new callback based request guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::userResolver","p":"Illuminate/Auth/AuthManager.html#method_userResolver","d":"<p>Get the user resolver callback.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::resolveUsersUsing","p":"Illuminate/Auth/AuthManager.html#method_resolveUsersUsing","d":"<p>Set the callback to be used to resolve users.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::extend","p":"Illuminate/Auth/AuthManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::provider","p":"Illuminate/Auth/AuthManager.html#method_provider","d":"<p>Register a custom provider creator Closure.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::hasResolvedGuards","p":"Illuminate/Auth/AuthManager.html#method_hasResolvedGuards","d":"<p>Determines if any guards have already been resolved.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::forgetGuards","p":"Illuminate/Auth/AuthManager.html#method_forgetGuards","d":"<p>Forget all of the resolved guard instances.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::setApplication","p":"Illuminate/Auth/AuthManager.html#method_setApplication","d":"<p>Set the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthManager::__call","p":"Illuminate/Auth/AuthManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::register","p":"Illuminate/Auth/AuthServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerAuthenticator","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerAuthenticator","d":"<p>Register the authenticator services.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerUserResolver","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerUserResolver","d":"<p>Register a resolver for the authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerAccessGate","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerAccessGate","d":"<p>Register the access gate service.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerRequirePassword","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerRequirePassword","d":"<p>Register a resolver for the authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerRequestRebindHandler","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerRequestRebindHandler","d":"<p>Handle the re-binding of the request binding.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthServiceProvider::registerEventRebindHandler","p":"Illuminate/Auth/AuthServiceProvider.html#method_registerEventRebindHandler","d":"<p>Handle the re-binding of the event dispatcher binding.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getAuthIdentifierName","p":"Illuminate/Auth/Authenticatable.html#method_getAuthIdentifierName","d":"<p>Get the name of the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getAuthIdentifier","p":"Illuminate/Auth/Authenticatable.html#method_getAuthIdentifier","d":"<p>Get the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getAuthIdentifierForBroadcasting","p":"Illuminate/Auth/Authenticatable.html#method_getAuthIdentifierForBroadcasting","d":"<p>Get the unique broadcast identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getAuthPassword","p":"Illuminate/Auth/Authenticatable.html#method_getAuthPassword","d":"<p>Get the password for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getRememberToken","p":"Illuminate/Auth/Authenticatable.html#method_getRememberToken","d":"<p>Get the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::setRememberToken","p":"Illuminate/Auth/Authenticatable.html#method_setRememberToken","d":"<p>Set the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Auth\\Authenticatable::getRememberTokenName","p":"Illuminate/Auth/Authenticatable.html#method_getRememberTokenName","d":"<p>Get the column name for the &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthenticationException::__construct","p":"Illuminate/Auth/AuthenticationException.html#method___construct","d":"<p>Create a new authentication exception.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthenticationException::guards","p":"Illuminate/Auth/AuthenticationException.html#method_guards","d":"<p>Get the guards that were checked.</p>"},{"t":"M","n":"Illuminate\\Auth\\AuthenticationException::redirectTo","p":"Illuminate/Auth/AuthenticationException.html#method_redirectTo","d":"<p>Get the path the user should be redirected to.</p>"},{"t":"M","n":"Illuminate\\Auth\\Console\\ClearResetsCommand::handle","p":"Illuminate/Auth/Console/ClearResetsCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Auth\\CreatesUserProviders::createUserProvider","p":"Illuminate/Auth/CreatesUserProviders.html#method_createUserProvider","d":"<p>Create the user provider implementation for the driver.</p>"},{"t":"M","n":"Illuminate\\Auth\\CreatesUserProviders::getProviderConfiguration","p":"Illuminate/Auth/CreatesUserProviders.html#method_getProviderConfiguration","d":"<p>Get the user provider configuration.</p>"},{"t":"M","n":"Illuminate\\Auth\\CreatesUserProviders::createDatabaseProvider","p":"Illuminate/Auth/CreatesUserProviders.html#method_createDatabaseProvider","d":"<p>Create an instance of the database user provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\CreatesUserProviders::createEloquentProvider","p":"Illuminate/Auth/CreatesUserProviders.html#method_createEloquentProvider","d":"<p>Create an instance of the Eloquent user provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\CreatesUserProviders::getDefaultUserProvider","p":"Illuminate/Auth/CreatesUserProviders.html#method_getDefaultUserProvider","d":"<p>Get the default user provider name.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::__construct","p":"Illuminate/Auth/DatabaseUserProvider.html#method___construct","d":"<p>Create a new database user provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::retrieveById","p":"Illuminate/Auth/DatabaseUserProvider.html#method_retrieveById","d":"<p>Retrieve a user by their unique identifier.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::retrieveByToken","p":"Illuminate/Auth/DatabaseUserProvider.html#method_retrieveByToken","d":"<p>Retrieve a user by their unique identifier and &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::updateRememberToken","p":"Illuminate/Auth/DatabaseUserProvider.html#method_updateRememberToken","d":"<p>Update the &quot;remember me&quot; token for the given user in storage.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::retrieveByCredentials","p":"Illuminate/Auth/DatabaseUserProvider.html#method_retrieveByCredentials","d":"<p>Retrieve a user by the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::getGenericUser","p":"Illuminate/Auth/DatabaseUserProvider.html#method_getGenericUser","d":"<p>Get the generic user.</p>"},{"t":"M","n":"Illuminate\\Auth\\DatabaseUserProvider::validateCredentials","p":"Illuminate/Auth/DatabaseUserProvider.html#method_validateCredentials","d":"<p>Validate a user against the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::__construct","p":"Illuminate/Auth/EloquentUserProvider.html#method___construct","d":"<p>Create a new database user provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::retrieveById","p":"Illuminate/Auth/EloquentUserProvider.html#method_retrieveById","d":"<p>Retrieve a user by their unique identifier.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::retrieveByToken","p":"Illuminate/Auth/EloquentUserProvider.html#method_retrieveByToken","d":"<p>Retrieve a user by their unique identifier and &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::updateRememberToken","p":"Illuminate/Auth/EloquentUserProvider.html#method_updateRememberToken","d":"<p>Update the &quot;remember me&quot; token for the given user in storage.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::retrieveByCredentials","p":"Illuminate/Auth/EloquentUserProvider.html#method_retrieveByCredentials","d":"<p>Retrieve a user by the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::validateCredentials","p":"Illuminate/Auth/EloquentUserProvider.html#method_validateCredentials","d":"<p>Validate a user against the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::newModelQuery","p":"Illuminate/Auth/EloquentUserProvider.html#method_newModelQuery","d":"<p>Get a new query builder for the model instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::createModel","p":"Illuminate/Auth/EloquentUserProvider.html#method_createModel","d":"<p>Create a new instance of the model.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::getHasher","p":"Illuminate/Auth/EloquentUserProvider.html#method_getHasher","d":"<p>Gets the hasher implementation.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::setHasher","p":"Illuminate/Auth/EloquentUserProvider.html#method_setHasher","d":"<p>Sets the hasher implementation.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::getModel","p":"Illuminate/Auth/EloquentUserProvider.html#method_getModel","d":"<p>Gets the name of the Eloquent user model.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::setModel","p":"Illuminate/Auth/EloquentUserProvider.html#method_setModel","d":"<p>Sets the name of the Eloquent user model.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::getQueryCallback","p":"Illuminate/Auth/EloquentUserProvider.html#method_getQueryCallback","d":"<p>Get the callback that modifies the query before retrieving users.</p>"},{"t":"M","n":"Illuminate\\Auth\\EloquentUserProvider::withQuery","p":"Illuminate/Auth/EloquentUserProvider.html#method_withQuery","d":"<p>Sets the callback to modify the query before retrieving users.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Attempting::__construct","p":"Illuminate/Auth/Events/Attempting.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Authenticated::__construct","p":"Illuminate/Auth/Events/Authenticated.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\CurrentDeviceLogout::__construct","p":"Illuminate/Auth/Events/CurrentDeviceLogout.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Failed::__construct","p":"Illuminate/Auth/Events/Failed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Lockout::__construct","p":"Illuminate/Auth/Events/Lockout.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Login::__construct","p":"Illuminate/Auth/Events/Login.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Logout::__construct","p":"Illuminate/Auth/Events/Logout.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\OtherDeviceLogout::__construct","p":"Illuminate/Auth/Events/OtherDeviceLogout.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\PasswordReset::__construct","p":"Illuminate/Auth/Events/PasswordReset.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Registered::__construct","p":"Illuminate/Auth/Events/Registered.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Validated::__construct","p":"Illuminate/Auth/Events/Validated.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Events\\Verified::__construct","p":"Illuminate/Auth/Events/Verified.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__construct","p":"Illuminate/Auth/GenericUser.html#method___construct","d":"<p>Create a new generic User object.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getAuthIdentifierName","p":"Illuminate/Auth/GenericUser.html#method_getAuthIdentifierName","d":"<p>Get the name of the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getAuthIdentifier","p":"Illuminate/Auth/GenericUser.html#method_getAuthIdentifier","d":"<p>Get the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getAuthPassword","p":"Illuminate/Auth/GenericUser.html#method_getAuthPassword","d":"<p>Get the password for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getRememberToken","p":"Illuminate/Auth/GenericUser.html#method_getRememberToken","d":"<p>Get the &quot;remember me&quot; token value.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::setRememberToken","p":"Illuminate/Auth/GenericUser.html#method_setRememberToken","d":"<p>Set the &quot;remember me&quot; token value.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::getRememberTokenName","p":"Illuminate/Auth/GenericUser.html#method_getRememberTokenName","d":"<p>Get the column name for the &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__get","p":"Illuminate/Auth/GenericUser.html#method___get","d":"<p>Dynamically access the user's attributes.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__set","p":"Illuminate/Auth/GenericUser.html#method___set","d":"<p>Dynamically set an attribute on the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__isset","p":"Illuminate/Auth/GenericUser.html#method___isset","d":"<p>Dynamically check if a value is set on the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GenericUser::__unset","p":"Illuminate/Auth/GenericUser.html#method___unset","d":"<p>Dynamically unset a value on the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::authenticate","p":"Illuminate/Auth/GuardHelpers.html#method_authenticate","d":"<p>Determine if the current user is authenticated. If not, throw an exception.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::hasUser","p":"Illuminate/Auth/GuardHelpers.html#method_hasUser","d":"<p>Determine if the guard has a user instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::check","p":"Illuminate/Auth/GuardHelpers.html#method_check","d":"<p>Determine if the current user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::guest","p":"Illuminate/Auth/GuardHelpers.html#method_guest","d":"<p>Determine if the current user is a guest.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::id","p":"Illuminate/Auth/GuardHelpers.html#method_id","d":"<p>Get the ID for the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::setUser","p":"Illuminate/Auth/GuardHelpers.html#method_setUser","d":"<p>Set the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::forgetUser","p":"Illuminate/Auth/GuardHelpers.html#method_forgetUser","d":"<p>Forget the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::getProvider","p":"Illuminate/Auth/GuardHelpers.html#method_getProvider","d":"<p>Get the user provider used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\GuardHelpers::setProvider","p":"Illuminate/Auth/GuardHelpers.html#method_setProvider","d":"<p>Set the user provider used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\Listeners\\SendEmailVerificationNotification::handle","p":"Illuminate/Auth/Listeners/SendEmailVerificationNotification.html#method_handle","d":"<p>Handle the event.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authenticate::__construct","p":"Illuminate/Auth/Middleware/Authenticate.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authenticate::handle","p":"Illuminate/Auth/Middleware/Authenticate.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authenticate::authenticate","p":"Illuminate/Auth/Middleware/Authenticate.html#method_authenticate","d":"<p>Determine if the user is logged in to any of the given guards.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authenticate::unauthenticated","p":"Illuminate/Auth/Middleware/Authenticate.html#method_unauthenticated","d":"<p>Handle an unauthenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authenticate::redirectTo","p":"Illuminate/Auth/Middleware/Authenticate.html#method_redirectTo","d":"<p>Get the path the user should be redirected to when they are not authenticated.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::__construct","p":"Illuminate/Auth/Middleware/AuthenticateWithBasicAuth.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::handle","p":"Illuminate/Auth/Middleware/AuthenticateWithBasicAuth.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::__construct","p":"Illuminate/Auth/Middleware/Authorize.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::handle","p":"Illuminate/Auth/Middleware/Authorize.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::getGateArguments","p":"Illuminate/Auth/Middleware/Authorize.html#method_getGateArguments","d":"<p>Get the arguments parameter for the gate.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::getModel","p":"Illuminate/Auth/Middleware/Authorize.html#method_getModel","d":"<p>Get the model to authorize.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\Authorize::isClassName","p":"Illuminate/Auth/Middleware/Authorize.html#method_isClassName","d":"<p>Checks if the given string looks like a fully qualified class name.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\EnsureEmailIsVerified::handle","p":"Illuminate/Auth/Middleware/EnsureEmailIsVerified.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\RequirePassword::__construct","p":"Illuminate/Auth/Middleware/RequirePassword.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\RequirePassword::handle","p":"Illuminate/Auth/Middleware/RequirePassword.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Auth\\Middleware\\RequirePassword::shouldConfirmPassword","p":"Illuminate/Auth/Middleware/RequirePassword.html#method_shouldConfirmPassword","d":"<p>Determine if the confirmation timeout has expired.</p>"},{"t":"M","n":"Illuminate\\Auth\\MustVerifyEmail::hasVerifiedEmail","p":"Illuminate/Auth/MustVerifyEmail.html#method_hasVerifiedEmail","d":"<p>Determine if the user has verified their email address.</p>"},{"t":"M","n":"Illuminate\\Auth\\MustVerifyEmail::markEmailAsVerified","p":"Illuminate/Auth/MustVerifyEmail.html#method_markEmailAsVerified","d":"<p>Mark the given user's email as verified.</p>"},{"t":"M","n":"Illuminate\\Auth\\MustVerifyEmail::sendEmailVerificationNotification","p":"Illuminate/Auth/MustVerifyEmail.html#method_sendEmailVerificationNotification","d":"<p>Send the email verification notification.</p>"},{"t":"M","n":"Illuminate\\Auth\\MustVerifyEmail::getEmailForVerification","p":"Illuminate/Auth/MustVerifyEmail.html#method_getEmailForVerification","d":"<p>Get the email address that should be used for verification.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::__construct","p":"Illuminate/Auth/Notifications/ResetPassword.html#method___construct","d":"<p>Create a notification instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::via","p":"Illuminate/Auth/Notifications/ResetPassword.html#method_via","d":"<p>Get the notification's channels.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::toMail","p":"Illuminate/Auth/Notifications/ResetPassword.html#method_toMail","d":"<p>Build the mail representation of the notification.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::buildMailMessage","p":"Illuminate/Auth/Notifications/ResetPassword.html#method_buildMailMessage","d":"<p>Get the reset password notification mail message for the given URL.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::resetUrl","p":"Illuminate/Auth/Notifications/ResetPassword.html#method_resetUrl","d":"<p>Get the reset URL for the given notifiable.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::createUrlUsing","p":"Illuminate/Auth/Notifications/ResetPassword.html#method_createUrlUsing","d":"<p>Set a callback that should be used when creating the reset password button URL.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\ResetPassword::toMailUsing","p":"Illuminate/Auth/Notifications/ResetPassword.html#method_toMailUsing","d":"<p>Set a callback that should be used when building the notification mail message.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\VerifyEmail::via","p":"Illuminate/Auth/Notifications/VerifyEmail.html#method_via","d":"<p>Get the notification's channels.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\VerifyEmail::toMail","p":"Illuminate/Auth/Notifications/VerifyEmail.html#method_toMail","d":"<p>Build the mail representation of the notification.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\VerifyEmail::buildMailMessage","p":"Illuminate/Auth/Notifications/VerifyEmail.html#method_buildMailMessage","d":"<p>Get the verify email notification mail message for the given URL.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\VerifyEmail::verificationUrl","p":"Illuminate/Auth/Notifications/VerifyEmail.html#method_verificationUrl","d":"<p>Get the verification URL for the given notifiable.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\VerifyEmail::createUrlUsing","p":"Illuminate/Auth/Notifications/VerifyEmail.html#method_createUrlUsing","d":"<p>Set a callback that should be used when creating the email verification URL.</p>"},{"t":"M","n":"Illuminate\\Auth\\Notifications\\VerifyEmail::toMailUsing","p":"Illuminate/Auth/Notifications/VerifyEmail.html#method_toMailUsing","d":"<p>Set a callback that should be used when building the notification mail message.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\CanResetPassword::getEmailForPasswordReset","p":"Illuminate/Auth/Passwords/CanResetPassword.html#method_getEmailForPasswordReset","d":"<p>Get the e-mail address where password reset links are sent.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\CanResetPassword::sendPasswordResetNotification","p":"Illuminate/Auth/Passwords/CanResetPassword.html#method_sendPasswordResetNotification","d":"<p>Send the password reset notification.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::__construct","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method___construct","d":"<p>Create a new token repository instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::create","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_create","d":"<p>Create a new token record.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::deleteExisting","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_deleteExisting","d":"<p>Delete all existing reset tokens from the database.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::getPayload","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_getPayload","d":"<p>Build the record payload for the table.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::exists","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_exists","d":"<p>Determine if a token record exists and is valid.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::tokenExpired","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_tokenExpired","d":"<p>Determine if the token has expired.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::recentlyCreatedToken","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_recentlyCreatedToken","d":"<p>Determine if the given user recently created a password reset token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::tokenRecentlyCreated","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_tokenRecentlyCreated","d":"<p>Determine if the token was recently created.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::delete","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_delete","d":"<p>Delete a token record by user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::deleteExpired","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_deleteExpired","d":"<p>Delete expired tokens.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::createNewToken","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_createNewToken","d":"<p>Create a new token for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::getConnection","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_getConnection","d":"<p>Get the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::getTable","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_getTable","d":"<p>Begin a new database query against the table.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::getHasher","p":"Illuminate/Auth/Passwords/DatabaseTokenRepository.html#method_getHasher","d":"<p>Get the hasher instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::__construct","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method___construct","d":"<p>Create a new password broker instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::sendResetLink","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_sendResetLink","d":"<p>Send a password reset link to a user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::reset","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_reset","d":"<p>Reset the password for the given token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::validateReset","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_validateReset","d":"<p>Validate a password reset for the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::getUser","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_getUser","d":"<p>Get the user for the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::createToken","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_createToken","d":"<p>Create a new password reset token for the given user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::deleteToken","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_deleteToken","d":"<p>Delete password reset tokens of the given user.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::tokenExists","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_tokenExists","d":"<p>Validate the given password reset token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBroker::getRepository","p":"Illuminate/Auth/Passwords/PasswordBroker.html#method_getRepository","d":"<p>Get the password reset token repository implementation.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::__construct","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method___construct","d":"<p>Create a new PasswordBroker manager instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::broker","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_broker","d":"<p>Attempt to get the broker from the local cache.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::resolve","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_resolve","d":"<p>Resolve the given broker.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::createTokenRepository","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_createTokenRepository","d":"<p>Create a token repository instance based on the given configuration.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::getConfig","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_getConfig","d":"<p>Get the password broker configuration.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::getDefaultDriver","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_getDefaultDriver","d":"<p>Get the default password broker name.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::setDefaultDriver","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method_setDefaultDriver","d":"<p>Set the default password broker name.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordBrokerManager::__call","p":"Illuminate/Auth/Passwords/PasswordBrokerManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider::register","p":"Illuminate/Auth/Passwords/PasswordResetServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider::registerPasswordBroker","p":"Illuminate/Auth/Passwords/PasswordResetServiceProvider.html#method_registerPasswordBroker","d":"<p>Register the password broker instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider::provides","p":"Illuminate/Auth/Passwords/PasswordResetServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::create","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_create","d":"<p>Create a new token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::exists","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_exists","d":"<p>Determine if a token record exists and is valid.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::recentlyCreatedToken","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_recentlyCreatedToken","d":"<p>Determine if the given user recently created a password reset token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::delete","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_delete","d":"<p>Delete a token record.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::deleteExpired","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_deleteExpired","d":"<p>Delete expired tokens.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::__construct","p":"Illuminate/Auth/Recaller.html#method___construct","d":"<p>Create a new recaller instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::id","p":"Illuminate/Auth/Recaller.html#method_id","d":"<p>Get the user ID from the recaller.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::token","p":"Illuminate/Auth/Recaller.html#method_token","d":"<p>Get the &quot;remember token&quot; token from the recaller.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::hash","p":"Illuminate/Auth/Recaller.html#method_hash","d":"<p>Get the password from the recaller.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::valid","p":"Illuminate/Auth/Recaller.html#method_valid","d":"<p>Determine if the recaller is valid.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::properString","p":"Illuminate/Auth/Recaller.html#method_properString","d":"<p>Determine if the recaller is an invalid string.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::hasAllSegments","p":"Illuminate/Auth/Recaller.html#method_hasAllSegments","d":"<p>Determine if the recaller has all segments.</p>"},{"t":"M","n":"Illuminate\\Auth\\Recaller::segments","p":"Illuminate/Auth/Recaller.html#method_segments","d":"<p>Get the recaller's segments.</p>"},{"t":"M","n":"Illuminate\\Auth\\RequestGuard::__construct","p":"Illuminate/Auth/RequestGuard.html#method___construct","d":"<p>Create a new authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\RequestGuard::user","p":"Illuminate/Auth/RequestGuard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\RequestGuard::validate","p":"Illuminate/Auth/RequestGuard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\RequestGuard::setRequest","p":"Illuminate/Auth/RequestGuard.html#method_setRequest","d":"<p>Set the current request instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::__construct","p":"Illuminate/Auth/SessionGuard.html#method___construct","d":"<p>Create a new authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::user","p":"Illuminate/Auth/SessionGuard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::userFromRecaller","p":"Illuminate/Auth/SessionGuard.html#method_userFromRecaller","d":"<p>Pull a user from the repository by its &quot;remember me&quot; cookie token.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::recaller","p":"Illuminate/Auth/SessionGuard.html#method_recaller","d":"<p>Get the decrypted recaller cookie for the request.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::id","p":"Illuminate/Auth/SessionGuard.html#method_id","d":"<p>Get the ID for the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::once","p":"Illuminate/Auth/SessionGuard.html#method_once","d":"<p>Log a user into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::onceUsingId","p":"Illuminate/Auth/SessionGuard.html#method_onceUsingId","d":"<p>Log the given user ID into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::validate","p":"Illuminate/Auth/SessionGuard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::basic","p":"Illuminate/Auth/SessionGuard.html#method_basic","d":"<p>Attempt to authenticate using HTTP Basic Auth.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::onceBasic","p":"Illuminate/Auth/SessionGuard.html#method_onceBasic","d":"<p>Perform a stateless HTTP Basic login attempt.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::attemptBasic","p":"Illuminate/Auth/SessionGuard.html#method_attemptBasic","d":"<p>Attempt to authenticate using basic authentication.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::basicCredentials","p":"Illuminate/Auth/SessionGuard.html#method_basicCredentials","d":"<p>Get the credential array for an HTTP Basic request.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::failedBasicResponse","p":"Illuminate/Auth/SessionGuard.html#method_failedBasicResponse","d":"<p>Get the response for basic authentication.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::attempt","p":"Illuminate/Auth/SessionGuard.html#method_attempt","d":"<p>Attempt to authenticate a user using the given credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::attemptWhen","p":"Illuminate/Auth/SessionGuard.html#method_attemptWhen","d":"<p>Attempt to authenticate a user with credentials and additional callbacks.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::hasValidCredentials","p":"Illuminate/Auth/SessionGuard.html#method_hasValidCredentials","d":"<p>Determine if the user matches the credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::shouldLogin","p":"Illuminate/Auth/SessionGuard.html#method_shouldLogin","d":"<p>Determine if the user should login by executing the given callbacks.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::loginUsingId","p":"Illuminate/Auth/SessionGuard.html#method_loginUsingId","d":"<p>Log the given user ID into the application.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::login","p":"Illuminate/Auth/SessionGuard.html#method_login","d":"<p>Log a user into the application.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::updateSession","p":"Illuminate/Auth/SessionGuard.html#method_updateSession","d":"<p>Update the session with the given ID.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::ensureRememberTokenIsSet","p":"Illuminate/Auth/SessionGuard.html#method_ensureRememberTokenIsSet","d":"<p>Create a new &quot;remember me&quot; token for the user if one doesn't already exist.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::queueRecallerCookie","p":"Illuminate/Auth/SessionGuard.html#method_queueRecallerCookie","d":"<p>Queue the recaller cookie into the cookie jar.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::createRecaller","p":"Illuminate/Auth/SessionGuard.html#method_createRecaller","d":"<p>Create a &quot;remember me&quot; cookie for a given ID.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::logout","p":"Illuminate/Auth/SessionGuard.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::logoutCurrentDevice","p":"Illuminate/Auth/SessionGuard.html#method_logoutCurrentDevice","d":"<p>Log the user out of the application on their current device only.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::clearUserDataFromStorage","p":"Illuminate/Auth/SessionGuard.html#method_clearUserDataFromStorage","d":"<p>Remove the user data from the session and cookies.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::cycleRememberToken","p":"Illuminate/Auth/SessionGuard.html#method_cycleRememberToken","d":"<p>Refresh the &quot;remember me&quot; token for the user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::logoutOtherDevices","p":"Illuminate/Auth/SessionGuard.html#method_logoutOtherDevices","d":"<p>Invalidate other sessions for the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::rehashUserPassword","p":"Illuminate/Auth/SessionGuard.html#method_rehashUserPassword","d":"<p>Rehash the current user's password.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::attempting","p":"Illuminate/Auth/SessionGuard.html#method_attempting","d":"<p>Register an authentication attempt event listener.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireAttemptEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireAttemptEvent","d":"<p>Fire the attempt event with the arguments.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireValidatedEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireValidatedEvent","d":"<p>Fires the validated event if the dispatcher is set.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireLoginEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireLoginEvent","d":"<p>Fire the login event if the dispatcher is set.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireAuthenticatedEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireAuthenticatedEvent","d":"<p>Fire the authenticated event if the dispatcher is set.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireOtherDeviceLogoutEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireOtherDeviceLogoutEvent","d":"<p>Fire the other device logout event if the dispatcher is set.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::fireFailedEvent","p":"Illuminate/Auth/SessionGuard.html#method_fireFailedEvent","d":"<p>Fire the failed authentication attempt event with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getLastAttempted","p":"Illuminate/Auth/SessionGuard.html#method_getLastAttempted","d":"<p>Get the last user we attempted to authenticate.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getName","p":"Illuminate/Auth/SessionGuard.html#method_getName","d":"<p>Get a unique identifier for the auth session value.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getRecallerName","p":"Illuminate/Auth/SessionGuard.html#method_getRecallerName","d":"<p>Get the name of the cookie used to store the &quot;recaller&quot;.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::viaRemember","p":"Illuminate/Auth/SessionGuard.html#method_viaRemember","d":"<p>Determine if the user was authenticated via &quot;remember me&quot; cookie.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getRememberDuration","p":"Illuminate/Auth/SessionGuard.html#method_getRememberDuration","d":"<p>Get the number of minutes the remember me cookie should be valid for.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setRememberDuration","p":"Illuminate/Auth/SessionGuard.html#method_setRememberDuration","d":"<p>Set the number of minutes the remember me cookie should be valid for.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getCookieJar","p":"Illuminate/Auth/SessionGuard.html#method_getCookieJar","d":"<p>Get the cookie creator instance used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setCookieJar","p":"Illuminate/Auth/SessionGuard.html#method_setCookieJar","d":"<p>Set the cookie creator instance used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getDispatcher","p":"Illuminate/Auth/SessionGuard.html#method_getDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setDispatcher","p":"Illuminate/Auth/SessionGuard.html#method_setDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getSession","p":"Illuminate/Auth/SessionGuard.html#method_getSession","d":"<p>Get the session store used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getUser","p":"Illuminate/Auth/SessionGuard.html#method_getUser","d":"<p>Return the currently cached user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setUser","p":"Illuminate/Auth/SessionGuard.html#method_setUser","d":"<p>Set the current user.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getRequest","p":"Illuminate/Auth/SessionGuard.html#method_getRequest","d":"<p>Get the current request instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::setRequest","p":"Illuminate/Auth/SessionGuard.html#method_setRequest","d":"<p>Set the current request instance.</p>"},{"t":"M","n":"Illuminate\\Auth\\SessionGuard::getTimebox","p":"Illuminate/Auth/SessionGuard.html#method_getTimebox","d":"<p>Get the timebox instance used by the guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::__construct","p":"Illuminate/Auth/TokenGuard.html#method___construct","d":"<p>Create a new authentication guard.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::user","p":"Illuminate/Auth/TokenGuard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::getTokenForRequest","p":"Illuminate/Auth/TokenGuard.html#method_getTokenForRequest","d":"<p>Get the token for the current request.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::validate","p":"Illuminate/Auth/TokenGuard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Auth\\TokenGuard::setRequest","p":"Illuminate/Auth/TokenGuard.html#method_setRequest","d":"<p>Set the current request instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastController::authenticate","p":"Illuminate/Broadcasting/BroadcastController.html#method_authenticate","d":"<p>Authenticate the request for channel access.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastController::authenticateUser","p":"Illuminate/Broadcasting/BroadcastController.html#method_authenticateUser","d":"<p>Authenticate the current user.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::__construct","p":"Illuminate/Broadcasting/BroadcastEvent.html#method___construct","d":"<p>Create a new job handler instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::handle","p":"Illuminate/Broadcasting/BroadcastEvent.html#method_handle","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::getPayloadFromEvent","p":"Illuminate/Broadcasting/BroadcastEvent.html#method_getPayloadFromEvent","d":"<p>Get the payload for the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::formatProperty","p":"Illuminate/Broadcasting/BroadcastEvent.html#method_formatProperty","d":"<p>Format the given value for a property.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::displayName","p":"Illuminate/Broadcasting/BroadcastEvent.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastEvent::__clone","p":"Illuminate/Broadcasting/BroadcastEvent.html#method___clone","d":"<p>Prepare the instance for cloning.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::__construct","p":"Illuminate/Broadcasting/BroadcastManager.html#method___construct","d":"<p>Create a new manager instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::routes","p":"Illuminate/Broadcasting/BroadcastManager.html#method_routes","d":"<p>Register the routes for handling broadcast channel authentication and sockets.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::userRoutes","p":"Illuminate/Broadcasting/BroadcastManager.html#method_userRoutes","d":"<p>Register the routes for handling broadcast user authentication.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::channelRoutes","p":"Illuminate/Broadcasting/BroadcastManager.html#method_channelRoutes","d":"<p>Register the routes for handling broadcast authentication and sockets.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::socket","p":"Illuminate/Broadcasting/BroadcastManager.html#method_socket","d":"<p>Get the socket ID for the given request.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::event","p":"Illuminate/Broadcasting/BroadcastManager.html#method_event","d":"<p>Begin broadcasting an event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::queue","p":"Illuminate/Broadcasting/BroadcastManager.html#method_queue","d":"<p>Queue the given event for broadcast.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::mustBeUniqueAndCannotAcquireLock","p":"Illuminate/Broadcasting/BroadcastManager.html#method_mustBeUniqueAndCannotAcquireLock","d":"<p>Determine if the broadcastable event must be unique and determine if we can acquire the necessary lock.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::connection","p":"Illuminate/Broadcasting/BroadcastManager.html#method_connection","d":"<p>Get a driver instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::driver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_driver","d":"<p>Get a driver instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::get","p":"Illuminate/Broadcasting/BroadcastManager.html#method_get","d":"<p>Attempt to get the connection from the local cache.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::resolve","p":"Illuminate/Broadcasting/BroadcastManager.html#method_resolve","d":"<p>Resolve the given broadcaster.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::callCustomCreator","p":"Illuminate/Broadcasting/BroadcastManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createPusherDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createPusherDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::pusher","p":"Illuminate/Broadcasting/BroadcastManager.html#method_pusher","d":"<p>Get a Pusher instance for the given configuration.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createAblyDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createAblyDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::ably","p":"Illuminate/Broadcasting/BroadcastManager.html#method_ably","d":"<p>Get an Ably instance for the given configuration.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createRedisDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createRedisDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createLogDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createLogDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::createNullDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_createNullDriver","d":"<p>Create an instance of the driver.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::getConfig","p":"Illuminate/Broadcasting/BroadcastManager.html#method_getConfig","d":"<p>Get the connection configuration.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::getDefaultDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_getDefaultDriver","d":"<p>Get the default driver name.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::setDefaultDriver","p":"Illuminate/Broadcasting/BroadcastManager.html#method_setDefaultDriver","d":"<p>Set the default driver name.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::purge","p":"Illuminate/Broadcasting/BroadcastManager.html#method_purge","d":"<p>Disconnect the given disk and remove from local cache.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::extend","p":"Illuminate/Broadcasting/BroadcastManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::getApplication","p":"Illuminate/Broadcasting/BroadcastManager.html#method_getApplication","d":"<p>Get the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::setApplication","p":"Illuminate/Broadcasting/BroadcastManager.html#method_setApplication","d":"<p>Set the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::forgetDrivers","p":"Illuminate/Broadcasting/BroadcastManager.html#method_forgetDrivers","d":"<p>Forget all of the resolved driver instances.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastManager::__call","p":"Illuminate/Broadcasting/BroadcastManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastServiceProvider::register","p":"Illuminate/Broadcasting/BroadcastServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\BroadcastServiceProvider::provides","p":"Illuminate/Broadcasting/BroadcastServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::__construct","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method___construct","d":"<p>Create a new broadcaster instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::generateAblySignature","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_generateAblySignature","d":"<p>Generate the signature needed for Ably authentication headers.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::buildAblyMessage","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_buildAblyMessage","d":"<p>Build an Ably message object for broadcasting.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::isGuardedChannel","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_isGuardedChannel","d":"<p>Return true if the channel is protected by authentication.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::normalizeChannelName","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_normalizeChannelName","d":"<p>Remove prefix from channel name.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::formatChannels","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_formatChannels","d":"<p>Format the channel array into an array of strings.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::getPublicToken","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_getPublicToken","d":"<p>Get the public token value from the Ably key.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::getPrivateToken","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_getPrivateToken","d":"<p>Get the private token value from the Ably key.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\AblyBroadcaster::getAbly","p":"Illuminate/Broadcasting/Broadcasters/AblyBroadcaster.html#method_getAbly","d":"<p>Get the underlying Ably SDK instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::resolveAuthenticatedUser","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_resolveAuthenticatedUser","d":"<p>Resolve the authenticated user payload for the incoming connection request.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::resolveAuthenticatedUserUsing","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_resolveAuthenticatedUserUsing","d":"<p>Register the user retrieval callback used to authenticate connections.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::channel","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_channel","d":"<p>Register a channel authenticator.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::verifyUserCanAccessChannel","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_verifyUserCanAccessChannel","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::extractAuthParameters","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_extractAuthParameters","d":"<p>Extract the parameters from the given pattern and channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::extractParameters","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_extractParameters","d":"<p>Extracts the parameters out of what the user passed to handle the channel authentication.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::extractParametersFromClass","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_extractParametersFromClass","d":"<p>Extracts the parameters out of a class channel's &quot;join&quot; method.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::extractChannelKeys","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_extractChannelKeys","d":"<p>Extract the channel keys from the incoming channel name.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::resolveBinding","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_resolveBinding","d":"<p>Resolve the given parameter binding.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::resolveExplicitBindingIfPossible","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_resolveExplicitBindingIfPossible","d":"<p>Resolve an explicit parameter binding if applicable.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::resolveImplicitBindingIfPossible","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_resolveImplicitBindingIfPossible","d":"<p>Resolve an implicit parameter binding if applicable.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::isImplicitlyBindable","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_isImplicitlyBindable","d":"<p>Determine if a given key and parameter is implicitly bindable.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::formatChannels","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_formatChannels","d":"<p>Format the channel array into an array of strings.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::binder","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_binder","d":"<p>Get the model binding registrar instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::normalizeChannelHandlerToCallable","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_normalizeChannelHandlerToCallable","d":"<p>Normalize the given callback into a callable.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::retrieveUser","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_retrieveUser","d":"<p>Retrieve the authenticated user using the configured guard (if any).</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::retrieveChannelOptions","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_retrieveChannelOptions","d":"<p>Retrieve options for a certain channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\Broadcaster::channelNameMatchesPattern","p":"Illuminate/Broadcasting/Broadcasters/Broadcaster.html#method_channelNameMatchesPattern","d":"<p>Check if the channel name from the request matches a pattern from registered channels.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster::__construct","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html#method___construct","d":"<p>Create a new broadcaster instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\LogBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/LogBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\NullBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/NullBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\NullBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/NullBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\NullBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/NullBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::__construct","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method___construct","d":"<p>Create a new broadcaster instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::resolveAuthenticatedUser","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_resolveAuthenticatedUser","d":"<p>Resolve the authenticated user payload for an incoming connection request.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::decodePusherResponse","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_decodePusherResponse","d":"<p>Decode the given Pusher response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::getPusher","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_getPusher","d":"<p>Get the Pusher SDK instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\PusherBroadcaster::setPusher","p":"Illuminate/Broadcasting/Broadcasters/PusherBroadcaster.html#method_setPusher","d":"<p>Set the Pusher SDK instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::__construct","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method___construct","d":"<p>Create a new broadcaster instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::auth","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::validAuthenticationResponse","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::broadcast","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::broadcastMultipleChannelsScript","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method_broadcastMultipleChannelsScript","d":"<p>Get the Lua script for broadcasting to multiple channels.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\RedisBroadcaster::formatChannels","p":"Illuminate/Broadcasting/Broadcasters/RedisBroadcaster.html#method_formatChannels","d":"<p>Format the channel array into an array of strings.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\UsePusherChannelConventions::isGuardedChannel","p":"Illuminate/Broadcasting/Broadcasters/UsePusherChannelConventions.html#method_isGuardedChannel","d":"<p>Return true if the channel is protected by authentication.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Broadcasters\\UsePusherChannelConventions::normalizeChannelName","p":"Illuminate/Broadcasting/Broadcasters/UsePusherChannelConventions.html#method_normalizeChannelName","d":"<p>Remove prefix from channel name.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Channel::__construct","p":"Illuminate/Broadcasting/Channel.html#method___construct","d":"<p>Create a new channel instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\Channel::__toString","p":"Illuminate/Broadcasting/Channel.html#method___toString","d":"<p>Convert the channel instance to a string.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\EncryptedPrivateChannel::__construct","p":"Illuminate/Broadcasting/EncryptedPrivateChannel.html#method___construct","d":"<p>Create a new channel instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\InteractsWithBroadcasting::broadcastVia","p":"Illuminate/Broadcasting/InteractsWithBroadcasting.html#method_broadcastVia","d":"<p>Broadcast the event using a specific broadcaster.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\InteractsWithBroadcasting::broadcastConnections","p":"Illuminate/Broadcasting/InteractsWithBroadcasting.html#method_broadcastConnections","d":"<p>Get the broadcaster connections the event should be broadcast on.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\InteractsWithSockets::dontBroadcastToCurrentUser","p":"Illuminate/Broadcasting/InteractsWithSockets.html#method_dontBroadcastToCurrentUser","d":"<p>Exclude the current user from receiving the broadcast.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\InteractsWithSockets::broadcastToEveryone","p":"Illuminate/Broadcasting/InteractsWithSockets.html#method_broadcastToEveryone","d":"<p>Broadcast the event to everyone.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PendingBroadcast::__construct","p":"Illuminate/Broadcasting/PendingBroadcast.html#method___construct","d":"<p>Create a new pending broadcast instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PendingBroadcast::via","p":"Illuminate/Broadcasting/PendingBroadcast.html#method_via","d":"<p>Broadcast the event using a specific broadcaster.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PendingBroadcast::toOthers","p":"Illuminate/Broadcasting/PendingBroadcast.html#method_toOthers","d":"<p>Broadcast the event to everyone except the current user.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PendingBroadcast::__destruct","p":"Illuminate/Broadcasting/PendingBroadcast.html#method___destruct","d":"<p>Handle the object's destruction.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PresenceChannel::__construct","p":"Illuminate/Broadcasting/PresenceChannel.html#method___construct","d":"<p>Create a new channel instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\PrivateChannel::__construct","p":"Illuminate/Broadcasting/PrivateChannel.html#method___construct","d":"<p>Create a new channel instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\UniqueBroadcastEvent::__construct","p":"Illuminate/Broadcasting/UniqueBroadcastEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Broadcasting\\UniqueBroadcastEvent::uniqueVia","p":"Illuminate/Broadcasting/UniqueBroadcastEvent.html#method_uniqueVia","d":"<p>Resolve the cache implementation that should manage the event's uniqueness.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::__construct","p":"Illuminate/Bus/Batch.html#method___construct","d":"<p>Create a new batch instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::fresh","p":"Illuminate/Bus/Batch.html#method_fresh","d":"<p>Get a fresh instance of the batch represented by this ID.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::add","p":"Illuminate/Bus/Batch.html#method_add","d":"<p>Add additional jobs to the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::prepareBatchedChain","p":"Illuminate/Bus/Batch.html#method_prepareBatchedChain","d":"<p>Prepare a chain that exists within the jobs being added.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::processedJobs","p":"Illuminate/Bus/Batch.html#method_processedJobs","d":"<p>Get the total number of jobs that have been processed by the batch thus far.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::progress","p":"Illuminate/Bus/Batch.html#method_progress","d":"<p>Get the percentage of jobs that have been processed (between 0-100).</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::recordSuccessfulJob","p":"Illuminate/Bus/Batch.html#method_recordSuccessfulJob","d":"<p>Record that a job within the batch finished successfully, executing any callbacks if necessary.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::decrementPendingJobs","p":"Illuminate/Bus/Batch.html#method_decrementPendingJobs","d":"<p>Decrement the pending jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::finished","p":"Illuminate/Bus/Batch.html#method_finished","d":"<p>Determine if the batch has finished executing.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::hasThenCallbacks","p":"Illuminate/Bus/Batch.html#method_hasThenCallbacks","d":"<p>Determine if the batch has &quot;success&quot; callbacks.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::allowsFailures","p":"Illuminate/Bus/Batch.html#method_allowsFailures","d":"<p>Determine if the batch allows jobs to fail without cancelling the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::hasFailures","p":"Illuminate/Bus/Batch.html#method_hasFailures","d":"<p>Determine if the batch has job failures.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::recordFailedJob","p":"Illuminate/Bus/Batch.html#method_recordFailedJob","d":"<p>Record that a job within the batch failed to finish successfully, executing any callbacks if necessary.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::incrementFailedJobs","p":"Illuminate/Bus/Batch.html#method_incrementFailedJobs","d":"<p>Increment the failed jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::hasCatchCallbacks","p":"Illuminate/Bus/Batch.html#method_hasCatchCallbacks","d":"<p>Determine if the batch has &quot;catch&quot; callbacks.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::hasFinallyCallbacks","p":"Illuminate/Bus/Batch.html#method_hasFinallyCallbacks","d":"<p>Determine if the batch has &quot;finally&quot; callbacks.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::cancel","p":"Illuminate/Bus/Batch.html#method_cancel","d":"<p>Cancel the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::canceled","p":"Illuminate/Bus/Batch.html#method_canceled","d":"<p>Determine if the batch has been cancelled.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::cancelled","p":"Illuminate/Bus/Batch.html#method_cancelled","d":"<p>Determine if the batch has been cancelled.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::delete","p":"Illuminate/Bus/Batch.html#method_delete","d":"<p>Delete the batch from storage.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::invokeHandlerCallback","p":"Illuminate/Bus/Batch.html#method_invokeHandlerCallback","d":"<p>Invoke a batch callback handler.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::toArray","p":"Illuminate/Bus/Batch.html#method_toArray","d":"<p>Convert the batch to an array.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::jsonSerialize","p":"Illuminate/Bus/Batch.html#method_jsonSerialize","d":"<p>Get the JSON serializable representation of the object.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batch::__get","p":"Illuminate/Bus/Batch.html#method___get","d":"<p>Dynamically access the batch's &quot;options&quot; via properties.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchFactory::__construct","p":"Illuminate/Bus/BatchFactory.html#method___construct","d":"<p>Create a new batch factory instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchFactory::make","p":"Illuminate/Bus/BatchFactory.html#method_make","d":"<p>Create a new batch instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::get","p":"Illuminate/Bus/BatchRepository.html#method_get","d":"<p>Retrieve a list of batches.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::find","p":"Illuminate/Bus/BatchRepository.html#method_find","d":"<p>Retrieve information about an existing batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::store","p":"Illuminate/Bus/BatchRepository.html#method_store","d":"<p>Store a new pending batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::incrementTotalJobs","p":"Illuminate/Bus/BatchRepository.html#method_incrementTotalJobs","d":"<p>Increment the total number of jobs within the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::decrementPendingJobs","p":"Illuminate/Bus/BatchRepository.html#method_decrementPendingJobs","d":"<p>Decrement the total number of pending jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::incrementFailedJobs","p":"Illuminate/Bus/BatchRepository.html#method_incrementFailedJobs","d":"<p>Increment the total number of failed jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::markAsFinished","p":"Illuminate/Bus/BatchRepository.html#method_markAsFinished","d":"<p>Mark the batch that has the given ID as finished.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::cancel","p":"Illuminate/Bus/BatchRepository.html#method_cancel","d":"<p>Cancel the batch that has the given ID.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::delete","p":"Illuminate/Bus/BatchRepository.html#method_delete","d":"<p>Delete the batch that has the given ID.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::transaction","p":"Illuminate/Bus/BatchRepository.html#method_transaction","d":"<p>Execute the given Closure within a storage specific transaction.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batchable::batch","p":"Illuminate/Bus/Batchable.html#method_batch","d":"<p>Get the batch instance for the job, if applicable.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batchable::batching","p":"Illuminate/Bus/Batchable.html#method_batching","d":"<p>Determine if the batch is still active and processing.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batchable::withBatchId","p":"Illuminate/Bus/Batchable.html#method_withBatchId","d":"<p>Set the batch ID on the job.</p>"},{"t":"M","n":"Illuminate\\Bus\\Batchable::withFakeBatch","p":"Illuminate/Bus/Batchable.html#method_withFakeBatch","d":"<p>Indicate that the job should use a fake batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BusServiceProvider::register","p":"Illuminate/Bus/BusServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Bus\\BusServiceProvider::registerBatchServices","p":"Illuminate/Bus/BusServiceProvider.html#method_registerBatchServices","d":"<p>Register the batch handling services.</p>"},{"t":"M","n":"Illuminate\\Bus\\BusServiceProvider::provides","p":"Illuminate/Bus/BusServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::__construct","p":"Illuminate/Bus/DatabaseBatchRepository.html#method___construct","d":"<p>Create a new batch repository instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::get","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_get","d":"<p>Retrieve a list of batches.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::find","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_find","d":"<p>Retrieve information about an existing batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::store","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_store","d":"<p>Store a new pending batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::incrementTotalJobs","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_incrementTotalJobs","d":"<p>Increment the total number of jobs within the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::decrementPendingJobs","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_decrementPendingJobs","d":"<p>Decrement the total number of pending jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::incrementFailedJobs","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_incrementFailedJobs","d":"<p>Increment the total number of failed jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::updateAtomicValues","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_updateAtomicValues","d":"<p>Update an atomic value within the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::markAsFinished","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_markAsFinished","d":"<p>Mark the batch that has the given ID as finished.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::cancel","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_cancel","d":"<p>Cancel the batch that has the given ID.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::delete","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_delete","d":"<p>Delete the batch that has the given ID.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::prune","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_prune","d":"<p>Prune all of the entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::pruneUnfinished","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_pruneUnfinished","d":"<p>Prune all of the unfinished entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::pruneCancelled","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_pruneCancelled","d":"<p>Prune all of the cancelled entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::transaction","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_transaction","d":"<p>Execute the given Closure within a storage specific transaction.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::serialize","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_serialize","d":"<p>Serialize the given value.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::unserialize","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_unserialize","d":"<p>Unserialize the given value.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::toBatch","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_toBatch","d":"<p>Convert the given raw batch to a Batch object.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::getConnection","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_getConnection","d":"<p>Get the underlying database connection.</p>"},{"t":"M","n":"Illuminate\\Bus\\DatabaseBatchRepository::setConnection","p":"Illuminate/Bus/DatabaseBatchRepository.html#method_setConnection","d":"<p>Set the underlying database connection.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::__construct","p":"Illuminate/Bus/Dispatcher.html#method___construct","d":"<p>Create a new command dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::dispatch","p":"Illuminate/Bus/Dispatcher.html#method_dispatch","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::dispatchSync","p":"Illuminate/Bus/Dispatcher.html#method_dispatchSync","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::dispatchNow","p":"Illuminate/Bus/Dispatcher.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process without using the synchronous queue.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::findBatch","p":"Illuminate/Bus/Dispatcher.html#method_findBatch","d":"<p>Attempt to find the batch with the given ID.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::batch","p":"Illuminate/Bus/Dispatcher.html#method_batch","d":"<p>Create a new batch of queueable jobs.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::chain","p":"Illuminate/Bus/Dispatcher.html#method_chain","d":"<p>Create a new chain of queueable jobs.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::hasCommandHandler","p":"Illuminate/Bus/Dispatcher.html#method_hasCommandHandler","d":"<p>Determine if the given command has a handler.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::getCommandHandler","p":"Illuminate/Bus/Dispatcher.html#method_getCommandHandler","d":"<p>Retrieve the handler for a command.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::commandShouldBeQueued","p":"Illuminate/Bus/Dispatcher.html#method_commandShouldBeQueued","d":"<p>Determine if the given command should be queued.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::dispatchToQueue","p":"Illuminate/Bus/Dispatcher.html#method_dispatchToQueue","d":"<p>Dispatch a command to its appropriate handler behind a queue.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::pushCommandToQueue","p":"Illuminate/Bus/Dispatcher.html#method_pushCommandToQueue","d":"<p>Push the command onto the given queue instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::dispatchAfterResponse","p":"Illuminate/Bus/Dispatcher.html#method_dispatchAfterResponse","d":"<p>Dispatch a command to its appropriate handler after the current process.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::pipeThrough","p":"Illuminate/Bus/Dispatcher.html#method_pipeThrough","d":"<p>Set the pipes through which commands should be piped before dispatching.</p>"},{"t":"M","n":"Illuminate\\Bus\\Dispatcher::map","p":"Illuminate/Bus/Dispatcher.html#method_map","d":"<p>Map a command to a handler.</p>"},{"t":"M","n":"Illuminate\\Bus\\Events\\BatchDispatched::__construct","p":"Illuminate/Bus/Events/BatchDispatched.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::__construct","p":"Illuminate/Bus/PendingBatch.html#method___construct","d":"<p>Create a new pending batch instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::add","p":"Illuminate/Bus/PendingBatch.html#method_add","d":"<p>Add jobs to the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::then","p":"Illuminate/Bus/PendingBatch.html#method_then","d":"<p>Add a callback to be executed after all jobs in the batch have executed successfully.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::thenCallbacks","p":"Illuminate/Bus/PendingBatch.html#method_thenCallbacks","d":"<p>Get the &quot;then&quot; callbacks that have been registered with the pending batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::catch","p":"Illuminate/Bus/PendingBatch.html#method_catch","d":"<p>Add a callback to be executed after the first failing job in the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::catchCallbacks","p":"Illuminate/Bus/PendingBatch.html#method_catchCallbacks","d":"<p>Get the &quot;catch&quot; callbacks that have been registered with the pending batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::finally","p":"Illuminate/Bus/PendingBatch.html#method_finally","d":"<p>Add a callback to be executed after the batch has finished executing.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::finallyCallbacks","p":"Illuminate/Bus/PendingBatch.html#method_finallyCallbacks","d":"<p>Get the &quot;finally&quot; callbacks that have been registered with the pending batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::allowFailures","p":"Illuminate/Bus/PendingBatch.html#method_allowFailures","d":"<p>Indicate that the batch should not be cancelled when a job within the batch fails.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::allowsFailures","p":"Illuminate/Bus/PendingBatch.html#method_allowsFailures","d":"<p>Determine if the pending batch allows jobs to fail without cancelling the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::name","p":"Illuminate/Bus/PendingBatch.html#method_name","d":"<p>Set the name for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::onConnection","p":"Illuminate/Bus/PendingBatch.html#method_onConnection","d":"<p>Specify the queue connection that the batched jobs should run on.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::connection","p":"Illuminate/Bus/PendingBatch.html#method_connection","d":"<p>Get the connection used by the pending batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::onQueue","p":"Illuminate/Bus/PendingBatch.html#method_onQueue","d":"<p>Specify the queue that the batched jobs should run on.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::queue","p":"Illuminate/Bus/PendingBatch.html#method_queue","d":"<p>Get the queue used by the pending batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::withOption","p":"Illuminate/Bus/PendingBatch.html#method_withOption","d":"<p>Add additional data into the batch's options array.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::dispatch","p":"Illuminate/Bus/PendingBatch.html#method_dispatch","d":"<p>Dispatch the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::dispatchAfterResponse","p":"Illuminate/Bus/PendingBatch.html#method_dispatchAfterResponse","d":"<p>Dispatch the batch after the response is sent to the browser.</p>"},{"t":"M","n":"Illuminate\\Bus\\PendingBatch::dispatchExistingBatch","p":"Illuminate/Bus/PendingBatch.html#method_dispatchExistingBatch","d":"<p>Dispatch an existing batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\PrunableBatchRepository::prune","p":"Illuminate/Bus/PrunableBatchRepository.html#method_prune","d":"<p>Prune all of the entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::onConnection","p":"Illuminate/Bus/Queueable.html#method_onConnection","d":"<p>Set the desired connection for the job.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::onQueue","p":"Illuminate/Bus/Queueable.html#method_onQueue","d":"<p>Set the desired queue for the job.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::allOnConnection","p":"Illuminate/Bus/Queueable.html#method_allOnConnection","d":"<p>Set the desired connection for the chain.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::allOnQueue","p":"Illuminate/Bus/Queueable.html#method_allOnQueue","d":"<p>Set the desired queue for the chain.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::delay","p":"Illuminate/Bus/Queueable.html#method_delay","d":"<p>Set the desired delay in seconds for the job.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::afterCommit","p":"Illuminate/Bus/Queueable.html#method_afterCommit","d":"<p>Indicate that the job should be dispatched after all database transactions have committed.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::beforeCommit","p":"Illuminate/Bus/Queueable.html#method_beforeCommit","d":"<p>Indicate that the job should not wait until database transactions have been committed before dispatching.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::through","p":"Illuminate/Bus/Queueable.html#method_through","d":"<p>Specify the middleware the job should be dispatched through.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::chain","p":"Illuminate/Bus/Queueable.html#method_chain","d":"<p>Set the jobs that should run if this job is successful.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::prependToChain","p":"Illuminate/Bus/Queueable.html#method_prependToChain","d":"<p>Prepend a job to the current chain so that it is run after the currently running job.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::appendToChain","p":"Illuminate/Bus/Queueable.html#method_appendToChain","d":"<p>Append a job to the end of the current chain.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::serializeJob","p":"Illuminate/Bus/Queueable.html#method_serializeJob","d":"<p>Serialize a job for queuing.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::dispatchNextJobInChain","p":"Illuminate/Bus/Queueable.html#method_dispatchNextJobInChain","d":"<p>Dispatch the next job on the chain.</p>"},{"t":"M","n":"Illuminate\\Bus\\Queueable::invokeChainCatchCallbacks","p":"Illuminate/Bus/Queueable.html#method_invokeChainCatchCallbacks","d":"<p>Invoke all of the chain's failed job callbacks.</p>"},{"t":"M","n":"Illuminate\\Bus\\UniqueLock::__construct","p":"Illuminate/Bus/UniqueLock.html#method___construct","d":"<p>Create a new unique lock manager instance.</p>"},{"t":"M","n":"Illuminate\\Bus\\UniqueLock::acquire","p":"Illuminate/Bus/UniqueLock.html#method_acquire","d":"<p>Attempt to acquire a lock for the given job.</p>"},{"t":"M","n":"Illuminate\\Bus\\UniqueLock::release","p":"Illuminate/Bus/UniqueLock.html#method_release","d":"<p>Release the lock for the given job.</p>"},{"t":"M","n":"Illuminate\\Bus\\UniqueLock::getKey","p":"Illuminate/Bus/UniqueLock.html#method_getKey","d":"<p>Generate the lock key for the given job.</p>"},{"t":"M","n":"Illuminate\\Bus\\UpdatedBatchJobCounts::__construct","p":"Illuminate/Bus/UpdatedBatchJobCounts.html#method___construct","d":"<p>Create a new batch job counts object.</p>"},{"t":"M","n":"Illuminate\\Bus\\UpdatedBatchJobCounts::allJobsHaveRanExactlyOnce","p":"Illuminate/Bus/UpdatedBatchJobCounts.html#method_allJobsHaveRanExactlyOnce","d":"<p>Determine if all jobs have run exactly once.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::__construct","p":"Illuminate/Cache/ApcStore.html#method___construct","d":"<p>Create a new APC store.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::get","p":"Illuminate/Cache/ApcStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::put","p":"Illuminate/Cache/ApcStore.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::increment","p":"Illuminate/Cache/ApcStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::decrement","p":"Illuminate/Cache/ApcStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::forever","p":"Illuminate/Cache/ApcStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::forget","p":"Illuminate/Cache/ApcStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::flush","p":"Illuminate/Cache/ApcStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcStore::getPrefix","p":"Illuminate/Cache/ApcStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::__construct","p":"Illuminate/Cache/ApcWrapper.html#method___construct","d":"<p>Create a new APC wrapper instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::get","p":"Illuminate/Cache/ApcWrapper.html#method_get","d":"<p>Get an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::put","p":"Illuminate/Cache/ApcWrapper.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::increment","p":"Illuminate/Cache/ApcWrapper.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::decrement","p":"Illuminate/Cache/ApcWrapper.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::delete","p":"Illuminate/Cache/ApcWrapper.html#method_delete","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ApcWrapper::flush","p":"Illuminate/Cache/ApcWrapper.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayLock::__construct","p":"Illuminate/Cache/ArrayLock.html#method___construct","d":"<p>Create a new lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayLock::acquire","p":"Illuminate/Cache/ArrayLock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayLock::exists","p":"Illuminate/Cache/ArrayLock.html#method_exists","d":"<p>Determine if the current lock exists.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayLock::release","p":"Illuminate/Cache/ArrayLock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayLock::getCurrentOwner","p":"Illuminate/Cache/ArrayLock.html#method_getCurrentOwner","d":"<p>Returns the owner value written into the driver for this lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayLock::forceRelease","p":"Illuminate/Cache/ArrayLock.html#method_forceRelease","d":"<p>Releases this lock in disregard of ownership.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::__construct","p":"Illuminate/Cache/ArrayStore.html#method___construct","d":"<p>Create a new Array store.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::get","p":"Illuminate/Cache/ArrayStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::put","p":"Illuminate/Cache/ArrayStore.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::increment","p":"Illuminate/Cache/ArrayStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::decrement","p":"Illuminate/Cache/ArrayStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::forever","p":"Illuminate/Cache/ArrayStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::forget","p":"Illuminate/Cache/ArrayStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::flush","p":"Illuminate/Cache/ArrayStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::getPrefix","p":"Illuminate/Cache/ArrayStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::calculateExpiration","p":"Illuminate/Cache/ArrayStore.html#method_calculateExpiration","d":"<p>Get the expiration time of the key.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::toTimestamp","p":"Illuminate/Cache/ArrayStore.html#method_toTimestamp","d":"<p>Get the UNIX timestamp for the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::lock","p":"Illuminate/Cache/ArrayStore.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\ArrayStore::restoreLock","p":"Illuminate/Cache/ArrayStore.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheLock::__construct","p":"Illuminate/Cache/CacheLock.html#method___construct","d":"<p>Create a new lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheLock::acquire","p":"Illuminate/Cache/CacheLock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheLock::release","p":"Illuminate/Cache/CacheLock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheLock::forceRelease","p":"Illuminate/Cache/CacheLock.html#method_forceRelease","d":"<p>Releases this lock regardless of ownership.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheLock::getCurrentOwner","p":"Illuminate/Cache/CacheLock.html#method_getCurrentOwner","d":"<p>Returns the owner value written into the driver for this lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::__construct","p":"Illuminate/Cache/CacheManager.html#method___construct","d":"<p>Create a new Cache manager instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::store","p":"Illuminate/Cache/CacheManager.html#method_store","d":"<p>Get a cache store instance by name, wrapped in a repository.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::driver","p":"Illuminate/Cache/CacheManager.html#method_driver","d":"<p>Get a cache driver instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::get","p":"Illuminate/Cache/CacheManager.html#method_get","d":"<p>Attempt to get the store from the local cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::resolve","p":"Illuminate/Cache/CacheManager.html#method_resolve","d":"<p>Resolve the given store.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::callCustomCreator","p":"Illuminate/Cache/CacheManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createApcDriver","p":"Illuminate/Cache/CacheManager.html#method_createApcDriver","d":"<p>Create an instance of the APC cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createArrayDriver","p":"Illuminate/Cache/CacheManager.html#method_createArrayDriver","d":"<p>Create an instance of the array cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createFileDriver","p":"Illuminate/Cache/CacheManager.html#method_createFileDriver","d":"<p>Create an instance of the file cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createMemcachedDriver","p":"Illuminate/Cache/CacheManager.html#method_createMemcachedDriver","d":"<p>Create an instance of the Memcached cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createNullDriver","p":"Illuminate/Cache/CacheManager.html#method_createNullDriver","d":"<p>Create an instance of the Null cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createRedisDriver","p":"Illuminate/Cache/CacheManager.html#method_createRedisDriver","d":"<p>Create an instance of the Redis cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createDatabaseDriver","p":"Illuminate/Cache/CacheManager.html#method_createDatabaseDriver","d":"<p>Create an instance of the database cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::createDynamodbDriver","p":"Illuminate/Cache/CacheManager.html#method_createDynamodbDriver","d":"<p>Create an instance of the DynamoDB cache driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::newDynamodbClient","p":"Illuminate/Cache/CacheManager.html#method_newDynamodbClient","d":"<p>Create new DynamoDb Client instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::repository","p":"Illuminate/Cache/CacheManager.html#method_repository","d":"<p>Create a new cache repository with the given implementation.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::setEventDispatcher","p":"Illuminate/Cache/CacheManager.html#method_setEventDispatcher","d":"<p>Set the event dispatcher on the given repository instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::refreshEventDispatcher","p":"Illuminate/Cache/CacheManager.html#method_refreshEventDispatcher","d":"<p>Re-set the event dispatcher on all resolved cache repositories.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::getPrefix","p":"Illuminate/Cache/CacheManager.html#method_getPrefix","d":"<p>Get the cache prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::getConfig","p":"Illuminate/Cache/CacheManager.html#method_getConfig","d":"<p>Get the cache connection configuration.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::getDefaultDriver","p":"Illuminate/Cache/CacheManager.html#method_getDefaultDriver","d":"<p>Get the default cache driver name.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::setDefaultDriver","p":"Illuminate/Cache/CacheManager.html#method_setDefaultDriver","d":"<p>Set the default cache driver name.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::forgetDriver","p":"Illuminate/Cache/CacheManager.html#method_forgetDriver","d":"<p>Unset the given driver instances.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::purge","p":"Illuminate/Cache/CacheManager.html#method_purge","d":"<p>Disconnect the given driver and remove from local cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::extend","p":"Illuminate/Cache/CacheManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheManager::__call","p":"Illuminate/Cache/CacheManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheServiceProvider::register","p":"Illuminate/Cache/CacheServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Cache\\CacheServiceProvider::provides","p":"Illuminate/Cache/CacheServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\CacheTableCommand::__construct","p":"Illuminate/Cache/Console/CacheTableCommand.html#method___construct","d":"<p>Create a new cache table command instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\CacheTableCommand::handle","p":"Illuminate/Cache/Console/CacheTableCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\CacheTableCommand::createBaseMigration","p":"Illuminate/Cache/Console/CacheTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the table.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::__construct","p":"Illuminate/Cache/Console/ClearCommand.html#method___construct","d":"<p>Create a new cache clear command instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::handle","p":"Illuminate/Cache/Console/ClearCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::flushFacades","p":"Illuminate/Cache/Console/ClearCommand.html#method_flushFacades","d":"<p>Flush the real-time facades stored in the cache directory.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::cache","p":"Illuminate/Cache/Console/ClearCommand.html#method_cache","d":"<p>Get the cache instance for the command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::tags","p":"Illuminate/Cache/Console/ClearCommand.html#method_tags","d":"<p>Get the tags passed to the command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::getArguments","p":"Illuminate/Cache/Console/ClearCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ClearCommand::getOptions","p":"Illuminate/Cache/Console/ClearCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ForgetCommand::__construct","p":"Illuminate/Cache/Console/ForgetCommand.html#method___construct","d":"<p>Create a new cache clear command instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\ForgetCommand::handle","p":"Illuminate/Cache/Console/ForgetCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\PruneStaleTagsCommand::handle","p":"Illuminate/Cache/Console/PruneStaleTagsCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Cache\\Console\\PruneStaleTagsCommand::getArguments","p":"Illuminate/Cache/Console/PruneStaleTagsCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseLock::__construct","p":"Illuminate/Cache/DatabaseLock.html#method___construct","d":"<p>Create a new lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseLock::acquire","p":"Illuminate/Cache/DatabaseLock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseLock::expiresAt","p":"Illuminate/Cache/DatabaseLock.html#method_expiresAt","d":"<p>Get the UNIX timestamp indicating when the lock should expire.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseLock::release","p":"Illuminate/Cache/DatabaseLock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseLock::forceRelease","p":"Illuminate/Cache/DatabaseLock.html#method_forceRelease","d":"<p>Releases this lock in disregard of ownership.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseLock::getCurrentOwner","p":"Illuminate/Cache/DatabaseLock.html#method_getCurrentOwner","d":"<p>Returns the owner value written into the driver for this lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseLock::getConnectionName","p":"Illuminate/Cache/DatabaseLock.html#method_getConnectionName","d":"<p>Get the name of the database connection being used to manage the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::__construct","p":"Illuminate/Cache/DatabaseStore.html#method___construct","d":"<p>Create a new database store.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::get","p":"Illuminate/Cache/DatabaseStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::put","p":"Illuminate/Cache/DatabaseStore.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::add","p":"Illuminate/Cache/DatabaseStore.html#method_add","d":"<p>Store an item in the cache if the key doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::increment","p":"Illuminate/Cache/DatabaseStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::decrement","p":"Illuminate/Cache/DatabaseStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::incrementOrDecrement","p":"Illuminate/Cache/DatabaseStore.html#method_incrementOrDecrement","d":"<p>Increment or decrement an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::getTime","p":"Illuminate/Cache/DatabaseStore.html#method_getTime","d":"<p>Get the current system time.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::forever","p":"Illuminate/Cache/DatabaseStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::lock","p":"Illuminate/Cache/DatabaseStore.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::restoreLock","p":"Illuminate/Cache/DatabaseStore.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::forget","p":"Illuminate/Cache/DatabaseStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::flush","p":"Illuminate/Cache/DatabaseStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::table","p":"Illuminate/Cache/DatabaseStore.html#method_table","d":"<p>Get a query builder for the cache table.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::getConnection","p":"Illuminate/Cache/DatabaseStore.html#method_getConnection","d":"<p>Get the underlying database connection.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::setLockConnection","p":"Illuminate/Cache/DatabaseStore.html#method_setLockConnection","d":"<p>Specify the name of the connection that should be used to manage locks.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::getPrefix","p":"Illuminate/Cache/DatabaseStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::serialize","p":"Illuminate/Cache/DatabaseStore.html#method_serialize","d":"<p>Serialize the given value.</p>"},{"t":"M","n":"Illuminate\\Cache\\DatabaseStore::unserialize","p":"Illuminate/Cache/DatabaseStore.html#method_unserialize","d":"<p>Unserialize the given value.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbLock::__construct","p":"Illuminate/Cache/DynamoDbLock.html#method___construct","d":"<p>Create a new lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbLock::acquire","p":"Illuminate/Cache/DynamoDbLock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbLock::release","p":"Illuminate/Cache/DynamoDbLock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbLock::forceRelease","p":"Illuminate/Cache/DynamoDbLock.html#method_forceRelease","d":"<p>Release this lock in disregard of ownership.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbLock::getCurrentOwner","p":"Illuminate/Cache/DynamoDbLock.html#method_getCurrentOwner","d":"<p>Returns the owner value written into the driver for this lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::__construct","p":"Illuminate/Cache/DynamoDbStore.html#method___construct","d":"<p>Create a new store instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::get","p":"Illuminate/Cache/DynamoDbStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::many","p":"Illuminate/Cache/DynamoDbStore.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::isExpired","p":"Illuminate/Cache/DynamoDbStore.html#method_isExpired","d":"<p>Determine if the given item is expired.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::put","p":"Illuminate/Cache/DynamoDbStore.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::putMany","p":"Illuminate/Cache/DynamoDbStore.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::add","p":"Illuminate/Cache/DynamoDbStore.html#method_add","d":"<p>Store an item in the cache if the key doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::increment","p":"Illuminate/Cache/DynamoDbStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::decrement","p":"Illuminate/Cache/DynamoDbStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::forever","p":"Illuminate/Cache/DynamoDbStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::lock","p":"Illuminate/Cache/DynamoDbStore.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::restoreLock","p":"Illuminate/Cache/DynamoDbStore.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::forget","p":"Illuminate/Cache/DynamoDbStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::flush","p":"Illuminate/Cache/DynamoDbStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::toTimestamp","p":"Illuminate/Cache/DynamoDbStore.html#method_toTimestamp","d":"<p>Get the UNIX timestamp for the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::serialize","p":"Illuminate/Cache/DynamoDbStore.html#method_serialize","d":"<p>Serialize the value.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::unserialize","p":"Illuminate/Cache/DynamoDbStore.html#method_unserialize","d":"<p>Unserialize the value.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::type","p":"Illuminate/Cache/DynamoDbStore.html#method_type","d":"<p>Get the DynamoDB type for the given value.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::getPrefix","p":"Illuminate/Cache/DynamoDbStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::setPrefix","p":"Illuminate/Cache/DynamoDbStore.html#method_setPrefix","d":"<p>Set the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\DynamoDbStore::getClient","p":"Illuminate/Cache/DynamoDbStore.html#method_getClient","d":"<p>Get the DynamoDb Client instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Events\\CacheEvent::__construct","p":"Illuminate/Cache/Events/CacheEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Events\\CacheEvent::setTags","p":"Illuminate/Cache/Events/CacheEvent.html#method_setTags","d":"<p>Set the tags for the cache event.</p>"},{"t":"M","n":"Illuminate\\Cache\\Events\\CacheHit::__construct","p":"Illuminate/Cache/Events/CacheHit.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Events\\KeyWritten::__construct","p":"Illuminate/Cache/Events/KeyWritten.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileLock::acquire","p":"Illuminate/Cache/FileLock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::__construct","p":"Illuminate/Cache/FileStore.html#method___construct","d":"<p>Create a new file cache store instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::get","p":"Illuminate/Cache/FileStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::put","p":"Illuminate/Cache/FileStore.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::add","p":"Illuminate/Cache/FileStore.html#method_add","d":"<p>Store an item in the cache if the key doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::ensureCacheDirectoryExists","p":"Illuminate/Cache/FileStore.html#method_ensureCacheDirectoryExists","d":"<p>Create the file cache directory if necessary.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::ensurePermissionsAreCorrect","p":"Illuminate/Cache/FileStore.html#method_ensurePermissionsAreCorrect","d":"<p>Ensure the created node has the correct permissions.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::increment","p":"Illuminate/Cache/FileStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::decrement","p":"Illuminate/Cache/FileStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::forever","p":"Illuminate/Cache/FileStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::lock","p":"Illuminate/Cache/FileStore.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::restoreLock","p":"Illuminate/Cache/FileStore.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::forget","p":"Illuminate/Cache/FileStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::flush","p":"Illuminate/Cache/FileStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::getPayload","p":"Illuminate/Cache/FileStore.html#method_getPayload","d":"<p>Retrieve an item and expiry time from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::emptyPayload","p":"Illuminate/Cache/FileStore.html#method_emptyPayload","d":"<p>Get a default empty payload for the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::path","p":"Illuminate/Cache/FileStore.html#method_path","d":"<p>Get the full path for the given cache key.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::expiration","p":"Illuminate/Cache/FileStore.html#method_expiration","d":"<p>Get the expiration time based on the given seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::getFilesystem","p":"Illuminate/Cache/FileStore.html#method_getFilesystem","d":"<p>Get the Filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::getDirectory","p":"Illuminate/Cache/FileStore.html#method_getDirectory","d":"<p>Get the working directory of the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\FileStore::getPrefix","p":"Illuminate/Cache/FileStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\HasCacheLock::lock","p":"Illuminate/Cache/HasCacheLock.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\HasCacheLock::restoreLock","p":"Illuminate/Cache/HasCacheLock.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::__construct","p":"Illuminate/Cache/Lock.html#method___construct","d":"<p>Create a new lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::acquire","p":"Illuminate/Cache/Lock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::release","p":"Illuminate/Cache/Lock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::getCurrentOwner","p":"Illuminate/Cache/Lock.html#method_getCurrentOwner","d":"<p>Returns the owner value written into the driver for this lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::get","p":"Illuminate/Cache/Lock.html#method_get","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::block","p":"Illuminate/Cache/Lock.html#method_block","d":"<p>Attempt to acquire the lock for the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::owner","p":"Illuminate/Cache/Lock.html#method_owner","d":"<p>Returns the current owner of the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::isOwnedByCurrentProcess","p":"Illuminate/Cache/Lock.html#method_isOwnedByCurrentProcess","d":"<p>Determines whether this lock is allowed to release the lock in the driver.</p>"},{"t":"M","n":"Illuminate\\Cache\\Lock::betweenBlockedAttemptsSleepFor","p":"Illuminate/Cache/Lock.html#method_betweenBlockedAttemptsSleepFor","d":"<p>Specify the number of milliseconds to sleep in between blocked lock acquisition attempts.</p>"},{"t":"M","n":"Illuminate\\Cache\\LuaScripts::releaseLock","p":"Illuminate/Cache/LuaScripts.html#method_releaseLock","d":"<p>Get the Lua script to atomically release a lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedConnector::connect","p":"Illuminate/Cache/MemcachedConnector.html#method_connect","d":"<p>Create a new Memcached connection.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedConnector::getMemcached","p":"Illuminate/Cache/MemcachedConnector.html#method_getMemcached","d":"<p>Get a new Memcached instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedConnector::createMemcachedInstance","p":"Illuminate/Cache/MemcachedConnector.html#method_createMemcachedInstance","d":"<p>Create the Memcached instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedConnector::setCredentials","p":"Illuminate/Cache/MemcachedConnector.html#method_setCredentials","d":"<p>Set the SASL credentials on the Memcached connection.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedLock::__construct","p":"Illuminate/Cache/MemcachedLock.html#method___construct","d":"<p>Create a new lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedLock::acquire","p":"Illuminate/Cache/MemcachedLock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedLock::release","p":"Illuminate/Cache/MemcachedLock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedLock::forceRelease","p":"Illuminate/Cache/MemcachedLock.html#method_forceRelease","d":"<p>Releases this lock in disregard of ownership.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedLock::getCurrentOwner","p":"Illuminate/Cache/MemcachedLock.html#method_getCurrentOwner","d":"<p>Returns the owner value written into the driver for this lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::__construct","p":"Illuminate/Cache/MemcachedStore.html#method___construct","d":"<p>Create a new Memcached store.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::get","p":"Illuminate/Cache/MemcachedStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::many","p":"Illuminate/Cache/MemcachedStore.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::put","p":"Illuminate/Cache/MemcachedStore.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::putMany","p":"Illuminate/Cache/MemcachedStore.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::add","p":"Illuminate/Cache/MemcachedStore.html#method_add","d":"<p>Store an item in the cache if the key doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::increment","p":"Illuminate/Cache/MemcachedStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::decrement","p":"Illuminate/Cache/MemcachedStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::forever","p":"Illuminate/Cache/MemcachedStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::lock","p":"Illuminate/Cache/MemcachedStore.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::restoreLock","p":"Illuminate/Cache/MemcachedStore.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::forget","p":"Illuminate/Cache/MemcachedStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::flush","p":"Illuminate/Cache/MemcachedStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::calculateExpiration","p":"Illuminate/Cache/MemcachedStore.html#method_calculateExpiration","d":"<p>Get the expiration time of the key.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::toTimestamp","p":"Illuminate/Cache/MemcachedStore.html#method_toTimestamp","d":"<p>Get the UNIX timestamp for the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::getMemcached","p":"Illuminate/Cache/MemcachedStore.html#method_getMemcached","d":"<p>Get the underlying Memcached connection.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::getPrefix","p":"Illuminate/Cache/MemcachedStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\MemcachedStore::setPrefix","p":"Illuminate/Cache/MemcachedStore.html#method_setPrefix","d":"<p>Set the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\NoLock::acquire","p":"Illuminate/Cache/NoLock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\NoLock::release","p":"Illuminate/Cache/NoLock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\NoLock::forceRelease","p":"Illuminate/Cache/NoLock.html#method_forceRelease","d":"<p>Releases this lock in disregard of ownership.</p>"},{"t":"M","n":"Illuminate\\Cache\\NoLock::getCurrentOwner","p":"Illuminate/Cache/NoLock.html#method_getCurrentOwner","d":"<p>Returns the owner value written into the driver for this lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::get","p":"Illuminate/Cache/NullStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::put","p":"Illuminate/Cache/NullStore.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::increment","p":"Illuminate/Cache/NullStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::decrement","p":"Illuminate/Cache/NullStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::forever","p":"Illuminate/Cache/NullStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::lock","p":"Illuminate/Cache/NullStore.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::restoreLock","p":"Illuminate/Cache/NullStore.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::forget","p":"Illuminate/Cache/NullStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::flush","p":"Illuminate/Cache/NullStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\NullStore::getPrefix","p":"Illuminate/Cache/NullStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\PhpRedisLock::__construct","p":"Illuminate/Cache/PhpRedisLock.html#method___construct","d":"<p>Create a new phpredis lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\PhpRedisLock::release","p":"Illuminate/Cache/PhpRedisLock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::__construct","p":"Illuminate/Cache/RateLimiter.html#method___construct","d":"<p>Create a new rate limiter instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::for","p":"Illuminate/Cache/RateLimiter.html#method_for","d":"<p>Register a named limiter configuration.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::limiter","p":"Illuminate/Cache/RateLimiter.html#method_limiter","d":"<p>Get the given named rate limiter.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::attempt","p":"Illuminate/Cache/RateLimiter.html#method_attempt","d":"<p>Attempts to execute a callback if it's not limited.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::tooManyAttempts","p":"Illuminate/Cache/RateLimiter.html#method_tooManyAttempts","d":"<p>Determine if the given key has been &quot;accessed&quot; too many times.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::hit","p":"Illuminate/Cache/RateLimiter.html#method_hit","d":"<p>Increment the counter for a given key for a given decay time.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::attempts","p":"Illuminate/Cache/RateLimiter.html#method_attempts","d":"<p>Get the number of attempts for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::resetAttempts","p":"Illuminate/Cache/RateLimiter.html#method_resetAttempts","d":"<p>Reset the number of attempts for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::remaining","p":"Illuminate/Cache/RateLimiter.html#method_remaining","d":"<p>Get the number of retries left for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::retriesLeft","p":"Illuminate/Cache/RateLimiter.html#method_retriesLeft","d":"<p>Get the number of retries left for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::clear","p":"Illuminate/Cache/RateLimiter.html#method_clear","d":"<p>Clear the hits and lockout timer for the given key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::availableIn","p":"Illuminate/Cache/RateLimiter.html#method_availableIn","d":"<p>Get the number of seconds until the &quot;key&quot; is accessible again.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiter::cleanRateLimiterKey","p":"Illuminate/Cache/RateLimiter.html#method_cleanRateLimiterKey","d":"<p>Clean the rate limiter key from unicode characters.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\GlobalLimit::__construct","p":"Illuminate/Cache/RateLimiting/GlobalLimit.html#method___construct","d":"<p>Create a new limit instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Limit::__construct","p":"Illuminate/Cache/RateLimiting/Limit.html#method___construct","d":"<p>Create a new limit instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Limit::perMinute","p":"Illuminate/Cache/RateLimiting/Limit.html#method_perMinute","d":"<p>Create a new rate limit.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Limit::perMinutes","p":"Illuminate/Cache/RateLimiting/Limit.html#method_perMinutes","d":"<p>Create a new rate limit using minutes as decay time.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Limit::perHour","p":"Illuminate/Cache/RateLimiting/Limit.html#method_perHour","d":"<p>Create a new rate limit using hours as decay time.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Limit::perDay","p":"Illuminate/Cache/RateLimiting/Limit.html#method_perDay","d":"<p>Create a new rate limit using days as decay time.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Limit::none","p":"Illuminate/Cache/RateLimiting/Limit.html#method_none","d":"<p>Create a new unlimited rate limit.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Limit::by","p":"Illuminate/Cache/RateLimiting/Limit.html#method_by","d":"<p>Set the key of the rate limit.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Limit::response","p":"Illuminate/Cache/RateLimiting/Limit.html#method_response","d":"<p>Set the callback that should generate the response when the limit is exceeded.</p>"},{"t":"M","n":"Illuminate\\Cache\\RateLimiting\\Unlimited::__construct","p":"Illuminate/Cache/RateLimiting/Unlimited.html#method___construct","d":"<p>Create a new limit instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisLock::__construct","p":"Illuminate/Cache/RedisLock.html#method___construct","d":"<p>Create a new lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisLock::acquire","p":"Illuminate/Cache/RedisLock.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisLock::release","p":"Illuminate/Cache/RedisLock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisLock::forceRelease","p":"Illuminate/Cache/RedisLock.html#method_forceRelease","d":"<p>Releases this lock in disregard of ownership.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisLock::getCurrentOwner","p":"Illuminate/Cache/RedisLock.html#method_getCurrentOwner","d":"<p>Returns the owner value written into the driver for this lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisLock::getConnectionName","p":"Illuminate/Cache/RedisLock.html#method_getConnectionName","d":"<p>Get the name of the Redis connection being used to manage the lock.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::__construct","p":"Illuminate/Cache/RedisStore.html#method___construct","d":"<p>Create a new Redis store.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::get","p":"Illuminate/Cache/RedisStore.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::many","p":"Illuminate/Cache/RedisStore.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::put","p":"Illuminate/Cache/RedisStore.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::putMany","p":"Illuminate/Cache/RedisStore.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::add","p":"Illuminate/Cache/RedisStore.html#method_add","d":"<p>Store an item in the cache if the key doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::increment","p":"Illuminate/Cache/RedisStore.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::decrement","p":"Illuminate/Cache/RedisStore.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::forever","p":"Illuminate/Cache/RedisStore.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::lock","p":"Illuminate/Cache/RedisStore.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::restoreLock","p":"Illuminate/Cache/RedisStore.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::forget","p":"Illuminate/Cache/RedisStore.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::flush","p":"Illuminate/Cache/RedisStore.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::flushStaleTags","p":"Illuminate/Cache/RedisStore.html#method_flushStaleTags","d":"<p>Remove all expired tag set entries.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::tags","p":"Illuminate/Cache/RedisStore.html#method_tags","d":"<p>Begin executing a new tags operation.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::currentTags","p":"Illuminate/Cache/RedisStore.html#method_currentTags","d":"<p>Get a collection of all of the cache tags currently being used.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::connection","p":"Illuminate/Cache/RedisStore.html#method_connection","d":"<p>Get the Redis connection instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::lockConnection","p":"Illuminate/Cache/RedisStore.html#method_lockConnection","d":"<p>Get the Redis connection instance that should be used to manage locks.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::setConnection","p":"Illuminate/Cache/RedisStore.html#method_setConnection","d":"<p>Specify the name of the connection that should be used to store data.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::setLockConnection","p":"Illuminate/Cache/RedisStore.html#method_setLockConnection","d":"<p>Specify the name of the connection that should be used to manage locks.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::getRedis","p":"Illuminate/Cache/RedisStore.html#method_getRedis","d":"<p>Get the Redis database instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::getPrefix","p":"Illuminate/Cache/RedisStore.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::setPrefix","p":"Illuminate/Cache/RedisStore.html#method_setPrefix","d":"<p>Set the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::serialize","p":"Illuminate/Cache/RedisStore.html#method_serialize","d":"<p>Serialize the value.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisStore::unserialize","p":"Illuminate/Cache/RedisStore.html#method_unserialize","d":"<p>Unserialize the value.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTagSet::addEntry","p":"Illuminate/Cache/RedisTagSet.html#method_addEntry","d":"<p>Add a reference entry to the tag set's underlying sorted set.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTagSet::entries","p":"Illuminate/Cache/RedisTagSet.html#method_entries","d":"<p>Get all of the cache entry keys for the tag set.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTagSet::flushStaleEntries","p":"Illuminate/Cache/RedisTagSet.html#method_flushStaleEntries","d":"<p>Remove the stale entries from the tag set.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTagSet::flushTag","p":"Illuminate/Cache/RedisTagSet.html#method_flushTag","d":"<p>Flush the tag from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTagSet::resetTag","p":"Illuminate/Cache/RedisTagSet.html#method_resetTag","d":"<p>Reset the tag and return the new tag identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTagSet::tagId","p":"Illuminate/Cache/RedisTagSet.html#method_tagId","d":"<p>Get the unique tag identifier for a given tag.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTagSet::tagKey","p":"Illuminate/Cache/RedisTagSet.html#method_tagKey","d":"<p>Get the tag identifier key for a given tag.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::add","p":"Illuminate/Cache/RedisTaggedCache.html#method_add","d":"<p>Store an item in the cache if the key does not exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::put","p":"Illuminate/Cache/RedisTaggedCache.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::increment","p":"Illuminate/Cache/RedisTaggedCache.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::decrement","p":"Illuminate/Cache/RedisTaggedCache.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::forever","p":"Illuminate/Cache/RedisTaggedCache.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::flush","p":"Illuminate/Cache/RedisTaggedCache.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::flushValues","p":"Illuminate/Cache/RedisTaggedCache.html#method_flushValues","d":"<p>Flush the individual cache entries for the tags.</p>"},{"t":"M","n":"Illuminate\\Cache\\RedisTaggedCache::flushStale","p":"Illuminate/Cache/RedisTaggedCache.html#method_flushStale","d":"<p>Remove all stale reference entries from the tag set.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::__construct","p":"Illuminate/Cache/Repository.html#method___construct","d":"<p>Create a new cache repository instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::has","p":"Illuminate/Cache/Repository.html#method_has","d":"<p>Determine if an item exists in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::missing","p":"Illuminate/Cache/Repository.html#method_missing","d":"<p>Determine if an item doesn't exist in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::get","p":"Illuminate/Cache/Repository.html#method_get","d":null},{"t":"M","n":"Illuminate\\Cache\\Repository::many","p":"Illuminate/Cache/Repository.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::getMultiple","p":"Illuminate/Cache/Repository.html#method_getMultiple","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Cache\\Repository::handleManyResult","p":"Illuminate/Cache/Repository.html#method_handleManyResult","d":"<p>Handle a result for the &quot;many&quot; method.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::pull","p":"Illuminate/Cache/Repository.html#method_pull","d":null},{"t":"M","n":"Illuminate\\Cache\\Repository::put","p":"Illuminate/Cache/Repository.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::set","p":"Illuminate/Cache/Repository.html#method_set","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Cache\\Repository::putMany","p":"Illuminate/Cache/Repository.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::putManyForever","p":"Illuminate/Cache/Repository.html#method_putManyForever","d":"<p>Store multiple items in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::setMultiple","p":"Illuminate/Cache/Repository.html#method_setMultiple","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Cache\\Repository::add","p":"Illuminate/Cache/Repository.html#method_add","d":"<p>Store an item in the cache if the key does not exist.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::increment","p":"Illuminate/Cache/Repository.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::decrement","p":"Illuminate/Cache/Repository.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::forever","p":"Illuminate/Cache/Repository.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::remember","p":"Illuminate/Cache/Repository.html#method_remember","d":null},{"t":"M","n":"Illuminate\\Cache\\Repository::sear","p":"Illuminate/Cache/Repository.html#method_sear","d":null},{"t":"M","n":"Illuminate\\Cache\\Repository::rememberForever","p":"Illuminate/Cache/Repository.html#method_rememberForever","d":null},{"t":"M","n":"Illuminate\\Cache\\Repository::forget","p":"Illuminate/Cache/Repository.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::delete","p":"Illuminate/Cache/Repository.html#method_delete","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Cache\\Repository::deleteMultiple","p":"Illuminate/Cache/Repository.html#method_deleteMultiple","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Cache\\Repository::clear","p":"Illuminate/Cache/Repository.html#method_clear","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Cache\\Repository::tags","p":"Illuminate/Cache/Repository.html#method_tags","d":"<p>Begin executing a new tags operation if the store supports it.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::itemKey","p":"Illuminate/Cache/Repository.html#method_itemKey","d":"<p>Format the key for a cache item.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::getSeconds","p":"Illuminate/Cache/Repository.html#method_getSeconds","d":"<p>Calculate the number of seconds for the given TTL.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::supportsTags","p":"Illuminate/Cache/Repository.html#method_supportsTags","d":"<p>Determine if the current store supports tags.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::getDefaultCacheTime","p":"Illuminate/Cache/Repository.html#method_getDefaultCacheTime","d":"<p>Get the default cache time.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::setDefaultCacheTime","p":"Illuminate/Cache/Repository.html#method_setDefaultCacheTime","d":"<p>Set the default cache time in seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::getStore","p":"Illuminate/Cache/Repository.html#method_getStore","d":"<p>Get the cache store implementation.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::setStore","p":"Illuminate/Cache/Repository.html#method_setStore","d":"<p>Set the cache store implementation.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::event","p":"Illuminate/Cache/Repository.html#method_event","d":"<p>Fire an event for this cache instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::getEventDispatcher","p":"Illuminate/Cache/Repository.html#method_getEventDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::setEventDispatcher","p":"Illuminate/Cache/Repository.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::offsetExists","p":"Illuminate/Cache/Repository.html#method_offsetExists","d":"<p>Determine if a cached value exists.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::offsetGet","p":"Illuminate/Cache/Repository.html#method_offsetGet","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::offsetSet","p":"Illuminate/Cache/Repository.html#method_offsetSet","d":"<p>Store an item in the cache for the default time.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::offsetUnset","p":"Illuminate/Cache/Repository.html#method_offsetUnset","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::__call","p":"Illuminate/Cache/Repository.html#method___call","d":"<p>Handle dynamic calls into macros or pass missing methods to the store.</p>"},{"t":"M","n":"Illuminate\\Cache\\Repository::__clone","p":"Illuminate/Cache/Repository.html#method___clone","d":"<p>Clone cache repository instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\RetrievesMultipleKeys::many","p":"Illuminate/Cache/RetrievesMultipleKeys.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Cache\\RetrievesMultipleKeys::putMany","p":"Illuminate/Cache/RetrievesMultipleKeys.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::__construct","p":"Illuminate/Cache/TagSet.html#method___construct","d":"<p>Create a new TagSet instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::reset","p":"Illuminate/Cache/TagSet.html#method_reset","d":"<p>Reset all tags in the set.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::resetTag","p":"Illuminate/Cache/TagSet.html#method_resetTag","d":"<p>Reset the tag and return the new tag identifier.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::flush","p":"Illuminate/Cache/TagSet.html#method_flush","d":"<p>Flush all the tags in the set.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::flushTag","p":"Illuminate/Cache/TagSet.html#method_flushTag","d":"<p>Flush the tag from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::getNamespace","p":"Illuminate/Cache/TagSet.html#method_getNamespace","d":"<p>Get a unique namespace that changes when any of the tags are flushed.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::tagIds","p":"Illuminate/Cache/TagSet.html#method_tagIds","d":"<p>Get an array of tag identifiers for all of the tags in the set.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::tagId","p":"Illuminate/Cache/TagSet.html#method_tagId","d":"<p>Get the unique tag identifier for a given tag.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::tagKey","p":"Illuminate/Cache/TagSet.html#method_tagKey","d":"<p>Get the tag identifier key for a given tag.</p>"},{"t":"M","n":"Illuminate\\Cache\\TagSet::getNames","p":"Illuminate/Cache/TagSet.html#method_getNames","d":"<p>Get all of the tag names in the set.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggableStore::tags","p":"Illuminate/Cache/TaggableStore.html#method_tags","d":"<p>Begin executing a new tags operation.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::__construct","p":"Illuminate/Cache/TaggedCache.html#method___construct","d":"<p>Create a new tagged cache instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::putMany","p":"Illuminate/Cache/TaggedCache.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::increment","p":"Illuminate/Cache/TaggedCache.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::decrement","p":"Illuminate/Cache/TaggedCache.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::flush","p":"Illuminate/Cache/TaggedCache.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::itemKey","p":"Illuminate/Cache/TaggedCache.html#method_itemKey","d":"<p>Format the key for a cache item.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::taggedItemKey","p":"Illuminate/Cache/TaggedCache.html#method_taggedItemKey","d":"<p>Get a fully qualified key for a tagged item.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::event","p":"Illuminate/Cache/TaggedCache.html#method_event","d":"<p>Fire an event for this cache instance.</p>"},{"t":"M","n":"Illuminate\\Cache\\TaggedCache::getTags","p":"Illuminate/Cache/TaggedCache.html#method_getTags","d":"<p>Get the tag set instance.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::__construct","p":"Illuminate/Config/Repository.html#method___construct","d":"<p>Create a new configuration repository.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::has","p":"Illuminate/Config/Repository.html#method_has","d":"<p>Determine if the given configuration value exists.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::get","p":"Illuminate/Config/Repository.html#method_get","d":"<p>Get the specified configuration value.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::getMany","p":"Illuminate/Config/Repository.html#method_getMany","d":"<p>Get many configuration values.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::set","p":"Illuminate/Config/Repository.html#method_set","d":"<p>Set a given configuration value.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::prepend","p":"Illuminate/Config/Repository.html#method_prepend","d":"<p>Prepend a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::push","p":"Illuminate/Config/Repository.html#method_push","d":"<p>Push a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::all","p":"Illuminate/Config/Repository.html#method_all","d":"<p>Get all of the configuration items for the application.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::offsetExists","p":"Illuminate/Config/Repository.html#method_offsetExists","d":"<p>Determine if the given configuration option exists.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::offsetGet","p":"Illuminate/Config/Repository.html#method_offsetGet","d":"<p>Get a configuration option.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::offsetSet","p":"Illuminate/Config/Repository.html#method_offsetSet","d":"<p>Set a configuration option.</p>"},{"t":"M","n":"Illuminate\\Config\\Repository::offsetUnset","p":"Illuminate/Config/Repository.html#method_offsetUnset","d":"<p>Unset a configuration option.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::__construct","p":"Illuminate/Console/Application.html#method___construct","d":"<p>Create a new Artisan console application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::run","p":"Illuminate/Console/Application.html#method_run","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Console\\Application::phpBinary","p":"Illuminate/Console/Application.html#method_phpBinary","d":"<p>Determine the proper PHP executable.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::artisanBinary","p":"Illuminate/Console/Application.html#method_artisanBinary","d":"<p>Determine the proper Artisan executable.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::formatCommandString","p":"Illuminate/Console/Application.html#method_formatCommandString","d":"<p>Format the given command as a fully-qualified executable command.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::starting","p":"Illuminate/Console/Application.html#method_starting","d":"<p>Register a console &quot;starting&quot; bootstrapper.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::bootstrap","p":"Illuminate/Console/Application.html#method_bootstrap","d":"<p>Bootstrap the console application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::forgetBootstrappers","p":"Illuminate/Console/Application.html#method_forgetBootstrappers","d":"<p>Clear the console application bootstrappers.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::call","p":"Illuminate/Console/Application.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::parseCommand","p":"Illuminate/Console/Application.html#method_parseCommand","d":"<p>Parse the incoming Artisan command and its input.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::output","p":"Illuminate/Console/Application.html#method_output","d":"<p>Get the output for the last run command.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::add","p":"Illuminate/Console/Application.html#method_add","d":"<p>Add a command to the console.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::addToParent","p":"Illuminate/Console/Application.html#method_addToParent","d":"<p>Add the command to the parent instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::resolve","p":"Illuminate/Console/Application.html#method_resolve","d":"<p>Add a command, resolving through the application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::resolveCommands","p":"Illuminate/Console/Application.html#method_resolveCommands","d":"<p>Resolve an array of commands through the application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::setContainerCommandLoader","p":"Illuminate/Console/Application.html#method_setContainerCommandLoader","d":"<p>Set the container command loader for lazy resolution.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::getDefaultInputDefinition","p":"Illuminate/Console/Application.html#method_getDefaultInputDefinition","d":"<p>Get the default input definition for the application.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::getEnvironmentOption","p":"Illuminate/Console/Application.html#method_getEnvironmentOption","d":"<p>Get the global environment option for the definition.</p>"},{"t":"M","n":"Illuminate\\Console\\Application::getLaravel","p":"Illuminate/Console/Application.html#method_getLaravel","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Console\\BufferedConsoleOutput::fetch","p":"Illuminate/Console/BufferedConsoleOutput.html#method_fetch","d":"<p>Empties the buffer and returns its content.</p>"},{"t":"M","n":"Illuminate\\Console\\BufferedConsoleOutput::doWrite","p":"Illuminate/Console/BufferedConsoleOutput.html#method_doWrite","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Console\\CacheCommandMutex::__construct","p":"Illuminate/Console/CacheCommandMutex.html#method___construct","d":"<p>Create a new command mutex.</p>"},{"t":"M","n":"Illuminate\\Console\\CacheCommandMutex::create","p":"Illuminate/Console/CacheCommandMutex.html#method_create","d":"<p>Attempt to obtain a command mutex for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\CacheCommandMutex::exists","p":"Illuminate/Console/CacheCommandMutex.html#method_exists","d":"<p>Determine if a command mutex exists for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\CacheCommandMutex::forget","p":"Illuminate/Console/CacheCommandMutex.html#method_forget","d":"<p>Release the mutex for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\CacheCommandMutex::commandMutexName","p":"Illuminate/Console/CacheCommandMutex.html#method_commandMutexName","d":""},{"t":"M","n":"Illuminate\\Console\\CacheCommandMutex::useStore","p":"Illuminate/Console/CacheCommandMutex.html#method_useStore","d":"<p>Specify the cache store that should be used.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::__construct","p":"Illuminate/Console/Command.html#method___construct","d":"<p>Create a new console command instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::configureUsingFluentDefinition","p":"Illuminate/Console/Command.html#method_configureUsingFluentDefinition","d":"<p>Configure the console command using a fluent definition.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::configureIsolation","p":"Illuminate/Console/Command.html#method_configureIsolation","d":"<p>Configure the console command for isolation.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::run","p":"Illuminate/Console/Command.html#method_run","d":"<p>Run the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::execute","p":"Illuminate/Console/Command.html#method_execute","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::commandIsolationMutex","p":"Illuminate/Console/Command.html#method_commandIsolationMutex","d":"<p>Get a command isolation mutex instance for the command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::resolveCommand","p":"Illuminate/Console/Command.html#method_resolveCommand","d":"<p>Resolve the console command instance for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::isHidden","p":"Illuminate/Console/Command.html#method_isHidden","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Console\\Command::setHidden","p":"Illuminate/Console/Command.html#method_setHidden","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Console\\Command::getLaravel","p":"Illuminate/Console/Command.html#method_getLaravel","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Command::setLaravel","p":"Illuminate/Console/Command.html#method_setLaravel","d":"<p>Set the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Console\\CommandMutex::create","p":"Illuminate/Console/CommandMutex.html#method_create","d":"<p>Attempt to obtain a command mutex for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\CommandMutex::exists","p":"Illuminate/Console/CommandMutex.html#method_exists","d":"<p>Determine if a command mutex exists for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\CommandMutex::forget","p":"Illuminate/Console/CommandMutex.html#method_forget","d":"<p>Release the mutex for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CallsCommands::resolveCommand","p":"Illuminate/Console/Concerns/CallsCommands.html#method_resolveCommand","d":"<p>Resolve the console command instance for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CallsCommands::call","p":"Illuminate/Console/Concerns/CallsCommands.html#method_call","d":"<p>Call another console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CallsCommands::callSilent","p":"Illuminate/Console/Concerns/CallsCommands.html#method_callSilent","d":"<p>Call another console command without output.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CallsCommands::callSilently","p":"Illuminate/Console/Concerns/CallsCommands.html#method_callSilently","d":"<p>Call another console command without output.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CallsCommands::runCommand","p":"Illuminate/Console/Concerns/CallsCommands.html#method_runCommand","d":"<p>Run the given the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CallsCommands::createInputFromArguments","p":"Illuminate/Console/Concerns/CallsCommands.html#method_createInputFromArguments","d":"<p>Create an input instance from the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CallsCommands::context","p":"Illuminate/Console/Concerns/CallsCommands.html#method_context","d":"<p>Get all of the context passed to the command.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CreatesMatchingTest::addTestOptions","p":"Illuminate/Console/Concerns/CreatesMatchingTest.html#method_addTestOptions","d":"<p>Add the standard command options for generating matching tests.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\CreatesMatchingTest::handleTestCreation","p":"Illuminate/Console/Concerns/CreatesMatchingTest.html#method_handleTestCreation","d":"<p>Create the matching test case if requested.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\HasParameters::specifyParameters","p":"Illuminate/Console/Concerns/HasParameters.html#method_specifyParameters","d":"<p>Specify the arguments and options on the command.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\HasParameters::getArguments","p":"Illuminate/Console/Concerns/HasParameters.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\HasParameters::getOptions","p":"Illuminate/Console/Concerns/HasParameters.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::hasArgument","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_hasArgument","d":"<p>Determine if the given argument is present.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::argument","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_argument","d":"<p>Get the value of a command argument.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::arguments","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_arguments","d":"<p>Get all of the arguments passed to the command.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::hasOption","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_hasOption","d":"<p>Determine if the given option is present.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::option","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_option","d":"<p>Get the value of a command option.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::options","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_options","d":"<p>Get all of the options passed to the command.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::confirm","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_confirm","d":"<p>Confirm a question with the user.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::ask","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_ask","d":"<p>Prompt the user for input.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::anticipate","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_anticipate","d":"<p>Prompt the user for input with auto completion.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::askWithCompletion","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_askWithCompletion","d":"<p>Prompt the user for input with auto completion.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::secret","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_secret","d":"<p>Prompt the user for input but hide the answer from the console.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::choice","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_choice","d":"<p>Give the user a single choice from an array of answers.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::table","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_table","d":"<p>Format input to textual table.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::withProgressBar","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_withProgressBar","d":"<p>Execute a given callback while advancing a progress bar.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::info","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_info","d":"<p>Write a string as information output.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::line","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_line","d":"<p>Write a string as standard output.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::comment","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_comment","d":"<p>Write a string as comment output.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::question","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_question","d":"<p>Write a string as question output.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::error","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_error","d":"<p>Write a string as error output.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::warn","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_warn","d":"<p>Write a string as warning output.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::alert","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_alert","d":"<p>Write a string in an alert box.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::newLine","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_newLine","d":"<p>Write a blank line.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::setInput","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_setInput","d":"<p>Set the input interface implementation.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::setOutput","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_setOutput","d":"<p>Set the output interface implementation.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::setVerbosity","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_setVerbosity","d":"<p>Set the verbosity level.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::parseVerbosity","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_parseVerbosity","d":"<p>Get the verbosity level in terms of Symfony's OutputInterface level.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithIO::getOutput","p":"Illuminate/Console/Concerns/InteractsWithIO.html#method_getOutput","d":"<p>Get the output implementation.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithSignals::trap","p":"Illuminate/Console/Concerns/InteractsWithSignals.html#method_trap","d":"<p>Define a callback to be run when the given signal(s) occurs.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\InteractsWithSignals::untrap","p":"Illuminate/Console/Concerns/InteractsWithSignals.html#method_untrap","d":"<p>Untrap signal handlers set within the command's handler.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\PromptsForMissingInput::interact","p":"Illuminate/Console/Concerns/PromptsForMissingInput.html#method_interact","d":"<p>Interact with the user before validating the input.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\PromptsForMissingInput::promptForMissingArguments","p":"Illuminate/Console/Concerns/PromptsForMissingInput.html#method_promptForMissingArguments","d":"<p>Prompt the user for any missing arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\PromptsForMissingInput::promptForMissingArgumentsUsing","p":"Illuminate/Console/Concerns/PromptsForMissingInput.html#method_promptForMissingArgumentsUsing","d":"<p>Prompt for missing input arguments using the returned questions.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\PromptsForMissingInput::afterPromptingForMissingArguments","p":"Illuminate/Console/Concerns/PromptsForMissingInput.html#method_afterPromptingForMissingArguments","d":"<p>Perform actions after the user was prompted for missing arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\Concerns\\PromptsForMissingInput::didReceiveOptions","p":"Illuminate/Console/Concerns/PromptsForMissingInput.html#method_didReceiveOptions","d":"<p>Whether the input contains any options that differ from the default values.</p>"},{"t":"M","n":"Illuminate\\Console\\ConfirmableTrait::confirmToProceed","p":"Illuminate/Console/ConfirmableTrait.html#method_confirmToProceed","d":"<p>Confirm before proceeding with the action.</p>"},{"t":"M","n":"Illuminate\\Console\\ConfirmableTrait::getDefaultConfirmCallback","p":"Illuminate/Console/ConfirmableTrait.html#method_getDefaultConfirmCallback","d":"<p>Get the default confirmation callback.</p>"},{"t":"M","n":"Illuminate\\Console\\ContainerCommandLoader::__construct","p":"Illuminate/Console/ContainerCommandLoader.html#method___construct","d":"<p>Create a new command loader instance.</p>"},{"t":"M","n":"Illuminate\\Console\\ContainerCommandLoader::get","p":"Illuminate/Console/ContainerCommandLoader.html#method_get","d":"<p>Resolve a command from the container.</p>"},{"t":"M","n":"Illuminate\\Console\\ContainerCommandLoader::has","p":"Illuminate/Console/ContainerCommandLoader.html#method_has","d":"<p>Determines if a command exists.</p>"},{"t":"M","n":"Illuminate\\Console\\ContainerCommandLoader::getNames","p":"Illuminate/Console/ContainerCommandLoader.html#method_getNames","d":"<p>Get the command names.</p>"},{"t":"M","n":"Illuminate\\Console\\Contracts\\NewLineAware::newLineWritten","p":"Illuminate/Console/Contracts/NewLineAware.html#method_newLineWritten","d":"<p>Whether a newline has already been written.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\ArtisanStarting::__construct","p":"Illuminate/Console/Events/ArtisanStarting.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\CommandFinished::__construct","p":"Illuminate/Console/Events/CommandFinished.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\CommandStarting::__construct","p":"Illuminate/Console/Events/CommandStarting.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\ScheduledBackgroundTaskFinished::__construct","p":"Illuminate/Console/Events/ScheduledBackgroundTaskFinished.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\ScheduledTaskFailed::__construct","p":"Illuminate/Console/Events/ScheduledTaskFailed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\ScheduledTaskFinished::__construct","p":"Illuminate/Console/Events/ScheduledTaskFinished.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\ScheduledTaskSkipped::__construct","p":"Illuminate/Console/Events/ScheduledTaskSkipped.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Events\\ScheduledTaskStarting::__construct","p":"Illuminate/Console/Events/ScheduledTaskStarting.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::__construct","p":"Illuminate/Console/GeneratorCommand.html#method___construct","d":"<p>Create a new controller creator command instance.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getStub","p":"Illuminate/Console/GeneratorCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::handle","p":"Illuminate/Console/GeneratorCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::qualifyClass","p":"Illuminate/Console/GeneratorCommand.html#method_qualifyClass","d":"<p>Parse the class name and format according to the root namespace.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::qualifyModel","p":"Illuminate/Console/GeneratorCommand.html#method_qualifyModel","d":"<p>Qualify the given model class base name.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::possibleModels","p":"Illuminate/Console/GeneratorCommand.html#method_possibleModels","d":"<p>Get a list of possible model names.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::possibleEvents","p":"Illuminate/Console/GeneratorCommand.html#method_possibleEvents","d":"<p>Get a list of possible event names.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getDefaultNamespace","p":"Illuminate/Console/GeneratorCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::alreadyExists","p":"Illuminate/Console/GeneratorCommand.html#method_alreadyExists","d":"<p>Determine if the class already exists.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getPath","p":"Illuminate/Console/GeneratorCommand.html#method_getPath","d":"<p>Get the destination class path.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::makeDirectory","p":"Illuminate/Console/GeneratorCommand.html#method_makeDirectory","d":"<p>Build the directory for the class if necessary.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::buildClass","p":"Illuminate/Console/GeneratorCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::replaceNamespace","p":"Illuminate/Console/GeneratorCommand.html#method_replaceNamespace","d":"<p>Replace the namespace for the given stub.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getNamespace","p":"Illuminate/Console/GeneratorCommand.html#method_getNamespace","d":"<p>Get the full namespace for a given class, without the class name.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::replaceClass","p":"Illuminate/Console/GeneratorCommand.html#method_replaceClass","d":"<p>Replace the class name for the given stub.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::sortImports","p":"Illuminate/Console/GeneratorCommand.html#method_sortImports","d":"<p>Alphabetically sorts the imports for the given stub.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getNameInput","p":"Illuminate/Console/GeneratorCommand.html#method_getNameInput","d":"<p>Get the desired class name from the input.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::rootNamespace","p":"Illuminate/Console/GeneratorCommand.html#method_rootNamespace","d":"<p>Get the root namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::userProviderModel","p":"Illuminate/Console/GeneratorCommand.html#method_userProviderModel","d":"<p>Get the model for the default guard's user provider.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::isReservedName","p":"Illuminate/Console/GeneratorCommand.html#method_isReservedName","d":"<p>Checks whether the given name is reserved.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::viewPath","p":"Illuminate/Console/GeneratorCommand.html#method_viewPath","d":"<p>Get the first view directory path from the application configuration.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::getArguments","p":"Illuminate/Console/GeneratorCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\GeneratorCommand::promptForMissingArgumentsUsing","p":"Illuminate/Console/GeneratorCommand.html#method_promptForMissingArgumentsUsing","d":"<p>Prompt for missing input arguments using the returned questions.</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::__construct","p":"Illuminate/Console/OutputStyle.html#method___construct","d":"<p>Create a new Console OutputStyle instance.</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::write","p":"Illuminate/Console/OutputStyle.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::writeln","p":"Illuminate/Console/OutputStyle.html#method_writeln","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::newLine","p":"Illuminate/Console/OutputStyle.html#method_newLine","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::newLineWritten","p":"Illuminate/Console/OutputStyle.html#method_newLineWritten","d":"<p>Whether a newline has already been written.</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::isQuiet","p":"Illuminate/Console/OutputStyle.html#method_isQuiet","d":"<p>Returns whether verbosity is quiet (-q).</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::isVerbose","p":"Illuminate/Console/OutputStyle.html#method_isVerbose","d":"<p>Returns whether verbosity is verbose (-v).</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::isVeryVerbose","p":"Illuminate/Console/OutputStyle.html#method_isVeryVerbose","d":"<p>Returns whether verbosity is very verbose (-vv).</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::isDebug","p":"Illuminate/Console/OutputStyle.html#method_isDebug","d":"<p>Returns whether verbosity is debug (-vvv).</p>"},{"t":"M","n":"Illuminate\\Console\\OutputStyle::getOutput","p":"Illuminate/Console/OutputStyle.html#method_getOutput","d":"<p>Get the underlying Symfony output implementation.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::parse","p":"Illuminate/Console/Parser.html#method_parse","d":"<p>Parse the given console command definition into an array.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::name","p":"Illuminate/Console/Parser.html#method_name","d":"<p>Extract the name of the command from the expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::parameters","p":"Illuminate/Console/Parser.html#method_parameters","d":"<p>Extract all of the parameters from the tokens.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::parseArgument","p":"Illuminate/Console/Parser.html#method_parseArgument","d":"<p>Parse an argument expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::parseOption","p":"Illuminate/Console/Parser.html#method_parseOption","d":"<p>Parse an option expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Parser::extractDescription","p":"Illuminate/Console/Parser.html#method_extractDescription","d":"<p>Parse the token into its token and description segments.</p>"},{"t":"M","n":"Illuminate\\Console\\QuestionHelper::writePrompt","p":"Illuminate/Console/QuestionHelper.html#method_writePrompt","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Console\\QuestionHelper::ensureEndsWithPunctuation","p":"Illuminate/Console/QuestionHelper.html#method_ensureEndsWithPunctuation","d":"<p>Ensures the given string ends with punctuation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheAware::useStore","p":"Illuminate/Console/Scheduling/CacheAware.html#method_useStore","d":"<p>Specify the cache store that should be used.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheEventMutex::__construct","p":"Illuminate/Console/Scheduling/CacheEventMutex.html#method___construct","d":"<p>Create a new overlapping strategy.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheEventMutex::create","p":"Illuminate/Console/Scheduling/CacheEventMutex.html#method_create","d":"<p>Attempt to obtain an event mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheEventMutex::exists","p":"Illuminate/Console/Scheduling/CacheEventMutex.html#method_exists","d":"<p>Determine if an event mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheEventMutex::forget","p":"Illuminate/Console/Scheduling/CacheEventMutex.html#method_forget","d":"<p>Clear the event mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheEventMutex::useStore","p":"Illuminate/Console/Scheduling/CacheEventMutex.html#method_useStore","d":"<p>Specify the cache store that should be used.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheSchedulingMutex::__construct","p":"Illuminate/Console/Scheduling/CacheSchedulingMutex.html#method___construct","d":"<p>Create a new scheduling strategy.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheSchedulingMutex::create","p":"Illuminate/Console/Scheduling/CacheSchedulingMutex.html#method_create","d":"<p>Attempt to obtain a scheduling mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheSchedulingMutex::exists","p":"Illuminate/Console/Scheduling/CacheSchedulingMutex.html#method_exists","d":"<p>Determine if a scheduling mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheSchedulingMutex::useStore","p":"Illuminate/Console/Scheduling/CacheSchedulingMutex.html#method_useStore","d":"<p>Specify the cache store that should be used.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::__construct","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::run","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_run","d":"<p>Run the callback event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::shouldSkipDueToOverlapping","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_shouldSkipDueToOverlapping","d":"<p>Determine if the event should skip because another process is overlapping.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::runInBackground","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_runInBackground","d":"<p>Indicate that the callback should run in the background.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::execute","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_execute","d":"<p>Run the callback.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::withoutOverlapping","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_withoutOverlapping","d":"<p>Do not allow the event to overlap each other.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::onOneServer","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_onOneServer","d":"<p>Allow the event to only run on one server for each cron expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::getSummaryForDisplay","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_getSummaryForDisplay","d":"<p>Get the summary of the event for display.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::mutexName","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_mutexName","d":"<p>Get the mutex name for the scheduled command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CallbackEvent::removeMutex","p":"Illuminate/Console/Scheduling/CallbackEvent.html#method_removeMutex","d":"<p>Clear the mutex for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CommandBuilder::buildCommand","p":"Illuminate/Console/Scheduling/CommandBuilder.html#method_buildCommand","d":"<p>Build the command for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CommandBuilder::buildForegroundCommand","p":"Illuminate/Console/Scheduling/CommandBuilder.html#method_buildForegroundCommand","d":"<p>Build the command for running the event in the foreground.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CommandBuilder::buildBackgroundCommand","p":"Illuminate/Console/Scheduling/CommandBuilder.html#method_buildBackgroundCommand","d":"<p>Build the command for running the event in the background.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CommandBuilder::ensureCorrectUser","p":"Illuminate/Console/Scheduling/CommandBuilder.html#method_ensureCorrectUser","d":"<p>Finalize the event's command syntax with the correct user.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::__construct","p":"Illuminate/Console/Scheduling/Event.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::getDefaultOutput","p":"Illuminate/Console/Scheduling/Event.html#method_getDefaultOutput","d":"<p>Get the default output depending on the OS.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::run","p":"Illuminate/Console/Scheduling/Event.html#method_run","d":"<p>Run the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::shouldSkipDueToOverlapping","p":"Illuminate/Console/Scheduling/Event.html#method_shouldSkipDueToOverlapping","d":"<p>Determine if the event should skip because another process is overlapping.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::start","p":"Illuminate/Console/Scheduling/Event.html#method_start","d":"<p>Run the command process.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::execute","p":"Illuminate/Console/Scheduling/Event.html#method_execute","d":"<p>Run the command process.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::finish","p":"Illuminate/Console/Scheduling/Event.html#method_finish","d":"<p>Mark the command process as finished and run callbacks/cleanup.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::callBeforeCallbacks","p":"Illuminate/Console/Scheduling/Event.html#method_callBeforeCallbacks","d":"<p>Call all of the &quot;before&quot; callbacks for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::callAfterCallbacks","p":"Illuminate/Console/Scheduling/Event.html#method_callAfterCallbacks","d":"<p>Call all of the &quot;after&quot; callbacks for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::buildCommand","p":"Illuminate/Console/Scheduling/Event.html#method_buildCommand","d":"<p>Build the command string.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::isDue","p":"Illuminate/Console/Scheduling/Event.html#method_isDue","d":"<p>Determine if the given event should run based on the Cron expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::runsInMaintenanceMode","p":"Illuminate/Console/Scheduling/Event.html#method_runsInMaintenanceMode","d":"<p>Determine if the event runs in maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::expressionPasses","p":"Illuminate/Console/Scheduling/Event.html#method_expressionPasses","d":"<p>Determine if the Cron expression passes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::runsInEnvironment","p":"Illuminate/Console/Scheduling/Event.html#method_runsInEnvironment","d":"<p>Determine if the event runs in the given environment.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::filtersPass","p":"Illuminate/Console/Scheduling/Event.html#method_filtersPass","d":"<p>Determine if the filters pass for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::storeOutput","p":"Illuminate/Console/Scheduling/Event.html#method_storeOutput","d":"<p>Ensure that the output is stored on disk in a log file.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::sendOutputTo","p":"Illuminate/Console/Scheduling/Event.html#method_sendOutputTo","d":"<p>Send the output of the command to a given location.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::appendOutputTo","p":"Illuminate/Console/Scheduling/Event.html#method_appendOutputTo","d":"<p>Append the output of the command to a given location.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::emailOutputTo","p":"Illuminate/Console/Scheduling/Event.html#method_emailOutputTo","d":"<p>E-mail the results of the scheduled operation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::emailWrittenOutputTo","p":"Illuminate/Console/Scheduling/Event.html#method_emailWrittenOutputTo","d":"<p>E-mail the results of the scheduled operation if it produces output.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::emailOutputOnFailure","p":"Illuminate/Console/Scheduling/Event.html#method_emailOutputOnFailure","d":"<p>E-mail the results of the scheduled operation if it fails.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::ensureOutputIsBeingCaptured","p":"Illuminate/Console/Scheduling/Event.html#method_ensureOutputIsBeingCaptured","d":"<p>Ensure that the command output is being captured.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::emailOutput","p":"Illuminate/Console/Scheduling/Event.html#method_emailOutput","d":"<p>E-mail the output of the event to the recipients.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::getEmailSubject","p":"Illuminate/Console/Scheduling/Event.html#method_getEmailSubject","d":"<p>Get the e-mail subject line for output results.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::pingBefore","p":"Illuminate/Console/Scheduling/Event.html#method_pingBefore","d":"<p>Register a callback to ping a given URL before the job runs.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::pingBeforeIf","p":"Illuminate/Console/Scheduling/Event.html#method_pingBeforeIf","d":"<p>Register a callback to ping a given URL before the job runs if the given condition is true.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::thenPing","p":"Illuminate/Console/Scheduling/Event.html#method_thenPing","d":"<p>Register a callback to ping a given URL after the job runs.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::thenPingIf","p":"Illuminate/Console/Scheduling/Event.html#method_thenPingIf","d":"<p>Register a callback to ping a given URL after the job runs if the given condition is true.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::pingOnSuccess","p":"Illuminate/Console/Scheduling/Event.html#method_pingOnSuccess","d":"<p>Register a callback to ping a given URL if the operation succeeds.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::pingOnFailure","p":"Illuminate/Console/Scheduling/Event.html#method_pingOnFailure","d":"<p>Register a callback to ping a given URL if the operation fails.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::pingCallback","p":"Illuminate/Console/Scheduling/Event.html#method_pingCallback","d":"<p>Get the callback that pings the given URL.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::runInBackground","p":"Illuminate/Console/Scheduling/Event.html#method_runInBackground","d":"<p>State that the command should run in the background.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::user","p":"Illuminate/Console/Scheduling/Event.html#method_user","d":"<p>Set which user the command should run as.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::environments","p":"Illuminate/Console/Scheduling/Event.html#method_environments","d":"<p>Limit the environments the command should run in.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::evenInMaintenanceMode","p":"Illuminate/Console/Scheduling/Event.html#method_evenInMaintenanceMode","d":"<p>State that the command should run even in maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::withoutOverlapping","p":"Illuminate/Console/Scheduling/Event.html#method_withoutOverlapping","d":"<p>Do not allow the event to overlap each other.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::onOneServer","p":"Illuminate/Console/Scheduling/Event.html#method_onOneServer","d":"<p>Allow the event to only run on one server for each cron expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::when","p":"Illuminate/Console/Scheduling/Event.html#method_when","d":"<p>Register a callback to further filter the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::skip","p":"Illuminate/Console/Scheduling/Event.html#method_skip","d":"<p>Register a callback to further filter the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::before","p":"Illuminate/Console/Scheduling/Event.html#method_before","d":"<p>Register a callback to be called before the operation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::after","p":"Illuminate/Console/Scheduling/Event.html#method_after","d":"<p>Register a callback to be called after the operation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::then","p":"Illuminate/Console/Scheduling/Event.html#method_then","d":"<p>Register a callback to be called after the operation.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::thenWithOutput","p":"Illuminate/Console/Scheduling/Event.html#method_thenWithOutput","d":"<p>Register a callback that uses the output after the job runs.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::onSuccess","p":"Illuminate/Console/Scheduling/Event.html#method_onSuccess","d":"<p>Register a callback to be called if the operation succeeds.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::onSuccessWithOutput","p":"Illuminate/Console/Scheduling/Event.html#method_onSuccessWithOutput","d":"<p>Register a callback that uses the output if the operation succeeds.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::onFailure","p":"Illuminate/Console/Scheduling/Event.html#method_onFailure","d":"<p>Register a callback to be called if the operation fails.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::onFailureWithOutput","p":"Illuminate/Console/Scheduling/Event.html#method_onFailureWithOutput","d":"<p>Register a callback that uses the output if the operation fails.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::withOutputCallback","p":"Illuminate/Console/Scheduling/Event.html#method_withOutputCallback","d":"<p>Get a callback that provides output.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::name","p":"Illuminate/Console/Scheduling/Event.html#method_name","d":"<p>Set the human-friendly description of the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::description","p":"Illuminate/Console/Scheduling/Event.html#method_description","d":"<p>Set the human-friendly description of the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::getSummaryForDisplay","p":"Illuminate/Console/Scheduling/Event.html#method_getSummaryForDisplay","d":"<p>Get the summary of the event for display.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::nextRunDate","p":"Illuminate/Console/Scheduling/Event.html#method_nextRunDate","d":"<p>Determine the next due date for an event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::getExpression","p":"Illuminate/Console/Scheduling/Event.html#method_getExpression","d":"<p>Get the Cron expression for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::preventOverlapsUsing","p":"Illuminate/Console/Scheduling/Event.html#method_preventOverlapsUsing","d":"<p>Set the event mutex implementation to be used.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::mutexName","p":"Illuminate/Console/Scheduling/Event.html#method_mutexName","d":"<p>Get the mutex name for the scheduled command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::createMutexNameUsing","p":"Illuminate/Console/Scheduling/Event.html#method_createMutexNameUsing","d":"<p>Set the mutex name or name resolver callback.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Event::removeMutex","p":"Illuminate/Console/Scheduling/Event.html#method_removeMutex","d":"<p>Delete the mutex for the event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\EventMutex::create","p":"Illuminate/Console/Scheduling/EventMutex.html#method_create","d":"<p>Attempt to obtain an event mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\EventMutex::exists","p":"Illuminate/Console/Scheduling/EventMutex.html#method_exists","d":"<p>Determine if an event mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\EventMutex::forget","p":"Illuminate/Console/Scheduling/EventMutex.html#method_forget","d":"<p>Clear the event mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::cron","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_cron","d":"<p>The Cron expression representing the event's frequency.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::between","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_between","d":"<p>Schedule the event to run between start and end time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::unlessBetween","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_unlessBetween","d":"<p>Schedule the event to not run between start and end time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyMinute","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyMinute","d":"<p>Schedule the event to run every minute.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyTwoMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyTwoMinutes","d":"<p>Schedule the event to run every two minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyThreeMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyThreeMinutes","d":"<p>Schedule the event to run every three minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyFourMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyFourMinutes","d":"<p>Schedule the event to run every four minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyFiveMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyFiveMinutes","d":"<p>Schedule the event to run every five minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyTenMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyTenMinutes","d":"<p>Schedule the event to run every ten minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyFifteenMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyFifteenMinutes","d":"<p>Schedule the event to run every fifteen minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyThirtyMinutes","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyThirtyMinutes","d":"<p>Schedule the event to run every thirty minutes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::hourly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_hourly","d":"<p>Schedule the event to run hourly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::hourlyAt","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_hourlyAt","d":"<p>Schedule the event to run hourly at a given offset in the hour.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyOddHour","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyOddHour","d":"<p>Schedule the event to run every odd hour.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyTwoHours","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyTwoHours","d":"<p>Schedule the event to run every two hours.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyThreeHours","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyThreeHours","d":"<p>Schedule the event to run every three hours.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everyFourHours","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everyFourHours","d":"<p>Schedule the event to run every four hours.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::everySixHours","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_everySixHours","d":"<p>Schedule the event to run every six hours.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::daily","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_daily","d":"<p>Schedule the event to run daily.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::at","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_at","d":"<p>Schedule the command at a given time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::dailyAt","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_dailyAt","d":"<p>Schedule the event to run daily at a given time (10:00, 19:30, etc).</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::twiceDaily","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_twiceDaily","d":"<p>Schedule the event to run twice daily.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::twiceDailyAt","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_twiceDailyAt","d":"<p>Schedule the event to run twice daily at a given offset.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::weekdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_weekdays","d":"<p>Schedule the event to run only on weekdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::weekends","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_weekends","d":"<p>Schedule the event to run only on weekends.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::mondays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_mondays","d":"<p>Schedule the event to run only on Mondays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::tuesdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_tuesdays","d":"<p>Schedule the event to run only on Tuesdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::wednesdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_wednesdays","d":"<p>Schedule the event to run only on Wednesdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::thursdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_thursdays","d":"<p>Schedule the event to run only on Thursdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::fridays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_fridays","d":"<p>Schedule the event to run only on Fridays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::saturdays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_saturdays","d":"<p>Schedule the event to run only on Saturdays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::sundays","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_sundays","d":"<p>Schedule the event to run only on Sundays.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::weekly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_weekly","d":"<p>Schedule the event to run weekly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::weeklyOn","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_weeklyOn","d":"<p>Schedule the event to run weekly on a given day and time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::monthly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_monthly","d":"<p>Schedule the event to run monthly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::monthlyOn","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_monthlyOn","d":"<p>Schedule the event to run monthly on a given day and time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::twiceMonthly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_twiceMonthly","d":"<p>Schedule the event to run twice monthly at a given time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::lastDayOfMonth","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_lastDayOfMonth","d":"<p>Schedule the event to run on the last day of the month.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::quarterly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_quarterly","d":"<p>Schedule the event to run quarterly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::quarterlyOn","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_quarterlyOn","d":"<p>Schedule the event to run quarterly on a given day and time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::yearly","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_yearly","d":"<p>Schedule the event to run yearly.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::yearlyOn","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_yearlyOn","d":"<p>Schedule the event to run yearly on a given month, day, and time.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::days","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_days","d":"<p>Set the days of the week the command should run on.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::timezone","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_timezone","d":"<p>Set the timezone the date should be evaluated on.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ManagesFrequencies::spliceIntoPosition","p":"Illuminate/Console/Scheduling/ManagesFrequencies.html#method_spliceIntoPosition","d":"<p>Splice the given value into the given position of the expression.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::__construct","p":"Illuminate/Console/Scheduling/Schedule.html#method___construct","d":"<p>Create a new schedule instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::call","p":"Illuminate/Console/Scheduling/Schedule.html#method_call","d":"<p>Add a new callback event to the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::command","p":"Illuminate/Console/Scheduling/Schedule.html#method_command","d":"<p>Add a new Artisan command event to the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::job","p":"Illuminate/Console/Scheduling/Schedule.html#method_job","d":"<p>Add a new job callback event to the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::dispatchToQueue","p":"Illuminate/Console/Scheduling/Schedule.html#method_dispatchToQueue","d":"<p>Dispatch the given job to the queue.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::dispatchUniqueJobToQueue","p":"Illuminate/Console/Scheduling/Schedule.html#method_dispatchUniqueJobToQueue","d":"<p>Dispatch the given unique job to the queue.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::dispatchNow","p":"Illuminate/Console/Scheduling/Schedule.html#method_dispatchNow","d":"<p>Dispatch the given job right now.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::exec","p":"Illuminate/Console/Scheduling/Schedule.html#method_exec","d":"<p>Add a new command event to the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::compileParameters","p":"Illuminate/Console/Scheduling/Schedule.html#method_compileParameters","d":"<p>Compile parameters for a command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::compileArrayInput","p":"Illuminate/Console/Scheduling/Schedule.html#method_compileArrayInput","d":"<p>Compile array input for a command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::serverShouldRun","p":"Illuminate/Console/Scheduling/Schedule.html#method_serverShouldRun","d":"<p>Determine if the server is allowed to run this event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::dueEvents","p":"Illuminate/Console/Scheduling/Schedule.html#method_dueEvents","d":"<p>Get all of the events on the schedule that are due.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::events","p":"Illuminate/Console/Scheduling/Schedule.html#method_events","d":"<p>Get all of the events on the schedule.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::useCache","p":"Illuminate/Console/Scheduling/Schedule.html#method_useCache","d":"<p>Specify the cache store that should be used to store mutexes.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\Schedule::getDispatcher","p":"Illuminate/Console/Scheduling/Schedule.html#method_getDispatcher","d":"<p>Get the job dispatcher, if available.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleClearCacheCommand::handle","p":"Illuminate/Console/Scheduling/ScheduleClearCacheCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleFinishCommand::handle","p":"Illuminate/Console/Scheduling/ScheduleFinishCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleListCommand::handle","p":"Illuminate/Console/Scheduling/ScheduleListCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleListCommand::getTerminalWidth","p":"Illuminate/Console/Scheduling/ScheduleListCommand.html#method_getTerminalWidth","d":"<p>Get the terminal width.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleListCommand::resolveTerminalWidthUsing","p":"Illuminate/Console/Scheduling/ScheduleListCommand.html#method_resolveTerminalWidthUsing","d":"<p>Set a callback that should be used when resolving the terminal width.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleRunCommand::__construct","p":"Illuminate/Console/Scheduling/ScheduleRunCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleRunCommand::handle","p":"Illuminate/Console/Scheduling/ScheduleRunCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleRunCommand::runSingleServerEvent","p":"Illuminate/Console/Scheduling/ScheduleRunCommand.html#method_runSingleServerEvent","d":"<p>Run the given single server event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleRunCommand::runEvent","p":"Illuminate/Console/Scheduling/ScheduleRunCommand.html#method_runEvent","d":"<p>Run the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleTestCommand::handle","p":"Illuminate/Console/Scheduling/ScheduleTestCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\ScheduleWorkCommand::handle","p":"Illuminate/Console/Scheduling/ScheduleWorkCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\SchedulingMutex::create","p":"Illuminate/Console/Scheduling/SchedulingMutex.html#method_create","d":"<p>Attempt to obtain a scheduling mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\SchedulingMutex::exists","p":"Illuminate/Console/Scheduling/SchedulingMutex.html#method_exists","d":"<p>Determine if a scheduling mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Signals::__construct","p":"Illuminate/Console/Signals.html#method___construct","d":"<p>Create a new signal registrar instance.</p>"},{"t":"M","n":"Illuminate\\Console\\Signals::register","p":"Illuminate/Console/Signals.html#method_register","d":"<p>Register a new signal handler.</p>"},{"t":"M","n":"Illuminate\\Console\\Signals::initializeSignal","p":"Illuminate/Console/Signals.html#method_initializeSignal","d":"<p>Gets the signal's existing handler in array format.</p>"},{"t":"M","n":"Illuminate\\Console\\Signals::unregister","p":"Illuminate/Console/Signals.html#method_unregister","d":"<p>Unregister the current signal handlers.</p>"},{"t":"M","n":"Illuminate\\Console\\Signals::whenAvailable","p":"Illuminate/Console/Signals.html#method_whenAvailable","d":"<p>Execute the given callback if &quot;signals&quot; should be used and are available.</p>"},{"t":"M","n":"Illuminate\\Console\\Signals::getHandlers","p":"Illuminate/Console/Signals.html#method_getHandlers","d":"<p>Get the registry's handlers.</p>"},{"t":"M","n":"Illuminate\\Console\\Signals::setHandlers","p":"Illuminate/Console/Signals.html#method_setHandlers","d":"<p>Set the registry's handlers.</p>"},{"t":"M","n":"Illuminate\\Console\\Signals::resolveAvailabilityUsing","p":"Illuminate/Console/Signals.html#method_resolveAvailabilityUsing","d":null},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Alert::render","p":"Illuminate/Console/View/Components/Alert.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Ask::render","p":"Illuminate/Console/View/Components/Ask.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\AskWithCompletion::render","p":"Illuminate/Console/View/Components/AskWithCompletion.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\BulletList::render","p":"Illuminate/Console/View/Components/BulletList.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Choice::render","p":"Illuminate/Console/View/Components/Choice.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Component::__construct","p":"Illuminate/Console/View/Components/Component.html#method___construct","d":"<p>Creates a new component instance.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Component::renderView","p":"Illuminate/Console/View/Components/Component.html#method_renderView","d":"<p>Renders the given view.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Component::compile","p":"Illuminate/Console/View/Components/Component.html#method_compile","d":"<p>Compile the given view contents.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Component::mutate","p":"Illuminate/Console/View/Components/Component.html#method_mutate","d":"<p>Mutates the given data with the given set of mutators.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Component::usingQuestionHelper","p":"Illuminate/Console/View/Components/Component.html#method_usingQuestionHelper","d":"<p>Eventually performs a question using the component's question helper.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Confirm::render","p":"Illuminate/Console/View/Components/Confirm.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Error::render","p":"Illuminate/Console/View/Components/Error.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::__construct","p":"Illuminate/Console/View/Components/Factory.html#method___construct","d":"<p>Creates a new factory instance.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::__call","p":"Illuminate/Console/View/Components/Factory.html#method___call","d":"<p>Dynamically handle calls into the component instance.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::alert","p":"Illuminate/Console/View/Components/Factory.html#method_alert","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::ask","p":"Illuminate/Console/View/Components/Factory.html#method_ask","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::askWithCompletion","p":"Illuminate/Console/View/Components/Factory.html#method_askWithCompletion","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::bulletList","p":"Illuminate/Console/View/Components/Factory.html#method_bulletList","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::choice","p":"Illuminate/Console/View/Components/Factory.html#method_choice","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::confirm","p":"Illuminate/Console/View/Components/Factory.html#method_confirm","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::error","p":"Illuminate/Console/View/Components/Factory.html#method_error","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::info","p":"Illuminate/Console/View/Components/Factory.html#method_info","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::line","p":"Illuminate/Console/View/Components/Factory.html#method_line","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::task","p":"Illuminate/Console/View/Components/Factory.html#method_task","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::twoColumnDetail","p":"Illuminate/Console/View/Components/Factory.html#method_twoColumnDetail","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Factory::warn","p":"Illuminate/Console/View/Components/Factory.html#method_warn","d":""},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Info::render","p":"Illuminate/Console/View/Components/Info.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Line::render","p":"Illuminate/Console/View/Components/Line.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Mutators\\EnsureDynamicContentIsHighlighted::__invoke","p":"Illuminate/Console/View/Components/Mutators/EnsureDynamicContentIsHighlighted.html#method___invoke","d":"<p>Highlight dynamic content within the given string.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Mutators\\EnsureNoPunctuation::__invoke","p":"Illuminate/Console/View/Components/Mutators/EnsureNoPunctuation.html#method___invoke","d":"<p>Ensures the given string does not end with punctuation.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Mutators\\EnsurePunctuation::__invoke","p":"Illuminate/Console/View/Components/Mutators/EnsurePunctuation.html#method___invoke","d":"<p>Ensures the given string ends with punctuation.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Mutators\\EnsureRelativePaths::__invoke","p":"Illuminate/Console/View/Components/Mutators/EnsureRelativePaths.html#method___invoke","d":"<p>Ensures the given string only contains relative paths.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Task::render","p":"Illuminate/Console/View/Components/Task.html#method_render","d":null},{"t":"M","n":"Illuminate\\Console\\View\\Components\\TwoColumnDetail::render","p":"Illuminate/Console/View/Components/TwoColumnDetail.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Console\\View\\Components\\Warn::render","p":"Illuminate/Console/View/Components/Warn.html#method_render","d":"<p>Renders the component using the given arguments.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::call","p":"Illuminate/Container/BoundMethod.html#method_call","d":"<p>Call the given Closure / class@method and inject its dependencies.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::callClass","p":"Illuminate/Container/BoundMethod.html#method_callClass","d":"<p>Call a string reference to a class using Class@method syntax.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::callBoundMethod","p":"Illuminate/Container/BoundMethod.html#method_callBoundMethod","d":"<p>Call a method that has been bound to the container.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::normalizeMethod","p":"Illuminate/Container/BoundMethod.html#method_normalizeMethod","d":"<p>Normalize the given callback into a Class@method string.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::getMethodDependencies","p":"Illuminate/Container/BoundMethod.html#method_getMethodDependencies","d":"<p>Get all dependencies for a given method.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::getCallReflector","p":"Illuminate/Container/BoundMethod.html#method_getCallReflector","d":"<p>Get the proper reflection instance for the given callback.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::addDependencyForCallParameter","p":"Illuminate/Container/BoundMethod.html#method_addDependencyForCallParameter","d":"<p>Get the dependency for the given call parameter.</p>"},{"t":"M","n":"Illuminate\\Container\\BoundMethod::isCallableWithAtSign","p":"Illuminate/Container/BoundMethod.html#method_isCallableWithAtSign","d":"<p>Determine if the given string is in Class@method syntax.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::when","p":"Illuminate/Container/Container.html#method_when","d":"<p>Define a contextual binding.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::bound","p":"Illuminate/Container/Container.html#method_bound","d":"<p>Determine if the given abstract type has been bound.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::has","p":"Illuminate/Container/Container.html#method_has","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Container\\Container::resolved","p":"Illuminate/Container/Container.html#method_resolved","d":"<p>Determine if the given abstract type has been resolved.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::isShared","p":"Illuminate/Container/Container.html#method_isShared","d":"<p>Determine if a given type is shared.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::isAlias","p":"Illuminate/Container/Container.html#method_isAlias","d":"<p>Determine if a given string is an alias.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::bind","p":"Illuminate/Container/Container.html#method_bind","d":"<p>Register a binding with the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getClosure","p":"Illuminate/Container/Container.html#method_getClosure","d":"<p>Get the Closure to be used when building a type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::hasMethodBinding","p":"Illuminate/Container/Container.html#method_hasMethodBinding","d":"<p>Determine if the container has a method binding.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::bindMethod","p":"Illuminate/Container/Container.html#method_bindMethod","d":"<p>Bind a callback to resolve with Container::call.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::parseBindMethod","p":"Illuminate/Container/Container.html#method_parseBindMethod","d":"<p>Get the method to be bound in class@method format.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::callMethodBinding","p":"Illuminate/Container/Container.html#method_callMethodBinding","d":"<p>Get the method binding for the given method.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::addContextualBinding","p":"Illuminate/Container/Container.html#method_addContextualBinding","d":"<p>Add a contextual binding to the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::bindIf","p":"Illuminate/Container/Container.html#method_bindIf","d":"<p>Register a binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::singleton","p":"Illuminate/Container/Container.html#method_singleton","d":"<p>Register a shared binding in the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::singletonIf","p":"Illuminate/Container/Container.html#method_singletonIf","d":"<p>Register a shared binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::scoped","p":"Illuminate/Container/Container.html#method_scoped","d":"<p>Register a scoped binding in the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::scopedIf","p":"Illuminate/Container/Container.html#method_scopedIf","d":"<p>Register a scoped binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::extend","p":"Illuminate/Container/Container.html#method_extend","d":"<p>&quot;Extend&quot; an abstract type in the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::instance","p":"Illuminate/Container/Container.html#method_instance","d":"<p>Register an existing instance as shared in the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::removeAbstractAlias","p":"Illuminate/Container/Container.html#method_removeAbstractAlias","d":"<p>Remove an alias from the contextual binding alias cache.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::tag","p":"Illuminate/Container/Container.html#method_tag","d":"<p>Assign a set of tags to a given binding.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::tagged","p":"Illuminate/Container/Container.html#method_tagged","d":"<p>Resolve all of the bindings for a given tag.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::alias","p":"Illuminate/Container/Container.html#method_alias","d":"<p>Alias a type to a different name.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::rebinding","p":"Illuminate/Container/Container.html#method_rebinding","d":"<p>Bind a new callback to an abstract's rebind event.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::refresh","p":"Illuminate/Container/Container.html#method_refresh","d":"<p>Refresh an instance on the given target and method.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::rebound","p":"Illuminate/Container/Container.html#method_rebound","d":"<p>Fire the &quot;rebound&quot; callbacks for the given abstract type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getReboundCallbacks","p":"Illuminate/Container/Container.html#method_getReboundCallbacks","d":"<p>Get the rebound callbacks for a given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::wrap","p":"Illuminate/Container/Container.html#method_wrap","d":"<p>Wrap the given closure such that its dependencies will be injected when executed.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::call","p":"Illuminate/Container/Container.html#method_call","d":"<p>Call the given Closure / class@method and inject its dependencies.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::factory","p":"Illuminate/Container/Container.html#method_factory","d":"<p>Get a closure to resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::makeWith","p":"Illuminate/Container/Container.html#method_makeWith","d":"<p>An alias function name for make().</p>"},{"t":"M","n":"Illuminate\\Container\\Container::make","p":"Illuminate/Container/Container.html#method_make","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::get","p":"Illuminate/Container/Container.html#method_get","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Container\\Container::resolve","p":"Illuminate/Container/Container.html#method_resolve","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getConcrete","p":"Illuminate/Container/Container.html#method_getConcrete","d":"<p>Get the concrete type for a given abstract.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getContextualConcrete","p":"Illuminate/Container/Container.html#method_getContextualConcrete","d":"<p>Get the contextual concrete binding for the given abstract.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::findInContextualBindings","p":"Illuminate/Container/Container.html#method_findInContextualBindings","d":"<p>Find the concrete binding for the given abstract in the contextual binding array.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::isBuildable","p":"Illuminate/Container/Container.html#method_isBuildable","d":"<p>Determine if the given concrete is buildable.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::build","p":"Illuminate/Container/Container.html#method_build","d":"<p>Instantiate a concrete instance of the given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolveDependencies","p":"Illuminate/Container/Container.html#method_resolveDependencies","d":"<p>Resolve all of the dependencies from the ReflectionParameters.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::hasParameterOverride","p":"Illuminate/Container/Container.html#method_hasParameterOverride","d":"<p>Determine if the given dependency has a parameter override.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getParameterOverride","p":"Illuminate/Container/Container.html#method_getParameterOverride","d":"<p>Get a parameter override for a dependency.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getLastParameterOverride","p":"Illuminate/Container/Container.html#method_getLastParameterOverride","d":"<p>Get the last parameter override.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolvePrimitive","p":"Illuminate/Container/Container.html#method_resolvePrimitive","d":"<p>Resolve a non-class hinted primitive dependency.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolveClass","p":"Illuminate/Container/Container.html#method_resolveClass","d":"<p>Resolve a class based dependency from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolveVariadicClass","p":"Illuminate/Container/Container.html#method_resolveVariadicClass","d":"<p>Resolve a class based variadic dependency from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::notInstantiable","p":"Illuminate/Container/Container.html#method_notInstantiable","d":"<p>Throw an exception that the concrete is not instantiable.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::unresolvablePrimitive","p":"Illuminate/Container/Container.html#method_unresolvablePrimitive","d":"<p>Throw an exception for an unresolvable primitive.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::beforeResolving","p":"Illuminate/Container/Container.html#method_beforeResolving","d":"<p>Register a new before resolving callback for all types.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::resolving","p":"Illuminate/Container/Container.html#method_resolving","d":"<p>Register a new resolving callback.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::afterResolving","p":"Illuminate/Container/Container.html#method_afterResolving","d":"<p>Register a new after resolving callback for all types.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::fireBeforeResolvingCallbacks","p":"Illuminate/Container/Container.html#method_fireBeforeResolvingCallbacks","d":"<p>Fire all of the before resolving callbacks.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::fireBeforeCallbackArray","p":"Illuminate/Container/Container.html#method_fireBeforeCallbackArray","d":"<p>Fire an array of callbacks with an object.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::fireResolvingCallbacks","p":"Illuminate/Container/Container.html#method_fireResolvingCallbacks","d":"<p>Fire all of the resolving callbacks.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::fireAfterResolvingCallbacks","p":"Illuminate/Container/Container.html#method_fireAfterResolvingCallbacks","d":"<p>Fire all of the after resolving callbacks.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getCallbacksForType","p":"Illuminate/Container/Container.html#method_getCallbacksForType","d":"<p>Get all callbacks for a given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::fireCallbackArray","p":"Illuminate/Container/Container.html#method_fireCallbackArray","d":"<p>Fire an array of callbacks with an object.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getBindings","p":"Illuminate/Container/Container.html#method_getBindings","d":"<p>Get the container's bindings.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getAlias","p":"Illuminate/Container/Container.html#method_getAlias","d":"<p>Get the alias for an abstract if available.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getExtenders","p":"Illuminate/Container/Container.html#method_getExtenders","d":"<p>Get the extender callbacks for a given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::forgetExtenders","p":"Illuminate/Container/Container.html#method_forgetExtenders","d":"<p>Remove all of the extender callbacks for a given type.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::dropStaleInstances","p":"Illuminate/Container/Container.html#method_dropStaleInstances","d":"<p>Drop all of the stale instances and aliases.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::forgetInstance","p":"Illuminate/Container/Container.html#method_forgetInstance","d":"<p>Remove a resolved instance from the instance cache.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::forgetInstances","p":"Illuminate/Container/Container.html#method_forgetInstances","d":"<p>Clear all of the instances from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::forgetScopedInstances","p":"Illuminate/Container/Container.html#method_forgetScopedInstances","d":"<p>Clear all of the scoped instances from the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::flush","p":"Illuminate/Container/Container.html#method_flush","d":"<p>Flush the container of all bindings and resolved instances.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::getInstance","p":"Illuminate/Container/Container.html#method_getInstance","d":"<p>Get the globally available instance of the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::setInstance","p":"Illuminate/Container/Container.html#method_setInstance","d":"<p>Set the shared instance of the container.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::offsetExists","p":"Illuminate/Container/Container.html#method_offsetExists","d":"<p>Determine if a given offset exists.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::offsetGet","p":"Illuminate/Container/Container.html#method_offsetGet","d":"<p>Get the value at a given offset.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::offsetSet","p":"Illuminate/Container/Container.html#method_offsetSet","d":"<p>Set the value at a given offset.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::offsetUnset","p":"Illuminate/Container/Container.html#method_offsetUnset","d":"<p>Unset the value at a given offset.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::__get","p":"Illuminate/Container/Container.html#method___get","d":"<p>Dynamically access container services.</p>"},{"t":"M","n":"Illuminate\\Container\\Container::__set","p":"Illuminate/Container/Container.html#method___set","d":"<p>Dynamically set container services.</p>"},{"t":"M","n":"Illuminate\\Container\\ContextualBindingBuilder::__construct","p":"Illuminate/Container/ContextualBindingBuilder.html#method___construct","d":"<p>Create a new contextual binding builder.</p>"},{"t":"M","n":"Illuminate\\Container\\ContextualBindingBuilder::needs","p":"Illuminate/Container/ContextualBindingBuilder.html#method_needs","d":"<p>Define the abstract target that depends on the context.</p>"},{"t":"M","n":"Illuminate\\Container\\ContextualBindingBuilder::give","p":"Illuminate/Container/ContextualBindingBuilder.html#method_give","d":"<p>Define the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Container\\ContextualBindingBuilder::giveTagged","p":"Illuminate/Container/ContextualBindingBuilder.html#method_giveTagged","d":"<p>Define tagged services to be used as the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Container\\ContextualBindingBuilder::giveConfig","p":"Illuminate/Container/ContextualBindingBuilder.html#method_giveConfig","d":"<p>Specify the configuration item to bind as a primitive.</p>"},{"t":"M","n":"Illuminate\\Container\\RewindableGenerator::__construct","p":"Illuminate/Container/RewindableGenerator.html#method___construct","d":"<p>Create a new generator instance.</p>"},{"t":"M","n":"Illuminate\\Container\\RewindableGenerator::getIterator","p":"Illuminate/Container/RewindableGenerator.html#method_getIterator","d":"<p>Get an iterator from the generator.</p>"},{"t":"M","n":"Illuminate\\Container\\RewindableGenerator::count","p":"Illuminate/Container/RewindableGenerator.html#method_count","d":"<p>Get the total number of tagged services.</p>"},{"t":"M","n":"Illuminate\\Container\\Util::arrayWrap","p":"Illuminate/Container/Util.html#method_arrayWrap","d":"<p>If the given value is not an array and not null, wrap it in one.</p>"},{"t":"M","n":"Illuminate\\Container\\Util::unwrapIfClosure","p":"Illuminate/Container/Util.html#method_unwrapIfClosure","d":"<p>Return the default value of the given value.</p>"},{"t":"M","n":"Illuminate\\Container\\Util::getParameterClassName","p":"Illuminate/Container/Util.html#method_getParameterClassName","d":"<p>Get the class name of the given parameter's type, if possible.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Authorizable::can","p":"Illuminate/Contracts/Auth/Access/Authorizable.html#method_can","d":"<p>Determine if the entity has a given ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::has","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_has","d":"<p>Determine if a given ability has been defined.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::define","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_define","d":"<p>Define a new ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::resource","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_resource","d":"<p>Define abilities for a resource.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::policy","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_policy","d":"<p>Define a policy class for a given class type.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::before","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_before","d":"<p>Register a callback to run before all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::after","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_after","d":"<p>Register a callback to run after all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::allows","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_allows","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::denies","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_denies","d":"<p>Determine if the given ability should be denied for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::check","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_check","d":"<p>Determine if all of the given abilities should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::any","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_any","d":"<p>Determine if any one of the given abilities should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::authorize","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_authorize","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::inspect","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_inspect","d":"<p>Inspect the user for the given ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::raw","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_raw","d":"<p>Get the raw result from the authorization callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::getPolicyFor","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_getPolicyFor","d":"<p>Get a policy instance for a given class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::forUser","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_forUser","d":"<p>Get a guard instance for the given user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::abilities","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_abilities","d":"<p>Get all of the defined abilities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthIdentifierName","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthIdentifierName","d":"<p>Get the name of the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthIdentifier","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthIdentifier","d":"<p>Get the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthPassword","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthPassword","d":"<p>Get the password for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getRememberToken","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getRememberToken","d":"<p>Get the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::setRememberToken","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_setRememberToken","d":"<p>Set the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getRememberTokenName","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getRememberTokenName","d":"<p>Get the column name for the &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\CanResetPassword::getEmailForPasswordReset","p":"Illuminate/Contracts/Auth/CanResetPassword.html#method_getEmailForPasswordReset","d":"<p>Get the e-mail address where password reset links are sent.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\CanResetPassword::sendPasswordResetNotification","p":"Illuminate/Contracts/Auth/CanResetPassword.html#method_sendPasswordResetNotification","d":"<p>Send the password reset notification.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Factory::guard","p":"Illuminate/Contracts/Auth/Factory.html#method_guard","d":"<p>Get a guard instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Factory::shouldUse","p":"Illuminate/Contracts/Auth/Factory.html#method_shouldUse","d":"<p>Set the default guard the factory should serve.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::check","p":"Illuminate/Contracts/Auth/Guard.html#method_check","d":"<p>Determine if the current user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::guest","p":"Illuminate/Contracts/Auth/Guard.html#method_guest","d":"<p>Determine if the current user is a guest.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::user","p":"Illuminate/Contracts/Auth/Guard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::id","p":"Illuminate/Contracts/Auth/Guard.html#method_id","d":"<p>Get the ID for the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::validate","p":"Illuminate/Contracts/Auth/Guard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::hasUser","p":"Illuminate/Contracts/Auth/Guard.html#method_hasUser","d":"<p>Determine if the guard has a user instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::setUser","p":"Illuminate/Contracts/Auth/Guard.html#method_setUser","d":"<p>Set the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail::hasVerifiedEmail","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html#method_hasVerifiedEmail","d":"<p>Determine if the user has verified their email address.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail::markEmailAsVerified","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html#method_markEmailAsVerified","d":"<p>Mark the given user's email as verified.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail::sendEmailVerificationNotification","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html#method_sendEmailVerificationNotification","d":"<p>Send the email verification notification.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail::getEmailForVerification","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html#method_getEmailForVerification","d":"<p>Get the email address that should be used for verification.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::sendResetLink","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_sendResetLink","d":"<p>Send a password reset link to a user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::reset","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_reset","d":"<p>Reset the password for the given token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBrokerFactory::broker","p":"Illuminate/Contracts/Auth/PasswordBrokerFactory.html#method_broker","d":"<p>Get a password broker instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::attempt","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_attempt","d":"<p>Attempt to authenticate a user using the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::once","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_once","d":"<p>Log a user into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::login","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_login","d":"<p>Log a user into the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::loginUsingId","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_loginUsingId","d":"<p>Log the given user ID into the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::onceUsingId","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_onceUsingId","d":"<p>Log the given user ID into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::viaRemember","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_viaRemember","d":"<p>Determine if the user was authenticated via &quot;remember me&quot; cookie.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::logout","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth::basic","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html#method_basic","d":"<p>Attempt to authenticate using HTTP Basic Auth.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth::onceBasic","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html#method_onceBasic","d":"<p>Perform a stateless HTTP Basic login attempt.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveById","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveById","d":"<p>Retrieve a user by their unique identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveByToken","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveByToken","d":"<p>Retrieve a user by their unique identifier and &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::updateRememberToken","p":"Illuminate/Contracts/Auth/UserProvider.html#method_updateRememberToken","d":"<p>Update the &quot;remember me&quot; token for the given user in storage.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveByCredentials","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveByCredentials","d":"<p>Retrieve a user by the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::validateCredentials","p":"Illuminate/Contracts/Auth/UserProvider.html#method_validateCredentials","d":"<p>Validate a user against the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::auth","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::validAuthenticationResponse","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::broadcast","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Factory::connection","p":"Illuminate/Contracts/Broadcasting/Factory.html#method_connection","d":"<p>Get a broadcaster implementation by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\HasBroadcastChannel::broadcastChannelRoute","p":"Illuminate/Contracts/Broadcasting/HasBroadcastChannel.html#method_broadcastChannelRoute","d":"<p>Get the broadcast channel route definition that is associated with the given entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\HasBroadcastChannel::broadcastChannel","p":"Illuminate/Contracts/Broadcasting/HasBroadcastChannel.html#method_broadcastChannel","d":"<p>Get the broadcast channel name that is associated with the given entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast::broadcastOn","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcast.html#method_broadcastOn","d":"<p>Get the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatch","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatch","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatchSync","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatchSync","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatchNow","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::hasCommandHandler","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_hasCommandHandler","d":"<p>Determine if the given command has a handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::getCommandHandler","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_getCommandHandler","d":"<p>Retrieve the handler for a command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::pipeThrough","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_pipeThrough","d":"<p>Set the pipes commands should be piped through before dispatching.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::map","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_map","d":"<p>Map a command to a handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher::findBatch","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html#method_findBatch","d":"<p>Attempt to find the batch with the given ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher::batch","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html#method_batch","d":"<p>Create a new batch of queueable jobs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher::dispatchToQueue","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html#method_dispatchToQueue","d":"<p>Dispatch a command to its appropriate handler behind a queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Factory::store","p":"Illuminate/Contracts/Cache/Factory.html#method_store","d":"<p>Get a cache store instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::get","p":"Illuminate/Contracts/Cache/Lock.html#method_get","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::block","p":"Illuminate/Contracts/Cache/Lock.html#method_block","d":"<p>Attempt to acquire the lock for the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::release","p":"Illuminate/Contracts/Cache/Lock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::owner","p":"Illuminate/Contracts/Cache/Lock.html#method_owner","d":"<p>Returns the current owner of the lock.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::forceRelease","p":"Illuminate/Contracts/Cache/Lock.html#method_forceRelease","d":"<p>Releases this lock in disregard of ownership.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\LockProvider::lock","p":"Illuminate/Contracts/Cache/LockProvider.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\LockProvider::restoreLock","p":"Illuminate/Contracts/Cache/LockProvider.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::pull","p":"Illuminate/Contracts/Cache/Repository.html#method_pull","d":null},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::put","p":"Illuminate/Contracts/Cache/Repository.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::add","p":"Illuminate/Contracts/Cache/Repository.html#method_add","d":"<p>Store an item in the cache if the key does not exist.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::increment","p":"Illuminate/Contracts/Cache/Repository.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::decrement","p":"Illuminate/Contracts/Cache/Repository.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::forever","p":"Illuminate/Contracts/Cache/Repository.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::remember","p":"Illuminate/Contracts/Cache/Repository.html#method_remember","d":null},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::sear","p":"Illuminate/Contracts/Cache/Repository.html#method_sear","d":null},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::rememberForever","p":"Illuminate/Contracts/Cache/Repository.html#method_rememberForever","d":null},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::forget","p":"Illuminate/Contracts/Cache/Repository.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::getStore","p":"Illuminate/Contracts/Cache/Repository.html#method_getStore","d":"<p>Get the cache store implementation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::get","p":"Illuminate/Contracts/Cache/Store.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::many","p":"Illuminate/Contracts/Cache/Store.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::put","p":"Illuminate/Contracts/Cache/Store.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::putMany","p":"Illuminate/Contracts/Cache/Store.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::increment","p":"Illuminate/Contracts/Cache/Store.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::decrement","p":"Illuminate/Contracts/Cache/Store.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::forever","p":"Illuminate/Contracts/Cache/Store.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::forget","p":"Illuminate/Contracts/Cache/Store.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::flush","p":"Illuminate/Contracts/Cache/Store.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::getPrefix","p":"Illuminate/Contracts/Cache/Store.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::has","p":"Illuminate/Contracts/Config/Repository.html#method_has","d":"<p>Determine if the given configuration value exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::get","p":"Illuminate/Contracts/Config/Repository.html#method_get","d":"<p>Get the specified configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::all","p":"Illuminate/Contracts/Config/Repository.html#method_all","d":"<p>Get all of the configuration items for the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::set","p":"Illuminate/Contracts/Config/Repository.html#method_set","d":"<p>Set a given configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::prepend","p":"Illuminate/Contracts/Config/Repository.html#method_prepend","d":"<p>Prepend a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::push","p":"Illuminate/Contracts/Config/Repository.html#method_push","d":"<p>Push a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Application::call","p":"Illuminate/Contracts/Console/Application.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Application::output","p":"Illuminate/Contracts/Console/Application.html#method_output","d":"<p>Get the output from the last command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::bootstrap","p":"Illuminate/Contracts/Console/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for artisan commands.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::handle","p":"Illuminate/Contracts/Console/Kernel.html#method_handle","d":"<p>Handle an incoming console command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::call","p":"Illuminate/Contracts/Console/Kernel.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::queue","p":"Illuminate/Contracts/Console/Kernel.html#method_queue","d":"<p>Queue an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::all","p":"Illuminate/Contracts/Console/Kernel.html#method_all","d":"<p>Get all of the commands registered with the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::output","p":"Illuminate/Contracts/Console/Kernel.html#method_output","d":"<p>Get the output for the last run command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::terminate","p":"Illuminate/Contracts/Console/Kernel.html#method_terminate","d":"<p>Terminate the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bound","p":"Illuminate/Contracts/Container/Container.html#method_bound","d":"<p>Determine if the given abstract type has been bound.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::alias","p":"Illuminate/Contracts/Container/Container.html#method_alias","d":"<p>Alias a type to a different name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::tag","p":"Illuminate/Contracts/Container/Container.html#method_tag","d":"<p>Assign a set of tags to a given binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::tagged","p":"Illuminate/Contracts/Container/Container.html#method_tagged","d":"<p>Resolve all of the bindings for a given tag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bind","p":"Illuminate/Contracts/Container/Container.html#method_bind","d":"<p>Register a binding with the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bindMethod","p":"Illuminate/Contracts/Container/Container.html#method_bindMethod","d":"<p>Bind a callback to resolve with Container::call.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bindIf","p":"Illuminate/Contracts/Container/Container.html#method_bindIf","d":"<p>Register a binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::singleton","p":"Illuminate/Contracts/Container/Container.html#method_singleton","d":"<p>Register a shared binding in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::singletonIf","p":"Illuminate/Contracts/Container/Container.html#method_singletonIf","d":"<p>Register a shared binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::scoped","p":"Illuminate/Contracts/Container/Container.html#method_scoped","d":"<p>Register a scoped binding in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::scopedIf","p":"Illuminate/Contracts/Container/Container.html#method_scopedIf","d":"<p>Register a scoped binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::extend","p":"Illuminate/Contracts/Container/Container.html#method_extend","d":"<p>&quot;Extend&quot; an abstract type in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::instance","p":"Illuminate/Contracts/Container/Container.html#method_instance","d":"<p>Register an existing instance as shared in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::addContextualBinding","p":"Illuminate/Contracts/Container/Container.html#method_addContextualBinding","d":"<p>Add a contextual binding to the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::when","p":"Illuminate/Contracts/Container/Container.html#method_when","d":"<p>Define a contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::factory","p":"Illuminate/Contracts/Container/Container.html#method_factory","d":"<p>Get a closure to resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::flush","p":"Illuminate/Contracts/Container/Container.html#method_flush","d":"<p>Flush the container of all bindings and resolved instances.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::make","p":"Illuminate/Contracts/Container/Container.html#method_make","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::call","p":"Illuminate/Contracts/Container/Container.html#method_call","d":"<p>Call the given Closure / class@method and inject its dependencies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::resolved","p":"Illuminate/Contracts/Container/Container.html#method_resolved","d":"<p>Determine if the given abstract type has been resolved.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::beforeResolving","p":"Illuminate/Contracts/Container/Container.html#method_beforeResolving","d":"<p>Register a new before resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::resolving","p":"Illuminate/Contracts/Container/Container.html#method_resolving","d":"<p>Register a new resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::afterResolving","p":"Illuminate/Contracts/Container/Container.html#method_afterResolving","d":"<p>Register a new after resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::needs","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_needs","d":"<p>Define the abstract target that depends on the context.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::give","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_give","d":"<p>Define the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::giveTagged","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_giveTagged","d":"<p>Define tagged services to be used as the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::giveConfig","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_giveConfig","d":"<p>Specify the configuration item to bind as a primitive.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::make","p":"Illuminate/Contracts/Cookie/Factory.html#method_make","d":"<p>Create a new cookie instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::forever","p":"Illuminate/Contracts/Cookie/Factory.html#method_forever","d":"<p>Create a cookie that lasts &quot;forever&quot; (five years).</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::forget","p":"Illuminate/Contracts/Cookie/Factory.html#method_forget","d":"<p>Expire the given cookie.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::queue","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_queue","d":"<p>Queue a cookie to send with the next response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::unqueue","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_unqueue","d":"<p>Remove a cookie from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::getQueuedCookies","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_getQueuedCookies","d":"<p>Get the cookies which have been queued for the next request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\Castable::castUsing","p":"Illuminate/Contracts/Database/Eloquent/Castable.html#method_castUsing","d":null},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsAttributes::get","p":"Illuminate/Contracts/Database/Eloquent/CastsAttributes.html#method_get","d":"<p>Transform the attribute from the underlying model values.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsAttributes::set","p":"Illuminate/Contracts/Database/Eloquent/CastsAttributes.html#method_set","d":"<p>Transform the attribute to its underlying model values.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsInboundAttributes::set","p":"Illuminate/Contracts/Database/Eloquent/CastsInboundAttributes.html#method_set","d":"<p>Transform the attribute to its underlying model values.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\DeviatesCastableAttributes::increment","p":"Illuminate/Contracts/Database/Eloquent/DeviatesCastableAttributes.html#method_increment","d":"<p>Increment the attribute.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\DeviatesCastableAttributes::decrement","p":"Illuminate/Contracts/Database/Eloquent/DeviatesCastableAttributes.html#method_decrement","d":"<p>Decrement the attribute.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\SerializesCastableAttributes::serialize","p":"Illuminate/Contracts/Database/Eloquent/SerializesCastableAttributes.html#method_serialize","d":"<p>Serialize the attribute when converting the model to an array.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\SupportsPartialRelations::ofMany","p":"Illuminate/Contracts/Database/Eloquent/SupportsPartialRelations.html#method_ofMany","d":"<p>Indicate that the relation is a single result of a larger one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\SupportsPartialRelations::isOneOfMany","p":"Illuminate/Contracts/Database/Eloquent/SupportsPartialRelations.html#method_isOneOfMany","d":"<p>Determine whether the relationship is a one-of-many relationship.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\SupportsPartialRelations::getOneOfManySubQuery","p":"Illuminate/Contracts/Database/Eloquent/SupportsPartialRelations.html#method_getOneOfManySubQuery","d":"<p>Get the one of many inner join subselect query builder instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\ModelIdentifier::__construct","p":"Illuminate/Contracts/Database/ModelIdentifier.html#method___construct","d":"<p>Create a new model identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\ModelIdentifier::useCollectionClass","p":"Illuminate/Contracts/Database/ModelIdentifier.html#method_useCollectionClass","d":"<p>Specify the collection class that should be used when serializing / restoring collections.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Query\\Expression::getValue","p":"Illuminate/Contracts/Database/Query/Expression.html#method_getValue","d":"<p>Get the value of the expression.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::report","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_report","d":"<p>Report or log an exception.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::shouldReport","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_shouldReport","d":"<p>Determine if the exception should be reported.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::render","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_render","d":"<p>Render an exception into an HTTP response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::renderForConsole","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::encrypt","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_encrypt","d":"<p>Encrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::decrypt","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_decrypt","d":"<p>Decrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::getKey","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_getKey","d":"<p>Get the encryption key that the encrypter is currently using.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\StringEncrypter::encryptString","p":"Illuminate/Contracts/Encryption/StringEncrypter.html#method_encryptString","d":"<p>Encrypt a string without serialization.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\StringEncrypter::decryptString","p":"Illuminate/Contracts/Encryption/StringEncrypter.html#method_decryptString","d":"<p>Decrypt the given string without unserialization.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::listen","p":"Illuminate/Contracts/Events/Dispatcher.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::hasListeners","p":"Illuminate/Contracts/Events/Dispatcher.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::subscribe","p":"Illuminate/Contracts/Events/Dispatcher.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::until","p":"Illuminate/Contracts/Events/Dispatcher.html#method_until","d":"<p>Dispatch an event until the first non-null response is returned.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::dispatch","p":"Illuminate/Contracts/Events/Dispatcher.html#method_dispatch","d":"<p>Dispatch an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::push","p":"Illuminate/Contracts/Events/Dispatcher.html#method_push","d":"<p>Register an event and payload to be fired later.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::flush","p":"Illuminate/Contracts/Events/Dispatcher.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::forget","p":"Illuminate/Contracts/Events/Dispatcher.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::forgetPushed","p":"Illuminate/Contracts/Events/Dispatcher.html#method_forgetPushed","d":"<p>Forget all of the queued listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Cloud::url","p":"Illuminate/Contracts/Filesystem/Cloud.html#method_url","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Factory::disk","p":"Illuminate/Contracts/Filesystem/Factory.html#method_disk","d":"<p>Get a filesystem implementation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::exists","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_exists","d":"<p>Determine if a file exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::get","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_get","d":"<p>Get the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::readStream","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_readStream","d":"<p>Get a resource to read the file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::put","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_put","d":"<p>Write the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::writeStream","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_writeStream","d":"<p>Write a new file using a stream.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::getVisibility","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_getVisibility","d":"<p>Get the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::setVisibility","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_setVisibility","d":"<p>Set the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::prepend","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_prepend","d":"<p>Prepend to a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::append","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_append","d":"<p>Append to a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::delete","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_delete","d":"<p>Delete the file at a given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::copy","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_copy","d":"<p>Copy a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::move","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_move","d":"<p>Move a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::size","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_size","d":"<p>Get the file size of a given file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::lastModified","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_lastModified","d":"<p>Get the file's last modification time.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::files","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_files","d":"<p>Get an array of all files in a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::allFiles","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_allFiles","d":"<p>Get all of the files from the given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::directories","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_directories","d":"<p>Get all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::allDirectories","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_allDirectories","d":"<p>Get all (recursive) of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::makeDirectory","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_makeDirectory","d":"<p>Create a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::deleteDirectory","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_deleteDirectory","d":"<p>Recursively delete a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::version","p":"Illuminate/Contracts/Foundation/Application.html#method_version","d":"<p>Get the version number of the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::basePath","p":"Illuminate/Contracts/Foundation/Application.html#method_basePath","d":"<p>Get the base path of the Laravel installation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::bootstrapPath","p":"Illuminate/Contracts/Foundation/Application.html#method_bootstrapPath","d":"<p>Get the path to the bootstrap directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::configPath","p":"Illuminate/Contracts/Foundation/Application.html#method_configPath","d":"<p>Get the path to the application configuration files.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::databasePath","p":"Illuminate/Contracts/Foundation/Application.html#method_databasePath","d":"<p>Get the path to the database directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::langPath","p":"Illuminate/Contracts/Foundation/Application.html#method_langPath","d":"<p>Get the path to the language files.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::publicPath","p":"Illuminate/Contracts/Foundation/Application.html#method_publicPath","d":"<p>Get the path to the public directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::resourcePath","p":"Illuminate/Contracts/Foundation/Application.html#method_resourcePath","d":"<p>Get the path to the resources directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::storagePath","p":"Illuminate/Contracts/Foundation/Application.html#method_storagePath","d":"<p>Get the path to the storage directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::environment","p":"Illuminate/Contracts/Foundation/Application.html#method_environment","d":"<p>Get or check the current application environment.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::runningInConsole","p":"Illuminate/Contracts/Foundation/Application.html#method_runningInConsole","d":"<p>Determine if the application is running in the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::runningUnitTests","p":"Illuminate/Contracts/Foundation/Application.html#method_runningUnitTests","d":"<p>Determine if the application is running unit tests.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::hasDebugModeEnabled","p":"Illuminate/Contracts/Foundation/Application.html#method_hasDebugModeEnabled","d":"<p>Determine if the application is running with debug mode enabled.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::maintenanceMode","p":"Illuminate/Contracts/Foundation/Application.html#method_maintenanceMode","d":"<p>Get an instance of the maintenance mode manager implementation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::isDownForMaintenance","p":"Illuminate/Contracts/Foundation/Application.html#method_isDownForMaintenance","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::registerConfiguredProviders","p":"Illuminate/Contracts/Foundation/Application.html#method_registerConfiguredProviders","d":"<p>Register all of the configured providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::register","p":"Illuminate/Contracts/Foundation/Application.html#method_register","d":"<p>Register a service provider with the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::registerDeferredProvider","p":"Illuminate/Contracts/Foundation/Application.html#method_registerDeferredProvider","d":"<p>Register a deferred provider and service.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::resolveProvider","p":"Illuminate/Contracts/Foundation/Application.html#method_resolveProvider","d":"<p>Resolve a service provider instance from the class name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::boot","p":"Illuminate/Contracts/Foundation/Application.html#method_boot","d":"<p>Boot the application's service providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::booting","p":"Illuminate/Contracts/Foundation/Application.html#method_booting","d":"<p>Register a new boot listener.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::booted","p":"Illuminate/Contracts/Foundation/Application.html#method_booted","d":"<p>Register a new &quot;booted&quot; listener.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::bootstrapWith","p":"Illuminate/Contracts/Foundation/Application.html#method_bootstrapWith","d":"<p>Run the given array of bootstrap classes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::getLocale","p":"Illuminate/Contracts/Foundation/Application.html#method_getLocale","d":"<p>Get the current application locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::getNamespace","p":"Illuminate/Contracts/Foundation/Application.html#method_getNamespace","d":"<p>Get the application namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::getProviders","p":"Illuminate/Contracts/Foundation/Application.html#method_getProviders","d":"<p>Get the registered service provider instances if any exist.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::hasBeenBootstrapped","p":"Illuminate/Contracts/Foundation/Application.html#method_hasBeenBootstrapped","d":"<p>Determine if the application has been bootstrapped before.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::loadDeferredProviders","p":"Illuminate/Contracts/Foundation/Application.html#method_loadDeferredProviders","d":"<p>Load and boot all of the remaining deferred providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::setLocale","p":"Illuminate/Contracts/Foundation/Application.html#method_setLocale","d":"<p>Set the current application locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::shouldSkipMiddleware","p":"Illuminate/Contracts/Foundation/Application.html#method_shouldSkipMiddleware","d":"<p>Determine if middleware has been disabled for the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::terminating","p":"Illuminate/Contracts/Foundation/Application.html#method_terminating","d":"<p>Register a terminating callback with the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::terminate","p":"Illuminate/Contracts/Foundation/Application.html#method_terminate","d":"<p>Terminate the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesConfiguration::configurationIsCached","p":"Illuminate/Contracts/Foundation/CachesConfiguration.html#method_configurationIsCached","d":"<p>Determine if the application configuration is cached.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesConfiguration::getCachedConfigPath","p":"Illuminate/Contracts/Foundation/CachesConfiguration.html#method_getCachedConfigPath","d":"<p>Get the path to the configuration cache file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesConfiguration::getCachedServicesPath","p":"Illuminate/Contracts/Foundation/CachesConfiguration.html#method_getCachedServicesPath","d":"<p>Get the path to the cached services.php file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesRoutes::routesAreCached","p":"Illuminate/Contracts/Foundation/CachesRoutes.html#method_routesAreCached","d":"<p>Determine if the application routes are cached.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesRoutes::getCachedRoutesPath","p":"Illuminate/Contracts/Foundation/CachesRoutes.html#method_getCachedRoutesPath","d":"<p>Get the path to the routes cache file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\ExceptionRenderer::render","p":"Illuminate/Contracts/Foundation/ExceptionRenderer.html#method_render","d":"<p>Renders the given exception as HTML.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode::activate","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html#method_activate","d":"<p>Take the application down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode::deactivate","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html#method_deactivate","d":"<p>Take the application out of maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode::active","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html#method_active","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode::data","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html#method_data","d":"<p>Get the data array which was provided when the application was placed into maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::info","p":"Illuminate/Contracts/Hashing/Hasher.html#method_info","d":"<p>Get information about the given hashed value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::make","p":"Illuminate/Contracts/Hashing/Hasher.html#method_make","d":"<p>Hash the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::check","p":"Illuminate/Contracts/Hashing/Hasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::needsRehash","p":"Illuminate/Contracts/Hashing/Hasher.html#method_needsRehash","d":"<p>Check if the given hash has been hashed using the given options.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::bootstrap","p":"Illuminate/Contracts/Http/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for HTTP requests.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::handle","p":"Illuminate/Contracts/Http/Kernel.html#method_handle","d":"<p>Handle an incoming HTTP request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::terminate","p":"Illuminate/Contracts/Http/Kernel.html#method_terminate","d":"<p>Perform any final actions for the request lifecycle.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::getApplication","p":"Illuminate/Contracts/Http/Kernel.html#method_getApplication","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Attachable::toMailAttachment","p":"Illuminate/Contracts/Mail/Attachable.html#method_toMailAttachment","d":"<p>Get an attachment instance for this entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Factory::mailer","p":"Illuminate/Contracts/Mail/Factory.html#method_mailer","d":"<p>Get a mailer instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\MailQueue::queue","p":"Illuminate/Contracts/Mail/MailQueue.html#method_queue","d":"<p>Queue a new e-mail message for sending.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\MailQueue::later","p":"Illuminate/Contracts/Mail/MailQueue.html#method_later","d":"<p>Queue a new e-mail message for sending after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::send","p":"Illuminate/Contracts/Mail/Mailable.html#method_send","d":"<p>Send the message using the given mailer.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::queue","p":"Illuminate/Contracts/Mail/Mailable.html#method_queue","d":"<p>Queue the given message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::later","p":"Illuminate/Contracts/Mail/Mailable.html#method_later","d":"<p>Deliver the queued message after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::cc","p":"Illuminate/Contracts/Mail/Mailable.html#method_cc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::bcc","p":"Illuminate/Contracts/Mail/Mailable.html#method_bcc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::to","p":"Illuminate/Contracts/Mail/Mailable.html#method_to","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::locale","p":"Illuminate/Contracts/Mail/Mailable.html#method_locale","d":"<p>Set the locale of the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::mailer","p":"Illuminate/Contracts/Mail/Mailable.html#method_mailer","d":"<p>Set the name of the mailer that should be used to send the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::to","p":"Illuminate/Contracts/Mail/Mailer.html#method_to","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::bcc","p":"Illuminate/Contracts/Mail/Mailer.html#method_bcc","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::raw","p":"Illuminate/Contracts/Mail/Mailer.html#method_raw","d":"<p>Send a new message with only a raw text part.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::send","p":"Illuminate/Contracts/Mail/Mailer.html#method_send","d":"<p>Send a new message using a view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Dispatcher::send","p":"Illuminate/Contracts/Notifications/Dispatcher.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Dispatcher::sendNow","p":"Illuminate/Contracts/Notifications/Dispatcher.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::channel","p":"Illuminate/Contracts/Notifications/Factory.html#method_channel","d":"<p>Get a channel instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::send","p":"Illuminate/Contracts/Notifications/Factory.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::sendNow","p":"Illuminate/Contracts/Notifications/Factory.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::url","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_url","d":"<p>Get the URL for a given cursor.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::appends","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::fragment","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::withQueryString","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_withQueryString","d":"<p>Add all current query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::previousPageUrl","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::nextPageUrl","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_nextPageUrl","d":"<p>The URL for the next page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::items","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_items","d":"<p>Get all of the items being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::previousCursor","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_previousCursor","d":"<p>Get the &quot;cursor&quot; of the previous set of items.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::nextCursor","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_nextCursor","d":"<p>Get the &quot;cursor&quot; of the next set of items.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::perPage","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_perPage","d":"<p>Determine how many items are being shown per page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::cursor","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_cursor","d":"<p>Get the current cursor being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::hasPages","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::path","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_path","d":"<p>Get the base path for paginator generated URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::isEmpty","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty or not.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::isNotEmpty","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_isNotEmpty","d":"<p>Determine if the list of items is not empty.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::render","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_render","d":"<p>Render the paginator using a given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::getUrlRange","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_getUrlRange","d":"<p>Create a range of pagination URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::total","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_total","d":"<p>Determine the total number of items in the data store.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::lastPage","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_lastPage","d":"<p>Get the page number of the last available page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::url","p":"Illuminate/Contracts/Pagination/Paginator.html#method_url","d":"<p>Get the URL for a given page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::appends","p":"Illuminate/Contracts/Pagination/Paginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::fragment","p":"Illuminate/Contracts/Pagination/Paginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::nextPageUrl","p":"Illuminate/Contracts/Pagination/Paginator.html#method_nextPageUrl","d":"<p>The URL for the next page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::previousPageUrl","p":"Illuminate/Contracts/Pagination/Paginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::items","p":"Illuminate/Contracts/Pagination/Paginator.html#method_items","d":"<p>Get all of the items being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::firstItem","p":"Illuminate/Contracts/Pagination/Paginator.html#method_firstItem","d":"<p>Get the &quot;index&quot; of the first item being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::lastItem","p":"Illuminate/Contracts/Pagination/Paginator.html#method_lastItem","d":"<p>Get the &quot;index&quot; of the last item being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::perPage","p":"Illuminate/Contracts/Pagination/Paginator.html#method_perPage","d":"<p>Determine how many items are being shown per page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::currentPage","p":"Illuminate/Contracts/Pagination/Paginator.html#method_currentPage","d":"<p>Determine the current page being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::hasPages","p":"Illuminate/Contracts/Pagination/Paginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::hasMorePages","p":"Illuminate/Contracts/Pagination/Paginator.html#method_hasMorePages","d":"<p>Determine if there are more items in the data store.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::path","p":"Illuminate/Contracts/Pagination/Paginator.html#method_path","d":"<p>Get the base path for paginator generated URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::isEmpty","p":"Illuminate/Contracts/Pagination/Paginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty or not.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::isNotEmpty","p":"Illuminate/Contracts/Pagination/Paginator.html#method_isNotEmpty","d":"<p>Determine if the list of items is not empty.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::render","p":"Illuminate/Contracts/Pagination/Paginator.html#method_render","d":"<p>Render the paginator using a given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Hub::pipe","p":"Illuminate/Contracts/Pipeline/Hub.html#method_pipe","d":"<p>Send an object through one of the available pipelines.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::send","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_send","d":"<p>Set the traveler object being sent on the pipeline.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::through","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_through","d":"<p>Set the stops of the pipeline.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::via","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_via","d":"<p>Set the method to call on the stops.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::then","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_then","d":"<p>Run the pipeline with a final destination callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::id","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_id","d":"<p>Get the process ID if the process is still running.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::signal","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_signal","d":"<p>Send a signal to the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::running","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_running","d":"<p>Determine if the process is still running.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::output","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_output","d":"<p>Get the standard output for the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::errorOutput","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_errorOutput","d":"<p>Get the error output for the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::latestOutput","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_latestOutput","d":"<p>Get the latest standard output for the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::latestErrorOutput","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_latestErrorOutput","d":"<p>Get the latest error output for the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::wait","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_wait","d":"<p>Wait for the process to finish.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::command","p":"Illuminate/Contracts/Process/ProcessResult.html#method_command","d":"<p>Get the original command executed by the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::successful","p":"Illuminate/Contracts/Process/ProcessResult.html#method_successful","d":"<p>Determine if the process was successful.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::failed","p":"Illuminate/Contracts/Process/ProcessResult.html#method_failed","d":"<p>Determine if the process failed.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::exitCode","p":"Illuminate/Contracts/Process/ProcessResult.html#method_exitCode","d":"<p>Get the exit code of the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::output","p":"Illuminate/Contracts/Process/ProcessResult.html#method_output","d":"<p>Get the standard output of the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::errorOutput","p":"Illuminate/Contracts/Process/ProcessResult.html#method_errorOutput","d":"<p>Get the error output of the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::throw","p":"Illuminate/Contracts/Process/ProcessResult.html#method_throw","d":"<p>Throw an exception if the process failed.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::throwIf","p":"Illuminate/Contracts/Process/ProcessResult.html#method_throwIf","d":"<p>Throw an exception if the process failed and the given condition is true.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\ClearableQueue::clear","p":"Illuminate/Contracts/Queue/ClearableQueue.html#method_clear","d":"<p>Delete all of the jobs from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\EntityNotFoundException::__construct","p":"Illuminate/Contracts/Queue/EntityNotFoundException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\EntityResolver::resolve","p":"Illuminate/Contracts/Queue/EntityResolver.html#method_resolve","d":"<p>Resolve the entity for the given ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Factory::connection","p":"Illuminate/Contracts/Queue/Factory.html#method_connection","d":"<p>Resolve a queue connection instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::uuid","p":"Illuminate/Contracts/Queue/Job.html#method_uuid","d":"<p>Get the UUID of the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getJobId","p":"Illuminate/Contracts/Queue/Job.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::payload","p":"Illuminate/Contracts/Queue/Job.html#method_payload","d":"<p>Get the decoded body of the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::fire","p":"Illuminate/Contracts/Queue/Job.html#method_fire","d":"<p>Fire the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::release","p":"Illuminate/Contracts/Queue/Job.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isReleased","p":"Illuminate/Contracts/Queue/Job.html#method_isReleased","d":"<p>Determine if the job was released back into the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::delete","p":"Illuminate/Contracts/Queue/Job.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isDeleted","p":"Illuminate/Contracts/Queue/Job.html#method_isDeleted","d":"<p>Determine if the job has been deleted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isDeletedOrReleased","p":"Illuminate/Contracts/Queue/Job.html#method_isDeletedOrReleased","d":"<p>Determine if the job has been deleted or released.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::attempts","p":"Illuminate/Contracts/Queue/Job.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::hasFailed","p":"Illuminate/Contracts/Queue/Job.html#method_hasFailed","d":"<p>Determine if the job has been marked as a failure.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::markAsFailed","p":"Illuminate/Contracts/Queue/Job.html#method_markAsFailed","d":"<p>Mark the job as &quot;failed&quot;.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::fail","p":"Illuminate/Contracts/Queue/Job.html#method_fail","d":"<p>Delete the job, call the &quot;failed&quot; method, and raise the failed job event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::maxTries","p":"Illuminate/Contracts/Queue/Job.html#method_maxTries","d":"<p>Get the number of times to attempt a job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::maxExceptions","p":"Illuminate/Contracts/Queue/Job.html#method_maxExceptions","d":"<p>Get the maximum number of exceptions allowed, regardless of attempts.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::timeout","p":"Illuminate/Contracts/Queue/Job.html#method_timeout","d":"<p>Get the number of seconds the job can run.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::retryUntil","p":"Illuminate/Contracts/Queue/Job.html#method_retryUntil","d":"<p>Get the timestamp indicating when the job should timeout.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getName","p":"Illuminate/Contracts/Queue/Job.html#method_getName","d":"<p>Get the name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::resolveName","p":"Illuminate/Contracts/Queue/Job.html#method_resolveName","d":"<p>Get the resolved name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getConnectionName","p":"Illuminate/Contracts/Queue/Job.html#method_getConnectionName","d":"<p>Get the name of the connection the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getQueue","p":"Illuminate/Contracts/Queue/Job.html#method_getQueue","d":"<p>Get the name of the queue the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getRawBody","p":"Illuminate/Contracts/Queue/Job.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::looping","p":"Illuminate/Contracts/Queue/Monitor.html#method_looping","d":"<p>Register a callback to be executed on every iteration through the queue loop.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::failing","p":"Illuminate/Contracts/Queue/Monitor.html#method_failing","d":"<p>Register a callback to be executed when a job fails after the maximum number of retries.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::stopping","p":"Illuminate/Contracts/Queue/Monitor.html#method_stopping","d":"<p>Register a callback to be executed when a daemon queue is stopping.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::size","p":"Illuminate/Contracts/Queue/Queue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::push","p":"Illuminate/Contracts/Queue/Queue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pushOn","p":"Illuminate/Contracts/Queue/Queue.html#method_pushOn","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pushRaw","p":"Illuminate/Contracts/Queue/Queue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::later","p":"Illuminate/Contracts/Queue/Queue.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::laterOn","p":"Illuminate/Contracts/Queue/Queue.html#method_laterOn","d":"<p>Push a new job onto a specific queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::bulk","p":"Illuminate/Contracts/Queue/Queue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pop","p":"Illuminate/Contracts/Queue/Queue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::getConnectionName","p":"Illuminate/Contracts/Queue/Queue.html#method_getConnectionName","d":"<p>Get the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::setConnectionName","p":"Illuminate/Contracts/Queue/Queue.html#method_setConnectionName","d":"<p>Set the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableClass","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableClass","d":"<p>Get the type of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableIds","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableIds","d":"<p>Get the identifiers for all of the entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableRelations","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableRelations","d":"<p>Get the relationships of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableConnection","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableConnection","d":"<p>Get the connection of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableEntity::getQueueableId","p":"Illuminate/Contracts/Queue/QueueableEntity.html#method_getQueueableId","d":"<p>Get the queueable identity for the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableEntity::getQueueableRelations","p":"Illuminate/Contracts/Queue/QueueableEntity.html#method_getQueueableRelations","d":"<p>Get the relationships for the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableEntity::getQueueableConnection","p":"Illuminate/Contracts/Queue/QueueableEntity.html#method_getQueueableConnection","d":"<p>Get the connection of the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connection::subscribe","p":"Illuminate/Contracts/Redis/Connection.html#method_subscribe","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connection::psubscribe","p":"Illuminate/Contracts/Redis/Connection.html#method_psubscribe","d":"<p>Subscribe to a set of given channels with wildcards.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connection::command","p":"Illuminate/Contracts/Redis/Connection.html#method_command","d":"<p>Run a command against the Redis database.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connector::connect","p":"Illuminate/Contracts/Redis/Connector.html#method_connect","d":"<p>Create a connection to a Redis cluster.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connector::connectToCluster","p":"Illuminate/Contracts/Redis/Connector.html#method_connectToCluster","d":"<p>Create a connection to a Redis instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Factory::connection","p":"Illuminate/Contracts/Redis/Factory.html#method_connection","d":"<p>Get a Redis connection by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar::bind","p":"Illuminate/Contracts/Routing/BindingRegistrar.html#method_bind","d":"<p>Add a new route parameter binder.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar::getBindingCallback","p":"Illuminate/Contracts/Routing/BindingRegistrar.html#method_getBindingCallback","d":"<p>Get the binding callback for a given binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::get","p":"Illuminate/Contracts/Routing/Registrar.html#method_get","d":"<p>Register a new GET route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::post","p":"Illuminate/Contracts/Routing/Registrar.html#method_post","d":"<p>Register a new POST route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::put","p":"Illuminate/Contracts/Routing/Registrar.html#method_put","d":"<p>Register a new PUT route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::delete","p":"Illuminate/Contracts/Routing/Registrar.html#method_delete","d":"<p>Register a new DELETE route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::patch","p":"Illuminate/Contracts/Routing/Registrar.html#method_patch","d":"<p>Register a new PATCH route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::options","p":"Illuminate/Contracts/Routing/Registrar.html#method_options","d":"<p>Register a new OPTIONS route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::match","p":"Illuminate/Contracts/Routing/Registrar.html#method_match","d":"<p>Register a new route with the given verbs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::resource","p":"Illuminate/Contracts/Routing/Registrar.html#method_resource","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::group","p":"Illuminate/Contracts/Routing/Registrar.html#method_group","d":"<p>Create a route group with shared attributes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::substituteBindings","p":"Illuminate/Contracts/Routing/Registrar.html#method_substituteBindings","d":"<p>Substitute the route bindings onto the route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::substituteImplicitBindings","p":"Illuminate/Contracts/Routing/Registrar.html#method_substituteImplicitBindings","d":"<p>Substitute the implicit Eloquent model bindings for the route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::make","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_make","d":"<p>Create a new response instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::noContent","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_noContent","d":"<p>Create a new &quot;no content&quot; response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::view","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_view","d":"<p>Create a new response for a given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::json","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_json","d":"<p>Create a new JSON response instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::jsonp","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_jsonp","d":"<p>Create a new JSONP response instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::stream","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_stream","d":"<p>Create a new streamed response instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::streamDownload","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_streamDownload","d":"<p>Create a new streamed response instance as a file download.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::download","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_download","d":"<p>Create a new file download response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::file","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_file","d":"<p>Return the raw contents of a binary file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectTo","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectTo","d":"<p>Create a new redirect response to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToRoute","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToRoute","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToAction","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToAction","d":"<p>Create a new redirect response to a controller action.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectGuest","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectGuest","d":"<p>Create a new redirect response, while putting the current URL in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToIntended","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToIntended","d":"<p>Create a new redirect response to the previously intended location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::current","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_current","d":"<p>Get the current URL for the request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::previous","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_previous","d":"<p>Get the URL for the previous request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::to","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_to","d":"<p>Generate an absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::secure","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_secure","d":"<p>Generate a secure, absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::asset","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_asset","d":"<p>Generate the URL to an application asset.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::route","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_route","d":"<p>Get the URL to a named route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::action","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_action","d":"<p>Get the URL to a controller action.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::getRootControllerNamespace","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_getRootControllerNamespace","d":"<p>Get the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::setRootControllerNamespace","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_setRootControllerNamespace","d":"<p>Set the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::getRouteKey","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_getRouteKey","d":"<p>Get the value of the model's route key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::getRouteKeyName","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_getRouteKeyName","d":"<p>Get the route key for the model.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::resolveRouteBinding","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_resolveRouteBinding","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::resolveChildRouteBinding","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_resolveChildRouteBinding","d":"<p>Retrieve the child model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getName","p":"Illuminate/Contracts/Session/Session.html#method_getName","d":"<p>Get the name of the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setName","p":"Illuminate/Contracts/Session/Session.html#method_setName","d":"<p>Set the name of the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getId","p":"Illuminate/Contracts/Session/Session.html#method_getId","d":"<p>Get the current session ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setId","p":"Illuminate/Contracts/Session/Session.html#method_setId","d":"<p>Set the session ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::start","p":"Illuminate/Contracts/Session/Session.html#method_start","d":"<p>Start the session, reading the data from a handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::save","p":"Illuminate/Contracts/Session/Session.html#method_save","d":"<p>Save the session data to storage.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::all","p":"Illuminate/Contracts/Session/Session.html#method_all","d":"<p>Get all of the session data.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::exists","p":"Illuminate/Contracts/Session/Session.html#method_exists","d":"<p>Checks if a key exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::has","p":"Illuminate/Contracts/Session/Session.html#method_has","d":"<p>Checks if a key is present and not null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::get","p":"Illuminate/Contracts/Session/Session.html#method_get","d":"<p>Get an item from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::pull","p":"Illuminate/Contracts/Session/Session.html#method_pull","d":"<p>Get the value of a given key and then forget it.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::put","p":"Illuminate/Contracts/Session/Session.html#method_put","d":"<p>Put a key / value pair or array of key / value pairs in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::token","p":"Illuminate/Contracts/Session/Session.html#method_token","d":"<p>Get the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::regenerateToken","p":"Illuminate/Contracts/Session/Session.html#method_regenerateToken","d":"<p>Regenerate the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::remove","p":"Illuminate/Contracts/Session/Session.html#method_remove","d":"<p>Remove an item from the session, returning its value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::forget","p":"Illuminate/Contracts/Session/Session.html#method_forget","d":"<p>Remove one or many items from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::flush","p":"Illuminate/Contracts/Session/Session.html#method_flush","d":"<p>Remove all of the items from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::invalidate","p":"Illuminate/Contracts/Session/Session.html#method_invalidate","d":"<p>Flush the session data and regenerate the ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::regenerate","p":"Illuminate/Contracts/Session/Session.html#method_regenerate","d":"<p>Generate a new session identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::migrate","p":"Illuminate/Contracts/Session/Session.html#method_migrate","d":"<p>Generate a new session ID for the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::isStarted","p":"Illuminate/Contracts/Session/Session.html#method_isStarted","d":"<p>Determine if the session has been started.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::previousUrl","p":"Illuminate/Contracts/Session/Session.html#method_previousUrl","d":"<p>Get the previous URL from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setPreviousUrl","p":"Illuminate/Contracts/Session/Session.html#method_setPreviousUrl","d":"<p>Set the &quot;previous&quot; URL in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getHandler","p":"Illuminate/Contracts/Session/Session.html#method_getHandler","d":"<p>Get the session handler instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::handlerNeedsRequest","p":"Illuminate/Contracts/Session/Session.html#method_handlerNeedsRequest","d":"<p>Determine if the session handler needs a request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setRequestOnHandler","p":"Illuminate/Contracts/Session/Session.html#method_setRequestOnHandler","d":"<p>Set the request on the handler instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Arrayable::toArray","p":"Illuminate/Contracts/Support/Arrayable.html#method_toArray","d":null},{"t":"M","n":"Illuminate\\Contracts\\Support\\CanBeEscapedWhenCastToString::escapeWhenCastingToString","p":"Illuminate/Contracts/Support/CanBeEscapedWhenCastToString.html#method_escapeWhenCastingToString","d":"<p>Indicate that the object's string representation should be escaped when __toString is invoked.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\DeferrableProvider::provides","p":"Illuminate/Contracts/Support/DeferrableProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\DeferringDisplayableValue::resolveDisplayableValue","p":"Illuminate/Contracts/Support/DeferringDisplayableValue.html#method_resolveDisplayableValue","d":"<p>Resolve the displayable value that the class is deferring.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Htmlable::toHtml","p":"Illuminate/Contracts/Support/Htmlable.html#method_toHtml","d":"<p>Get content as a string of HTML.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Jsonable::toJson","p":"Illuminate/Contracts/Support/Jsonable.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::keys","p":"Illuminate/Contracts/Support/MessageBag.html#method_keys","d":"<p>Get the keys present in the message bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::add","p":"Illuminate/Contracts/Support/MessageBag.html#method_add","d":"<p>Add a message to the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::merge","p":"Illuminate/Contracts/Support/MessageBag.html#method_merge","d":"<p>Merge a new array of messages into the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::has","p":"Illuminate/Contracts/Support/MessageBag.html#method_has","d":"<p>Determine if messages exist for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::first","p":"Illuminate/Contracts/Support/MessageBag.html#method_first","d":"<p>Get the first message from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::get","p":"Illuminate/Contracts/Support/MessageBag.html#method_get","d":"<p>Get all of the messages from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::all","p":"Illuminate/Contracts/Support/MessageBag.html#method_all","d":"<p>Get all of the messages for every key in the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::forget","p":"Illuminate/Contracts/Support/MessageBag.html#method_forget","d":"<p>Remove a message from the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::getMessages","p":"Illuminate/Contracts/Support/MessageBag.html#method_getMessages","d":"<p>Get the raw messages in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::getFormat","p":"Illuminate/Contracts/Support/MessageBag.html#method_getFormat","d":"<p>Get the default message format.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::setFormat","p":"Illuminate/Contracts/Support/MessageBag.html#method_setFormat","d":"<p>Set the default message format.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::isEmpty","p":"Illuminate/Contracts/Support/MessageBag.html#method_isEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::isNotEmpty","p":"Illuminate/Contracts/Support/MessageBag.html#method_isNotEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageProvider::getMessageBag","p":"Illuminate/Contracts/Support/MessageProvider.html#method_getMessageBag","d":"<p>Get the messages for the instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Renderable::render","p":"Illuminate/Contracts/Support/Renderable.html#method_render","d":"<p>Get the evaluated contents of the object.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Responsable::toResponse","p":"Illuminate/Contracts/Support/Responsable.html#method_toResponse","d":"<p>Create an HTTP response that represents the object.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\HasLocalePreference::preferredLocale","p":"Illuminate/Contracts/Translation/HasLocalePreference.html#method_preferredLocale","d":"<p>Get the preferred locale of the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Loader::load","p":"Illuminate/Contracts/Translation/Loader.html#method_load","d":"<p>Load the messages for the given locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Loader::addNamespace","p":"Illuminate/Contracts/Translation/Loader.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Loader::addJsonPath","p":"Illuminate/Contracts/Translation/Loader.html#method_addJsonPath","d":"<p>Add a new JSON path to the loader.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Loader::namespaces","p":"Illuminate/Contracts/Translation/Loader.html#method_namespaces","d":"<p>Get an array of all the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::get","p":"Illuminate/Contracts/Translation/Translator.html#method_get","d":"<p>Get the translation for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::choice","p":"Illuminate/Contracts/Translation/Translator.html#method_choice","d":"<p>Get a translation according to an integer value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::getLocale","p":"Illuminate/Contracts/Translation/Translator.html#method_getLocale","d":"<p>Get the default locale being used.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::setLocale","p":"Illuminate/Contracts/Translation/Translator.html#method_setLocale","d":"<p>Set the default locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\DataAwareRule::setData","p":"Illuminate/Contracts/Validation/DataAwareRule.html#method_setData","d":"<p>Set the data under validation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::make","p":"Illuminate/Contracts/Validation/Factory.html#method_make","d":"<p>Create a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::extend","p":"Illuminate/Contracts/Validation/Factory.html#method_extend","d":"<p>Register a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::extendImplicit","p":"Illuminate/Contracts/Validation/Factory.html#method_extendImplicit","d":"<p>Register a custom implicit validator extension.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::replacer","p":"Illuminate/Contracts/Validation/Factory.html#method_replacer","d":"<p>Register a custom implicit validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\InvokableRule::__invoke","p":"Illuminate/Contracts/Validation/InvokableRule.html#method___invoke","d":"<p>Run the validation rule.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Rule::passes","p":"Illuminate/Contracts/Validation/Rule.html#method_passes","d":"<p>Determine if the validation rule passes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Rule::message","p":"Illuminate/Contracts/Validation/Rule.html#method_message","d":"<p>Get the validation error message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\UncompromisedVerifier::verify","p":"Illuminate/Contracts/Validation/UncompromisedVerifier.html#method_verify","d":"<p>Verify that the given data has not been compromised in data leaks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\ValidatesWhenResolved::validateResolved","p":"Illuminate/Contracts/Validation/ValidatesWhenResolved.html#method_validateResolved","d":"<p>Validate the given class instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\ValidationRule::validate","p":"Illuminate/Contracts/Validation/ValidationRule.html#method_validate","d":"<p>Run the validation rule.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::validate","p":"Illuminate/Contracts/Validation/Validator.html#method_validate","d":"<p>Run the validator's rules against its data.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::validated","p":"Illuminate/Contracts/Validation/Validator.html#method_validated","d":"<p>Get the attributes and values that were validated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::fails","p":"Illuminate/Contracts/Validation/Validator.html#method_fails","d":"<p>Determine if the data fails the validation rules.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::failed","p":"Illuminate/Contracts/Validation/Validator.html#method_failed","d":"<p>Get the failed validation rules.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::sometimes","p":"Illuminate/Contracts/Validation/Validator.html#method_sometimes","d":"<p>Add conditions to a given field based on a Closure.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::after","p":"Illuminate/Contracts/Validation/Validator.html#method_after","d":"<p>Add an after validation callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::errors","p":"Illuminate/Contracts/Validation/Validator.html#method_errors","d":"<p>Get all of the validation error messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\ValidatorAwareRule::setValidator","p":"Illuminate/Contracts/Validation/ValidatorAwareRule.html#method_setValidator","d":"<p>Set the current validator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Engine::get","p":"Illuminate/Contracts/View/Engine.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::exists","p":"Illuminate/Contracts/View/Factory.html#method_exists","d":"<p>Determine if a given view exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::file","p":"Illuminate/Contracts/View/Factory.html#method_file","d":"<p>Get the evaluated view contents for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::make","p":"Illuminate/Contracts/View/Factory.html#method_make","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::share","p":"Illuminate/Contracts/View/Factory.html#method_share","d":"<p>Add a piece of shared data to the environment.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::composer","p":"Illuminate/Contracts/View/Factory.html#method_composer","d":"<p>Register a view composer event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::creator","p":"Illuminate/Contracts/View/Factory.html#method_creator","d":"<p>Register a view creator event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::addNamespace","p":"Illuminate/Contracts/View/Factory.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::replaceNamespace","p":"Illuminate/Contracts/View/Factory.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::name","p":"Illuminate/Contracts/View/View.html#method_name","d":"<p>Get the name of the view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::with","p":"Illuminate/Contracts/View/View.html#method_with","d":"<p>Add a piece of data to the view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::getData","p":"Illuminate/Contracts/View/View.html#method_getData","d":"<p>Get the array of view data.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::make","p":"Illuminate/Cookie/CookieJar.html#method_make","d":"<p>Create a new cookie instance.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::forever","p":"Illuminate/Cookie/CookieJar.html#method_forever","d":"<p>Create a cookie that lasts &quot;forever&quot; (400 days).</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::forget","p":"Illuminate/Cookie/CookieJar.html#method_forget","d":"<p>Expire the given cookie.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::hasQueued","p":"Illuminate/Cookie/CookieJar.html#method_hasQueued","d":"<p>Determine if a cookie has been queued.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::queued","p":"Illuminate/Cookie/CookieJar.html#method_queued","d":"<p>Get a queued cookie instance.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::queue","p":"Illuminate/Cookie/CookieJar.html#method_queue","d":"<p>Queue a cookie to send with the next response.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::expire","p":"Illuminate/Cookie/CookieJar.html#method_expire","d":"<p>Queue a cookie to expire with the next response.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::unqueue","p":"Illuminate/Cookie/CookieJar.html#method_unqueue","d":"<p>Remove a cookie from the queue.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::getPathAndDomain","p":"Illuminate/Cookie/CookieJar.html#method_getPathAndDomain","d":"<p>Get the path and domain, or the default values.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::setDefaultPathAndDomain","p":"Illuminate/Cookie/CookieJar.html#method_setDefaultPathAndDomain","d":"<p>Set the default path and domain for the jar.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::getQueuedCookies","p":"Illuminate/Cookie/CookieJar.html#method_getQueuedCookies","d":"<p>Get the cookies which have been queued for the next request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieJar::flushQueuedCookies","p":"Illuminate/Cookie/CookieJar.html#method_flushQueuedCookies","d":"<p>Flush the cookies which have been queued for the next request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieServiceProvider::register","p":"Illuminate/Cookie/CookieServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieValuePrefix::create","p":"Illuminate/Cookie/CookieValuePrefix.html#method_create","d":"<p>Create a new cookie value prefix for the given cookie name.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieValuePrefix::remove","p":"Illuminate/Cookie/CookieValuePrefix.html#method_remove","d":"<p>Remove the cookie value prefix.</p>"},{"t":"M","n":"Illuminate\\Cookie\\CookieValuePrefix::validate","p":"Illuminate/Cookie/CookieValuePrefix.html#method_validate","d":"<p>Validate a cookie value contains a valid prefix. If it does, return the cookie value with the prefix removed. Otherwise, return null.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::__construct","p":"Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.html#method___construct","d":"<p>Create a new CookieQueue instance.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::handle","p":"Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::__construct","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method___construct","d":"<p>Create a new CookieGuard instance.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::disableFor","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_disableFor","d":"<p>Disable encryption for the given cookie name(s).</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::handle","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::decrypt","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_decrypt","d":"<p>Decrypt the cookies on the request.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::validateValue","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_validateValue","d":"<p>Validate and remove the cookie value prefix from the value.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::validateArray","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_validateArray","d":"<p>Validate and remove the cookie value prefix from all values of an array.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::decryptCookie","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_decryptCookie","d":"<p>Decrypt the given cookie and return the value.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::decryptArray","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_decryptArray","d":"<p>Decrypt an array based cookie.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::encrypt","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_encrypt","d":"<p>Encrypt the cookies on an outgoing response.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::duplicate","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_duplicate","d":"<p>Duplicate a cookie with a new value.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::isDisabled","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_isDisabled","d":"<p>Determine whether encryption has been disabled for the given cookie.</p>"},{"t":"M","n":"Illuminate\\Cookie\\Middleware\\EncryptCookies::serialized","p":"Illuminate/Cookie/Middleware/EncryptCookies.html#method_serialized","d":"<p>Determine if the cookie contents should be serialized.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::__construct","p":"Illuminate/Database/Capsule/Manager.html#method___construct","d":"<p>Create a new database capsule manager.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::setupDefaultConfiguration","p":"Illuminate/Database/Capsule/Manager.html#method_setupDefaultConfiguration","d":"<p>Setup the default database configuration options.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::setupManager","p":"Illuminate/Database/Capsule/Manager.html#method_setupManager","d":"<p>Build the database manager instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::connection","p":"Illuminate/Database/Capsule/Manager.html#method_connection","d":"<p>Get a connection instance from the global manager.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::table","p":"Illuminate/Database/Capsule/Manager.html#method_table","d":"<p>Get a fluent query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::schema","p":"Illuminate/Database/Capsule/Manager.html#method_schema","d":"<p>Get a schema builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::getConnection","p":"Illuminate/Database/Capsule/Manager.html#method_getConnection","d":"<p>Get a registered connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::addConnection","p":"Illuminate/Database/Capsule/Manager.html#method_addConnection","d":"<p>Register a connection with the manager.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::bootEloquent","p":"Illuminate/Database/Capsule/Manager.html#method_bootEloquent","d":"<p>Bootstrap Eloquent so it is ready for usage.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::setFetchMode","p":"Illuminate/Database/Capsule/Manager.html#method_setFetchMode","d":"<p>Set the fetch mode for the database connections.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::getDatabaseManager","p":"Illuminate/Database/Capsule/Manager.html#method_getDatabaseManager","d":"<p>Get the database manager instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::getEventDispatcher","p":"Illuminate/Database/Capsule/Manager.html#method_getEventDispatcher","d":"<p>Get the current event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::setEventDispatcher","p":"Illuminate/Database/Capsule/Manager.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance to be used by connections.</p>"},{"t":"M","n":"Illuminate\\Database\\Capsule\\Manager::__callStatic","p":"Illuminate/Database/Capsule/Manager.html#method___callStatic","d":"<p>Dynamically pass methods to the default connection.</p>"},{"t":"M","n":"Illuminate\\Database\\ClassMorphViolationException::__construct","p":"Illuminate/Database/ClassMorphViolationException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::chunk","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_chunk","d":"<p>Chunk the results of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::chunkMap","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_chunkMap","d":"<p>Run a map over each item while chunking.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::each","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_each","d":"<p>Execute a callback over each item while chunking.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::chunkById","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_chunkById","d":"<p>Chunk the results of a query by comparing IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::eachById","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_eachById","d":"<p>Execute a callback over each item while chunking by ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::lazy","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_lazy","d":"<p>Query lazily, by chunks of the given size.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::lazyById","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_lazyById","d":"<p>Query lazily, by chunking the results of a query by comparing IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::lazyByIdDesc","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_lazyByIdDesc","d":"<p>Query lazily, by chunking the results of a query by comparing IDs in descending order.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::orderedLazyById","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_orderedLazyById","d":"<p>Query lazily, by chunking the results of a query by comparing IDs in a given order.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::first","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_first","d":"<p>Execute the query and get the first result.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::sole","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_sole","d":"<p>Execute the query and get the first result if it's the sole matching record.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::paginateUsingCursor","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_paginateUsingCursor","d":"<p>Paginate the given query using a cursor paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::getOriginalColumnNameForCursorPagination","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_getOriginalColumnNameForCursorPagination","d":"<p>Get the original column name of the given column, without any aliasing.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::paginator","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_paginator","d":"<p>Create a new length-aware paginator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::simplePaginator","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_simplePaginator","d":"<p>Create a new simple paginator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::cursorPaginator","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_cursorPaginator","d":"<p>Create a new cursor paginator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\BuildsQueries::tap","p":"Illuminate/Database/Concerns/BuildsQueries.html#method_tap","d":"<p>Pass the query to a given callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\CompilesJsonPaths::wrapJsonFieldAndPath","p":"Illuminate/Database/Concerns/CompilesJsonPaths.html#method_wrapJsonFieldAndPath","d":"<p>Split the given JSON selector into the field and the optional path and wrap them separately.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\CompilesJsonPaths::wrapJsonPath","p":"Illuminate/Database/Concerns/CompilesJsonPaths.html#method_wrapJsonPath","d":"<p>Wrap the given JSON path.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\CompilesJsonPaths::wrapJsonPathSegment","p":"Illuminate/Database/Concerns/CompilesJsonPaths.html#method_wrapJsonPathSegment","d":"<p>Wrap the given JSON path segment.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ExplainsQueries::explain","p":"Illuminate/Database/Concerns/ExplainsQueries.html#method_explain","d":"<p>Explains the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::transaction","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_transaction","d":"<p>Execute a Closure within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::handleTransactionException","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_handleTransactionException","d":"<p>Handle an exception encountered when running a transacted statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::beginTransaction","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_beginTransaction","d":"<p>Start a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::createTransaction","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_createTransaction","d":"<p>Create a transaction within the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::createSavepoint","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_createSavepoint","d":"<p>Create a save point within the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::handleBeginTransactionException","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_handleBeginTransactionException","d":"<p>Handle an exception from a transaction beginning.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::commit","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_commit","d":"<p>Commit the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::afterCommitCallbacksShouldBeExecuted","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_afterCommitCallbacksShouldBeExecuted","d":"<p>Determine if after commit callbacks should be executed.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::handleCommitTransactionException","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_handleCommitTransactionException","d":"<p>Handle an exception encountered when committing a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::rollBack","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_rollBack","d":"<p>Rollback the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::performRollBack","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_performRollBack","d":"<p>Perform a rollback within the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::handleRollBackException","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_handleRollBackException","d":"<p>Handle an exception from a rollback.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::transactionLevel","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_transactionLevel","d":"<p>Get the number of active transactions.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ManagesTransactions::afterCommit","p":"Illuminate/Database/Concerns/ManagesTransactions.html#method_afterCommit","d":"<p>Execute the callback after a transaction commits.</p>"},{"t":"M","n":"Illuminate\\Database\\Concerns\\ParsesSearchPath::parseSearchPath","p":"Illuminate/Database/Concerns/ParsesSearchPath.html#method_parseSearchPath","d":"<p>Parse the Postgres &quot;search_path&quot; configuration value into an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::__construct","p":"Illuminate/Database/Connection.html#method___construct","d":"<p>Create a new database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::useDefaultQueryGrammar","p":"Illuminate/Database/Connection.html#method_useDefaultQueryGrammar","d":"<p>Set the query grammar to the default implementation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDefaultQueryGrammar","p":"Illuminate/Database/Connection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::useDefaultSchemaGrammar","p":"Illuminate/Database/Connection.html#method_useDefaultSchemaGrammar","d":"<p>Set the schema grammar to the default implementation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDefaultSchemaGrammar","p":"Illuminate/Database/Connection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::useDefaultPostProcessor","p":"Illuminate/Database/Connection.html#method_useDefaultPostProcessor","d":"<p>Set the query post processor to the default implementation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDefaultPostProcessor","p":"Illuminate/Database/Connection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getSchemaBuilder","p":"Illuminate/Database/Connection.html#method_getSchemaBuilder","d":"<p>Get a schema builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::table","p":"Illuminate/Database/Connection.html#method_table","d":"<p>Begin a fluent query against a database table.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::query","p":"Illuminate/Database/Connection.html#method_query","d":"<p>Get a new query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::selectOne","p":"Illuminate/Database/Connection.html#method_selectOne","d":"<p>Run a select statement and return a single result.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::scalar","p":"Illuminate/Database/Connection.html#method_scalar","d":"<p>Run a select statement and return the first column of the first row.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::selectFromWriteConnection","p":"Illuminate/Database/Connection.html#method_selectFromWriteConnection","d":"<p>Run a select statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::select","p":"Illuminate/Database/Connection.html#method_select","d":"<p>Run a select statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::cursor","p":"Illuminate/Database/Connection.html#method_cursor","d":"<p>Run a select statement against the database and returns a generator.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::prepared","p":"Illuminate/Database/Connection.html#method_prepared","d":"<p>Configure the PDO prepared statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getPdoForSelect","p":"Illuminate/Database/Connection.html#method_getPdoForSelect","d":"<p>Get the PDO connection to use for a select query.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::insert","p":"Illuminate/Database/Connection.html#method_insert","d":"<p>Run an insert statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::update","p":"Illuminate/Database/Connection.html#method_update","d":"<p>Run an update statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::delete","p":"Illuminate/Database/Connection.html#method_delete","d":"<p>Run a delete statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::statement","p":"Illuminate/Database/Connection.html#method_statement","d":"<p>Execute an SQL statement and return the boolean result.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::affectingStatement","p":"Illuminate/Database/Connection.html#method_affectingStatement","d":"<p>Run an SQL statement and get the number of rows affected.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::unprepared","p":"Illuminate/Database/Connection.html#method_unprepared","d":"<p>Run a raw, unprepared query against the PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::pretend","p":"Illuminate/Database/Connection.html#method_pretend","d":"<p>Execute the given callback in &quot;dry run&quot; mode.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::withFreshQueryLog","p":"Illuminate/Database/Connection.html#method_withFreshQueryLog","d":"<p>Execute the given callback in &quot;dry run&quot; mode.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::bindValues","p":"Illuminate/Database/Connection.html#method_bindValues","d":"<p>Bind values to their parameters in the given statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::prepareBindings","p":"Illuminate/Database/Connection.html#method_prepareBindings","d":"<p>Prepare the query bindings for execution.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::run","p":"Illuminate/Database/Connection.html#method_run","d":"<p>Run a SQL statement and log its execution context.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::runQueryCallback","p":"Illuminate/Database/Connection.html#method_runQueryCallback","d":"<p>Run a SQL statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::logQuery","p":"Illuminate/Database/Connection.html#method_logQuery","d":"<p>Log a query in the connection's query log.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getElapsedTime","p":"Illuminate/Database/Connection.html#method_getElapsedTime","d":"<p>Get the elapsed time since a given starting point.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::whenQueryingForLongerThan","p":"Illuminate/Database/Connection.html#method_whenQueryingForLongerThan","d":"<p>Register a callback to be invoked when the connection queries for longer than a given amount of time.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::allowQueryDurationHandlersToRunAgain","p":"Illuminate/Database/Connection.html#method_allowQueryDurationHandlersToRunAgain","d":"<p>Allow all the query duration handlers to run again, even if they have already run.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::totalQueryDuration","p":"Illuminate/Database/Connection.html#method_totalQueryDuration","d":"<p>Get the duration of all run queries in milliseconds.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::resetTotalQueryDuration","p":"Illuminate/Database/Connection.html#method_resetTotalQueryDuration","d":"<p>Reset the duration of all run queries.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::handleQueryException","p":"Illuminate/Database/Connection.html#method_handleQueryException","d":"<p>Handle a query exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::tryAgainIfCausedByLostConnection","p":"Illuminate/Database/Connection.html#method_tryAgainIfCausedByLostConnection","d":"<p>Handle a query exception that occurred during query execution.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::reconnect","p":"Illuminate/Database/Connection.html#method_reconnect","d":"<p>Reconnect to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::reconnectIfMissingConnection","p":"Illuminate/Database/Connection.html#method_reconnectIfMissingConnection","d":"<p>Reconnect to the database if a PDO connection is missing.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::disconnect","p":"Illuminate/Database/Connection.html#method_disconnect","d":"<p>Disconnect from the underlying PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::beforeExecuting","p":"Illuminate/Database/Connection.html#method_beforeExecuting","d":"<p>Register a hook to be run just before a database query is executed.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::listen","p":"Illuminate/Database/Connection.html#method_listen","d":"<p>Register a database query listener with the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::fireConnectionEvent","p":"Illuminate/Database/Connection.html#method_fireConnectionEvent","d":"<p>Fire an event for this connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::event","p":"Illuminate/Database/Connection.html#method_event","d":"<p>Fire the given event if possible.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::raw","p":"Illuminate/Database/Connection.html#method_raw","d":"<p>Get a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::hasModifiedRecords","p":"Illuminate/Database/Connection.html#method_hasModifiedRecords","d":"<p>Determine if the database connection has modified any database records.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::recordsHaveBeenModified","p":"Illuminate/Database/Connection.html#method_recordsHaveBeenModified","d":"<p>Indicate if any records have been modified.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setRecordModificationState","p":"Illuminate/Database/Connection.html#method_setRecordModificationState","d":"<p>Set the record modification state.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::forgetRecordModificationState","p":"Illuminate/Database/Connection.html#method_forgetRecordModificationState","d":"<p>Reset the record modification state.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::useWriteConnectionWhenReading","p":"Illuminate/Database/Connection.html#method_useWriteConnectionWhenReading","d":"<p>Indicate that the connection should use the write PDO connection for reads.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::isDoctrineAvailable","p":"Illuminate/Database/Connection.html#method_isDoctrineAvailable","d":"<p>Is Doctrine available?</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::usingNativeSchemaOperations","p":"Illuminate/Database/Connection.html#method_usingNativeSchemaOperations","d":"<p>Indicates whether native alter operations will be used when dropping, renaming, or modifying columns, even if Doctrine DBAL is installed.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDoctrineColumn","p":"Illuminate/Database/Connection.html#method_getDoctrineColumn","d":"<p>Get a Doctrine Schema Column instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDoctrineSchemaManager","p":"Illuminate/Database/Connection.html#method_getDoctrineSchemaManager","d":"<p>Get the Doctrine DBAL schema manager for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDoctrineConnection","p":"Illuminate/Database/Connection.html#method_getDoctrineConnection","d":"<p>Get the Doctrine DBAL database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::registerDoctrineType","p":"Illuminate/Database/Connection.html#method_registerDoctrineType","d":"<p>Register a custom Doctrine mapping type.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getPdo","p":"Illuminate/Database/Connection.html#method_getPdo","d":"<p>Get the current PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getRawPdo","p":"Illuminate/Database/Connection.html#method_getRawPdo","d":"<p>Get the current PDO connection parameter without executing any reconnect logic.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getReadPdo","p":"Illuminate/Database/Connection.html#method_getReadPdo","d":"<p>Get the current PDO connection used for reading.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getRawReadPdo","p":"Illuminate/Database/Connection.html#method_getRawReadPdo","d":"<p>Get the current read PDO connection parameter without executing any reconnect logic.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setPdo","p":"Illuminate/Database/Connection.html#method_setPdo","d":"<p>Set the PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setReadPdo","p":"Illuminate/Database/Connection.html#method_setReadPdo","d":"<p>Set the PDO connection used for reading.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setReconnector","p":"Illuminate/Database/Connection.html#method_setReconnector","d":"<p>Set the reconnect instance on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getName","p":"Illuminate/Database/Connection.html#method_getName","d":"<p>Get the database connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getNameWithReadWriteType","p":"Illuminate/Database/Connection.html#method_getNameWithReadWriteType","d":"<p>Get the database connection full name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getConfig","p":"Illuminate/Database/Connection.html#method_getConfig","d":"<p>Get an option from the configuration options.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDriverName","p":"Illuminate/Database/Connection.html#method_getDriverName","d":"<p>Get the PDO driver name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getQueryGrammar","p":"Illuminate/Database/Connection.html#method_getQueryGrammar","d":"<p>Get the query grammar used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setQueryGrammar","p":"Illuminate/Database/Connection.html#method_setQueryGrammar","d":"<p>Set the query grammar used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getSchemaGrammar","p":"Illuminate/Database/Connection.html#method_getSchemaGrammar","d":"<p>Get the schema grammar used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setSchemaGrammar","p":"Illuminate/Database/Connection.html#method_setSchemaGrammar","d":"<p>Set the schema grammar used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getPostProcessor","p":"Illuminate/Database/Connection.html#method_getPostProcessor","d":"<p>Get the query post processor used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setPostProcessor","p":"Illuminate/Database/Connection.html#method_setPostProcessor","d":"<p>Set the query post processor used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getEventDispatcher","p":"Illuminate/Database/Connection.html#method_getEventDispatcher","d":"<p>Get the event dispatcher used by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setEventDispatcher","p":"Illuminate/Database/Connection.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::unsetEventDispatcher","p":"Illuminate/Database/Connection.html#method_unsetEventDispatcher","d":"<p>Unset the event dispatcher for this connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setTransactionManager","p":"Illuminate/Database/Connection.html#method_setTransactionManager","d":"<p>Set the transaction manager instance on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::unsetTransactionManager","p":"Illuminate/Database/Connection.html#method_unsetTransactionManager","d":"<p>Unset the transaction manager for this connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::pretending","p":"Illuminate/Database/Connection.html#method_pretending","d":"<p>Determine if the connection is in a &quot;dry run&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getQueryLog","p":"Illuminate/Database/Connection.html#method_getQueryLog","d":"<p>Get the connection query log.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::flushQueryLog","p":"Illuminate/Database/Connection.html#method_flushQueryLog","d":"<p>Clear the query log.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::enableQueryLog","p":"Illuminate/Database/Connection.html#method_enableQueryLog","d":"<p>Enable the query log on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::disableQueryLog","p":"Illuminate/Database/Connection.html#method_disableQueryLog","d":"<p>Disable the query log on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::logging","p":"Illuminate/Database/Connection.html#method_logging","d":"<p>Determine whether we're logging queries.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getDatabaseName","p":"Illuminate/Database/Connection.html#method_getDatabaseName","d":"<p>Get the name of the connected database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setDatabaseName","p":"Illuminate/Database/Connection.html#method_setDatabaseName","d":"<p>Set the name of the connected database.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setReadWriteType","p":"Illuminate/Database/Connection.html#method_setReadWriteType","d":"<p>Set the read / write type of the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getTablePrefix","p":"Illuminate/Database/Connection.html#method_getTablePrefix","d":"<p>Get the table prefix for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::setTablePrefix","p":"Illuminate/Database/Connection.html#method_setTablePrefix","d":"<p>Set the table prefix in use by the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::withTablePrefix","p":"Illuminate/Database/Connection.html#method_withTablePrefix","d":"<p>Set the table prefix and return the grammar.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::resolverFor","p":"Illuminate/Database/Connection.html#method_resolverFor","d":"<p>Register a connection resolver.</p>"},{"t":"M","n":"Illuminate\\Database\\Connection::getResolver","p":"Illuminate/Database/Connection.html#method_getResolver","d":"<p>Get the connection resolver for the given driver.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::table","p":"Illuminate/Database/ConnectionInterface.html#method_table","d":"<p>Begin a fluent query against a database table.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::raw","p":"Illuminate/Database/ConnectionInterface.html#method_raw","d":"<p>Get a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::selectOne","p":"Illuminate/Database/ConnectionInterface.html#method_selectOne","d":"<p>Run a select statement and return a single result.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::select","p":"Illuminate/Database/ConnectionInterface.html#method_select","d":"<p>Run a select statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::cursor","p":"Illuminate/Database/ConnectionInterface.html#method_cursor","d":"<p>Run a select statement against the database and returns a generator.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::insert","p":"Illuminate/Database/ConnectionInterface.html#method_insert","d":"<p>Run an insert statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::update","p":"Illuminate/Database/ConnectionInterface.html#method_update","d":"<p>Run an update statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::delete","p":"Illuminate/Database/ConnectionInterface.html#method_delete","d":"<p>Run a delete statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::statement","p":"Illuminate/Database/ConnectionInterface.html#method_statement","d":"<p>Execute an SQL statement and return the boolean result.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::affectingStatement","p":"Illuminate/Database/ConnectionInterface.html#method_affectingStatement","d":"<p>Run an SQL statement and get the number of rows affected.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::unprepared","p":"Illuminate/Database/ConnectionInterface.html#method_unprepared","d":"<p>Run a raw, unprepared query against the PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::prepareBindings","p":"Illuminate/Database/ConnectionInterface.html#method_prepareBindings","d":"<p>Prepare the query bindings for execution.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::transaction","p":"Illuminate/Database/ConnectionInterface.html#method_transaction","d":"<p>Execute a Closure within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::beginTransaction","p":"Illuminate/Database/ConnectionInterface.html#method_beginTransaction","d":"<p>Start a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::commit","p":"Illuminate/Database/ConnectionInterface.html#method_commit","d":"<p>Commit the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::rollBack","p":"Illuminate/Database/ConnectionInterface.html#method_rollBack","d":"<p>Rollback the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::transactionLevel","p":"Illuminate/Database/ConnectionInterface.html#method_transactionLevel","d":"<p>Get the number of active transactions.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::pretend","p":"Illuminate/Database/ConnectionInterface.html#method_pretend","d":"<p>Execute the given callback in &quot;dry run&quot; mode.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::getDatabaseName","p":"Illuminate/Database/ConnectionInterface.html#method_getDatabaseName","d":"<p>Get the name of the connected database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::__construct","p":"Illuminate/Database/ConnectionResolver.html#method___construct","d":"<p>Create a new connection resolver instance.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::connection","p":"Illuminate/Database/ConnectionResolver.html#method_connection","d":"<p>Get a database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::addConnection","p":"Illuminate/Database/ConnectionResolver.html#method_addConnection","d":"<p>Add a connection to the resolver.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::hasConnection","p":"Illuminate/Database/ConnectionResolver.html#method_hasConnection","d":"<p>Check if a connection has been registered.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::getDefaultConnection","p":"Illuminate/Database/ConnectionResolver.html#method_getDefaultConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolver::setDefaultConnection","p":"Illuminate/Database/ConnectionResolver.html#method_setDefaultConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::connection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_connection","d":"<p>Get a database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::getDefaultConnection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_getDefaultConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::setDefaultConnection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_setDefaultConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::__construct","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method___construct","d":"<p>Create a new connection factory instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::make","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_make","d":"<p>Establish a PDO connection based on the configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::parseConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_parseConfig","d":"<p>Parse and prepare the database configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createSingleConnection","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createSingleConnection","d":"<p>Create a single database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createReadWriteConnection","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createReadWriteConnection","d":"<p>Create a read / write database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createReadPdo","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createReadPdo","d":"<p>Create a new PDO instance for reading.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::getReadConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_getReadConfig","d":"<p>Get the read configuration for a read / write connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::getWriteConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_getWriteConfig","d":"<p>Get the write configuration for a read / write connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::getReadWriteConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_getReadWriteConfig","d":"<p>Get a read / write level configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::mergeReadWriteConfig","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_mergeReadWriteConfig","d":"<p>Merge a configuration for a read / write connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createPdoResolver","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createPdoResolver","d":"<p>Create a new Closure that resolves to a PDO instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createPdoResolverWithHosts","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createPdoResolverWithHosts","d":"<p>Create a new Closure that resolves to a PDO instance with a specific host or an array of hosts.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::parseHosts","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_parseHosts","d":"<p>Parse the hosts configuration item into an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createPdoResolverWithoutHosts","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createPdoResolverWithoutHosts","d":"<p>Create a new Closure that resolves to a PDO instance where there is no configured host.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createConnector","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createConnector","d":"<p>Create a connector instance based on the configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectionFactory::createConnection","p":"Illuminate/Database/Connectors/ConnectionFactory.html#method_createConnection","d":"<p>Create a new connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::createConnection","p":"Illuminate/Database/Connectors/Connector.html#method_createConnection","d":"<p>Create a new PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::createPdoConnection","p":"Illuminate/Database/Connectors/Connector.html#method_createPdoConnection","d":"<p>Create a new PDO connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::tryAgainIfCausedByLostConnection","p":"Illuminate/Database/Connectors/Connector.html#method_tryAgainIfCausedByLostConnection","d":"<p>Handle an exception that occurred during connect execution.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::getOptions","p":"Illuminate/Database/Connectors/Connector.html#method_getOptions","d":"<p>Get the PDO options based on the configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::getDefaultOptions","p":"Illuminate/Database/Connectors/Connector.html#method_getDefaultOptions","d":"<p>Get the default PDO connection options.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\Connector::setDefaultOptions","p":"Illuminate/Database/Connectors/Connector.html#method_setDefaultOptions","d":"<p>Set the default PDO connection options.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectorInterface::connect","p":"Illuminate/Database/Connectors/ConnectorInterface.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::connect","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::configureIsolationLevel","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_configureIsolationLevel","d":"<p>Set the connection transaction isolation level.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::configureEncoding","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_configureEncoding","d":"<p>Set the connection character set and collation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::getCollation","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_getCollation","d":"<p>Get the collation for the configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::configureTimezone","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_configureTimezone","d":"<p>Set the timezone on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::getDsn","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_getDsn","d":"<p>Create a DSN string from a configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::hasSocket","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_hasSocket","d":"<p>Determine if the given configuration array has a UNIX socket value.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::getSocketDsn","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_getSocketDsn","d":"<p>Get the DSN string for a socket configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::getHostDsn","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_getHostDsn","d":"<p>Get the DSN string for a host / port configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::setModes","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_setModes","d":"<p>Set the modes for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::setCustomModes","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_setCustomModes","d":"<p>Set the custom modes on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\MySqlConnector::strictMode","p":"Illuminate/Database/Connectors/MySqlConnector.html#method_strictMode","d":"<p>Get the query to enable strict mode.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::connect","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureIsolationLevel","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureIsolationLevel","d":"<p>Set the connection transaction isolation level.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureEncoding","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureEncoding","d":"<p>Set the connection character set and collation.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureTimezone","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureTimezone","d":"<p>Set the timezone on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureSearchPath","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureSearchPath","d":"<p>Set the &quot;search_path&quot; on the database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::quoteSearchPath","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_quoteSearchPath","d":"<p>Format the search path for the DSN.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureApplicationName","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureApplicationName","d":"<p>Set the application name on the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::getDsn","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_getDsn","d":"<p>Create a DSN string from a configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::addSslOptions","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_addSslOptions","d":"<p>Add the SSL options to the DSN.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\PostgresConnector::configureSynchronousCommit","p":"Illuminate/Database/Connectors/PostgresConnector.html#method_configureSynchronousCommit","d":"<p>Configure the synchronous_commit setting.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SQLiteConnector::connect","p":"Illuminate/Database/Connectors/SQLiteConnector.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::connect","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::configureIsolationLevel","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_configureIsolationLevel","d":"<p>Set the connection transaction isolation level.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getDsn","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getDsn","d":"<p>Create a DSN string from a configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::prefersOdbc","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_prefersOdbc","d":"<p>Determine if the database configuration prefers ODBC.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getDblibDsn","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getDblibDsn","d":"<p>Get the DSN string for a DbLib connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getOdbcDsn","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getOdbcDsn","d":"<p>Get the DSN string for an ODBC connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getSqlSrvDsn","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getSqlSrvDsn","d":"<p>Get the DSN string for a SqlSrv connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::buildConnectString","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_buildConnectString","d":"<p>Build a connection string from the given arguments.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::buildHostString","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_buildHostString","d":"<p>Build a host string from the given configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\SqlServerConnector::getAvailableDrivers","p":"Illuminate/Database/Connectors/SqlServerConnector.html#method_getAvailableDrivers","d":"<p>Get the available PDO drivers.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::__construct","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::registerTypeMappings","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_registerTypeMappings","d":"<p>Register the custom Doctrine type mappings for inspection commands.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::getPlatformName","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_getPlatformName","d":"<p>Get a human-readable platform name for the given platform.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::getTableSize","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_getTableSize","d":"<p>Get the size of a table in bytes.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::getMySQLTableSize","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_getMySQLTableSize","d":"<p>Get the size of a MySQL table in bytes.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::getPostgresTableSize","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_getPostgresTableSize","d":"<p>Get the size of a Postgres table in bytes.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::getSqliteTableSize","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_getSqliteTableSize","d":"<p>Get the size of a SQLite table in bytes.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::getConnectionCount","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_getConnectionCount","d":"<p>Get the number of open connections for a database.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::getConfigFromDatabase","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_getConfigFromDatabase","d":"<p>Get the connection configuration details for the given connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::ensureDependenciesExist","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_ensureDependenciesExist","d":"<p>Ensure the dependencies for the database commands are available.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DatabaseInspectionCommand::installDependencies","p":"Illuminate/Database/Console/DatabaseInspectionCommand.html#method_installDependencies","d":"<p>Install the command's dependencies.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::handle","p":"Illuminate/Database/Console/DbCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::getConnection","p":"Illuminate/Database/Console/DbCommand.html#method_getConnection","d":"<p>Get the database connection configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::commandArguments","p":"Illuminate/Database/Console/DbCommand.html#method_commandArguments","d":"<p>Get the arguments for the database client command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::commandEnvironment","p":"Illuminate/Database/Console/DbCommand.html#method_commandEnvironment","d":"<p>Get the environment variables for the database client command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::getCommand","p":"Illuminate/Database/Console/DbCommand.html#method_getCommand","d":"<p>Get the database client command to run.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::getMysqlArguments","p":"Illuminate/Database/Console/DbCommand.html#method_getMysqlArguments","d":"<p>Get the arguments for the MySQL CLI.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::getPgsqlArguments","p":"Illuminate/Database/Console/DbCommand.html#method_getPgsqlArguments","d":"<p>Get the arguments for the Postgres CLI.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::getSqliteArguments","p":"Illuminate/Database/Console/DbCommand.html#method_getSqliteArguments","d":"<p>Get the arguments for the SQLite CLI.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::getSqlsrvArguments","p":"Illuminate/Database/Console/DbCommand.html#method_getSqlsrvArguments","d":"<p>Get the arguments for the SQL Server CLI.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::getPgsqlEnvironment","p":"Illuminate/Database/Console/DbCommand.html#method_getPgsqlEnvironment","d":"<p>Get the environment variables for the Postgres CLI.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DbCommand::getOptionalArguments","p":"Illuminate/Database/Console/DbCommand.html#method_getOptionalArguments","d":"<p>Get the optional arguments based on the connection configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DumpCommand::handle","p":"Illuminate/Database/Console/DumpCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DumpCommand::schemaState","p":"Illuminate/Database/Console/DumpCommand.html#method_schemaState","d":"<p>Create a schema state instance for the given connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\DumpCommand::path","p":"Illuminate/Database/Console/DumpCommand.html#method_path","d":"<p>Get the path that the dump should be written to.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand::getStub","p":"Illuminate/Database/Console/Factories/FactoryMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand::resolveStubPath","p":"Illuminate/Database/Console/Factories/FactoryMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand::buildClass","p":"Illuminate/Database/Console/Factories/FactoryMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand::getPath","p":"Illuminate/Database/Console/Factories/FactoryMakeCommand.html#method_getPath","d":"<p>Get the destination class path.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand::guessModelName","p":"Illuminate/Database/Console/Factories/FactoryMakeCommand.html#method_guessModelName","d":"<p>Guess the model name from the Factory name or return a default model name.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand::getOptions","p":"Illuminate/Database/Console/Factories/FactoryMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\BaseCommand::getMigrationPaths","p":"Illuminate/Database/Console/Migrations/BaseCommand.html#method_getMigrationPaths","d":"<p>Get all of the migration paths.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\BaseCommand::usingRealPath","p":"Illuminate/Database/Console/Migrations/BaseCommand.html#method_usingRealPath","d":"<p>Determine if the given path(s) are pre-resolved &quot;real&quot; paths.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\BaseCommand::getMigrationPath","p":"Illuminate/Database/Console/Migrations/BaseCommand.html#method_getMigrationPath","d":"<p>Get the path to the migration directory.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\FreshCommand::handle","p":"Illuminate/Database/Console/Migrations/FreshCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\FreshCommand::needsSeeding","p":"Illuminate/Database/Console/Migrations/FreshCommand.html#method_needsSeeding","d":"<p>Determine if the developer has requested database seeding.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\FreshCommand::runSeeder","p":"Illuminate/Database/Console/Migrations/FreshCommand.html#method_runSeeder","d":"<p>Run the database seeder command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\FreshCommand::getOptions","p":"Illuminate/Database/Console/Migrations/FreshCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\InstallCommand::__construct","p":"Illuminate/Database/Console/Migrations/InstallCommand.html#method___construct","d":"<p>Create a new migration install command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\InstallCommand::handle","p":"Illuminate/Database/Console/Migrations/InstallCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\InstallCommand::getOptions","p":"Illuminate/Database/Console/Migrations/InstallCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::__construct","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method___construct","d":"<p>Create a new migration command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::handle","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::prepareDatabase","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_prepareDatabase","d":"<p>Prepare the migration database for running.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::repositoryExists","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_repositoryExists","d":"<p>Determine if the migrator repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::createMissingSqliteDatbase","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_createMissingSqliteDatbase","d":"<p>Create a missing SQLite database.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::createMissingMysqlDatabase","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_createMissingMysqlDatabase","d":"<p>Create a missing MySQL database.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::loadSchemaState","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_loadSchemaState","d":"<p>Load the schema state to seed the initial database schema structure.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateCommand::schemaPath","p":"Illuminate/Database/Console/Migrations/MigrateCommand.html#method_schemaPath","d":"<p>Get the path to the stored schema for the given connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::__construct","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method___construct","d":"<p>Create a new migration install command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::handle","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::writeMigration","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_writeMigration","d":"<p>Write the migration file to disk.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::getMigrationPath","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_getMigrationPath","d":"<p>Get migration path (either specified by '--path' option or default location).</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand::promptForMissingArgumentsUsing","p":"Illuminate/Database/Console/Migrations/MigrateMakeCommand.html#method_promptForMissingArgumentsUsing","d":"<p>Prompt for missing input arguments using the returned questions.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::handle","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::runRollback","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_runRollback","d":"<p>Run the rollback command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::runReset","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_runReset","d":"<p>Run the reset command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::needsSeeding","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_needsSeeding","d":"<p>Determine if the developer has requested database seeding.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::runSeeder","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_runSeeder","d":"<p>Run the database seeder command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RefreshCommand::getOptions","p":"Illuminate/Database/Console/Migrations/RefreshCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\ResetCommand::__construct","p":"Illuminate/Database/Console/Migrations/ResetCommand.html#method___construct","d":"<p>Create a new migration rollback command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\ResetCommand::handle","p":"Illuminate/Database/Console/Migrations/ResetCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\ResetCommand::getOptions","p":"Illuminate/Database/Console/Migrations/ResetCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RollbackCommand::__construct","p":"Illuminate/Database/Console/Migrations/RollbackCommand.html#method___construct","d":"<p>Create a new migration rollback command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RollbackCommand::handle","p":"Illuminate/Database/Console/Migrations/RollbackCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\RollbackCommand::getOptions","p":"Illuminate/Database/Console/Migrations/RollbackCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::__construct","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method___construct","d":"<p>Create a new migration rollback command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::handle","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::getStatusFor","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method_getStatusFor","d":"<p>Get the status for the given run migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::getAllMigrationFiles","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method_getAllMigrationFiles","d":"<p>Get an array of all of the migration files.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\StatusCommand::getOptions","p":"Illuminate/Database/Console/Migrations/StatusCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Migrations\\TableGuesser::guess","p":"Illuminate/Database/Console/Migrations/TableGuesser.html#method_guess","d":"<p>Attempt to guess the table name and &quot;creation&quot; status of the given migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\MonitorCommand::__construct","p":"Illuminate/Database/Console/MonitorCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\MonitorCommand::handle","p":"Illuminate/Database/Console/MonitorCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\MonitorCommand::parseDatabases","p":"Illuminate/Database/Console/MonitorCommand.html#method_parseDatabases","d":"<p>Parse the database into an array of the connections.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\MonitorCommand::displayConnections","p":"Illuminate/Database/Console/MonitorCommand.html#method_displayConnections","d":"<p>Display the databases and their connection counts in the console.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\MonitorCommand::dispatchEvents","p":"Illuminate/Database/Console/MonitorCommand.html#method_dispatchEvents","d":"<p>Dispatch the database monitoring events.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\PruneCommand::handle","p":"Illuminate/Database/Console/PruneCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\PruneCommand::pruneModel","p":"Illuminate/Database/Console/PruneCommand.html#method_pruneModel","d":"<p>Prune the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\PruneCommand::models","p":"Illuminate/Database/Console/PruneCommand.html#method_models","d":"<p>Determine the models that should be pruned.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\PruneCommand::getDefaultPath","p":"Illuminate/Database/Console/PruneCommand.html#method_getDefaultPath","d":"<p>Get the default path where models are located.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\PruneCommand::isPrunable","p":"Illuminate/Database/Console/PruneCommand.html#method_isPrunable","d":"<p>Determine if the given model class is prunable.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\PruneCommand::pretendToPrune","p":"Illuminate/Database/Console/PruneCommand.html#method_pretendToPrune","d":"<p>Display how many models will be pruned.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::__construct","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method___construct","d":"<p>Create a new database seed command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::handle","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::getSeeder","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_getSeeder","d":"<p>Get a seeder instance from the container.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::getDatabase","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_getDatabase","d":"<p>Get the name of the database connection to use.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::getArguments","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeedCommand::getOptions","p":"Illuminate/Database/Console/Seeds/SeedCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::handle","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::getStub","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::resolveStubPath","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::getPath","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_getPath","d":"<p>Get the destination class path.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand::rootNamespace","p":"Illuminate/Database/Console/Seeds/SeederMakeCommand.html#method_rootNamespace","d":"<p>Get the root namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents::withoutModelEvents","p":"Illuminate/Database/Console/Seeds/WithoutModelEvents.html#method_withoutModelEvents","d":"<p>Prevent model events from being dispatched by the given callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowCommand::handle","p":"Illuminate/Database/Console/ShowCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowCommand::tables","p":"Illuminate/Database/Console/ShowCommand.html#method_tables","d":"<p>Get information regarding the tables within the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowCommand::collectViews","p":"Illuminate/Database/Console/ShowCommand.html#method_collectViews","d":"<p>Get information regarding the views within the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowCommand::display","p":"Illuminate/Database/Console/ShowCommand.html#method_display","d":"<p>Render the database information.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowCommand::displayJson","p":"Illuminate/Database/Console/ShowCommand.html#method_displayJson","d":"<p>Render the database information as JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowCommand::displayForCli","p":"Illuminate/Database/Console/ShowCommand.html#method_displayForCli","d":"<p>Render the database information formatted for the CLI.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::handle","p":"Illuminate/Database/Console/ShowModelCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getPolicy","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getPolicy","d":"<p>Get the first policy associated with this model.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getAttributes","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getAttributes","d":"<p>Get the column attributes for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getVirtualAttributes","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getVirtualAttributes","d":"<p>Get the virtual (non-column) attributes for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getRelations","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getRelations","d":"<p>Get the relations from the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getObservers","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getObservers","d":"<p>Get the Observers watching this model.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::display","p":"Illuminate/Database/Console/ShowModelCommand.html#method_display","d":"<p>Render the model information.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::displayJson","p":"Illuminate/Database/Console/ShowModelCommand.html#method_displayJson","d":"<p>Render the model information as JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::displayCli","p":"Illuminate/Database/Console/ShowModelCommand.html#method_displayCli","d":"<p>Render the model information for the CLI.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getCastType","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getCastType","d":"<p>Get the cast type for the given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getCastsWithDates","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getCastsWithDates","d":"<p>Get the model casts, including any date casts.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getColumnType","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getColumnType","d":"<p>Get the type of the given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::getColumnDefault","p":"Illuminate/Database/Console/ShowModelCommand.html#method_getColumnDefault","d":"<p>Get the default value for the given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::attributeIsHidden","p":"Illuminate/Database/Console/ShowModelCommand.html#method_attributeIsHidden","d":"<p>Determine if the given attribute is hidden.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::columnIsUnique","p":"Illuminate/Database/Console/ShowModelCommand.html#method_columnIsUnique","d":"<p>Determine if the given attribute is unique.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\ShowModelCommand::qualifyModel","p":"Illuminate/Database/Console/ShowModelCommand.html#method_qualifyModel","d":"<p>Qualify the given model class base name.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::handle","p":"Illuminate/Database/Console/TableCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::columns","p":"Illuminate/Database/Console/TableCommand.html#method_columns","d":"<p>Get the information regarding the table's columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::getAttributesForColumn","p":"Illuminate/Database/Console/TableCommand.html#method_getAttributesForColumn","d":"<p>Get the attributes for a table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::indexes","p":"Illuminate/Database/Console/TableCommand.html#method_indexes","d":"<p>Get the information regarding the table's indexes.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::getAttributesForIndex","p":"Illuminate/Database/Console/TableCommand.html#method_getAttributesForIndex","d":"<p>Get the attributes for a table index.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::foreignKeys","p":"Illuminate/Database/Console/TableCommand.html#method_foreignKeys","d":"<p>Get the information regarding the table's foreign keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::display","p":"Illuminate/Database/Console/TableCommand.html#method_display","d":"<p>Render the table information.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::displayJson","p":"Illuminate/Database/Console/TableCommand.html#method_displayJson","d":"<p>Render the table information as JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\TableCommand::displayForCli","p":"Illuminate/Database/Console/TableCommand.html#method_displayForCli","d":"<p>Render the table information formatted for the CLI.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\WipeCommand::handle","p":"Illuminate/Database/Console/WipeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\WipeCommand::dropAllTables","p":"Illuminate/Database/Console/WipeCommand.html#method_dropAllTables","d":"<p>Drop all of the database tables.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\WipeCommand::dropAllViews","p":"Illuminate/Database/Console/WipeCommand.html#method_dropAllViews","d":"<p>Drop all of the database views.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\WipeCommand::dropAllTypes","p":"Illuminate/Database/Console/WipeCommand.html#method_dropAllTypes","d":"<p>Drop all of the database types.</p>"},{"t":"M","n":"Illuminate\\Database\\Console\\WipeCommand::getOptions","p":"Illuminate/Database/Console/WipeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Database\\DBAL\\TimestampType::getSQLDeclaration","p":"Illuminate/Database/DBAL/TimestampType.html#method_getSQLDeclaration","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Database\\DBAL\\TimestampType::getMySqlPlatformSQLDeclaration","p":"Illuminate/Database/DBAL/TimestampType.html#method_getMySqlPlatformSQLDeclaration","d":"<p>Get the SQL declaration for MySQL.</p>"},{"t":"M","n":"Illuminate\\Database\\DBAL\\TimestampType::getPostgresPlatformSQLDeclaration","p":"Illuminate/Database/DBAL/TimestampType.html#method_getPostgresPlatformSQLDeclaration","d":"<p>Get the SQL declaration for PostgreSQL.</p>"},{"t":"M","n":"Illuminate\\Database\\DBAL\\TimestampType::getSqlServerPlatformSQLDeclaration","p":"Illuminate/Database/DBAL/TimestampType.html#method_getSqlServerPlatformSQLDeclaration","d":"<p>Get the SQL declaration for SQL Server.</p>"},{"t":"M","n":"Illuminate\\Database\\DBAL\\TimestampType::getName","p":"Illuminate/Database/DBAL/TimestampType.html#method_getName","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::__construct","p":"Illuminate/Database/DatabaseManager.html#method___construct","d":"<p>Create a new database manager instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::connection","p":"Illuminate/Database/DatabaseManager.html#method_connection","d":"<p>Get a database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::parseConnectionName","p":"Illuminate/Database/DatabaseManager.html#method_parseConnectionName","d":"<p>Parse the connection into an array of the name and read / write type.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::makeConnection","p":"Illuminate/Database/DatabaseManager.html#method_makeConnection","d":"<p>Make the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::configuration","p":"Illuminate/Database/DatabaseManager.html#method_configuration","d":"<p>Get the configuration for a connection.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::configure","p":"Illuminate/Database/DatabaseManager.html#method_configure","d":"<p>Prepare the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::setPdoForType","p":"Illuminate/Database/DatabaseManager.html#method_setPdoForType","d":"<p>Prepare the read / write mode for database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::registerConfiguredDoctrineTypes","p":"Illuminate/Database/DatabaseManager.html#method_registerConfiguredDoctrineTypes","d":"<p>Register custom Doctrine types with the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::registerDoctrineType","p":"Illuminate/Database/DatabaseManager.html#method_registerDoctrineType","d":"<p>Register a custom Doctrine type.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::purge","p":"Illuminate/Database/DatabaseManager.html#method_purge","d":"<p>Disconnect from the given database and remove from local cache.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::disconnect","p":"Illuminate/Database/DatabaseManager.html#method_disconnect","d":"<p>Disconnect from the given database.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::reconnect","p":"Illuminate/Database/DatabaseManager.html#method_reconnect","d":"<p>Reconnect to the given database.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::usingConnection","p":"Illuminate/Database/DatabaseManager.html#method_usingConnection","d":"<p>Set the default database connection for the callback execution.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::refreshPdoConnections","p":"Illuminate/Database/DatabaseManager.html#method_refreshPdoConnections","d":"<p>Refresh the PDO connections on a given connection.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::getDefaultConnection","p":"Illuminate/Database/DatabaseManager.html#method_getDefaultConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::setDefaultConnection","p":"Illuminate/Database/DatabaseManager.html#method_setDefaultConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::supportedDrivers","p":"Illuminate/Database/DatabaseManager.html#method_supportedDrivers","d":"<p>Get all of the support drivers.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::availableDrivers","p":"Illuminate/Database/DatabaseManager.html#method_availableDrivers","d":"<p>Get all of the drivers that are actually available.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::extend","p":"Illuminate/Database/DatabaseManager.html#method_extend","d":"<p>Register an extension connection resolver.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::forgetExtension","p":"Illuminate/Database/DatabaseManager.html#method_forgetExtension","d":"<p>Remove an extension connection resolver.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::getConnections","p":"Illuminate/Database/DatabaseManager.html#method_getConnections","d":"<p>Return all of the created connections.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::setReconnector","p":"Illuminate/Database/DatabaseManager.html#method_setReconnector","d":"<p>Set the database reconnector callback.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::setApplication","p":"Illuminate/Database/DatabaseManager.html#method_setApplication","d":"<p>Set the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseManager::__call","p":"Illuminate/Database/DatabaseManager.html#method___call","d":"<p>Dynamically pass methods to the default connection.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::boot","p":"Illuminate/Database/DatabaseServiceProvider.html#method_boot","d":"<p>Bootstrap the application events.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::register","p":"Illuminate/Database/DatabaseServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::registerConnectionServices","p":"Illuminate/Database/DatabaseServiceProvider.html#method_registerConnectionServices","d":"<p>Register the primary database bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::registerEloquentFactory","p":"Illuminate/Database/DatabaseServiceProvider.html#method_registerEloquentFactory","d":"<p>Register the Eloquent factory instance in the container.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseServiceProvider::registerQueueableEntityResolver","p":"Illuminate/Database/DatabaseServiceProvider.html#method_registerQueueableEntityResolver","d":"<p>Register the queueable entity resolver implementation.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionRecord::__construct","p":"Illuminate/Database/DatabaseTransactionRecord.html#method___construct","d":"<p>Create a new database transaction record instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionRecord::addCallback","p":"Illuminate/Database/DatabaseTransactionRecord.html#method_addCallback","d":"<p>Register a callback to be executed after committing.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionRecord::executeCallbacks","p":"Illuminate/Database/DatabaseTransactionRecord.html#method_executeCallbacks","d":"<p>Execute all of the callbacks.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionRecord::getCallbacks","p":"Illuminate/Database/DatabaseTransactionRecord.html#method_getCallbacks","d":"<p>Get all of the callbacks.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionsManager::__construct","p":"Illuminate/Database/DatabaseTransactionsManager.html#method___construct","d":"<p>Create a new database transactions manager instance.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionsManager::begin","p":"Illuminate/Database/DatabaseTransactionsManager.html#method_begin","d":"<p>Start a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionsManager::rollback","p":"Illuminate/Database/DatabaseTransactionsManager.html#method_rollback","d":"<p>Rollback the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionsManager::commit","p":"Illuminate/Database/DatabaseTransactionsManager.html#method_commit","d":"<p>Commit the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionsManager::addCallback","p":"Illuminate/Database/DatabaseTransactionsManager.html#method_addCallback","d":"<p>Register a transaction callback.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionsManager::callbacksShouldIgnore","p":"Illuminate/Database/DatabaseTransactionsManager.html#method_callbacksShouldIgnore","d":"<p>Specify that callbacks should ignore the given transaction when determining if they should be executed.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionsManager::callbackApplicableTransactions","p":"Illuminate/Database/DatabaseTransactionsManager.html#method_callbackApplicableTransactions","d":"<p>Get the transactions that are applicable to callbacks.</p>"},{"t":"M","n":"Illuminate\\Database\\DatabaseTransactionsManager::getTransactions","p":"Illuminate/Database/DatabaseTransactionsManager.html#method_getTransactions","d":"<p>Get all the transactions.</p>"},{"t":"M","n":"Illuminate\\Database\\DetectsConcurrencyErrors::causedByConcurrencyError","p":"Illuminate/Database/DetectsConcurrencyErrors.html#method_causedByConcurrencyError","d":"<p>Determine if the given exception was caused by a concurrency error such as a deadlock or serialization failure.</p>"},{"t":"M","n":"Illuminate\\Database\\DetectsLostConnections::causedByLostConnection","p":"Illuminate/Database/DetectsLostConnections.html#method_causedByLostConnection","d":"<p>Determine if the given exception was caused by a lost connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastableModelEventOccurred::__construct","p":"Illuminate/Database/Eloquent/BroadcastableModelEventOccurred.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastableModelEventOccurred::broadcastOn","p":"Illuminate/Database/Eloquent/BroadcastableModelEventOccurred.html#method_broadcastOn","d":"<p>The channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastableModelEventOccurred::broadcastAs","p":"Illuminate/Database/Eloquent/BroadcastableModelEventOccurred.html#method_broadcastAs","d":"<p>The name the event should broadcast as.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastableModelEventOccurred::broadcastWith","p":"Illuminate/Database/Eloquent/BroadcastableModelEventOccurred.html#method_broadcastWith","d":"<p>Get the data that should be sent with the broadcasted event.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastableModelEventOccurred::onChannels","p":"Illuminate/Database/Eloquent/BroadcastableModelEventOccurred.html#method_onChannels","d":"<p>Manually specify the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastableModelEventOccurred::shouldBroadcastNow","p":"Illuminate/Database/Eloquent/BroadcastableModelEventOccurred.html#method_shouldBroadcastNow","d":"<p>Determine if the event should be broadcast synchronously.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastableModelEventOccurred::event","p":"Illuminate/Database/Eloquent/BroadcastableModelEventOccurred.html#method_event","d":"<p>Get the event name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::bootBroadcastsEvents","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_bootBroadcastsEvents","d":"<p>Boot the event broadcasting trait.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastCreated","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastCreated","d":"<p>Broadcast that the model was created.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastUpdated","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastUpdated","d":"<p>Broadcast that the model was updated.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastTrashed","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastTrashed","d":"<p>Broadcast that the model was trashed.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastRestored","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastRestored","d":"<p>Broadcast that the model was restored.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastDeleted","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastDeleted","d":"<p>Broadcast that the model was deleted.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastIfBroadcastChannelsExistForEvent","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastIfBroadcastChannelsExistForEvent","d":"<p>Broadcast the given event instance if channels are configured for the model event.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::newBroadcastableModelEvent","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_newBroadcastableModelEvent","d":"<p>Create a new broadcastable model event event.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::newBroadcastableEvent","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_newBroadcastableEvent","d":"<p>Create a new broadcastable model event for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastOn","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastOn","d":"<p>Get the channels that model events should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastConnection","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastConnection","d":"<p>Get the queue connection that should be used to broadcast model events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastQueue","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastQueue","d":"<p>Get the queue that should be used to broadcast model events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\BroadcastsEvents::broadcastAfterCommit","p":"Illuminate/Database/Eloquent/BroadcastsEvents.html#method_broadcastAfterCommit","d":"<p>Determine if the model event broadcast queued job should be dispatched after all transactions are committed.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__construct","p":"Illuminate/Database/Eloquent/Builder.html#method___construct","d":"<p>Create a new Eloquent query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::make","p":"Illuminate/Database/Eloquent/Builder.html#method_make","d":"<p>Create and return an un-saved model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withGlobalScope","p":"Illuminate/Database/Eloquent/Builder.html#method_withGlobalScope","d":"<p>Register a new global scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withoutGlobalScope","p":"Illuminate/Database/Eloquent/Builder.html#method_withoutGlobalScope","d":"<p>Remove a registered global scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withoutGlobalScopes","p":"Illuminate/Database/Eloquent/Builder.html#method_withoutGlobalScopes","d":"<p>Remove all or passed registered global scopes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::removedScopes","p":"Illuminate/Database/Eloquent/Builder.html#method_removedScopes","d":"<p>Get an array of global scopes that were removed from the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::whereKey","p":"Illuminate/Database/Eloquent/Builder.html#method_whereKey","d":"<p>Add a where clause on the primary key to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::whereKeyNot","p":"Illuminate/Database/Eloquent/Builder.html#method_whereKeyNot","d":"<p>Add a where clause on the primary key to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::where","p":"Illuminate/Database/Eloquent/Builder.html#method_where","d":"<p>Add a basic where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstWhere","p":"Illuminate/Database/Eloquent/Builder.html#method_firstWhere","d":"<p>Add a basic where clause to the query, and return the first result.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::orWhere","p":"Illuminate/Database/Eloquent/Builder.html#method_orWhere","d":"<p>Add an &quot;or where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::whereNot","p":"Illuminate/Database/Eloquent/Builder.html#method_whereNot","d":"<p>Add a basic &quot;where not&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::orWhereNot","p":"Illuminate/Database/Eloquent/Builder.html#method_orWhereNot","d":"<p>Add an &quot;or where not&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::latest","p":"Illuminate/Database/Eloquent/Builder.html#method_latest","d":"<p>Add an &quot;order by&quot; clause for a timestamp to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::oldest","p":"Illuminate/Database/Eloquent/Builder.html#method_oldest","d":"<p>Add an &quot;order by&quot; clause for a timestamp to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::hydrate","p":"Illuminate/Database/Eloquent/Builder.html#method_hydrate","d":"<p>Create a collection of models from plain arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::fromQuery","p":"Illuminate/Database/Eloquent/Builder.html#method_fromQuery","d":"<p>Create a collection of models from a raw query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::find","p":"Illuminate/Database/Eloquent/Builder.html#method_find","d":"<p>Find a model by its primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::findMany","p":"Illuminate/Database/Eloquent/Builder.html#method_findMany","d":"<p>Find multiple models by their primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::findOrFail","p":"Illuminate/Database/Eloquent/Builder.html#method_findOrFail","d":"<p>Find a model by its primary key or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::findOrNew","p":"Illuminate/Database/Eloquent/Builder.html#method_findOrNew","d":"<p>Find a model by its primary key or return fresh model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::findOr","p":"Illuminate/Database/Eloquent/Builder.html#method_findOr","d":"<p>Find a model by its primary key or call a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstOrNew","p":"Illuminate/Database/Eloquent/Builder.html#method_firstOrNew","d":"<p>Get the first record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstOrCreate","p":"Illuminate/Database/Eloquent/Builder.html#method_firstOrCreate","d":"<p>Get the first record matching the attributes or create it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::updateOrCreate","p":"Illuminate/Database/Eloquent/Builder.html#method_updateOrCreate","d":"<p>Create or update a record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstOrFail","p":"Illuminate/Database/Eloquent/Builder.html#method_firstOrFail","d":"<p>Execute the query and get the first result or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::firstOr","p":"Illuminate/Database/Eloquent/Builder.html#method_firstOr","d":"<p>Execute the query and get the first result or call a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::sole","p":"Illuminate/Database/Eloquent/Builder.html#method_sole","d":"<p>Execute the query and get the first result if it's the sole matching record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::value","p":"Illuminate/Database/Eloquent/Builder.html#method_value","d":"<p>Get a single column's value from the first result of a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::soleValue","p":"Illuminate/Database/Eloquent/Builder.html#method_soleValue","d":"<p>Get a single column's value from the first result of a query if it's the sole matching record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::valueOrFail","p":"Illuminate/Database/Eloquent/Builder.html#method_valueOrFail","d":"<p>Get a single column's value from the first result of the query or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::get","p":"Illuminate/Database/Eloquent/Builder.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getModels","p":"Illuminate/Database/Eloquent/Builder.html#method_getModels","d":"<p>Get the hydrated models without eager loading.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::eagerLoadRelations","p":"Illuminate/Database/Eloquent/Builder.html#method_eagerLoadRelations","d":"<p>Eager load the relationships for the models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::eagerLoadRelation","p":"Illuminate/Database/Eloquent/Builder.html#method_eagerLoadRelation","d":"<p>Eagerly load the relationship on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getRelation","p":"Illuminate/Database/Eloquent/Builder.html#method_getRelation","d":"<p>Get the relation instance for the given relation name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::relationsNestedUnder","p":"Illuminate/Database/Eloquent/Builder.html#method_relationsNestedUnder","d":"<p>Get the deeply nested relations for a given top-level relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::isNestedUnder","p":"Illuminate/Database/Eloquent/Builder.html#method_isNestedUnder","d":"<p>Determine if the relationship is nested.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::cursor","p":"Illuminate/Database/Eloquent/Builder.html#method_cursor","d":"<p>Get a lazy collection for the given query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::enforceOrderBy","p":"Illuminate/Database/Eloquent/Builder.html#method_enforceOrderBy","d":"<p>Add a generic &quot;order by&quot; clause if the query doesn't already have one.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::pluck","p":"Illuminate/Database/Eloquent/Builder.html#method_pluck","d":"<p>Get a collection with the values of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::paginate","p":"Illuminate/Database/Eloquent/Builder.html#method_paginate","d":"<p>Paginate the given query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::simplePaginate","p":"Illuminate/Database/Eloquent/Builder.html#method_simplePaginate","d":"<p>Paginate the given query into a simple paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::cursorPaginate","p":"Illuminate/Database/Eloquent/Builder.html#method_cursorPaginate","d":"<p>Paginate the given query into a cursor paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::ensureOrderForCursorPagination","p":"Illuminate/Database/Eloquent/Builder.html#method_ensureOrderForCursorPagination","d":"<p>Ensure the proper order by required for cursor pagination.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::create","p":"Illuminate/Database/Eloquent/Builder.html#method_create","d":"<p>Save a new model and return the instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::forceCreate","p":"Illuminate/Database/Eloquent/Builder.html#method_forceCreate","d":"<p>Save a new model and return the instance. Allow mass-assignment.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::update","p":"Illuminate/Database/Eloquent/Builder.html#method_update","d":"<p>Update records in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::upsert","p":"Illuminate/Database/Eloquent/Builder.html#method_upsert","d":"<p>Insert new records or update the existing ones.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::touch","p":"Illuminate/Database/Eloquent/Builder.html#method_touch","d":"<p>Update the column's update timestamp.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::increment","p":"Illuminate/Database/Eloquent/Builder.html#method_increment","d":"<p>Increment a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::decrement","p":"Illuminate/Database/Eloquent/Builder.html#method_decrement","d":"<p>Decrement a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::addUpdatedAtColumn","p":"Illuminate/Database/Eloquent/Builder.html#method_addUpdatedAtColumn","d":"<p>Add the &quot;updated at&quot; column to an array of values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::addTimestampsToUpsertValues","p":"Illuminate/Database/Eloquent/Builder.html#method_addTimestampsToUpsertValues","d":"<p>Add timestamps to the inserted values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::addUpdatedAtToUpsertColumns","p":"Illuminate/Database/Eloquent/Builder.html#method_addUpdatedAtToUpsertColumns","d":"<p>Add the &quot;updated at&quot; column to the updated columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::delete","p":"Illuminate/Database/Eloquent/Builder.html#method_delete","d":"<p>Delete records from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::forceDelete","p":"Illuminate/Database/Eloquent/Builder.html#method_forceDelete","d":"<p>Run the default delete function on the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::onDelete","p":"Illuminate/Database/Eloquent/Builder.html#method_onDelete","d":"<p>Register a replacement for the default delete function.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::hasNamedScope","p":"Illuminate/Database/Eloquent/Builder.html#method_hasNamedScope","d":"<p>Determine if the given model has a scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::scopes","p":"Illuminate/Database/Eloquent/Builder.html#method_scopes","d":"<p>Call the given local model scopes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::applyScopes","p":"Illuminate/Database/Eloquent/Builder.html#method_applyScopes","d":"<p>Apply the scopes to the Eloquent builder instance and return it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::callScope","p":"Illuminate/Database/Eloquent/Builder.html#method_callScope","d":"<p>Apply the given scope on the current builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::callNamedScope","p":"Illuminate/Database/Eloquent/Builder.html#method_callNamedScope","d":"<p>Apply the given named scope on the current builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::addNewWheresWithinGroup","p":"Illuminate/Database/Eloquent/Builder.html#method_addNewWheresWithinGroup","d":"<p>Nest where conditions by slicing them at the given where count.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::groupWhereSliceForScope","p":"Illuminate/Database/Eloquent/Builder.html#method_groupWhereSliceForScope","d":"<p>Slice where conditions at the given offset and add them to the query as a nested condition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::createNestedWhere","p":"Illuminate/Database/Eloquent/Builder.html#method_createNestedWhere","d":"<p>Create a where array with nested where conditions.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::with","p":"Illuminate/Database/Eloquent/Builder.html#method_with","d":"<p>Set the relationships that should be eager loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::without","p":"Illuminate/Database/Eloquent/Builder.html#method_without","d":"<p>Prevent the specified relations from being eager loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withOnly","p":"Illuminate/Database/Eloquent/Builder.html#method_withOnly","d":"<p>Set the relationships that should be eager loaded while removing any previously added eager loading specifications.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::newModelInstance","p":"Illuminate/Database/Eloquent/Builder.html#method_newModelInstance","d":"<p>Create a new instance of the model being queried.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::parseWithRelations","p":"Illuminate/Database/Eloquent/Builder.html#method_parseWithRelations","d":"<p>Parse a list of relations into individuals.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::prepareNestedWithRelationships","p":"Illuminate/Database/Eloquent/Builder.html#method_prepareNestedWithRelationships","d":"<p>Prepare nested with relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::combineConstraints","p":"Illuminate/Database/Eloquent/Builder.html#method_combineConstraints","d":"<p>Combine an array of constraints into a single constraint.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::parseNameAndAttributeSelectionConstraint","p":"Illuminate/Database/Eloquent/Builder.html#method_parseNameAndAttributeSelectionConstraint","d":"<p>Parse the attribute select constraints from the name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::createSelectWithConstraint","p":"Illuminate/Database/Eloquent/Builder.html#method_createSelectWithConstraint","d":"<p>Create a constraint to select the given columns for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::addNestedWiths","p":"Illuminate/Database/Eloquent/Builder.html#method_addNestedWiths","d":"<p>Parse the nested relationships in a relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withCasts","p":"Illuminate/Database/Eloquent/Builder.html#method_withCasts","d":"<p>Apply query-time casts to the model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getQuery","p":"Illuminate/Database/Eloquent/Builder.html#method_getQuery","d":"<p>Get the underlying query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::setQuery","p":"Illuminate/Database/Eloquent/Builder.html#method_setQuery","d":"<p>Set the underlying query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::toBase","p":"Illuminate/Database/Eloquent/Builder.html#method_toBase","d":"<p>Get a base query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getEagerLoads","p":"Illuminate/Database/Eloquent/Builder.html#method_getEagerLoads","d":"<p>Get the relationships being eagerly loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::setEagerLoads","p":"Illuminate/Database/Eloquent/Builder.html#method_setEagerLoads","d":"<p>Set the relationships being eagerly loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withoutEagerLoad","p":"Illuminate/Database/Eloquent/Builder.html#method_withoutEagerLoad","d":"<p>Indicate that the given relationships should not be eagerly loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::withoutEagerLoads","p":"Illuminate/Database/Eloquent/Builder.html#method_withoutEagerLoads","d":"<p>Flush the relationships being eagerly loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::defaultKeyName","p":"Illuminate/Database/Eloquent/Builder.html#method_defaultKeyName","d":"<p>Get the default key name of the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getModel","p":"Illuminate/Database/Eloquent/Builder.html#method_getModel","d":"<p>Get the model instance being queried.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::setModel","p":"Illuminate/Database/Eloquent/Builder.html#method_setModel","d":"<p>Set a model instance for the model being queried.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::qualifyColumn","p":"Illuminate/Database/Eloquent/Builder.html#method_qualifyColumn","d":"<p>Qualify the given column name by the model's table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::qualifyColumns","p":"Illuminate/Database/Eloquent/Builder.html#method_qualifyColumns","d":"<p>Qualify the given columns with the model's table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getMacro","p":"Illuminate/Database/Eloquent/Builder.html#method_getMacro","d":"<p>Get the given macro by name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::hasMacro","p":"Illuminate/Database/Eloquent/Builder.html#method_hasMacro","d":"<p>Checks if a macro is registered.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::getGlobalMacro","p":"Illuminate/Database/Eloquent/Builder.html#method_getGlobalMacro","d":"<p>Get the given global macro by name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::hasGlobalMacro","p":"Illuminate/Database/Eloquent/Builder.html#method_hasGlobalMacro","d":"<p>Checks if a global macro is registered.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__get","p":"Illuminate/Database/Eloquent/Builder.html#method___get","d":"<p>Dynamically access builder proxies.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__call","p":"Illuminate/Database/Eloquent/Builder.html#method___call","d":"<p>Dynamically handle calls into the query instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__callStatic","p":"Illuminate/Database/Eloquent/Builder.html#method___callStatic","d":"<p>Dynamically handle calls into the query instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::registerMixin","p":"Illuminate/Database/Eloquent/Builder.html#method_registerMixin","d":"<p>Register the given mixin with the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::clone","p":"Illuminate/Database/Eloquent/Builder.html#method_clone","d":"<p>Clone the Eloquent query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Builder::__clone","p":"Illuminate/Database/Eloquent/Builder.html#method___clone","d":"<p>Force a clone of the underlying query builder when cloning.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\ArrayObject::collect","p":"Illuminate/Database/Eloquent/Casts/ArrayObject.html#method_collect","d":"<p>Get a collection containing the underlying array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\ArrayObject::toArray","p":"Illuminate/Database/Eloquent/Casts/ArrayObject.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\ArrayObject::jsonSerialize","p":"Illuminate/Database/Eloquent/Casts/ArrayObject.html#method_jsonSerialize","d":"<p>Get the array that should be JSON serialized.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsArrayObject::castUsing","p":"Illuminate/Database/Eloquent/Casts/AsArrayObject.html#method_castUsing","d":"<p>Get the caster class to use when casting from / to this cast target.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsArrayObject::get","p":"Illuminate/Database/Eloquent/Casts/AsArrayObject.html#method_get","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsArrayObject::set","p":"Illuminate/Database/Eloquent/Casts/AsArrayObject.html#method_set","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsArrayObject::serialize","p":"Illuminate/Database/Eloquent/Casts/AsArrayObject.html#method_serialize","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsCollection::castUsing","p":"Illuminate/Database/Eloquent/Casts/AsCollection.html#method_castUsing","d":"<p>Get the caster class to use when casting from / to this cast target.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsCollection::get","p":"Illuminate/Database/Eloquent/Casts/AsCollection.html#method_get","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsCollection::set","p":"Illuminate/Database/Eloquent/Casts/AsCollection.html#method_set","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedArrayObject::castUsing","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedArrayObject.html#method_castUsing","d":"<p>Get the caster class to use when casting from / to this cast target.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedArrayObject::get","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedArrayObject.html#method_get","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedArrayObject::set","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedArrayObject.html#method_set","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedArrayObject::serialize","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedArrayObject.html#method_serialize","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedCollection::castUsing","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedCollection.html#method_castUsing","d":"<p>Get the caster class to use when casting from / to this cast target.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedCollection::get","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedCollection.html#method_get","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEncryptedCollection::set","p":"Illuminate/Database/Eloquent/Casts/AsEncryptedCollection.html#method_set","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumArrayObject::castUsing","p":"Illuminate/Database/Eloquent/Casts/AsEnumArrayObject.html#method_castUsing","d":"<p>Get the caster class to use when casting from / to this cast target.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumArrayObject::__construct","p":"Illuminate/Database/Eloquent/Casts/AsEnumArrayObject.html#method___construct","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumArrayObject::get","p":"Illuminate/Database/Eloquent/Casts/AsEnumArrayObject.html#method_get","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumArrayObject::set","p":"Illuminate/Database/Eloquent/Casts/AsEnumArrayObject.html#method_set","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumArrayObject::serialize","p":"Illuminate/Database/Eloquent/Casts/AsEnumArrayObject.html#method_serialize","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumArrayObject::getStorableEnumValue","p":"Illuminate/Database/Eloquent/Casts/AsEnumArrayObject.html#method_getStorableEnumValue","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumCollection::castUsing","p":"Illuminate/Database/Eloquent/Casts/AsEnumCollection.html#method_castUsing","d":"<p>Get the caster class to use when casting from / to this cast target.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumCollection::__construct","p":"Illuminate/Database/Eloquent/Casts/AsEnumCollection.html#method___construct","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumCollection::get","p":"Illuminate/Database/Eloquent/Casts/AsEnumCollection.html#method_get","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumCollection::set","p":"Illuminate/Database/Eloquent/Casts/AsEnumCollection.html#method_set","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumCollection::serialize","p":"Illuminate/Database/Eloquent/Casts/AsEnumCollection.html#method_serialize","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsEnumCollection::getStorableEnumValue","p":"Illuminate/Database/Eloquent/Casts/AsEnumCollection.html#method_getStorableEnumValue","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsStringable::castUsing","p":"Illuminate/Database/Eloquent/Casts/AsStringable.html#method_castUsing","d":"<p>Get the caster class to use when casting from / to this cast target.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsStringable::get","p":"Illuminate/Database/Eloquent/Casts/AsStringable.html#method_get","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\AsStringable::set","p":"Illuminate/Database/Eloquent/Casts/AsStringable.html#method_set","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\Attribute::__construct","p":"Illuminate/Database/Eloquent/Casts/Attribute.html#method___construct","d":"<p>Create a new attribute accessor / mutator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\Attribute::make","p":"Illuminate/Database/Eloquent/Casts/Attribute.html#method_make","d":"<p>Create a new attribute accessor / mutator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\Attribute::get","p":"Illuminate/Database/Eloquent/Casts/Attribute.html#method_get","d":"<p>Create a new attribute accessor.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\Attribute::set","p":"Illuminate/Database/Eloquent/Casts/Attribute.html#method_set","d":"<p>Create a new attribute mutator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\Attribute::withoutObjectCaching","p":"Illuminate/Database/Eloquent/Casts/Attribute.html#method_withoutObjectCaching","d":"<p>Disable object caching for the attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Casts\\Attribute::shouldCache","p":"Illuminate/Database/Eloquent/Casts/Attribute.html#method_shouldCache","d":"<p>Enable caching for the attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::find","p":"Illuminate/Database/Eloquent/Collection.html#method_find","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::load","p":"Illuminate/Database/Eloquent/Collection.html#method_load","d":"<p>Load a set of relationships onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadAggregate","p":"Illuminate/Database/Eloquent/Collection.html#method_loadAggregate","d":"<p>Load a set of aggregations over relationship's column onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadCount","p":"Illuminate/Database/Eloquent/Collection.html#method_loadCount","d":"<p>Load a set of relationship counts onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadMax","p":"Illuminate/Database/Eloquent/Collection.html#method_loadMax","d":"<p>Load a set of relationship's max column values onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadMin","p":"Illuminate/Database/Eloquent/Collection.html#method_loadMin","d":"<p>Load a set of relationship's min column values onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadSum","p":"Illuminate/Database/Eloquent/Collection.html#method_loadSum","d":"<p>Load a set of relationship's column summations onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadAvg","p":"Illuminate/Database/Eloquent/Collection.html#method_loadAvg","d":"<p>Load a set of relationship's average column values onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadExists","p":"Illuminate/Database/Eloquent/Collection.html#method_loadExists","d":"<p>Load a set of related existences onto the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadMissing","p":"Illuminate/Database/Eloquent/Collection.html#method_loadMissing","d":"<p>Load a set of relationships onto the collection if they are not already eager loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadMissingRelation","p":"Illuminate/Database/Eloquent/Collection.html#method_loadMissingRelation","d":"<p>Load a relationship path if it is not already eager loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadMorph","p":"Illuminate/Database/Eloquent/Collection.html#method_loadMorph","d":"<p>Load a set of relationships onto the mixed relationship collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::loadMorphCount","p":"Illuminate/Database/Eloquent/Collection.html#method_loadMorphCount","d":"<p>Load a set of relationship counts onto the mixed relationship collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::contains","p":"Illuminate/Database/Eloquent/Collection.html#method_contains","d":"<p>Determine if a key exists in the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::modelKeys","p":"Illuminate/Database/Eloquent/Collection.html#method_modelKeys","d":"<p>Get the array of primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::merge","p":"Illuminate/Database/Eloquent/Collection.html#method_merge","d":"<p>Merge the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::map","p":"Illuminate/Database/Eloquent/Collection.html#method_map","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::mapWithKeys","p":"Illuminate/Database/Eloquent/Collection.html#method_mapWithKeys","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::fresh","p":"Illuminate/Database/Eloquent/Collection.html#method_fresh","d":"<p>Reload a fresh model instance from the database for all the entities.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::diff","p":"Illuminate/Database/Eloquent/Collection.html#method_diff","d":"<p>Diff the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::intersect","p":"Illuminate/Database/Eloquent/Collection.html#method_intersect","d":"<p>Intersect the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::unique","p":"Illuminate/Database/Eloquent/Collection.html#method_unique","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::only","p":"Illuminate/Database/Eloquent/Collection.html#method_only","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::except","p":"Illuminate/Database/Eloquent/Collection.html#method_except","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::makeHidden","p":"Illuminate/Database/Eloquent/Collection.html#method_makeHidden","d":"<p>Make the given, typically visible, attributes hidden across the entire collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::makeVisible","p":"Illuminate/Database/Eloquent/Collection.html#method_makeVisible","d":"<p>Make the given, typically hidden, attributes visible across the entire collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::setVisible","p":"Illuminate/Database/Eloquent/Collection.html#method_setVisible","d":"<p>Set the visible attributes across the entire collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::setHidden","p":"Illuminate/Database/Eloquent/Collection.html#method_setHidden","d":"<p>Set the hidden attributes across the entire collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::append","p":"Illuminate/Database/Eloquent/Collection.html#method_append","d":"<p>Append an attribute across the entire collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getDictionary","p":"Illuminate/Database/Eloquent/Collection.html#method_getDictionary","d":"<p>Get a dictionary keyed by primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::countBy","p":"Illuminate/Database/Eloquent/Collection.html#method_countBy","d":"<p>Count the number of items in the collection by a field or using a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::collapse","p":"Illuminate/Database/Eloquent/Collection.html#method_collapse","d":"<p>Collapse the collection of items into a single array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::flatten","p":"Illuminate/Database/Eloquent/Collection.html#method_flatten","d":"<p>Get a flattened array of the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::flip","p":"Illuminate/Database/Eloquent/Collection.html#method_flip","d":"<p>Flip the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::keys","p":"Illuminate/Database/Eloquent/Collection.html#method_keys","d":"<p>Get the keys of the collection items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::pad","p":"Illuminate/Database/Eloquent/Collection.html#method_pad","d":"<p>Pad collection to the specified length with a value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::pluck","p":"Illuminate/Database/Eloquent/Collection.html#method_pluck","d":"<p>Get an array with the values of a given key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::zip","p":"Illuminate/Database/Eloquent/Collection.html#method_zip","d":"<p>Zip the collection together with one or more arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::duplicateComparator","p":"Illuminate/Database/Eloquent/Collection.html#method_duplicateComparator","d":"<p>Get the comparison function to detect duplicates.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getQueueableClass","p":"Illuminate/Database/Eloquent/Collection.html#method_getQueueableClass","d":"<p>Get the type of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getQueueableModelClass","p":"Illuminate/Database/Eloquent/Collection.html#method_getQueueableModelClass","d":"<p>Get the queueable class name for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getQueueableIds","p":"Illuminate/Database/Eloquent/Collection.html#method_getQueueableIds","d":"<p>Get the identifiers for all of the entities.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getQueueableRelations","p":"Illuminate/Database/Eloquent/Collection.html#method_getQueueableRelations","d":"<p>Get the relationships of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::getQueueableConnection","p":"Illuminate/Database/Eloquent/Collection.html#method_getQueueableConnection","d":"<p>Get the connection of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Collection::toQuery","p":"Illuminate/Database/Eloquent/Collection.html#method_toQuery","d":"<p>Get the Eloquent query builder from the collection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::getFillable","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_getFillable","d":"<p>Get the fillable attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::fillable","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_fillable","d":"<p>Set the fillable attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::mergeFillable","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_mergeFillable","d":"<p>Merge new fillable attributes with existing fillable attributes on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::getGuarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_getGuarded","d":"<p>Get the guarded attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::guard","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_guard","d":"<p>Set the guarded attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::mergeGuarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_mergeGuarded","d":"<p>Merge new guarded attributes with existing guarded attributes on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::unguard","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_unguard","d":"<p>Disable all mass assignable restrictions.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::reguard","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_reguard","d":"<p>Enable the mass assignment restrictions.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::isUnguarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_isUnguarded","d":"<p>Determine if the current state is &quot;unguarded&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::unguarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_unguarded","d":"<p>Run the given callable while being unguarded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::isFillable","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_isFillable","d":"<p>Determine if the given attribute may be mass assigned.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::isGuarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_isGuarded","d":"<p>Determine if the given key is guarded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::isGuardableColumn","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_isGuardableColumn","d":"<p>Determine if the given column is a valid, guardable column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::totallyGuarded","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_totallyGuarded","d":"<p>Determine if the model is totally guarded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\GuardsAttributes::fillableFromArray","p":"Illuminate/Database/Eloquent/Concerns/GuardsAttributes.html#method_fillableFromArray","d":"<p>Get the fillable attributes of a given array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::attributesToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_attributesToArray","d":"<p>Convert the model's attributes to an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::addDateAttributesToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_addDateAttributesToArray","d":"<p>Add the date attributes to the attributes array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::addMutatedAttributesToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_addMutatedAttributesToArray","d":"<p>Add the mutated attributes to the attributes array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::addCastAttributesToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_addCastAttributesToArray","d":"<p>Add the casted attributes to the attributes array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayableAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayableAttributes","d":"<p>Get an attribute array of all arrayable attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayableAppends","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayableAppends","d":"<p>Get all of the appendable values that are arrayable.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::relationsToArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_relationsToArray","d":"<p>Get the model's relationships in array form.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayableRelations","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayableRelations","d":"<p>Get an attribute array of all arrayable relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayableItems","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayableItems","d":"<p>Get an attribute array of all arrayable values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttribute","d":"<p>Get an attribute from the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::throwMissingAttributeExceptionIfApplicable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_throwMissingAttributeExceptionIfApplicable","d":"<p>Either throw a missing attribute exception or return null depending on Eloquent's configuration.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttributeValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttributeValue","d":"<p>Get a plain attribute (not a relationship).</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttributeFromArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttributeFromArray","d":"<p>Get an attribute from the $attributes array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getRelationValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getRelationValue","d":"<p>Get a relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isRelation","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isRelation","d":"<p>Determine if the given key is a relationship method on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::handleLazyLoadingViolation","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_handleLazyLoadingViolation","d":"<p>Handle a lazy loading violation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getRelationshipFromMethod","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getRelationshipFromMethod","d":"<p>Get a relationship value from a method.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasGetMutator","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasGetMutator","d":"<p>Determine if a get mutator exists for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasAttributeMutator","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasAttributeMutator","d":"<p>Determine if a &quot;Attribute&quot; return type marked mutator exists for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasAttributeGetMutator","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasAttributeGetMutator","d":"<p>Determine if a &quot;Attribute&quot; return type marked get mutator exists for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mutateAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mutateAttribute","d":"<p>Get the value of an attribute using its mutator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mutateAttributeMarkedAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mutateAttributeMarkedAttribute","d":"<p>Get the value of an &quot;Attribute&quot; return type marked attribute using its mutator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mutateAttributeForArray","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mutateAttributeForArray","d":"<p>Get the value of an attribute using its mutator for array conversion.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mergeCasts","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mergeCasts","d":"<p>Merge new casts with existing casts on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::castAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_castAttribute","d":"<p>Cast an attribute to a native PHP type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getClassCastableAttributeValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getClassCastableAttributeValue","d":"<p>Cast the given attribute using a custom cast class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getEnumCastableAttributeValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getEnumCastableAttributeValue","d":"<p>Cast the given attribute to an enum.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getCastType","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getCastType","d":"<p>Get the type of cast for a model attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::deviateClassCastableAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_deviateClassCastableAttribute","d":"<p>Increment or decrement the given attribute using the custom cast class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::serializeClassCastableAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_serializeClassCastableAttribute","d":"<p>Serialize the given attribute using the custom cast class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isCustomDateTimeCast","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isCustomDateTimeCast","d":"<p>Determine if the cast type is a custom date time cast.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isImmutableCustomDateTimeCast","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isImmutableCustomDateTimeCast","d":"<p>Determine if the cast type is an immutable custom date time cast.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isDecimalCast","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isDecimalCast","d":"<p>Determine if the cast type is a decimal cast.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setAttribute","d":"<p>Set a given attribute on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasSetMutator","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasSetMutator","d":"<p>Determine if a set mutator exists for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasAttributeSetMutator","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasAttributeSetMutator","d":"<p>Determine if an &quot;Attribute&quot; return type marked set mutator exists for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setMutatedAttributeValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setMutatedAttributeValue","d":"<p>Set the value of an attribute using its mutator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setAttributeMarkedMutatedAttributeValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setAttributeMarkedMutatedAttributeValue","d":"<p>Set the value of a &quot;Attribute&quot; return type marked attribute using its mutator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isDateAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isDateAttribute","d":"<p>Determine if the given attribute is a date or date castable.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::fillJsonAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_fillJsonAttribute","d":"<p>Set a given JSON attribute on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setClassCastableAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setClassCastableAttribute","d":"<p>Set the value of a class castable attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setEnumCastableAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setEnumCastableAttribute","d":"<p>Set the value of an enum castable attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getEnumCaseFromValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getEnumCaseFromValue","d":"<p>Get an enum case instance from a given class and value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getStorableEnumValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getStorableEnumValue","d":"<p>Get the storable value from the given enum.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayAttributeWithValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayAttributeWithValue","d":"<p>Get an array attribute with the given key and value set.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getArrayAttributeByKey","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getArrayAttributeByKey","d":"<p>Get an array attribute or return an empty array if it is not set.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::castAttributeAsJson","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_castAttributeAsJson","d":"<p>Cast the given attribute to JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asJson","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asJson","d":"<p>Encode the given value as JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::fromJson","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_fromJson","d":"<p>Decode the given JSON back into an array or object.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::fromEncryptedString","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_fromEncryptedString","d":"<p>Decrypt the given encrypted string.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::castAttributeAsEncryptedString","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_castAttributeAsEncryptedString","d":"<p>Cast the given attribute to an encrypted string.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::encryptUsing","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_encryptUsing","d":"<p>Set the encrypter instance that will be used to encrypt attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::fromFloat","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_fromFloat","d":"<p>Decode the given float.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asDecimal","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asDecimal","d":"<p>Return a decimal as string.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asDate","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asDate","d":"<p>Return a timestamp as DateTime object with time set to 00:00:00.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asDateTime","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asDateTime","d":"<p>Return a timestamp as DateTime object.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isStandardDateFormat","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isStandardDateFormat","d":"<p>Determine if the given value is a standard date format.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::fromDateTime","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_fromDateTime","d":"<p>Convert a DateTime to a storable string.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::asTimestamp","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_asTimestamp","d":"<p>Return a timestamp as unix timestamp.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::serializeDate","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_serializeDate","d":"<p>Prepare a date for array / JSON serialization.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getDates","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getDates","d":"<p>Get the attributes that should be converted to dates.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getDateFormat","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getDateFormat","d":"<p>Get the format for database stored dates.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setDateFormat","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setDateFormat","d":"<p>Set the date format used by the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasCast","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasCast","d":"<p>Determine whether an attribute should be cast to a native type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getCasts","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getCasts","d":"<p>Get the casts array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isDateCastable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isDateCastable","d":"<p>Determine whether a value is Date / DateTime castable for inbound manipulation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isDateCastableWithCustomFormat","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isDateCastableWithCustomFormat","d":"<p>Determine whether a value is Date / DateTime custom-castable for inbound manipulation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isJsonCastable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isJsonCastable","d":"<p>Determine whether a value is JSON castable for inbound manipulation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isEncryptedCastable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isEncryptedCastable","d":"<p>Determine whether a value is an encrypted castable for inbound manipulation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isClassCastable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isClassCastable","d":"<p>Determine if the given key is cast using a custom class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isEnumCastable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isEnumCastable","d":"<p>Determine if the given key is cast using an enum.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isClassDeviable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isClassDeviable","d":"<p>Determine if the key is deviable using a custom class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isClassSerializable","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isClassSerializable","d":"<p>Determine if the key is serializable using a custom class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::resolveCasterClass","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_resolveCasterClass","d":"<p>Resolve the custom caster class for a given key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::parseCasterClass","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_parseCasterClass","d":"<p>Parse the given caster class, removing any arguments.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mergeAttributesFromCachedCasts","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mergeAttributesFromCachedCasts","d":"<p>Merge the cast class and attribute cast attributes back into the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mergeAttributesFromClassCasts","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mergeAttributesFromClassCasts","d":"<p>Merge the cast class attributes back into the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::mergeAttributesFromAttributeCasts","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_mergeAttributesFromAttributeCasts","d":"<p>Merge the cast class attributes back into the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::normalizeCastClassResponse","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_normalizeCastClassResponse","d":"<p>Normalize the response from a custom class caster.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttributes","d":"<p>Get all of the current attributes on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttributesForInsert","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttributesForInsert","d":"<p>Get all of the current attributes on the model for an insert operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setRawAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setRawAttributes","d":"<p>Set the array of model attributes. No checking is done.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getOriginal","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getOriginal","d":"<p>Get the model's original attribute values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getOriginalWithoutRewindingModel","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getOriginalWithoutRewindingModel","d":"<p>Get the model's original attribute values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getRawOriginal","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getRawOriginal","d":"<p>Get the model's raw original attribute values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::only","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_only","d":"<p>Get a subset of the model's attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::syncOriginal","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_syncOriginal","d":"<p>Sync the original attributes with the current.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::syncOriginalAttribute","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_syncOriginalAttribute","d":"<p>Sync a single original attribute with its current value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::syncOriginalAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_syncOriginalAttributes","d":"<p>Sync multiple original attribute with their current values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::syncChanges","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_syncChanges","d":"<p>Sync the changed attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isDirty","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isDirty","d":"<p>Determine if the model or any of the given attribute(s) have been modified.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::isClean","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_isClean","d":"<p>Determine if the model or all the given attribute(s) have remained the same.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::discardChanges","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_discardChanges","d":"<p>Discard attribute changes and reset the attributes to their original state.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::wasChanged","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_wasChanged","d":"<p>Determine if the model or any of the given attribute(s) were changed when the model was last saved.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasChanges","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasChanges","d":"<p>Determine if any of the given attributes were changed when the model was last saved.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getDirty","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getDirty","d":"<p>Get the attributes that have been changed since the last sync.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getChanges","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getChanges","d":"<p>Get the attributes that were changed when the model was last saved.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::originalIsEquivalent","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_originalIsEquivalent","d":"<p>Determine if the new and old values for a given key are equivalent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::transformModelValue","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_transformModelValue","d":"<p>Transform a raw model value using mutators, casts, etc.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::append","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_append","d":"<p>Append attributes to query when building a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAppends","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAppends","d":"<p>Get the accessors that are being appended to model arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::setAppends","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_setAppends","d":"<p>Set the accessors to append to model arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::hasAppended","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_hasAppended","d":"<p>Return whether the accessor attribute has been appended.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getMutatedAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getMutatedAttributes","d":"<p>Get the mutated attributes for a given instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::cacheMutatedAttributes","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_cacheMutatedAttributes","d":"<p>Extract and cache all the mutated attributes of a class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getMutatorMethods","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getMutatorMethods","d":"<p>Get all of the attribute mutator methods.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasAttributes::getAttributeMarkedMutatorMethods","p":"Illuminate/Database/Eloquent/Concerns/HasAttributes.html#method_getAttributeMarkedMutatorMethods","d":"<p>Get all of the &quot;Attribute&quot; return typed attribute mutator methods.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::observe","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_observe","d":"<p>Register observers with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::registerObserver","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_registerObserver","d":"<p>Register a single observer with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::getObservableEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_getObservableEvents","d":"<p>Get the observable event names.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::setObservableEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_setObservableEvents","d":"<p>Set the observable event names.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::addObservableEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_addObservableEvents","d":"<p>Add an observable event name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::removeObservableEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_removeObservableEvents","d":"<p>Remove an observable event name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::registerModelEvent","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_registerModelEvent","d":"<p>Register a model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::fireModelEvent","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_fireModelEvent","d":"<p>Fire the given event for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::fireCustomModelEvent","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_fireCustomModelEvent","d":"<p>Fire a custom model event for the given event.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::filterModelEventResults","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_filterModelEventResults","d":"<p>Filter the model event results.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::retrieved","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_retrieved","d":"<p>Register a retrieved model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::saving","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_saving","d":"<p>Register a saving model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::saved","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_saved","d":"<p>Register a saved model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::updating","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_updating","d":"<p>Register an updating model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::updated","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_updated","d":"<p>Register an updated model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::creating","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_creating","d":"<p>Register a creating model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::created","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_created","d":"<p>Register a created model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::replicating","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_replicating","d":"<p>Register a replicating model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::deleting","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_deleting","d":"<p>Register a deleting model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::deleted","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_deleted","d":"<p>Register a deleted model event with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::flushEventListeners","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_flushEventListeners","d":"<p>Remove all the event listeners for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::getEventDispatcher","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_getEventDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::setEventDispatcher","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::unsetEventDispatcher","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_unsetEventDispatcher","d":"<p>Unset the event dispatcher for models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasEvents::withoutEvents","p":"Illuminate/Database/Eloquent/Concerns/HasEvents.html#method_withoutEvents","d":"<p>Execute a callback without firing any model events for any model type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes::addGlobalScope","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html#method_addGlobalScope","d":"<p>Register a new global scope on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes::hasGlobalScope","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html#method_hasGlobalScope","d":"<p>Determine if a model has a global scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes::getGlobalScope","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html#method_getGlobalScope","d":"<p>Get a global scope registered with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasGlobalScopes::getGlobalScopes","p":"Illuminate/Database/Eloquent/Concerns/HasGlobalScopes.html#method_getGlobalScopes","d":"<p>Get the global scopes for this class instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::relationResolver","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_relationResolver","d":"<p>Get the dynamic relation resolver if defined or inherited, or return null.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::resolveRelationUsing","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_resolveRelationUsing","d":"<p>Define a dynamic relation resolver.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::hasOne","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_hasOne","d":"<p>Define a one-to-one relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newHasOne","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newHasOne","d":"<p>Instantiate a new HasOne relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::hasOneThrough","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_hasOneThrough","d":"<p>Define a has-one-through relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newHasOneThrough","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newHasOneThrough","d":"<p>Instantiate a new HasOneThrough relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphOne","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphOne","d":"<p>Define a polymorphic one-to-one relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newMorphOne","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newMorphOne","d":"<p>Instantiate a new MorphOne relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::belongsTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_belongsTo","d":"<p>Define an inverse one-to-one or many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newBelongsTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newBelongsTo","d":"<p>Instantiate a new BelongsTo relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphTo","d":"<p>Define a polymorphic, inverse one-to-one or many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphEagerTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphEagerTo","d":"<p>Define a polymorphic, inverse one-to-one or many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphInstanceTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphInstanceTo","d":"<p>Define a polymorphic, inverse one-to-one or many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newMorphTo","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newMorphTo","d":"<p>Instantiate a new MorphTo relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getActualClassNameForMorph","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getActualClassNameForMorph","d":"<p>Retrieve the actual class name for a given morph class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::guessBelongsToRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_guessBelongsToRelation","d":"<p>Guess the &quot;belongs to&quot; relationship name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::through","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_through","d":"<p>Create a pending has-many-through or has-one-through relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::hasMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_hasMany","d":"<p>Define a one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newHasMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newHasMany","d":"<p>Instantiate a new HasMany relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::hasManyThrough","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_hasManyThrough","d":"<p>Define a has-many-through relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newHasManyThrough","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newHasManyThrough","d":"<p>Instantiate a new HasManyThrough relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphMany","d":"<p>Define a polymorphic one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newMorphMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newMorphMany","d":"<p>Instantiate a new MorphMany relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::belongsToMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_belongsToMany","d":"<p>Define a many-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newBelongsToMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newBelongsToMany","d":"<p>Instantiate a new BelongsToMany relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphToMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphToMany","d":"<p>Define a polymorphic many-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newMorphToMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newMorphToMany","d":"<p>Instantiate a new MorphToMany relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::morphedByMany","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_morphedByMany","d":"<p>Define a polymorphic, inverse many-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::guessBelongsToManyRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_guessBelongsToManyRelation","d":"<p>Get the relationship name of the belongsToMany relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::joiningTable","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_joiningTable","d":"<p>Get the joining table name for a many-to-many relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::joiningTableSegment","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_joiningTableSegment","d":"<p>Get this model's half of the intermediate table name for belongsToMany relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::touches","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_touches","d":"<p>Determine if the model touches a given relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::touchOwners","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_touchOwners","d":"<p>Touch the owning relations of the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getMorphs","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getMorphs","d":"<p>Get the polymorphic relationship columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getMorphClass","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getMorphClass","d":"<p>Get the class name for polymorphic relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newRelatedInstance","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newRelatedInstance","d":"<p>Create a new model instance for a related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::newRelatedThroughInstance","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_newRelatedThroughInstance","d":"<p>Create a new model instance for a related &quot;through&quot; model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getRelations","d":"<p>Get all the loaded relations for the instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getRelation","d":"<p>Get a specified relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::relationLoaded","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_relationLoaded","d":"<p>Determine if the given relation is loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::setRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_setRelation","d":"<p>Set the given relationship on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::unsetRelation","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_unsetRelation","d":"<p>Unset a loaded relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::setRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_setRelations","d":"<p>Set the entire relations array on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::withoutRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_withoutRelations","d":"<p>Duplicate the instance and unset all the loaded relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::unsetRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_unsetRelations","d":"<p>Unset all the loaded relations for the instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::getTouchedRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_getTouchedRelations","d":"<p>Get the relationships that are touched on save.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasRelationships::setTouchedRelations","p":"Illuminate/Database/Eloquent/Concerns/HasRelationships.html#method_setTouchedRelations","d":"<p>Set the relationships that are touched on save.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::touch","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_touch","d":"<p>Update the model's update timestamp.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::touchQuietly","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_touchQuietly","d":"<p>Update the model's update timestamp without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::updateTimestamps","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_updateTimestamps","d":"<p>Update the creation and update timestamps.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::setCreatedAt","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_setCreatedAt","d":"<p>Set the value of the &quot;created at&quot; attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::setUpdatedAt","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_setUpdatedAt","d":"<p>Set the value of the &quot;updated at&quot; attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::freshTimestamp","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_freshTimestamp","d":"<p>Get a fresh timestamp for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::freshTimestampString","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_freshTimestampString","d":"<p>Get a fresh timestamp for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::usesTimestamps","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_usesTimestamps","d":"<p>Determine if the model uses timestamps.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::getCreatedAtColumn","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_getCreatedAtColumn","d":"<p>Get the name of the &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::getUpdatedAtColumn","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_getUpdatedAtColumn","d":"<p>Get the name of the &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::getQualifiedCreatedAtColumn","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_getQualifiedCreatedAtColumn","d":"<p>Get the fully qualified &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::getQualifiedUpdatedAtColumn","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_getQualifiedUpdatedAtColumn","d":"<p>Get the fully qualified &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::withoutTimestamps","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_withoutTimestamps","d":"<p>Disable timestamps for the current class during the given callback scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::withoutTimestampsOn","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_withoutTimestampsOn","d":"<p>Disable timestamps for the given model classes during the given callback scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasTimestamps::isIgnoringTimestamps","p":"Illuminate/Database/Eloquent/Concerns/HasTimestamps.html#method_isIgnoringTimestamps","d":"<p>Determine if the given model is ignoring timestamps / touches.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUlids::bootHasUlids","p":"Illuminate/Database/Eloquent/Concerns/HasUlids.html#method_bootHasUlids","d":"<p>Boot the trait.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUlids::newUniqueId","p":"Illuminate/Database/Eloquent/Concerns/HasUlids.html#method_newUniqueId","d":"<p>Generate a new ULID for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUlids::resolveRouteBindingQuery","p":"Illuminate/Database/Eloquent/Concerns/HasUlids.html#method_resolveRouteBindingQuery","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUlids::uniqueIds","p":"Illuminate/Database/Eloquent/Concerns/HasUlids.html#method_uniqueIds","d":"<p>Get the columns that should receive a unique identifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUlids::getKeyType","p":"Illuminate/Database/Eloquent/Concerns/HasUlids.html#method_getKeyType","d":"<p>Get the auto-incrementing key type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUlids::getIncrementing","p":"Illuminate/Database/Eloquent/Concerns/HasUlids.html#method_getIncrementing","d":"<p>Get the value indicating whether the IDs are incrementing.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUuids::bootHasUuids","p":"Illuminate/Database/Eloquent/Concerns/HasUuids.html#method_bootHasUuids","d":"<p>Generate a primary UUID for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUuids::newUniqueId","p":"Illuminate/Database/Eloquent/Concerns/HasUuids.html#method_newUniqueId","d":"<p>Generate a new UUID for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUuids::uniqueIds","p":"Illuminate/Database/Eloquent/Concerns/HasUuids.html#method_uniqueIds","d":"<p>Get the columns that should receive a unique identifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUuids::resolveRouteBindingQuery","p":"Illuminate/Database/Eloquent/Concerns/HasUuids.html#method_resolveRouteBindingQuery","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUuids::getKeyType","p":"Illuminate/Database/Eloquent/Concerns/HasUuids.html#method_getKeyType","d":"<p>Get the auto-incrementing key type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HasUuids::getIncrementing","p":"Illuminate/Database/Eloquent/Concerns/HasUuids.html#method_getIncrementing","d":"<p>Get the value indicating whether the IDs are incrementing.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::getHidden","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_getHidden","d":"<p>Get the hidden attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::setHidden","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_setHidden","d":"<p>Set the hidden attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::getVisible","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_getVisible","d":"<p>Get the visible attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::setVisible","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_setVisible","d":"<p>Set the visible attributes for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::makeVisible","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_makeVisible","d":"<p>Make the given, typically hidden, attributes visible.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::makeVisibleIf","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_makeVisibleIf","d":"<p>Make the given, typically hidden, attributes visible if the given truth test passes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::makeHidden","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_makeHidden","d":"<p>Make the given, typically visible, attributes hidden.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\HidesAttributes::makeHiddenIf","p":"Illuminate/Database/Eloquent/Concerns/HidesAttributes.html#method_makeHiddenIf","d":"<p>Make the given, typically visible, attributes hidden if the given truth test passes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::has","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_has","d":"<p>Add a relationship count / exists condition to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::hasNested","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_hasNested","d":"<p>Add nested relationship count / exists conditions to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orHas","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orHas","d":"<p>Add a relationship count / exists condition to the query with an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::doesntHave","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_doesntHave","d":"<p>Add a relationship count / exists condition to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orDoesntHave","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orDoesntHave","d":"<p>Add a relationship count / exists condition to the query with an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereHas","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereHas","d":"<p>Add a relationship count / exists condition to the query with where clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withWhereHas","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withWhereHas","d":"<p>Add a relationship count / exists condition to the query with where clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereHas","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereHas","d":"<p>Add a relationship count / exists condition to the query with where clauses and an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereDoesntHave","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereDoesntHave","d":"<p>Add a relationship count / exists condition to the query with where clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereDoesntHave","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereDoesntHave","d":"<p>Add a relationship count / exists condition to the query with where clauses and an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::hasMorph","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_hasMorph","d":"<p>Add a polymorphic relationship count / exists condition to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::getBelongsToRelation","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_getBelongsToRelation","d":"<p>Get the BelongsTo relationship for a single polymorphic type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orHasMorph","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orHasMorph","d":"<p>Add a polymorphic relationship count / exists condition to the query with an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::doesntHaveMorph","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_doesntHaveMorph","d":"<p>Add a polymorphic relationship count / exists condition to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orDoesntHaveMorph","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orDoesntHaveMorph","d":"<p>Add a polymorphic relationship count / exists condition to the query with an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereHasMorph","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereHasMorph","d":"<p>Add a polymorphic relationship count / exists condition to the query with where clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereHasMorph","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereHasMorph","d":"<p>Add a polymorphic relationship count / exists condition to the query with where clauses and an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereDoesntHaveMorph","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereDoesntHaveMorph","d":"<p>Add a polymorphic relationship count / exists condition to the query with where clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereDoesntHaveMorph","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereDoesntHaveMorph","d":"<p>Add a polymorphic relationship count / exists condition to the query with where clauses and an &quot;or&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereRelation","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereRelation","d":"<p>Add a basic where clause to a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereRelation","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereRelation","d":"<p>Add an &quot;or where&quot; clause to a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereMorphRelation","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereMorphRelation","d":"<p>Add a polymorphic relationship condition to the query with a where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereMorphRelation","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereMorphRelation","d":"<p>Add a polymorphic relationship condition to the query with an &quot;or where&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereMorphedTo","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereMorphedTo","d":"<p>Add a morph-to relationship condition to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereNotMorphedTo","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereNotMorphedTo","d":"<p>Add a not morph-to relationship condition to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereMorphedTo","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereMorphedTo","d":"<p>Add a morph-to relationship condition to the query with an &quot;or where&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereNotMorphedTo","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereNotMorphedTo","d":"<p>Add a not morph-to relationship condition to the query with an &quot;or where&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::whereBelongsTo","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_whereBelongsTo","d":"<p>Add a &quot;belongs to&quot; relationship where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::orWhereBelongsTo","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_orWhereBelongsTo","d":"<p>Add an &quot;BelongsTo&quot; relationship with an &quot;or where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withAggregate","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withAggregate","d":"<p>Add subselect queries to include an aggregate value for a relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::getRelationHashedColumn","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_getRelationHashedColumn","d":"<p>Get the relation hashed column name for the given column and relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withCount","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withCount","d":"<p>Add subselect queries to count the relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withMax","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withMax","d":"<p>Add subselect queries to include the max of the relation's column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withMin","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withMin","d":"<p>Add subselect queries to include the min of the relation's column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withSum","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withSum","d":"<p>Add subselect queries to include the sum of the relation's column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withAvg","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withAvg","d":"<p>Add subselect queries to include the average of the relation's column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::withExists","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_withExists","d":"<p>Add subselect queries to include the existence of related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::addHasWhere","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_addHasWhere","d":"<p>Add the &quot;has&quot; condition where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::mergeConstraintsFrom","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_mergeConstraintsFrom","d":"<p>Merge the where constraints from another query to the current query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::requalifyWhereTables","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_requalifyWhereTables","d":"<p>Updates the table name for any columns with a new qualified name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::addWhereCountQuery","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_addWhereCountQuery","d":"<p>Add a sub-query count clause to this query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::getRelationWithoutConstraints","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_getRelationWithoutConstraints","d":"<p>Get the &quot;has relation&quot; base query instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Concerns\\QueriesRelationships::canUseExistsForExistenceCheck","p":"Illuminate/Database/Eloquent/Concerns/QueriesRelationships.html#method_canUseExistsForExistenceCheck","d":"<p>Check if we can run an &quot;exists&quot; query to optimize performance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToManyRelationship::__construct","p":"Illuminate/Database/Eloquent/Factories/BelongsToManyRelationship.html#method___construct","d":"<p>Create a new attached relationship definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToManyRelationship::createFor","p":"Illuminate/Database/Eloquent/Factories/BelongsToManyRelationship.html#method_createFor","d":"<p>Create the attached relationship for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToManyRelationship::recycle","p":"Illuminate/Database/Eloquent/Factories/BelongsToManyRelationship.html#method_recycle","d":"<p>Specify the model instances to always use when creating relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToRelationship::__construct","p":"Illuminate/Database/Eloquent/Factories/BelongsToRelationship.html#method___construct","d":"<p>Create a new &quot;belongs to&quot; relationship definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToRelationship::attributesFor","p":"Illuminate/Database/Eloquent/Factories/BelongsToRelationship.html#method_attributesFor","d":"<p>Get the parent model attributes and resolvers for the given child model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToRelationship::resolver","p":"Illuminate/Database/Eloquent/Factories/BelongsToRelationship.html#method_resolver","d":"<p>Get the deferred resolver for this relationship's parent ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\BelongsToRelationship::recycle","p":"Illuminate/Database/Eloquent/Factories/BelongsToRelationship.html#method_recycle","d":"<p>Specify the model instances to always use when creating relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\CrossJoinSequence::__construct","p":"Illuminate/Database/Eloquent/Factories/CrossJoinSequence.html#method___construct","d":"<p>Create a new cross join sequence instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::__construct","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method___construct","d":"<p>Create a new factory instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::definition","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_definition","d":"<p>Define the model's default state.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::new","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_new","d":"<p>Get a new factory instance for the given attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::times","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_times","d":"<p>Get a new factory instance for the given number of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::configure","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_configure","d":"<p>Configure the factory.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::raw","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_raw","d":"<p>Get the raw attributes generated by the factory.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::createOne","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_createOne","d":"<p>Create a single model and persist it to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::createOneQuietly","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_createOneQuietly","d":"<p>Create a single model and persist it to the database without dispatching any model events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::createMany","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_createMany","d":"<p>Create a collection of models and persist them to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::createManyQuietly","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_createManyQuietly","d":"<p>Create a collection of models and persist them to the database without dispatching any model events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::create","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_create","d":"<p>Create a collection of models and persist them to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::createQuietly","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_createQuietly","d":"<p>Create a collection of models and persist them to the database without dispatching any model events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::lazy","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_lazy","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::store","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_store","d":"<p>Set the connection name on the results and store them.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::createChildren","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_createChildren","d":"<p>Create the children for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::makeOne","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_makeOne","d":"<p>Make a single instance of the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::make","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_make","d":"<p>Create a collection of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::makeInstance","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_makeInstance","d":"<p>Make an instance of the model with the given attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::getExpandedAttributes","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_getExpandedAttributes","d":"<p>Get a raw attributes array for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::getRawAttributes","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_getRawAttributes","d":"<p>Get the raw attributes for the model as an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::parentResolvers","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_parentResolvers","d":"<p>Create the parent relationship resolvers (as deferred Closures).</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::expandAttributes","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_expandAttributes","d":"<p>Expand all attributes to their underlying values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::state","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_state","d":"<p>Add a new state transformation to the model definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::set","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_set","d":"<p>Set a single model attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::sequence","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_sequence","d":"<p>Add a new sequenced state transformation to the model definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::forEachSequence","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_forEachSequence","d":"<p>Add a new sequenced state transformation to the model definition and update the pending creation count to the size of the sequence.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::crossJoinSequence","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_crossJoinSequence","d":"<p>Add a new cross joined sequenced state transformation to the model definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::has","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_has","d":"<p>Define a child relationship for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::guessRelationship","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_guessRelationship","d":"<p>Attempt to guess the relationship name for a &quot;has&quot; relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::hasAttached","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_hasAttached","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::for","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_for","d":"<p>Define a parent relationship for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::recycle","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_recycle","d":"<p>Provide model instances to use instead of any nested factory calls when creating relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::getRandomRecycledModel","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_getRandomRecycledModel","d":"<p>Retrieve a random model of a given type from previously provided models to recycle.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::afterMaking","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_afterMaking","d":"<p>Add a new &quot;after making&quot; callback to the model definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::afterCreating","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_afterCreating","d":"<p>Add a new &quot;after creating&quot; callback to the model definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::callAfterMaking","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_callAfterMaking","d":"<p>Call the &quot;after making&quot; callbacks for the given model instances.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::callAfterCreating","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_callAfterCreating","d":"<p>Call the &quot;after creating&quot; callbacks for the given model instances.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::count","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_count","d":"<p>Specify how many models should be generated.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::connection","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_connection","d":"<p>Specify the database connection that should be used to generate models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::newInstance","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_newInstance","d":"<p>Create a new instance of the factory builder with the given mutated properties.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::newModel","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_newModel","d":"<p>Get a new model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::modelName","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_modelName","d":null},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::guessModelNamesUsing","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_guessModelNamesUsing","d":"<p>Specify the callback that should be invoked to guess model names based on factory names.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::useNamespace","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_useNamespace","d":"<p>Specify the default namespace that contains the application's model factories.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::factoryForModel","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_factoryForModel","d":"<p>Get a new factory instance for the given model name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::guessFactoryNamesUsing","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_guessFactoryNamesUsing","d":"<p>Specify the callback that should be invoked to guess factory names based on dynamic relationship names.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::withFaker","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_withFaker","d":"<p>Get a new Faker instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::resolveFactoryName","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_resolveFactoryName","d":"<p>Get the factory name for the given model name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::appNamespace","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_appNamespace","d":"<p>Get the application namespace for the application.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::__call","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method___call","d":"<p>Proxy dynamic factory methods onto their proper methods.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Factory::trashed","p":"Illuminate/Database/Eloquent/Factories/Factory.html#method_trashed","d":""},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\HasFactory::factory","p":"Illuminate/Database/Eloquent/Factories/HasFactory.html#method_factory","d":"<p>Get a new factory instance for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\HasFactory::newFactory","p":"Illuminate/Database/Eloquent/Factories/HasFactory.html#method_newFactory","d":"<p>Create a new factory instance for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Relationship::__construct","p":"Illuminate/Database/Eloquent/Factories/Relationship.html#method___construct","d":"<p>Create a new child relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Relationship::createFor","p":"Illuminate/Database/Eloquent/Factories/Relationship.html#method_createFor","d":"<p>Create the child relationship for the given parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Relationship::recycle","p":"Illuminate/Database/Eloquent/Factories/Relationship.html#method_recycle","d":"<p>Specify the model instances to always use when creating relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Sequence::__construct","p":"Illuminate/Database/Eloquent/Factories/Sequence.html#method___construct","d":"<p>Create a new sequence instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Sequence::count","p":"Illuminate/Database/Eloquent/Factories/Sequence.html#method_count","d":"<p>Get the current count of the sequence items.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Factories\\Sequence::__invoke","p":"Illuminate/Database/Eloquent/Factories/Sequence.html#method___invoke","d":"<p>Get the next value in the sequence.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\HigherOrderBuilderProxy::__construct","p":"Illuminate/Database/Eloquent/HigherOrderBuilderProxy.html#method___construct","d":"<p>Create a new proxy instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\HigherOrderBuilderProxy::__call","p":"Illuminate/Database/Eloquent/HigherOrderBuilderProxy.html#method___call","d":"<p>Proxy a scope call onto the query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\InvalidCastException::__construct","p":"Illuminate/Database/Eloquent/InvalidCastException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\JsonEncodingException::forModel","p":"Illuminate/Database/Eloquent/JsonEncodingException.html#method_forModel","d":"<p>Create a new JSON encoding exception for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\JsonEncodingException::forResource","p":"Illuminate/Database/Eloquent/JsonEncodingException.html#method_forResource","d":"<p>Create a new JSON encoding exception for the resource.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\JsonEncodingException::forAttribute","p":"Illuminate/Database/Eloquent/JsonEncodingException.html#method_forAttribute","d":"<p>Create a new JSON encoding exception for an attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\MassPrunable::pruneAll","p":"Illuminate/Database/Eloquent/MassPrunable.html#method_pruneAll","d":"<p>Prune all prunable models in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\MassPrunable::prunable","p":"Illuminate/Database/Eloquent/MassPrunable.html#method_prunable","d":"<p>Get the prunable model query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\MissingAttributeException::__construct","p":"Illuminate/Database/Eloquent/MissingAttributeException.html#method___construct","d":"<p>Create a new missing attribute exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__construct","p":"Illuminate/Database/Eloquent/Model.html#method___construct","d":"<p>Create a new Eloquent model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::bootIfNotBooted","p":"Illuminate/Database/Eloquent/Model.html#method_bootIfNotBooted","d":"<p>Check if the model needs to be booted and if so, do it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::booting","p":"Illuminate/Database/Eloquent/Model.html#method_booting","d":"<p>Perform any actions required before the model boots.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::boot","p":"Illuminate/Database/Eloquent/Model.html#method_boot","d":"<p>Bootstrap the model and its traits.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::bootTraits","p":"Illuminate/Database/Eloquent/Model.html#method_bootTraits","d":"<p>Boot all of the bootable traits on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::initializeTraits","p":"Illuminate/Database/Eloquent/Model.html#method_initializeTraits","d":"<p>Initialize any initializable traits on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::booted","p":"Illuminate/Database/Eloquent/Model.html#method_booted","d":"<p>Perform any actions required after the model boots.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::clearBootedModels","p":"Illuminate/Database/Eloquent/Model.html#method_clearBootedModels","d":"<p>Clear the list of booted models so they will be re-booted.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::withoutTouching","p":"Illuminate/Database/Eloquent/Model.html#method_withoutTouching","d":"<p>Disables relationship model touching for the current class during given callback scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::withoutTouchingOn","p":"Illuminate/Database/Eloquent/Model.html#method_withoutTouchingOn","d":"<p>Disables relationship model touching for the given model classes during given callback scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::isIgnoringTouch","p":"Illuminate/Database/Eloquent/Model.html#method_isIgnoringTouch","d":"<p>Determine if the given model is ignoring touches.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::shouldBeStrict","p":"Illuminate/Database/Eloquent/Model.html#method_shouldBeStrict","d":"<p>Indicate that models should prevent lazy loading, silently discarding attributes, and accessing missing attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::preventLazyLoading","p":"Illuminate/Database/Eloquent/Model.html#method_preventLazyLoading","d":"<p>Prevent model relationships from being lazy loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::handleLazyLoadingViolationUsing","p":"Illuminate/Database/Eloquent/Model.html#method_handleLazyLoadingViolationUsing","d":"<p>Register a callback that is responsible for handling lazy loading violations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::preventSilentlyDiscardingAttributes","p":"Illuminate/Database/Eloquent/Model.html#method_preventSilentlyDiscardingAttributes","d":"<p>Prevent non-fillable attributes from being silently discarded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::handleDiscardedAttributeViolationUsing","p":"Illuminate/Database/Eloquent/Model.html#method_handleDiscardedAttributeViolationUsing","d":"<p>Register a callback that is responsible for handling discarded attribute violations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::preventAccessingMissingAttributes","p":"Illuminate/Database/Eloquent/Model.html#method_preventAccessingMissingAttributes","d":"<p>Prevent accessing missing attributes on retrieved models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::handleMissingAttributeViolationUsing","p":"Illuminate/Database/Eloquent/Model.html#method_handleMissingAttributeViolationUsing","d":"<p>Register a callback that is responsible for handling missing attribute violations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::withoutBroadcasting","p":"Illuminate/Database/Eloquent/Model.html#method_withoutBroadcasting","d":"<p>Execute a callback without broadcasting any model events for all model types.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::fill","p":"Illuminate/Database/Eloquent/Model.html#method_fill","d":"<p>Fill the model with an array of attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::forceFill","p":"Illuminate/Database/Eloquent/Model.html#method_forceFill","d":"<p>Fill the model with an array of attributes. Force mass assignment.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::qualifyColumn","p":"Illuminate/Database/Eloquent/Model.html#method_qualifyColumn","d":"<p>Qualify the given column name by the model's table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::qualifyColumns","p":"Illuminate/Database/Eloquent/Model.html#method_qualifyColumns","d":"<p>Qualify the given columns with the model's table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newInstance","p":"Illuminate/Database/Eloquent/Model.html#method_newInstance","d":"<p>Create a new instance of the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newFromBuilder","p":"Illuminate/Database/Eloquent/Model.html#method_newFromBuilder","d":"<p>Create a new model instance that is existing.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::on","p":"Illuminate/Database/Eloquent/Model.html#method_on","d":"<p>Begin querying the model on a given connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::onWriteConnection","p":"Illuminate/Database/Eloquent/Model.html#method_onWriteConnection","d":"<p>Begin querying the model on the write connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::all","p":"Illuminate/Database/Eloquent/Model.html#method_all","d":"<p>Get all of the models from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::with","p":"Illuminate/Database/Eloquent/Model.html#method_with","d":"<p>Begin querying a model with eager loading.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::load","p":"Illuminate/Database/Eloquent/Model.html#method_load","d":"<p>Eager load relations on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMorph","p":"Illuminate/Database/Eloquent/Model.html#method_loadMorph","d":"<p>Eager load relationships on the polymorphic relation of a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMissing","p":"Illuminate/Database/Eloquent/Model.html#method_loadMissing","d":"<p>Eager load relations on the model if they are not already eager loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadAggregate","p":"Illuminate/Database/Eloquent/Model.html#method_loadAggregate","d":"<p>Eager load relation's column aggregations on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadCount","p":"Illuminate/Database/Eloquent/Model.html#method_loadCount","d":"<p>Eager load relation counts on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMax","p":"Illuminate/Database/Eloquent/Model.html#method_loadMax","d":"<p>Eager load relation max column values on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMin","p":"Illuminate/Database/Eloquent/Model.html#method_loadMin","d":"<p>Eager load relation min column values on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadSum","p":"Illuminate/Database/Eloquent/Model.html#method_loadSum","d":"<p>Eager load relation's column summations on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadAvg","p":"Illuminate/Database/Eloquent/Model.html#method_loadAvg","d":"<p>Eager load relation average column values on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadExists","p":"Illuminate/Database/Eloquent/Model.html#method_loadExists","d":"<p>Eager load related model existence values on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMorphAggregate","p":"Illuminate/Database/Eloquent/Model.html#method_loadMorphAggregate","d":"<p>Eager load relationship column aggregation on the polymorphic relation of a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMorphCount","p":"Illuminate/Database/Eloquent/Model.html#method_loadMorphCount","d":"<p>Eager load relationship counts on the polymorphic relation of a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMorphMax","p":"Illuminate/Database/Eloquent/Model.html#method_loadMorphMax","d":"<p>Eager load relationship max column values on the polymorphic relation of a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMorphMin","p":"Illuminate/Database/Eloquent/Model.html#method_loadMorphMin","d":"<p>Eager load relationship min column values on the polymorphic relation of a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMorphSum","p":"Illuminate/Database/Eloquent/Model.html#method_loadMorphSum","d":"<p>Eager load relationship column summations on the polymorphic relation of a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::loadMorphAvg","p":"Illuminate/Database/Eloquent/Model.html#method_loadMorphAvg","d":"<p>Eager load relationship average column values on the polymorphic relation of a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::increment","p":"Illuminate/Database/Eloquent/Model.html#method_increment","d":"<p>Increment a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::decrement","p":"Illuminate/Database/Eloquent/Model.html#method_decrement","d":"<p>Decrement a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::incrementOrDecrement","p":"Illuminate/Database/Eloquent/Model.html#method_incrementOrDecrement","d":"<p>Run the increment or decrement method on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::update","p":"Illuminate/Database/Eloquent/Model.html#method_update","d":"<p>Update the model in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::updateOrFail","p":"Illuminate/Database/Eloquent/Model.html#method_updateOrFail","d":"<p>Update the model in the database within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::updateQuietly","p":"Illuminate/Database/Eloquent/Model.html#method_updateQuietly","d":"<p>Update the model in the database without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::incrementQuietly","p":"Illuminate/Database/Eloquent/Model.html#method_incrementQuietly","d":"<p>Increment a column's value by a given amount without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::decrementQuietly","p":"Illuminate/Database/Eloquent/Model.html#method_decrementQuietly","d":"<p>Decrement a column's value by a given amount without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::push","p":"Illuminate/Database/Eloquent/Model.html#method_push","d":"<p>Save the model and all of its relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::pushQuietly","p":"Illuminate/Database/Eloquent/Model.html#method_pushQuietly","d":"<p>Save the model and all of its relationships without raising any events to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::saveQuietly","p":"Illuminate/Database/Eloquent/Model.html#method_saveQuietly","d":"<p>Save the model to the database without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::save","p":"Illuminate/Database/Eloquent/Model.html#method_save","d":"<p>Save the model to the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::saveOrFail","p":"Illuminate/Database/Eloquent/Model.html#method_saveOrFail","d":"<p>Save the model to the database within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::finishSave","p":"Illuminate/Database/Eloquent/Model.html#method_finishSave","d":"<p>Perform any actions that are necessary after the model is saved.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::performUpdate","p":"Illuminate/Database/Eloquent/Model.html#method_performUpdate","d":"<p>Perform a model update operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setKeysForSelectQuery","p":"Illuminate/Database/Eloquent/Model.html#method_setKeysForSelectQuery","d":"<p>Set the keys for a select query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKeyForSelectQuery","p":"Illuminate/Database/Eloquent/Model.html#method_getKeyForSelectQuery","d":"<p>Get the primary key value for a select query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setKeysForSaveQuery","p":"Illuminate/Database/Eloquent/Model.html#method_setKeysForSaveQuery","d":"<p>Set the keys for a save update query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKeyForSaveQuery","p":"Illuminate/Database/Eloquent/Model.html#method_getKeyForSaveQuery","d":"<p>Get the primary key value for a save query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::performInsert","p":"Illuminate/Database/Eloquent/Model.html#method_performInsert","d":"<p>Perform a model insert operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::insertAndSetId","p":"Illuminate/Database/Eloquent/Model.html#method_insertAndSetId","d":"<p>Insert the given attributes and set the ID on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::destroy","p":"Illuminate/Database/Eloquent/Model.html#method_destroy","d":"<p>Destroy the models for the given IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::delete","p":"Illuminate/Database/Eloquent/Model.html#method_delete","d":"<p>Delete the model from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::deleteQuietly","p":"Illuminate/Database/Eloquent/Model.html#method_deleteQuietly","d":"<p>Delete the model from the database without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::deleteOrFail","p":"Illuminate/Database/Eloquent/Model.html#method_deleteOrFail","d":"<p>Delete the model from the database within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::forceDelete","p":"Illuminate/Database/Eloquent/Model.html#method_forceDelete","d":"<p>Force a hard delete on a soft deleted model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::performDeleteOnModel","p":"Illuminate/Database/Eloquent/Model.html#method_performDeleteOnModel","d":"<p>Perform the actual delete query on this model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::query","p":"Illuminate/Database/Eloquent/Model.html#method_query","d":"<p>Begin querying the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newQuery","p":"Illuminate/Database/Eloquent/Model.html#method_newQuery","d":"<p>Get a new query builder for the model's table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newModelQuery","p":"Illuminate/Database/Eloquent/Model.html#method_newModelQuery","d":"<p>Get a new query builder that doesn't have any global scopes or eager loading.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newQueryWithoutRelationships","p":"Illuminate/Database/Eloquent/Model.html#method_newQueryWithoutRelationships","d":"<p>Get a new query builder with no relationships loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::registerGlobalScopes","p":"Illuminate/Database/Eloquent/Model.html#method_registerGlobalScopes","d":"<p>Register the global scopes for this builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newQueryWithoutScopes","p":"Illuminate/Database/Eloquent/Model.html#method_newQueryWithoutScopes","d":"<p>Get a new query builder that doesn't have any global scopes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newQueryWithoutScope","p":"Illuminate/Database/Eloquent/Model.html#method_newQueryWithoutScope","d":"<p>Get a new query instance without a given scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newQueryForRestoration","p":"Illuminate/Database/Eloquent/Model.html#method_newQueryForRestoration","d":"<p>Get a new query to restore one or more models by their queueable IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newEloquentBuilder","p":"Illuminate/Database/Eloquent/Model.html#method_newEloquentBuilder","d":"<p>Create a new Eloquent query builder for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newBaseQueryBuilder","p":"Illuminate/Database/Eloquent/Model.html#method_newBaseQueryBuilder","d":"<p>Get a new query builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newCollection","p":"Illuminate/Database/Eloquent/Model.html#method_newCollection","d":"<p>Create a new Eloquent Collection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::newPivot","p":"Illuminate/Database/Eloquent/Model.html#method_newPivot","d":"<p>Create a new pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::hasNamedScope","p":"Illuminate/Database/Eloquent/Model.html#method_hasNamedScope","d":"<p>Determine if the model has a given scope.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::callNamedScope","p":"Illuminate/Database/Eloquent/Model.html#method_callNamedScope","d":"<p>Apply the given named scope if possible.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::toArray","p":"Illuminate/Database/Eloquent/Model.html#method_toArray","d":"<p>Convert the model instance to an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::toJson","p":"Illuminate/Database/Eloquent/Model.html#method_toJson","d":"<p>Convert the model instance to JSON.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::jsonSerialize","p":"Illuminate/Database/Eloquent/Model.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::fresh","p":"Illuminate/Database/Eloquent/Model.html#method_fresh","d":"<p>Reload a fresh model instance from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::refresh","p":"Illuminate/Database/Eloquent/Model.html#method_refresh","d":"<p>Reload the current model instance with fresh attributes from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::replicate","p":"Illuminate/Database/Eloquent/Model.html#method_replicate","d":"<p>Clone the model into a new, non-existing instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::replicateQuietly","p":"Illuminate/Database/Eloquent/Model.html#method_replicateQuietly","d":"<p>Clone the model into a new, non-existing instance without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::is","p":"Illuminate/Database/Eloquent/Model.html#method_is","d":"<p>Determine if two models have the same ID and belong to the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::isNot","p":"Illuminate/Database/Eloquent/Model.html#method_isNot","d":"<p>Determine if two models are not the same.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getConnection","p":"Illuminate/Database/Eloquent/Model.html#method_getConnection","d":"<p>Get the database connection for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getConnectionName","p":"Illuminate/Database/Eloquent/Model.html#method_getConnectionName","d":"<p>Get the current connection name for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setConnection","p":"Illuminate/Database/Eloquent/Model.html#method_setConnection","d":"<p>Set the connection associated with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::resolveConnection","p":"Illuminate/Database/Eloquent/Model.html#method_resolveConnection","d":"<p>Resolve a connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getConnectionResolver","p":"Illuminate/Database/Eloquent/Model.html#method_getConnectionResolver","d":"<p>Get the connection resolver instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setConnectionResolver","p":"Illuminate/Database/Eloquent/Model.html#method_setConnectionResolver","d":"<p>Set the connection resolver instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::unsetConnectionResolver","p":"Illuminate/Database/Eloquent/Model.html#method_unsetConnectionResolver","d":"<p>Unset the connection resolver for models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getTable","p":"Illuminate/Database/Eloquent/Model.html#method_getTable","d":"<p>Get the table associated with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setTable","p":"Illuminate/Database/Eloquent/Model.html#method_setTable","d":"<p>Set the table associated with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKeyName","p":"Illuminate/Database/Eloquent/Model.html#method_getKeyName","d":"<p>Get the primary key for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setKeyName","p":"Illuminate/Database/Eloquent/Model.html#method_setKeyName","d":"<p>Set the primary key for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getQualifiedKeyName","p":"Illuminate/Database/Eloquent/Model.html#method_getQualifiedKeyName","d":"<p>Get the table qualified key name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKeyType","p":"Illuminate/Database/Eloquent/Model.html#method_getKeyType","d":"<p>Get the auto-incrementing key type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setKeyType","p":"Illuminate/Database/Eloquent/Model.html#method_setKeyType","d":"<p>Set the data type for the primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getIncrementing","p":"Illuminate/Database/Eloquent/Model.html#method_getIncrementing","d":"<p>Get the value indicating whether the IDs are incrementing.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setIncrementing","p":"Illuminate/Database/Eloquent/Model.html#method_setIncrementing","d":"<p>Set whether IDs are incrementing.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getKey","p":"Illuminate/Database/Eloquent/Model.html#method_getKey","d":"<p>Get the value of the model's primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getQueueableId","p":"Illuminate/Database/Eloquent/Model.html#method_getQueueableId","d":"<p>Get the queueable identity for the entity.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getQueueableRelations","p":"Illuminate/Database/Eloquent/Model.html#method_getQueueableRelations","d":"<p>Get the queueable relationships for the entity.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getQueueableConnection","p":"Illuminate/Database/Eloquent/Model.html#method_getQueueableConnection","d":"<p>Get the queueable connection for the entity.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getRouteKey","p":"Illuminate/Database/Eloquent/Model.html#method_getRouteKey","d":"<p>Get the value of the model's route key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getRouteKeyName","p":"Illuminate/Database/Eloquent/Model.html#method_getRouteKeyName","d":"<p>Get the route key for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::resolveRouteBinding","p":"Illuminate/Database/Eloquent/Model.html#method_resolveRouteBinding","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::resolveSoftDeletableRouteBinding","p":"Illuminate/Database/Eloquent/Model.html#method_resolveSoftDeletableRouteBinding","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::resolveChildRouteBinding","p":"Illuminate/Database/Eloquent/Model.html#method_resolveChildRouteBinding","d":"<p>Retrieve the child model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::resolveSoftDeletableChildRouteBinding","p":"Illuminate/Database/Eloquent/Model.html#method_resolveSoftDeletableChildRouteBinding","d":"<p>Retrieve the child model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::resolveChildRouteBindingQuery","p":"Illuminate/Database/Eloquent/Model.html#method_resolveChildRouteBindingQuery","d":"<p>Retrieve the child model query for a bound value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::childRouteBindingRelationshipName","p":"Illuminate/Database/Eloquent/Model.html#method_childRouteBindingRelationshipName","d":"<p>Retrieve the child route model binding relationship name for the given child type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::resolveRouteBindingQuery","p":"Illuminate/Database/Eloquent/Model.html#method_resolveRouteBindingQuery","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getForeignKey","p":"Illuminate/Database/Eloquent/Model.html#method_getForeignKey","d":"<p>Get the default foreign key name for the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::getPerPage","p":"Illuminate/Database/Eloquent/Model.html#method_getPerPage","d":"<p>Get the number of models to return per page.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::setPerPage","p":"Illuminate/Database/Eloquent/Model.html#method_setPerPage","d":"<p>Set the number of models to return per page.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::preventsLazyLoading","p":"Illuminate/Database/Eloquent/Model.html#method_preventsLazyLoading","d":"<p>Determine if lazy loading is disabled.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::preventsSilentlyDiscardingAttributes","p":"Illuminate/Database/Eloquent/Model.html#method_preventsSilentlyDiscardingAttributes","d":"<p>Determine if discarding guarded attribute fills is disabled.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::preventsAccessingMissingAttributes","p":"Illuminate/Database/Eloquent/Model.html#method_preventsAccessingMissingAttributes","d":"<p>Determine if accessing missing attributes is disabled.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::broadcastChannelRoute","p":"Illuminate/Database/Eloquent/Model.html#method_broadcastChannelRoute","d":"<p>Get the broadcast channel route definition that is associated with the given entity.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::broadcastChannel","p":"Illuminate/Database/Eloquent/Model.html#method_broadcastChannel","d":"<p>Get the broadcast channel name that is associated with the given entity.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__get","p":"Illuminate/Database/Eloquent/Model.html#method___get","d":"<p>Dynamically retrieve attributes on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__set","p":"Illuminate/Database/Eloquent/Model.html#method___set","d":"<p>Dynamically set attributes on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::offsetExists","p":"Illuminate/Database/Eloquent/Model.html#method_offsetExists","d":"<p>Determine if the given attribute exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::offsetGet","p":"Illuminate/Database/Eloquent/Model.html#method_offsetGet","d":"<p>Get the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::offsetSet","p":"Illuminate/Database/Eloquent/Model.html#method_offsetSet","d":"<p>Set the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::offsetUnset","p":"Illuminate/Database/Eloquent/Model.html#method_offsetUnset","d":"<p>Unset the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__isset","p":"Illuminate/Database/Eloquent/Model.html#method___isset","d":"<p>Determine if an attribute or relation exists on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__unset","p":"Illuminate/Database/Eloquent/Model.html#method___unset","d":"<p>Unset an attribute on the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__call","p":"Illuminate/Database/Eloquent/Model.html#method___call","d":"<p>Handle dynamic method calls into the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__callStatic","p":"Illuminate/Database/Eloquent/Model.html#method___callStatic","d":"<p>Handle dynamic static method calls into the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__toString","p":"Illuminate/Database/Eloquent/Model.html#method___toString","d":"<p>Convert the model to its string representation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::escapeWhenCastingToString","p":"Illuminate/Database/Eloquent/Model.html#method_escapeWhenCastingToString","d":"<p>Indicate that the object's string representation should be escaped when __toString is invoked.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__sleep","p":"Illuminate/Database/Eloquent/Model.html#method___sleep","d":"<p>Prepare the object for serialization.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Model::__wakeup","p":"Illuminate/Database/Eloquent/Model.html#method___wakeup","d":"<p>When a model is being unserialized, check if it needs to be booted.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\ModelNotFoundException::setModel","p":"Illuminate/Database/Eloquent/ModelNotFoundException.html#method_setModel","d":"<p>Set the affected Eloquent model and instance ids.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\ModelNotFoundException::getModel","p":"Illuminate/Database/Eloquent/ModelNotFoundException.html#method_getModel","d":"<p>Get the affected Eloquent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\ModelNotFoundException::getIds","p":"Illuminate/Database/Eloquent/ModelNotFoundException.html#method_getIds","d":"<p>Get the affected Eloquent model IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\PendingHasThroughRelationship::__construct","p":"Illuminate/Database/Eloquent/PendingHasThroughRelationship.html#method___construct","d":"<p>Create a pending has-many-through or has-one-through relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\PendingHasThroughRelationship::has","p":"Illuminate/Database/Eloquent/PendingHasThroughRelationship.html#method_has","d":"<p>Define the distant relationship that this model has.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\PendingHasThroughRelationship::__call","p":"Illuminate/Database/Eloquent/PendingHasThroughRelationship.html#method___call","d":"<p>Handle dynamic method calls into the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Prunable::pruneAll","p":"Illuminate/Database/Eloquent/Prunable.html#method_pruneAll","d":"<p>Prune all prunable models in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Prunable::prunable","p":"Illuminate/Database/Eloquent/Prunable.html#method_prunable","d":"<p>Get the prunable model query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Prunable::prune","p":"Illuminate/Database/Eloquent/Prunable.html#method_prune","d":"<p>Prune the model in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Prunable::pruning","p":"Illuminate/Database/Eloquent/Prunable.html#method_pruning","d":"<p>Prepare the model for pruning.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\QueueEntityResolver::resolve","p":"Illuminate/Database/Eloquent/QueueEntityResolver.html#method_resolve","d":"<p>Resolve the entity for the given ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\RelationNotFoundException::make","p":"Illuminate/Database/Eloquent/RelationNotFoundException.html#method_make","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::__construct","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method___construct","d":"<p>Create a new belongs to relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getResults","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::addConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getEagerModelKeys","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getEagerModelKeys","d":"<p>Gather the keys from an array of related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::initRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::match","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::associate","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_associate","d":"<p>Associate the model instance to the given parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::dissociate","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_dissociate","d":"<p>Dissociate previously associated model from the given parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::disassociate","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_disassociate","d":"<p>Alias of &quot;dissociate&quot; method.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelationExistenceQueryForSelfRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelationExistenceQueryForSelfRelation","d":"<p>Add the constraints for a relationship query on the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::relationHasIncrementingId","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_relationHasIncrementingId","d":"<p>Determine if the related model has an auto-incrementing ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getChild","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getChild","d":"<p>Get the child of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getForeignKeyName","d":"<p>Get the foreign key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getQualifiedForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getQualifiedForeignKeyName","d":"<p>Get the fully qualified foreign key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getParentKey","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getParentKey","d":"<p>Get the key value of the child's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getOwnerKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getOwnerKeyName","d":"<p>Get the associated key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getQualifiedOwnerKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getQualifiedOwnerKeyName","d":"<p>Get the fully qualified associated key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelatedKeyFrom","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelatedKeyFrom","d":"<p>Get the value of the model's associated key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsTo::getRelationName","p":"Illuminate/Database/Eloquent/Relations/BelongsTo.html#method_getRelationName","d":"<p>Get the name of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::__construct","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method___construct","d":"<p>Create a new belongs to many relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::resolveTableName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_resolveTableName","d":"<p>Attempt to resolve the intermediate table name from the given string.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::addConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::performJoin","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_performJoin","d":"<p>Set the join clause for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::addWhereConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_addWhereConstraints","d":"<p>Set the where clause for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::initRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::match","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::buildDictionary","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_buildDictionary","d":"<p>Build model dictionary keyed by the relation's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getPivotClass","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getPivotClass","d":"<p>Get the class being used for pivot models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::using","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_using","d":"<p>Specify the custom pivot model to use for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::as","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_as","d":"<p>Specify the custom pivot accessor to use for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivot","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivot","d":"<p>Set a where clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivotBetween","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivotBetween","d":"<p>Set a &quot;where between&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivotBetween","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivotBetween","d":"<p>Set a &quot;or where between&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivotNotBetween","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivotNotBetween","d":"<p>Set a &quot;where pivot not between&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivotNotBetween","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivotNotBetween","d":"<p>Set a &quot;or where not between&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivotIn","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivotIn","d":"<p>Set a &quot;where in&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivot","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivot","d":"<p>Set an &quot;or where&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::withPivotValue","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_withPivotValue","d":"<p>Set a where clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivotIn","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivotIn","d":"<p>Set an &quot;or where in&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivotNotIn","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivotNotIn","d":"<p>Set a &quot;where not in&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivotNotIn","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivotNotIn","d":"<p>Set an &quot;or where not in&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivotNull","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivotNull","d":"<p>Set a &quot;where null&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::wherePivotNotNull","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_wherePivotNotNull","d":"<p>Set a &quot;where not null&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivotNull","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivotNull","d":"<p>Set a &quot;or where null&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orWherePivotNotNull","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orWherePivotNotNull","d":"<p>Set a &quot;or where not null&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::orderByPivot","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_orderByPivot","d":"<p>Add an &quot;order by&quot; clause for a pivot table column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::findOrNew","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_findOrNew","d":"<p>Find a related model by its primary key or return a new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstOrNew","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstOrNew","d":"<p>Get the first related model record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstOrCreate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstOrCreate","d":"<p>Get the first related record matching the attributes or create it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::updateOrCreate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_updateOrCreate","d":"<p>Create or update a related record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::find","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_find","d":"<p>Find a related model by its primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::findMany","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_findMany","d":"<p>Find multiple related models by their primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::findOrFail","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_findOrFail","d":"<p>Find a related model by its primary key or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::findOr","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_findOr","d":"<p>Find a related model by its primary key or call a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstWhere","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstWhere","d":"<p>Add a basic where clause to the query, and return the first result.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::first","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_first","d":"<p>Execute the query and get the first result.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstOrFail","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstOrFail","d":"<p>Execute the query and get the first result or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::firstOr","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_firstOr","d":"<p>Execute the query and get the first result or call a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getResults","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::get","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::shouldSelect","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_shouldSelect","d":"<p>Get the select columns for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::aliasedPivotColumns","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_aliasedPivotColumns","d":"<p>Get the pivot columns for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::paginate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_paginate","d":"<p>Get a paginator for the &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::simplePaginate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_simplePaginate","d":"<p>Paginate the given query into a simple paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::cursorPaginate","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_cursorPaginate","d":"<p>Paginate the given query into a cursor paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::chunk","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_chunk","d":"<p>Chunk the results of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::chunkById","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_chunkById","d":"<p>Chunk the results of a query by comparing numeric IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::each","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_each","d":"<p>Execute a callback over each item while chunking.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::lazy","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_lazy","d":"<p>Query lazily, by chunks of the given size.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::lazyById","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_lazyById","d":"<p>Query lazily, by chunking the results of a query by comparing IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::cursor","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_cursor","d":"<p>Get a lazy collection for the given query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::prepareQueryBuilder","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_prepareQueryBuilder","d":"<p>Prepare the query builder for query execution.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::hydratePivotRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_hydratePivotRelation","d":"<p>Hydrate the pivot table relationship on the models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::migratePivotAttributes","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_migratePivotAttributes","d":"<p>Get the pivot attributes from a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touchIfTouching","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touchIfTouching","d":"<p>If we're touching the parent model, touch.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touchingParent","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touchingParent","d":"<p>Determine if we should touch the parent on sync.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::guessInverseRelation","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_guessInverseRelation","d":"<p>Attempt to guess the name of the inverse of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::touch","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_touch","d":"<p>Touch all of the related models for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::allRelatedIds","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_allRelatedIds","d":"<p>Get all of the IDs for the related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::save","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_save","d":"<p>Save a new model and attach it to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::saveQuietly","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_saveQuietly","d":"<p>Save a new model without raising any events and attach it to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::saveMany","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_saveMany","d":"<p>Save an array of new models and attach them to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::saveManyQuietly","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_saveManyQuietly","d":"<p>Save an array of new models without raising any events and attach them to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::create","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_create","d":"<p>Create a new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::createMany","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_createMany","d":"<p>Create an array of new instances of the related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationExistenceQueryForSelfJoin","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationExistenceQueryForSelfJoin","d":"<p>Add the constraints for a relationship query on the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getExistenceCompareKey","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getExistenceCompareKey","d":"<p>Get the key for comparing against the parent key in &quot;has&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::withTimestamps","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_withTimestamps","d":"<p>Specify that the pivot table has creation and update timestamps.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::createdAt","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_createdAt","d":"<p>Get the name of the &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::updatedAt","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_updatedAt","d":"<p>Get the name of the &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getForeignPivotKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getForeignPivotKeyName","d":"<p>Get the foreign key for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getQualifiedForeignPivotKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getQualifiedForeignPivotKeyName","d":"<p>Get the fully qualified foreign key for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelatedPivotKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelatedPivotKeyName","d":"<p>Get the &quot;related key&quot; for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getQualifiedRelatedPivotKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getQualifiedRelatedPivotKeyName","d":"<p>Get the fully qualified &quot;related key&quot; for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getParentKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getParentKeyName","d":"<p>Get the parent key for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getQualifiedParentKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getQualifiedParentKeyName","d":"<p>Get the fully qualified parent key name for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelatedKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelatedKeyName","d":"<p>Get the related key for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getQualifiedRelatedKeyName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getQualifiedRelatedKeyName","d":"<p>Get the fully qualified related key name for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getTable","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getTable","d":"<p>Get the intermediate table for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getRelationName","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getRelationName","d":"<p>Get the relationship name for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getPivotAccessor","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getPivotAccessor","d":"<p>Get the name of the pivot accessor for this relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::getPivotColumns","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_getPivotColumns","d":"<p>Get the pivot columns for this relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany::qualifyPivotColumn","p":"Illuminate/Database/Eloquent/Relations/BelongsToMany.html#method_qualifyPivotColumn","d":"<p>Qualify the given column name by the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::fromAttributes","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_fromAttributes","d":"<p>Create a new pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::fromRawAttributes","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_fromRawAttributes","d":"<p>Create a new pivot model from raw values returned from a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::setKeysForSelectQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_setKeysForSelectQuery","d":"<p>Set the keys for a select query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::setKeysForSaveQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_setKeysForSaveQuery","d":"<p>Set the keys for a save update query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::delete","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_delete","d":"<p>Delete the pivot model record from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::getDeleteQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_getDeleteQuery","d":"<p>Get the query builder for a delete operation on the pivot.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::getTable","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_getTable","d":"<p>Get the table associated with the model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::getForeignKey","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_getForeignKey","d":"<p>Get the foreign key column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::getRelatedKey","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_getRelatedKey","d":"<p>Get the &quot;related key&quot; column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::getOtherKey","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_getOtherKey","d":"<p>Get the &quot;related key&quot; column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::setPivotKeys","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_setPivotKeys","d":"<p>Set the key names for the pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::hasTimestampAttributes","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_hasTimestampAttributes","d":"<p>Determine if the pivot model or given attributes has timestamp attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::getCreatedAtColumn","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_getCreatedAtColumn","d":"<p>Get the name of the &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::getUpdatedAtColumn","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_getUpdatedAtColumn","d":"<p>Get the name of the &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::getQueueableId","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_getQueueableId","d":"<p>Get the queueable identity for the entity.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::newQueryForRestoration","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_newQueryForRestoration","d":"<p>Get a new query to restore one or more models by their queueable IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::newQueryForCollectionRestoration","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_newQueryForCollectionRestoration","d":"<p>Get a new query to restore multiple models by their queueable IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\AsPivot::unsetRelations","p":"Illuminate/Database/Eloquent/Relations/Concerns/AsPivot.html#method_unsetRelations","d":"<p>Unset all the loaded relations for the instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::addOneOfManySubQueryConstraints","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_addOneOfManySubQueryConstraints","d":"<p>Add constraints for inner join subselect for one of many relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::getOneOfManySubQuerySelectColumns","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_getOneOfManySubQuerySelectColumns","d":"<p>Get the columns the determine the relationship groups.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::addOneOfManyJoinSubQueryConstraints","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_addOneOfManyJoinSubQueryConstraints","d":"<p>Add join query constraints for one of many relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::ofMany","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_ofMany","d":"<p>Indicate that the relation is a single result of a larger one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::latestOfMany","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_latestOfMany","d":"<p>Indicate that the relation is the latest single result of a larger one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::oldestOfMany","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_oldestOfMany","d":"<p>Indicate that the relation is the oldest single result of a larger one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::getDefaultOneOfManyJoinAlias","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_getDefaultOneOfManyJoinAlias","d":"<p>Get the default alias for the one of many inner join clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::newOneOfManySubQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_newOneOfManySubQuery","d":"<p>Get a new query for the related model, grouping the query by the given column, often the foreign key of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::addOneOfManyJoinSubQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_addOneOfManyJoinSubQuery","d":"<p>Add the join subquery to the given query on the given column and the relationship's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::mergeOneOfManyJoinsTo","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_mergeOneOfManyJoinsTo","d":"<p>Merge the relationship query joins to the given query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::getRelationQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_getRelationQuery","d":"<p>Get the query builder that will contain the relationship constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::getOneOfManySubQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_getOneOfManySubQuery","d":"<p>Get the one of many inner join subselect builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::qualifySubSelectColumn","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_qualifySubSelectColumn","d":"<p>Get the qualified column name for the one-of-many relationship using the subselect join query's alias.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::qualifyRelatedColumn","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_qualifyRelatedColumn","d":"<p>Qualify related column using the related table name if it is not already qualified.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::guessRelationship","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_guessRelationship","d":"<p>Guess the &quot;hasOne&quot; relationship's name via backtrace.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::isOneOfMany","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_isOneOfMany","d":"<p>Determine whether the relationship is a one-of-many relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\CanBeOneOfMany::getRelationName","p":"Illuminate/Database/Eloquent/Relations/Concerns/CanBeOneOfMany.html#method_getRelationName","d":"<p>Get the name of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\ComparesRelatedModels::is","p":"Illuminate/Database/Eloquent/Relations/Concerns/ComparesRelatedModels.html#method_is","d":"<p>Determine if the model is the related instance of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\ComparesRelatedModels::isNot","p":"Illuminate/Database/Eloquent/Relations/Concerns/ComparesRelatedModels.html#method_isNot","d":"<p>Determine if the model is not the related instance of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\ComparesRelatedModels::getParentKey","p":"Illuminate/Database/Eloquent/Relations/Concerns/ComparesRelatedModels.html#method_getParentKey","d":"<p>Get the value of the parent model's key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\ComparesRelatedModels::getRelatedKeyFrom","p":"Illuminate/Database/Eloquent/Relations/Concerns/ComparesRelatedModels.html#method_getRelatedKeyFrom","d":"<p>Get the value of the model's related key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\ComparesRelatedModels::compareKeys","p":"Illuminate/Database/Eloquent/Relations/Concerns/ComparesRelatedModels.html#method_compareKeys","d":"<p>Compare the parent key with the related key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithDictionary::getDictionaryKey","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithDictionary.html#method_getDictionaryKey","d":"<p>Get a dictionary key attribute - casting it to a string if necessary.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::toggle","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_toggle","d":"<p>Toggles a model (or models) from the parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::syncWithoutDetaching","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_syncWithoutDetaching","d":"<p>Sync the intermediate tables with a list of IDs without detaching.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::sync","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_sync","d":"<p>Sync the intermediate tables with a list of IDs or collection of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::syncWithPivotValues","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_syncWithPivotValues","d":"<p>Sync the intermediate tables with a list of IDs or collection of models with the given pivot values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::formatRecordsList","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_formatRecordsList","d":"<p>Format the sync / toggle record list so that it is keyed by ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::attachNew","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_attachNew","d":"<p>Attach all of the records that aren't in the given current records.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::updateExistingPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_updateExistingPivot","d":"<p>Update an existing pivot record on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::updateExistingPivotUsingCustomClass","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_updateExistingPivotUsingCustomClass","d":"<p>Update an existing pivot record on the table via a custom class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::attach","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_attach","d":"<p>Attach a model to the parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::attachUsingCustomClass","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_attachUsingCustomClass","d":"<p>Attach a model to the parent using a custom class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::formatAttachRecords","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_formatAttachRecords","d":"<p>Create an array of records to insert into the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::formatAttachRecord","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_formatAttachRecord","d":"<p>Create a full attachment record payload.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::extractAttachIdAndAttributes","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_extractAttachIdAndAttributes","d":"<p>Get the attach record ID and extra attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::baseAttachRecord","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_baseAttachRecord","d":"<p>Create a new pivot attachment record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::addTimestampsToAttachment","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_addTimestampsToAttachment","d":"<p>Set the creation and update timestamps on an attach record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::hasPivotColumn","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_hasPivotColumn","d":"<p>Determine whether the given column is defined as a pivot column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::detach","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_detach","d":"<p>Detach models from the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::detachUsingCustomClass","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_detachUsingCustomClass","d":"<p>Detach models from the relationship using a custom class.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::getCurrentlyAttachedPivots","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_getCurrentlyAttachedPivots","d":"<p>Get the pivot models that are currently attached.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newPivot","d":"<p>Create a new pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newExistingPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newExistingPivot","d":"<p>Create a new existing pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newPivotStatement","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newPivotStatement","d":"<p>Get a new plain query builder for the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newPivotStatementForId","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newPivotStatementForId","d":"<p>Get a new pivot statement for a given &quot;other&quot; ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::newPivotQuery","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_newPivotQuery","d":"<p>Create a new query builder for the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::withPivot","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_withPivot","d":"<p>Set the columns on the pivot table to retrieve.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::parseIds","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_parseIds","d":"<p>Get all of the IDs from the given mixed value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::parseId","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_parseId","d":"<p>Get the ID from the given mixed value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::castKeys","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_castKeys","d":"<p>Cast the given keys to integers if they are numeric and string otherwise.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::castKey","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_castKey","d":"<p>Cast the given key to convert to primary key type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::castAttributes","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_castAttributes","d":"<p>Cast the given pivot attributes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\InteractsWithPivotTable::getTypeSwapValue","p":"Illuminate/Database/Eloquent/Relations/Concerns/InteractsWithPivotTable.html#method_getTypeSwapValue","d":"<p>Converts a given value to a given type value.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\SupportsDefaultModels::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/Concerns/SupportsDefaultModels.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\SupportsDefaultModels::withDefault","p":"Illuminate/Database/Eloquent/Relations/Concerns/SupportsDefaultModels.html#method_withDefault","d":"<p>Return a new model instance in case the relationship does not exist.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns\\SupportsDefaultModels::getDefaultFor","p":"Illuminate/Database/Eloquent/Relations/Concerns/SupportsDefaultModels.html#method_getDefaultFor","d":"<p>Get the default value for this relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasMany::getResults","p":"Illuminate/Database/Eloquent/Relations/HasMany.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasMany::initRelation","p":"Illuminate/Database/Eloquent/Relations/HasMany.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasMany::match","p":"Illuminate/Database/Eloquent/Relations/HasMany.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::__construct","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method___construct","d":"<p>Create a new has many through relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::addConstraints","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::performJoin","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_performJoin","d":"<p>Set the join clause on the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getQualifiedParentKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getQualifiedParentKeyName","d":"<p>Get the fully qualified parent key name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::throughParentSoftDeletes","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_throughParentSoftDeletes","d":"<p>Determine whether &quot;through&quot; parent of the relation uses Soft Deletes.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::withTrashedParents","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_withTrashedParents","d":"<p>Indicate that trashed &quot;through&quot; parents should be included in the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::initRelation","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::match","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::buildDictionary","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_buildDictionary","d":"<p>Build model dictionary keyed by the relation's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::firstOrNew","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_firstOrNew","d":"<p>Get the first related model record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::updateOrCreate","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_updateOrCreate","d":"<p>Create or update a related record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::firstWhere","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_firstWhere","d":"<p>Add a basic where clause to the query, and return the first result.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::first","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_first","d":"<p>Execute the query and get the first related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::firstOrFail","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_firstOrFail","d":"<p>Execute the query and get the first result or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::firstOr","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_firstOr","d":"<p>Execute the query and get the first result or call a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::find","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_find","d":"<p>Find a related model by its primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::findMany","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_findMany","d":"<p>Find multiple related models by their primary keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::findOrFail","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_findOrFail","d":"<p>Find a related model by its primary key or throw an exception.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::findOr","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_findOr","d":"<p>Find a related model by its primary key or call a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getResults","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::get","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::paginate","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_paginate","d":"<p>Get a paginator for the &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::simplePaginate","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_simplePaginate","d":"<p>Paginate the given query into a simple paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::cursorPaginate","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_cursorPaginate","d":"<p>Paginate the given query into a cursor paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::shouldSelect","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_shouldSelect","d":"<p>Set the select clause for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::chunk","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_chunk","d":"<p>Chunk the results of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::chunkById","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_chunkById","d":"<p>Chunk the results of a query by comparing numeric IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::cursor","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_cursor","d":"<p>Get a generator for the given query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::each","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_each","d":"<p>Execute a callback over each item while chunking.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::lazy","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_lazy","d":"<p>Query lazily, by chunks of the given size.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::lazyById","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_lazyById","d":"<p>Query lazily, by chunking the results of a query by comparing IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::prepareQueryBuilder","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_prepareQueryBuilder","d":"<p>Prepare the query builder for query execution.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getRelationExistenceQueryForSelfRelation","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getRelationExistenceQueryForSelfRelation","d":"<p>Add the constraints for a relationship query on the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getRelationExistenceQueryForThroughSelfRelation","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getRelationExistenceQueryForThroughSelfRelation","d":"<p>Add the constraints for a relationship query on the same table as the through parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getQualifiedFarKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getQualifiedFarKeyName","d":"<p>Get the qualified foreign key on the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getFirstKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getFirstKeyName","d":"<p>Get the foreign key on the &quot;through&quot; model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getQualifiedFirstKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getQualifiedFirstKeyName","d":"<p>Get the qualified foreign key on the &quot;through&quot; model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getForeignKeyName","d":"<p>Get the foreign key on the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getQualifiedForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getQualifiedForeignKeyName","d":"<p>Get the qualified foreign key on the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getLocalKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getLocalKeyName","d":"<p>Get the local key on the far parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getQualifiedLocalKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getQualifiedLocalKeyName","d":"<p>Get the qualified local key on the far parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasManyThrough::getSecondLocalKeyName","p":"Illuminate/Database/Eloquent/Relations/HasManyThrough.html#method_getSecondLocalKeyName","d":"<p>Get the local key on the intermediary model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::getResults","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::initRelation","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::match","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for an internal relationship existence query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::addOneOfManySubQueryConstraints","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_addOneOfManySubQueryConstraints","d":"<p>Add constraints for inner join subselect for one of many relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::getOneOfManySubQuerySelectColumns","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_getOneOfManySubQuerySelectColumns","d":"<p>Get the columns that should be selected by the one of many subquery.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::addOneOfManyJoinSubQueryConstraints","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_addOneOfManyJoinSubQueryConstraints","d":"<p>Add join query constraints for one of many relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOne::getRelatedKeyFrom","p":"Illuminate/Database/Eloquent/Relations/HasOne.html#method_getRelatedKeyFrom","d":"<p>Get the value of the model's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::__construct","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method___construct","d":"<p>Create a new has one or many relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::make","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_make","d":"<p>Create and return an un-saved instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::makeMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_makeMany","d":"<p>Create and return an un-saved instance of the related models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::addConstraints","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchOne","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchOne","d":"<p>Match the eagerly loaded results to their single parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchMany","d":"<p>Match the eagerly loaded results to their many parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::matchOneOrMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_matchOneOrMany","d":"<p>Match the eagerly loaded results to their many parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getRelationValue","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getRelationValue","d":"<p>Get the value of a relationship by one or many type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::buildDictionary","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_buildDictionary","d":"<p>Build model dictionary keyed by the relation's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::findOrNew","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_findOrNew","d":"<p>Find a model by its primary key or return a new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::firstOrNew","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_firstOrNew","d":"<p>Get the first related model record matching the attributes or instantiate it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::firstOrCreate","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_firstOrCreate","d":"<p>Get the first related record matching the attributes or create it.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::updateOrCreate","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_updateOrCreate","d":"<p>Create or update a related record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::save","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_save","d":"<p>Attach a model instance to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::saveQuietly","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_saveQuietly","d":"<p>Attach a model instance without raising any events to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::saveMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_saveMany","d":"<p>Attach a collection of models to the parent instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::saveManyQuietly","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_saveManyQuietly","d":"<p>Attach a collection of models to the parent instance without raising any events to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::create","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_create","d":"<p>Create a new instance of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::createQuietly","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_createQuietly","d":"<p>Create a new instance of the related model without raising any events to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::forceCreate","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_forceCreate","d":"<p>Create a new instance of the related model. Allow mass-assignment.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::createMany","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_createMany","d":"<p>Create a Collection of new instances of the related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::createManyQuietly","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_createManyQuietly","d":"<p>Create a Collection of new instances of the related model without raising any events to the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::setForeignAttributesForCreate","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_setForeignAttributesForCreate","d":"<p>Set the foreign ID for creating a related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getRelationExistenceQueryForSelfRelation","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getRelationExistenceQueryForSelfRelation","d":"<p>Add the constraints for a relationship query on the same table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getExistenceCompareKey","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getExistenceCompareKey","d":"<p>Get the key for comparing against the parent key in &quot;has&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getParentKey","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getParentKey","d":"<p>Get the key value of the parent's local key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getQualifiedParentKeyName","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getQualifiedParentKeyName","d":"<p>Get the fully qualified parent key name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getForeignKeyName","d":"<p>Get the plain foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getQualifiedForeignKeyName","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getQualifiedForeignKeyName","d":"<p>Get the foreign key for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneOrMany::getLocalKeyName","p":"Illuminate/Database/Eloquent/Relations/HasOneOrMany.html#method_getLocalKeyName","d":"<p>Get the local key for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneThrough::getResults","p":"Illuminate/Database/Eloquent/Relations/HasOneThrough.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneThrough::initRelation","p":"Illuminate/Database/Eloquent/Relations/HasOneThrough.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneThrough::match","p":"Illuminate/Database/Eloquent/Relations/HasOneThrough.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\HasOneThrough::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/HasOneThrough.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany::getResults","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany::initRelation","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany::match","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphMany::forceCreate","p":"Illuminate/Database/Eloquent/Relations/MorphMany.html#method_forceCreate","d":"<p>Create a new instance of the related model. Allow mass-assignment.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::getResults","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::initRelation","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::match","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_getRelationExistenceQuery","d":"<p>Get the relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::addOneOfManySubQueryConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_addOneOfManySubQueryConstraints","d":"<p>Add constraints for inner join subselect for one of many relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::getOneOfManySubQuerySelectColumns","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_getOneOfManySubQuerySelectColumns","d":"<p>Get the columns that should be selected by the one of many subquery.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::addOneOfManyJoinSubQueryConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_addOneOfManyJoinSubQueryConstraints","d":"<p>Add join query constraints for one of many relationships.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOne::getRelatedKeyFrom","p":"Illuminate/Database/Eloquent/Relations/MorphOne.html#method_getRelatedKeyFrom","d":"<p>Get the value of the model's foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::__construct","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method___construct","d":"<p>Create a new morph one or many relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::addConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::setForeignAttributesForCreate","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_setForeignAttributesForCreate","d":"<p>Set the foreign ID and type for creating a related model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getRelationExistenceQuery","d":"<p>Get the relationship query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getQualifiedMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getQualifiedMorphType","d":"<p>Get the foreign key &quot;type&quot; name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getMorphType","d":"<p>Get the plain morph type name without the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphOneOrMany::getMorphClass","p":"Illuminate/Database/Eloquent/Relations/MorphOneOrMany.html#method_getMorphClass","d":"<p>Get the class name of the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setKeysForSaveQuery","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setKeysForSaveQuery","d":"<p>Set the keys for a save update query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setKeysForSelectQuery","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setKeysForSelectQuery","d":"<p>Set the keys for a select query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::delete","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_delete","d":"<p>Delete the pivot model record from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::getMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_getMorphType","d":"<p>Get the morph type for the pivot.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setMorphType","d":"<p>Set the morph type for the pivot.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::setMorphClass","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_setMorphClass","d":"<p>Set the morph class for the pivot.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::getQueueableId","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_getQueueableId","d":"<p>Get the queueable identity for the entity.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::newQueryForRestoration","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_newQueryForRestoration","d":"<p>Get a new query to restore one or more models by their queueable IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphPivot::newQueryForCollectionRestoration","p":"Illuminate/Database/Eloquent/Relations/MorphPivot.html#method_newQueryForCollectionRestoration","d":"<p>Get a new query to restore multiple models by their queueable IDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::__construct","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method___construct","d":"<p>Create a new morph to relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::buildDictionary","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_buildDictionary","d":"<p>Build a dictionary with the models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getEager","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getEager","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getResultsByType","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getResultsByType","d":"<p>Get all of the relation results for a type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::gatherKeysByType","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_gatherKeysByType","d":"<p>Gather all of the foreign keys for a given type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::createModelByType","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_createModelByType","d":"<p>Create a new model instance by type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::match","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::matchToMorphParents","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_matchToMorphParents","d":"<p>Match the results for a given type to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::associate","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_associate","d":"<p>Associate the model instance to the given parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::dissociate","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_dissociate","d":"<p>Dissociate previously associated model from the given parent.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::touch","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_touch","d":"<p>Touch all of the related models for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::newRelatedInstanceFor","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_newRelatedInstanceFor","d":"<p>Make a new related instance for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getMorphType","d":"<p>Get the foreign key &quot;type&quot; name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::getDictionary","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_getDictionary","d":"<p>Get the dictionary used by the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::morphWith","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_morphWith","d":"<p>Specify which relations to load for a given morph type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::morphWithCount","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_morphWithCount","d":"<p>Specify which relationship counts to load for a given morph type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::constrain","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_constrain","d":"<p>Specify constraints on the query for a given morph type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::replayMacros","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method_replayMacros","d":"<p>Replay stored macro calls on the actual related instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphTo::__call","p":"Illuminate/Database/Eloquent/Relations/MorphTo.html#method___call","d":"<p>Handle dynamic method calls to the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::__construct","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method___construct","d":"<p>Create a new morph to many relationship instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::addWhereConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_addWhereConstraints","d":"<p>Set the where clause for the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::baseAttachRecord","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_baseAttachRecord","d":"<p>Create a new pivot attachment record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for a relationship count query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getCurrentlyAttachedPivots","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getCurrentlyAttachedPivots","d":"<p>Get the pivot models that are currently attached.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::newPivotQuery","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_newPivotQuery","d":"<p>Create a new query builder for the pivot table.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::newPivot","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_newPivot","d":"<p>Create a new pivot model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::aliasedPivotColumns","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_aliasedPivotColumns","d":"<p>Get the pivot columns for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getMorphType","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getMorphType","d":"<p>Get the foreign key &quot;type&quot; name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getMorphClass","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getMorphClass","d":"<p>Get the class name of the parent model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\MorphToMany::getInverse","p":"Illuminate/Database/Eloquent/Relations/MorphToMany.html#method_getInverse","d":"<p>Get the indicator for a reverse relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::__construct","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method___construct","d":"<p>Create a new relation instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::noConstraints","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_noConstraints","d":"<p>Run a callback with constraints disabled on the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::addConstraints","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_addConstraints","d":"<p>Set the base constraints on the relation query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::addEagerConstraints","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_addEagerConstraints","d":"<p>Set the constraints for an eager load of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::initRelation","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_initRelation","d":"<p>Initialize the relation on a set of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::match","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_match","d":"<p>Match the eagerly loaded results to their parents.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getResults","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getResults","d":"<p>Get the results of the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getEager","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getEager","d":"<p>Get the relationship for eager loading.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::sole","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_sole","d":"<p>Execute the query and get the first result if it's the sole matching record.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::get","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::touch","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_touch","d":"<p>Touch all of the related models for the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::rawUpdate","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_rawUpdate","d":"<p>Run a raw update against the base query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelationExistenceCountQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelationExistenceCountQuery","d":"<p>Add the constraints for a relationship count query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelationExistenceQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelationExistenceQuery","d":"<p>Add the constraints for an internal relationship existence query.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelationCountHash","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelationCountHash","d":"<p>Get a relationship join table hash.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getKeys","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getKeys","d":"<p>Get all of the primary keys for an array of models.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelationQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelationQuery","d":"<p>Get the query builder that will contain the relationship constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getQuery","d":"<p>Get the underlying query for the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getBaseQuery","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getBaseQuery","d":"<p>Get the base query builder driving the Eloquent builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::toBase","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_toBase","d":"<p>Get a base query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getParent","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getParent","d":"<p>Get the parent model of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getQualifiedParentKeyName","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getQualifiedParentKeyName","d":"<p>Get the fully qualified parent key name.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getRelated","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getRelated","d":"<p>Get the related model of the relation.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::createdAt","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_createdAt","d":"<p>Get the name of the &quot;created at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::updatedAt","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_updatedAt","d":"<p>Get the name of the &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::relatedUpdatedAt","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_relatedUpdatedAt","d":"<p>Get the name of the related model's &quot;updated at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::whereInEager","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_whereInEager","d":"<p>Add a whereIn eager constraint for the given set of model keys to be loaded.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::whereInMethod","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_whereInMethod","d":"<p>Get the name of the &quot;where in&quot; method for eager loading.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::requireMorphMap","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_requireMorphMap","d":"<p>Prevent polymorphic relationships from being used without model mappings.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::requiresMorphMap","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_requiresMorphMap","d":"<p>Determine if polymorphic relationships require explicit model mapping.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::enforceMorphMap","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_enforceMorphMap","d":"<p>Define the morph map for polymorphic relations and require all morphed models to be explicitly mapped.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::morphMap","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_morphMap","d":"<p>Set or get the morph map for polymorphic relations.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::buildMorphMapFromModels","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_buildMorphMapFromModels","d":"<p>Builds a table-keyed array from model class names.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::getMorphedModel","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method_getMorphedModel","d":"<p>Get the model associated with a custom polymorphic type.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::__call","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method___call","d":"<p>Handle dynamic method calls to the relationship.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Relations\\Relation::__clone","p":"Illuminate/Database/Eloquent/Relations/Relation.html#method___clone","d":"<p>Force a clone of the underlying query builder when cloning.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Scope::apply","p":"Illuminate/Database/Eloquent/Scope.html#method_apply","d":"<p>Apply the scope to a given Eloquent query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::bootSoftDeletes","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_bootSoftDeletes","d":"<p>Boot the soft deleting trait for a model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::initializeSoftDeletes","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_initializeSoftDeletes","d":"<p>Initialize the soft deleting trait for an instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::forceDelete","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_forceDelete","d":"<p>Force a hard delete on a soft deleted model.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::forceDeleteQuietly","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_forceDeleteQuietly","d":"<p>Force a hard delete on a soft deleted model without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::performDeleteOnModel","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_performDeleteOnModel","d":"<p>Perform the actual delete query on this model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::runSoftDelete","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_runSoftDelete","d":"<p>Perform the actual delete query on this model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::restore","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_restore","d":"<p>Restore a soft-deleted model instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::restoreQuietly","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_restoreQuietly","d":"<p>Restore a soft-deleted model instance without raising any events.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::trashed","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_trashed","d":"<p>Determine if the model instance has been soft-deleted.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::softDeleted","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_softDeleted","d":"<p>Register a &quot;softDeleted&quot; model event callback with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::restoring","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_restoring","d":"<p>Register a &quot;restoring&quot; model event callback with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::restored","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_restored","d":"<p>Register a &quot;restored&quot; model event callback with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::forceDeleting","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_forceDeleting","d":"<p>Register a &quot;forceDeleting&quot; model event callback with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::forceDeleted","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_forceDeleted","d":"<p>Register a &quot;forceDeleted&quot; model event callback with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::isForceDeleting","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_isForceDeleting","d":"<p>Determine if the model is currently force deleting.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::getDeletedAtColumn","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_getDeletedAtColumn","d":"<p>Get the name of the &quot;deleted at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::getQualifiedDeletedAtColumn","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_getQualifiedDeletedAtColumn","d":"<p>Get the fully qualified &quot;deleted at&quot; column.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::withTrashed","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_withTrashed","d":""},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::onlyTrashed","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_onlyTrashed","d":""},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletes::withoutTrashed","p":"Illuminate/Database/Eloquent/SoftDeletes.html#method_withoutTrashed","d":""},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::apply","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_apply","d":"<p>Apply the scope to a given Eloquent query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::extend","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_extend","d":"<p>Extend the query builder with the needed functions.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::getDeletedAtColumn","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_getDeletedAtColumn","d":"<p>Get the &quot;deleted at&quot; column for the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addRestore","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addRestore","d":"<p>Add the restore extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addRestoreOrCreate","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addRestoreOrCreate","d":"<p>Add the restore-or-create extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addWithTrashed","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addWithTrashed","d":"<p>Add the with-trashed extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addWithoutTrashed","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addWithoutTrashed","d":"<p>Add the without-trashed extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\SoftDeletingScope::addOnlyTrashed","p":"Illuminate/Database/Eloquent/SoftDeletingScope.html#method_addOnlyTrashed","d":"<p>Add the only-trashed extension to the builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\ConnectionEvent::__construct","p":"Illuminate/Database/Events/ConnectionEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\DatabaseBusy::__construct","p":"Illuminate/Database/Events/DatabaseBusy.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\MigrationEvent::__construct","p":"Illuminate/Database/Events/MigrationEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\MigrationsEvent::__construct","p":"Illuminate/Database/Events/MigrationsEvent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\ModelsPruned::__construct","p":"Illuminate/Database/Events/ModelsPruned.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\NoPendingMigrations::__construct","p":"Illuminate/Database/Events/NoPendingMigrations.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\QueryExecuted::__construct","p":"Illuminate/Database/Events/QueryExecuted.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\SchemaDumped::__construct","p":"Illuminate/Database/Events/SchemaDumped.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\SchemaLoaded::__construct","p":"Illuminate/Database/Events/SchemaLoaded.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Events\\StatementPrepared::__construct","p":"Illuminate/Database/Events/StatementPrepared.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapArray","p":"Illuminate/Database/Grammar.html#method_wrapArray","d":"<p>Wrap an array of values.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapTable","p":"Illuminate/Database/Grammar.html#method_wrapTable","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrap","p":"Illuminate/Database/Grammar.html#method_wrap","d":"<p>Wrap a value in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapAliasedValue","p":"Illuminate/Database/Grammar.html#method_wrapAliasedValue","d":"<p>Wrap a value that has an alias.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapSegments","p":"Illuminate/Database/Grammar.html#method_wrapSegments","d":"<p>Wrap the given value segments.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapValue","p":"Illuminate/Database/Grammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::wrapJsonSelector","p":"Illuminate/Database/Grammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::isJsonSelector","p":"Illuminate/Database/Grammar.html#method_isJsonSelector","d":"<p>Determine if the given string is a JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::columnize","p":"Illuminate/Database/Grammar.html#method_columnize","d":"<p>Convert an array of column names into a delimited string.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::parameterize","p":"Illuminate/Database/Grammar.html#method_parameterize","d":"<p>Create query parameter place-holders for an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::parameter","p":"Illuminate/Database/Grammar.html#method_parameter","d":"<p>Get the appropriate query parameter place-holder for a value.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::quoteString","p":"Illuminate/Database/Grammar.html#method_quoteString","d":"<p>Quote the given string literal.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::isExpression","p":"Illuminate/Database/Grammar.html#method_isExpression","d":"<p>Determine if the given value is a raw expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::getValue","p":"Illuminate/Database/Grammar.html#method_getValue","d":"<p>Transforms expressions to their scalar types.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::getDateFormat","p":"Illuminate/Database/Grammar.html#method_getDateFormat","d":"<p>Get the format for database stored dates.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::getTablePrefix","p":"Illuminate/Database/Grammar.html#method_getTablePrefix","d":"<p>Get the grammar's table prefix.</p>"},{"t":"M","n":"Illuminate\\Database\\Grammar::setTablePrefix","p":"Illuminate/Database/Grammar.html#method_setTablePrefix","d":"<p>Set the grammar's table prefix.</p>"},{"t":"M","n":"Illuminate\\Database\\LazyLoadingViolationException::__construct","p":"Illuminate/Database/LazyLoadingViolationException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::register","p":"Illuminate/Database/MigrationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerRepository","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerRepository","d":"<p>Register the migration repository service.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrator","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrator","d":"<p>Register the migrator service.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerCreator","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerCreator","d":"<p>Register the migration creator.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerCommands","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerCommands","d":"<p>Register the given commands.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrateCommand","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrateFreshCommand","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateFreshCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrateInstallCommand","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateInstallCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrateMakeCommand","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrateRefreshCommand","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateRefreshCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrateResetCommand","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateResetCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrateRollbackCommand","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateRollbackCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::registerMigrateStatusCommand","p":"Illuminate/Database/MigrationServiceProvider.html#method_registerMigrateStatusCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Database\\MigrationServiceProvider::provides","p":"Illuminate/Database/MigrationServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::__construct","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method___construct","d":"<p>Create a new database migration repository instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getRan","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getRan","d":"<p>Get the completed migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getMigrations","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getMigrations","d":"<p>Get the list of migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getMigrationsByBatch","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getMigrationsByBatch","d":"<p>Get the list of the migrations by batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getLast","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getLast","d":"<p>Get the last migration batch.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getMigrationBatches","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getMigrationBatches","d":"<p>Get the completed migrations with their batch numbers.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::log","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_log","d":"<p>Log that a migration was run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::delete","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_delete","d":"<p>Remove a migration from the log.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getNextBatchNumber","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getNextBatchNumber","d":"<p>Get the next migration batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getLastBatchNumber","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getLastBatchNumber","d":"<p>Get the last migration batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::createRepository","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_createRepository","d":"<p>Create the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::repositoryExists","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_repositoryExists","d":"<p>Determine if the migration repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::deleteRepository","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_deleteRepository","d":"<p>Delete the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::table","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_table","d":"<p>Get a query builder for the migration table.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getConnectionResolver","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getConnectionResolver","d":"<p>Get the connection resolver instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::getConnection","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_getConnection","d":"<p>Resolve the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\DatabaseMigrationRepository::setSource","p":"Illuminate/Database/Migrations/DatabaseMigrationRepository.html#method_setSource","d":"<p>Set the information source to gather data.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migration::getConnection","p":"Illuminate/Database/Migrations/Migration.html#method_getConnection","d":"<p>Get the migration connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::__construct","p":"Illuminate/Database/Migrations/MigrationCreator.html#method___construct","d":"<p>Create a new migration creator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::create","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_create","d":"<p>Create a new migration at the given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::ensureMigrationDoesntAlreadyExist","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_ensureMigrationDoesntAlreadyExist","d":"<p>Ensure that a migration with the given name doesn't already exist.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getStub","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getStub","d":"<p>Get the migration stub file.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::populateStub","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_populateStub","d":"<p>Populate the place-holders in the migration stub.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getClassName","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getClassName","d":"<p>Get the class name of a migration name.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getPath","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getPath","d":"<p>Get the full path to the migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::firePostCreateHooks","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_firePostCreateHooks","d":"<p>Fire the registered post create hooks.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::afterCreate","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_afterCreate","d":"<p>Register a post migration create hook.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getDatePrefix","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getDatePrefix","d":"<p>Get the date prefix for the migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::stubPath","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_stubPath","d":"<p>Get the path to the stubs.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationCreator::getFilesystem","p":"Illuminate/Database/Migrations/MigrationCreator.html#method_getFilesystem","d":"<p>Get the filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getRan","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getRan","d":"<p>Get the completed migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getMigrations","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getMigrations","d":"<p>Get the list of migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getMigrationsByBatch","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getMigrationsByBatch","d":"<p>Get the list of the migrations by batch.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getLast","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getLast","d":"<p>Get the last migration batch.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getMigrationBatches","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getMigrationBatches","d":"<p>Get the completed migrations with their batch numbers.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::log","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_log","d":"<p>Log that a migration was run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::delete","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_delete","d":"<p>Remove a migration from the log.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getNextBatchNumber","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getNextBatchNumber","d":"<p>Get the next migration batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::createRepository","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_createRepository","d":"<p>Create the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::repositoryExists","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_repositoryExists","d":"<p>Determine if the migration repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::deleteRepository","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_deleteRepository","d":"<p>Delete the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::setSource","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_setSource","d":"<p>Set the information source to gather data.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::__construct","p":"Illuminate/Database/Migrations/Migrator.html#method___construct","d":"<p>Create a new migrator instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::run","p":"Illuminate/Database/Migrations/Migrator.html#method_run","d":"<p>Run the pending migrations at a given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::pendingMigrations","p":"Illuminate/Database/Migrations/Migrator.html#method_pendingMigrations","d":"<p>Get the migration files that have not yet run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runPending","p":"Illuminate/Database/Migrations/Migrator.html#method_runPending","d":"<p>Run an array of migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runUp","p":"Illuminate/Database/Migrations/Migrator.html#method_runUp","d":"<p>Run &quot;up&quot; a migration instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::rollback","p":"Illuminate/Database/Migrations/Migrator.html#method_rollback","d":"<p>Rollback the last migration operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getMigrationsForRollback","p":"Illuminate/Database/Migrations/Migrator.html#method_getMigrationsForRollback","d":"<p>Get the migrations for a rollback operation.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::rollbackMigrations","p":"Illuminate/Database/Migrations/Migrator.html#method_rollbackMigrations","d":"<p>Rollback the given migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::reset","p":"Illuminate/Database/Migrations/Migrator.html#method_reset","d":"<p>Rolls all of the currently applied migrations back.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::resetMigrations","p":"Illuminate/Database/Migrations/Migrator.html#method_resetMigrations","d":"<p>Reset the given migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runDown","p":"Illuminate/Database/Migrations/Migrator.html#method_runDown","d":"<p>Run &quot;down&quot; a migration instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runMigration","p":"Illuminate/Database/Migrations/Migrator.html#method_runMigration","d":"<p>Run a migration inside a transaction if the database supports it.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::pretendToRun","p":"Illuminate/Database/Migrations/Migrator.html#method_pretendToRun","d":"<p>Pretend to run the migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getQueries","p":"Illuminate/Database/Migrations/Migrator.html#method_getQueries","d":"<p>Get all of the queries that would be run for a migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::runMethod","p":"Illuminate/Database/Migrations/Migrator.html#method_runMethod","d":"<p>Run a migration method on the given connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::resolve","p":"Illuminate/Database/Migrations/Migrator.html#method_resolve","d":"<p>Resolve a migration instance from a file.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::resolvePath","p":"Illuminate/Database/Migrations/Migrator.html#method_resolvePath","d":"<p>Resolve a migration instance from a migration path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getMigrationClass","p":"Illuminate/Database/Migrations/Migrator.html#method_getMigrationClass","d":"<p>Generate a migration class name based on the migration file name.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getMigrationFiles","p":"Illuminate/Database/Migrations/Migrator.html#method_getMigrationFiles","d":"<p>Get all of the migration files in a given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::requireFiles","p":"Illuminate/Database/Migrations/Migrator.html#method_requireFiles","d":"<p>Require in all the migration files in a given path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getMigrationName","p":"Illuminate/Database/Migrations/Migrator.html#method_getMigrationName","d":"<p>Get the name of the migration.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::path","p":"Illuminate/Database/Migrations/Migrator.html#method_path","d":"<p>Register a custom migration path.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::paths","p":"Illuminate/Database/Migrations/Migrator.html#method_paths","d":"<p>Get all of the custom migration paths.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getConnection","p":"Illuminate/Database/Migrations/Migrator.html#method_getConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::usingConnection","p":"Illuminate/Database/Migrations/Migrator.html#method_usingConnection","d":"<p>Execute the given callback using the given connection as the default connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::setConnection","p":"Illuminate/Database/Migrations/Migrator.html#method_setConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::resolveConnection","p":"Illuminate/Database/Migrations/Migrator.html#method_resolveConnection","d":"<p>Resolve the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getSchemaGrammar","p":"Illuminate/Database/Migrations/Migrator.html#method_getSchemaGrammar","d":"<p>Get the schema grammar out of a migration connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getRepository","p":"Illuminate/Database/Migrations/Migrator.html#method_getRepository","d":"<p>Get the migration repository instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::repositoryExists","p":"Illuminate/Database/Migrations/Migrator.html#method_repositoryExists","d":"<p>Determine if the migration repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::hasRunAnyMigrations","p":"Illuminate/Database/Migrations/Migrator.html#method_hasRunAnyMigrations","d":"<p>Determine if any migrations have been run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::deleteRepository","p":"Illuminate/Database/Migrations/Migrator.html#method_deleteRepository","d":"<p>Delete the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::getFilesystem","p":"Illuminate/Database/Migrations/Migrator.html#method_getFilesystem","d":"<p>Get the file system instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::setOutput","p":"Illuminate/Database/Migrations/Migrator.html#method_setOutput","d":"<p>Set the output implementation that should be used by the console.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::write","p":"Illuminate/Database/Migrations/Migrator.html#method_write","d":"<p>Write to the console's output.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\Migrator::fireMigrationEvent","p":"Illuminate/Database/Migrations/Migrator.html#method_fireMigrationEvent","d":"<p>Fire the given event for the migration.</p>"},{"t":"M","n":"Illuminate\\Database\\MultipleRecordsFoundException::__construct","p":"Illuminate/Database/MultipleRecordsFoundException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\MultipleRecordsFoundException::getCount","p":"Illuminate/Database/MultipleRecordsFoundException.html#method_getCount","d":"<p>Get the number of records found.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::isMaria","p":"Illuminate/Database/MySqlConnection.html#method_isMaria","d":"<p>Determine if the connected database is a MariaDB database.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getDefaultQueryGrammar","p":"Illuminate/Database/MySqlConnection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getSchemaBuilder","p":"Illuminate/Database/MySqlConnection.html#method_getSchemaBuilder","d":"<p>Get a schema builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getDefaultSchemaGrammar","p":"Illuminate/Database/MySqlConnection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getSchemaState","p":"Illuminate/Database/MySqlConnection.html#method_getSchemaState","d":"<p>Get the schema state for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getDefaultPostProcessor","p":"Illuminate/Database/MySqlConnection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\MySqlConnection::getDoctrineDriver","p":"Illuminate/Database/MySqlConnection.html#method_getDoctrineDriver","d":"<p>Get the Doctrine DBAL driver.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Concerns\\ConnectsToDatabase::connect","p":"Illuminate/Database/PDO/Concerns/ConnectsToDatabase.html#method_connect","d":"<p>Create a new database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::__construct","p":"Illuminate/Database/PDO/Connection.html#method___construct","d":"<p>Create a new PDO connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::exec","p":"Illuminate/Database/PDO/Connection.html#method_exec","d":"<p>Execute an SQL statement.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::prepare","p":"Illuminate/Database/PDO/Connection.html#method_prepare","d":"<p>Prepare a new SQL statement.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::query","p":"Illuminate/Database/PDO/Connection.html#method_query","d":"<p>Execute a new query against the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::lastInsertId","p":"Illuminate/Database/PDO/Connection.html#method_lastInsertId","d":"<p>Get the last insert ID.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::createStatement","p":"Illuminate/Database/PDO/Connection.html#method_createStatement","d":"<p>Create a new statement instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::beginTransaction","p":"Illuminate/Database/PDO/Connection.html#method_beginTransaction","d":"<p>Begin a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::commit","p":"Illuminate/Database/PDO/Connection.html#method_commit","d":"<p>Commit a database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::rollBack","p":"Illuminate/Database/PDO/Connection.html#method_rollBack","d":"<p>Rollback a database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::quote","p":"Illuminate/Database/PDO/Connection.html#method_quote","d":"<p>Wrap quotes around the given input.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::getServerVersion","p":"Illuminate/Database/PDO/Connection.html#method_getServerVersion","d":"<p>Get the server version for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\Connection::getWrappedConnection","p":"Illuminate/Database/PDO/Connection.html#method_getWrappedConnection","d":"<p>Get the wrapped PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\MySqlDriver::getName","p":"Illuminate/Database/PDO/MySqlDriver.html#method_getName","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Database\\PDO\\PostgresDriver::getName","p":"Illuminate/Database/PDO/PostgresDriver.html#method_getName","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Database\\PDO\\SQLiteDriver::getName","p":"Illuminate/Database/PDO/SQLiteDriver.html#method_getName","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::__construct","p":"Illuminate/Database/PDO/SqlServerConnection.html#method___construct","d":"<p>Create a new SQL Server connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::prepare","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_prepare","d":"<p>Prepare a new SQL statement.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::query","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_query","d":"<p>Execute a new query against the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::exec","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_exec","d":"<p>Execute an SQL statement.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::lastInsertId","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_lastInsertId","d":"<p>Get the last insert ID.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::beginTransaction","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_beginTransaction","d":"<p>Begin a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::commit","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_commit","d":"<p>Commit a database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::rollBack","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_rollBack","d":"<p>Rollback a database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::quote","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_quote","d":"<p>Wrap quotes around the given input.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::getServerVersion","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_getServerVersion","d":"<p>Get the server version for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerConnection::getWrappedConnection","p":"Illuminate/Database/PDO/SqlServerConnection.html#method_getWrappedConnection","d":"<p>Get the wrapped PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerDriver::connect","p":"Illuminate/Database/PDO/SqlServerDriver.html#method_connect","d":"<p>Create a new database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PDO\\SqlServerDriver::getName","p":"Illuminate/Database/PDO/SqlServerDriver.html#method_getName","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getDefaultQueryGrammar","p":"Illuminate/Database/PostgresConnection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getSchemaBuilder","p":"Illuminate/Database/PostgresConnection.html#method_getSchemaBuilder","d":"<p>Get a schema builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getDefaultSchemaGrammar","p":"Illuminate/Database/PostgresConnection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getSchemaState","p":"Illuminate/Database/PostgresConnection.html#method_getSchemaState","d":"<p>Get the schema state for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getDefaultPostProcessor","p":"Illuminate/Database/PostgresConnection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\PostgresConnection::getDoctrineDriver","p":"Illuminate/Database/PostgresConnection.html#method_getDoctrineDriver","d":"<p>Get the Doctrine DBAL driver.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::__construct","p":"Illuminate/Database/QueryException.html#method___construct","d":"<p>Create a new query exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::formatMessage","p":"Illuminate/Database/QueryException.html#method_formatMessage","d":"<p>Format the SQL error message.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::getConnectionName","p":"Illuminate/Database/QueryException.html#method_getConnectionName","d":"<p>Get the connection name for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::getSql","p":"Illuminate/Database/QueryException.html#method_getSql","d":"<p>Get the SQL for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\QueryException::getBindings","p":"Illuminate/Database/QueryException.html#method_getBindings","d":"<p>Get the bindings for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::__construct","p":"Illuminate/Database/Query/Builder.html#method___construct","d":"<p>Create a new query builder instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::select","p":"Illuminate/Database/Query/Builder.html#method_select","d":"<p>Set the columns to be selected.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::selectSub","p":"Illuminate/Database/Query/Builder.html#method_selectSub","d":"<p>Add a subselect expression to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::selectRaw","p":"Illuminate/Database/Query/Builder.html#method_selectRaw","d":"<p>Add a new &quot;raw&quot; select expression to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::fromSub","p":"Illuminate/Database/Query/Builder.html#method_fromSub","d":"<p>Makes &quot;from&quot; fetch from a subquery.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::fromRaw","p":"Illuminate/Database/Query/Builder.html#method_fromRaw","d":"<p>Add a raw from clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::createSub","p":"Illuminate/Database/Query/Builder.html#method_createSub","d":"<p>Creates a subquery and parse it.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::parseSub","p":"Illuminate/Database/Query/Builder.html#method_parseSub","d":"<p>Parse the subquery into SQL and bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::prependDatabaseNameIfCrossDatabaseQuery","p":"Illuminate/Database/Query/Builder.html#method_prependDatabaseNameIfCrossDatabaseQuery","d":"<p>Prepend the database name if the given query is on another database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addSelect","p":"Illuminate/Database/Query/Builder.html#method_addSelect","d":"<p>Add a new select column to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::distinct","p":"Illuminate/Database/Query/Builder.html#method_distinct","d":"<p>Force the query to only return distinct results.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::from","p":"Illuminate/Database/Query/Builder.html#method_from","d":"<p>Set the table which the query is targeting.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::useIndex","p":"Illuminate/Database/Query/Builder.html#method_useIndex","d":"<p>Add an index hint to suggest a query index.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forceIndex","p":"Illuminate/Database/Query/Builder.html#method_forceIndex","d":"<p>Add an index hint to force a query index.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::ignoreIndex","p":"Illuminate/Database/Query/Builder.html#method_ignoreIndex","d":"<p>Add an index hint to ignore a query index.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::join","p":"Illuminate/Database/Query/Builder.html#method_join","d":"<p>Add a join clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::joinWhere","p":"Illuminate/Database/Query/Builder.html#method_joinWhere","d":"<p>Add a &quot;join where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::joinSub","p":"Illuminate/Database/Query/Builder.html#method_joinSub","d":"<p>Add a subquery join clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::leftJoin","p":"Illuminate/Database/Query/Builder.html#method_leftJoin","d":"<p>Add a left join to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::leftJoinWhere","p":"Illuminate/Database/Query/Builder.html#method_leftJoinWhere","d":"<p>Add a &quot;join where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::leftJoinSub","p":"Illuminate/Database/Query/Builder.html#method_leftJoinSub","d":"<p>Add a subquery left join to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::rightJoin","p":"Illuminate/Database/Query/Builder.html#method_rightJoin","d":"<p>Add a right join to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::rightJoinWhere","p":"Illuminate/Database/Query/Builder.html#method_rightJoinWhere","d":"<p>Add a &quot;right join where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::rightJoinSub","p":"Illuminate/Database/Query/Builder.html#method_rightJoinSub","d":"<p>Add a subquery right join to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::crossJoin","p":"Illuminate/Database/Query/Builder.html#method_crossJoin","d":"<p>Add a &quot;cross join&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::crossJoinSub","p":"Illuminate/Database/Query/Builder.html#method_crossJoinSub","d":"<p>Add a subquery cross join to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::newJoinClause","p":"Illuminate/Database/Query/Builder.html#method_newJoinClause","d":"<p>Get a new join clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::mergeWheres","p":"Illuminate/Database/Query/Builder.html#method_mergeWheres","d":"<p>Merge an array of where clauses and bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::where","p":"Illuminate/Database/Query/Builder.html#method_where","d":"<p>Add a basic where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addArrayOfWheres","p":"Illuminate/Database/Query/Builder.html#method_addArrayOfWheres","d":"<p>Add an array of where clauses to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::prepareValueAndOperator","p":"Illuminate/Database/Query/Builder.html#method_prepareValueAndOperator","d":"<p>Prepare the value and operator for a where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::invalidOperatorAndValue","p":"Illuminate/Database/Query/Builder.html#method_invalidOperatorAndValue","d":"<p>Determine if the given operator and value combination is legal.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::invalidOperator","p":"Illuminate/Database/Query/Builder.html#method_invalidOperator","d":"<p>Determine if the given operator is supported.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::isBitwiseOperator","p":"Illuminate/Database/Query/Builder.html#method_isBitwiseOperator","d":"<p>Determine if the operator is a bitwise operator.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhere","p":"Illuminate/Database/Query/Builder.html#method_orWhere","d":"<p>Add an &quot;or where&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNot","p":"Illuminate/Database/Query/Builder.html#method_whereNot","d":"<p>Add a basic &quot;where not&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNot","p":"Illuminate/Database/Query/Builder.html#method_orWhereNot","d":"<p>Add an &quot;or where not&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereColumn","p":"Illuminate/Database/Query/Builder.html#method_whereColumn","d":"<p>Add a &quot;where&quot; clause comparing two columns to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereColumn","p":"Illuminate/Database/Query/Builder.html#method_orWhereColumn","d":"<p>Add an &quot;or where&quot; clause comparing two columns to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereRaw","p":"Illuminate/Database/Query/Builder.html#method_whereRaw","d":"<p>Add a raw where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereRaw","p":"Illuminate/Database/Query/Builder.html#method_orWhereRaw","d":"<p>Add a raw or where clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereIn","p":"Illuminate/Database/Query/Builder.html#method_whereIn","d":"<p>Add a &quot;where in&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereIn","p":"Illuminate/Database/Query/Builder.html#method_orWhereIn","d":"<p>Add an &quot;or where in&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotIn","p":"Illuminate/Database/Query/Builder.html#method_whereNotIn","d":"<p>Add a &quot;where not in&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotIn","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotIn","d":"<p>Add an &quot;or where not in&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereIntegerInRaw","p":"Illuminate/Database/Query/Builder.html#method_whereIntegerInRaw","d":"<p>Add a &quot;where in raw&quot; clause for integer values to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereIntegerInRaw","p":"Illuminate/Database/Query/Builder.html#method_orWhereIntegerInRaw","d":"<p>Add an &quot;or where in raw&quot; clause for integer values to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereIntegerNotInRaw","p":"Illuminate/Database/Query/Builder.html#method_whereIntegerNotInRaw","d":"<p>Add a &quot;where not in raw&quot; clause for integer values to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereIntegerNotInRaw","p":"Illuminate/Database/Query/Builder.html#method_orWhereIntegerNotInRaw","d":"<p>Add an &quot;or where not in raw&quot; clause for integer values to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNull","p":"Illuminate/Database/Query/Builder.html#method_whereNull","d":"<p>Add a &quot;where null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNull","p":"Illuminate/Database/Query/Builder.html#method_orWhereNull","d":"<p>Add an &quot;or where null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotNull","p":"Illuminate/Database/Query/Builder.html#method_whereNotNull","d":"<p>Add a &quot;where not null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereBetween","p":"Illuminate/Database/Query/Builder.html#method_whereBetween","d":"<p>Add a where between statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereBetweenColumns","p":"Illuminate/Database/Query/Builder.html#method_whereBetweenColumns","d":"<p>Add a where between statement using columns to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereBetween","p":"Illuminate/Database/Query/Builder.html#method_orWhereBetween","d":"<p>Add an or where between statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereBetweenColumns","p":"Illuminate/Database/Query/Builder.html#method_orWhereBetweenColumns","d":"<p>Add an or where between statement using columns to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotBetween","p":"Illuminate/Database/Query/Builder.html#method_whereNotBetween","d":"<p>Add a where not between statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotBetweenColumns","p":"Illuminate/Database/Query/Builder.html#method_whereNotBetweenColumns","d":"<p>Add a where not between statement using columns to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotBetween","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotBetween","d":"<p>Add an or where not between statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotBetweenColumns","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotBetweenColumns","d":"<p>Add an or where not between statement using columns to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotNull","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotNull","d":"<p>Add an &quot;or where not null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereDate","p":"Illuminate/Database/Query/Builder.html#method_whereDate","d":"<p>Add a &quot;where date&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereDate","p":"Illuminate/Database/Query/Builder.html#method_orWhereDate","d":"<p>Add an &quot;or where date&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereTime","p":"Illuminate/Database/Query/Builder.html#method_whereTime","d":"<p>Add a &quot;where time&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereTime","p":"Illuminate/Database/Query/Builder.html#method_orWhereTime","d":"<p>Add an &quot;or where time&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereDay","p":"Illuminate/Database/Query/Builder.html#method_whereDay","d":"<p>Add a &quot;where day&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereDay","p":"Illuminate/Database/Query/Builder.html#method_orWhereDay","d":"<p>Add an &quot;or where day&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereMonth","p":"Illuminate/Database/Query/Builder.html#method_whereMonth","d":"<p>Add a &quot;where month&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereMonth","p":"Illuminate/Database/Query/Builder.html#method_orWhereMonth","d":"<p>Add an &quot;or where month&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereYear","p":"Illuminate/Database/Query/Builder.html#method_whereYear","d":"<p>Add a &quot;where year&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereYear","p":"Illuminate/Database/Query/Builder.html#method_orWhereYear","d":"<p>Add an &quot;or where year&quot; statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addDateBasedWhere","p":"Illuminate/Database/Query/Builder.html#method_addDateBasedWhere","d":"<p>Add a date based (year, month, day, time) statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNested","p":"Illuminate/Database/Query/Builder.html#method_whereNested","d":"<p>Add a nested where statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forNestedWhere","p":"Illuminate/Database/Query/Builder.html#method_forNestedWhere","d":"<p>Create a new query instance for nested where condition.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addNestedWhereQuery","p":"Illuminate/Database/Query/Builder.html#method_addNestedWhereQuery","d":"<p>Add another query builder as a nested where to the query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereSub","p":"Illuminate/Database/Query/Builder.html#method_whereSub","d":"<p>Add a full sub-select to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereExists","p":"Illuminate/Database/Query/Builder.html#method_whereExists","d":"<p>Add an exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereExists","p":"Illuminate/Database/Query/Builder.html#method_orWhereExists","d":"<p>Add an or exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereNotExists","p":"Illuminate/Database/Query/Builder.html#method_whereNotExists","d":"<p>Add a where not exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereNotExists","p":"Illuminate/Database/Query/Builder.html#method_orWhereNotExists","d":"<p>Add a where not exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addWhereExistsQuery","p":"Illuminate/Database/Query/Builder.html#method_addWhereExistsQuery","d":"<p>Add an exists clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereRowValues","p":"Illuminate/Database/Query/Builder.html#method_whereRowValues","d":"<p>Adds a where condition using row values.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereRowValues","p":"Illuminate/Database/Query/Builder.html#method_orWhereRowValues","d":"<p>Adds an or where condition using row values.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereJsonContains","p":"Illuminate/Database/Query/Builder.html#method_whereJsonContains","d":"<p>Add a &quot;where JSON contains&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereJsonContains","p":"Illuminate/Database/Query/Builder.html#method_orWhereJsonContains","d":"<p>Add an &quot;or where JSON contains&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereJsonDoesntContain","p":"Illuminate/Database/Query/Builder.html#method_whereJsonDoesntContain","d":"<p>Add a &quot;where JSON not contains&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereJsonDoesntContain","p":"Illuminate/Database/Query/Builder.html#method_orWhereJsonDoesntContain","d":"<p>Add an &quot;or where JSON not contains&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereJsonContainsKey","p":"Illuminate/Database/Query/Builder.html#method_whereJsonContainsKey","d":"<p>Add a clause that determines if a JSON path exists to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereJsonContainsKey","p":"Illuminate/Database/Query/Builder.html#method_orWhereJsonContainsKey","d":"<p>Add an &quot;or&quot; clause that determines if a JSON path exists to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereJsonDoesntContainKey","p":"Illuminate/Database/Query/Builder.html#method_whereJsonDoesntContainKey","d":"<p>Add a clause that determines if a JSON path does not exist to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereJsonDoesntContainKey","p":"Illuminate/Database/Query/Builder.html#method_orWhereJsonDoesntContainKey","d":"<p>Add an &quot;or&quot; clause that determines if a JSON path does not exist to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereJsonLength","p":"Illuminate/Database/Query/Builder.html#method_whereJsonLength","d":"<p>Add a &quot;where JSON length&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereJsonLength","p":"Illuminate/Database/Query/Builder.html#method_orWhereJsonLength","d":"<p>Add an &quot;or where JSON length&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::dynamicWhere","p":"Illuminate/Database/Query/Builder.html#method_dynamicWhere","d":"<p>Handles dynamic &quot;where&quot; clauses to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addDynamic","p":"Illuminate/Database/Query/Builder.html#method_addDynamic","d":"<p>Add a single dynamic where clause statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::whereFullText","p":"Illuminate/Database/Query/Builder.html#method_whereFullText","d":"<p>Add a &quot;where fulltext&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orWhereFullText","p":"Illuminate/Database/Query/Builder.html#method_orWhereFullText","d":"<p>Add a &quot;or where fulltext&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::groupBy","p":"Illuminate/Database/Query/Builder.html#method_groupBy","d":"<p>Add a &quot;group by&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::groupByRaw","p":"Illuminate/Database/Query/Builder.html#method_groupByRaw","d":"<p>Add a raw groupBy clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::having","p":"Illuminate/Database/Query/Builder.html#method_having","d":"<p>Add a &quot;having&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orHaving","p":"Illuminate/Database/Query/Builder.html#method_orHaving","d":"<p>Add an &quot;or having&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::havingNested","p":"Illuminate/Database/Query/Builder.html#method_havingNested","d":"<p>Add a nested having statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addNestedHavingQuery","p":"Illuminate/Database/Query/Builder.html#method_addNestedHavingQuery","d":"<p>Add another query builder as a nested having to the query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::havingNull","p":"Illuminate/Database/Query/Builder.html#method_havingNull","d":"<p>Add a &quot;having null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orHavingNull","p":"Illuminate/Database/Query/Builder.html#method_orHavingNull","d":"<p>Add an &quot;or having null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::havingNotNull","p":"Illuminate/Database/Query/Builder.html#method_havingNotNull","d":"<p>Add a &quot;having not null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orHavingNotNull","p":"Illuminate/Database/Query/Builder.html#method_orHavingNotNull","d":"<p>Add an &quot;or having not null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::havingBetween","p":"Illuminate/Database/Query/Builder.html#method_havingBetween","d":"<p>Add a &quot;having between &quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::havingRaw","p":"Illuminate/Database/Query/Builder.html#method_havingRaw","d":"<p>Add a raw having clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orHavingRaw","p":"Illuminate/Database/Query/Builder.html#method_orHavingRaw","d":"<p>Add a raw or having clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orderBy","p":"Illuminate/Database/Query/Builder.html#method_orderBy","d":"<p>Add an &quot;order by&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orderByDesc","p":"Illuminate/Database/Query/Builder.html#method_orderByDesc","d":"<p>Add a descending &quot;order by&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::latest","p":"Illuminate/Database/Query/Builder.html#method_latest","d":"<p>Add an &quot;order by&quot; clause for a timestamp to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::oldest","p":"Illuminate/Database/Query/Builder.html#method_oldest","d":"<p>Add an &quot;order by&quot; clause for a timestamp to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::inRandomOrder","p":"Illuminate/Database/Query/Builder.html#method_inRandomOrder","d":"<p>Put the query's results in random order.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::orderByRaw","p":"Illuminate/Database/Query/Builder.html#method_orderByRaw","d":"<p>Add a raw &quot;order by&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::skip","p":"Illuminate/Database/Query/Builder.html#method_skip","d":"<p>Alias to set the &quot;offset&quot; value of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::offset","p":"Illuminate/Database/Query/Builder.html#method_offset","d":"<p>Set the &quot;offset&quot; value of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::take","p":"Illuminate/Database/Query/Builder.html#method_take","d":"<p>Alias to set the &quot;limit&quot; value of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::limit","p":"Illuminate/Database/Query/Builder.html#method_limit","d":"<p>Set the &quot;limit&quot; value of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forPage","p":"Illuminate/Database/Query/Builder.html#method_forPage","d":"<p>Set the limit and offset for a given page.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forPageBeforeId","p":"Illuminate/Database/Query/Builder.html#method_forPageBeforeId","d":"<p>Constrain the query to the previous &quot;page&quot; of results before a given ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forPageAfterId","p":"Illuminate/Database/Query/Builder.html#method_forPageAfterId","d":"<p>Constrain the query to the next &quot;page&quot; of results after a given ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::reorder","p":"Illuminate/Database/Query/Builder.html#method_reorder","d":"<p>Remove all existing orders and optionally add a new order.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::removeExistingOrdersFor","p":"Illuminate/Database/Query/Builder.html#method_removeExistingOrdersFor","d":"<p>Get an array with all orders with a given column removed.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::union","p":"Illuminate/Database/Query/Builder.html#method_union","d":"<p>Add a union statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::unionAll","p":"Illuminate/Database/Query/Builder.html#method_unionAll","d":"<p>Add a union all statement to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::lock","p":"Illuminate/Database/Query/Builder.html#method_lock","d":"<p>Lock the selected rows in the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::lockForUpdate","p":"Illuminate/Database/Query/Builder.html#method_lockForUpdate","d":"<p>Lock the selected rows in the table for updating.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::sharedLock","p":"Illuminate/Database/Query/Builder.html#method_sharedLock","d":"<p>Share lock the selected rows in the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::beforeQuery","p":"Illuminate/Database/Query/Builder.html#method_beforeQuery","d":"<p>Register a closure to be invoked before the query is executed.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::applyBeforeQueryCallbacks","p":"Illuminate/Database/Query/Builder.html#method_applyBeforeQueryCallbacks","d":"<p>Invoke the &quot;before query&quot; modification callbacks.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::toSql","p":"Illuminate/Database/Query/Builder.html#method_toSql","d":"<p>Get the SQL representation of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::find","p":"Illuminate/Database/Query/Builder.html#method_find","d":"<p>Execute a query for a single record by ID.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::findOr","p":"Illuminate/Database/Query/Builder.html#method_findOr","d":"<p>Execute a query for a single record by ID or call a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::value","p":"Illuminate/Database/Query/Builder.html#method_value","d":"<p>Get a single column's value from the first result of a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::rawValue","p":"Illuminate/Database/Query/Builder.html#method_rawValue","d":"<p>Get a single expression value from the first result of a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::soleValue","p":"Illuminate/Database/Query/Builder.html#method_soleValue","d":"<p>Get a single column's value from the first result of a query if it's the sole matching record.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::get","p":"Illuminate/Database/Query/Builder.html#method_get","d":"<p>Execute the query as a &quot;select&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::runSelect","p":"Illuminate/Database/Query/Builder.html#method_runSelect","d":"<p>Run the query as a &quot;select&quot; statement against the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::paginate","p":"Illuminate/Database/Query/Builder.html#method_paginate","d":"<p>Paginate the given query into a simple paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::simplePaginate","p":"Illuminate/Database/Query/Builder.html#method_simplePaginate","d":"<p>Get a paginator only supporting simple next and previous links.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cursorPaginate","p":"Illuminate/Database/Query/Builder.html#method_cursorPaginate","d":"<p>Get a paginator only supporting simple next and previous links.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::ensureOrderForCursorPagination","p":"Illuminate/Database/Query/Builder.html#method_ensureOrderForCursorPagination","d":"<p>Ensure the proper order by required for cursor pagination.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getCountForPagination","p":"Illuminate/Database/Query/Builder.html#method_getCountForPagination","d":"<p>Get the count of the total records for the paginator.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::runPaginationCountQuery","p":"Illuminate/Database/Query/Builder.html#method_runPaginationCountQuery","d":"<p>Run a pagination count query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cloneForPaginationCount","p":"Illuminate/Database/Query/Builder.html#method_cloneForPaginationCount","d":"<p>Clone the existing query instance for usage in a pagination subquery.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::withoutSelectAliases","p":"Illuminate/Database/Query/Builder.html#method_withoutSelectAliases","d":"<p>Remove the column aliases since they will break count queries.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cursor","p":"Illuminate/Database/Query/Builder.html#method_cursor","d":"<p>Get a lazy collection for the given query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::enforceOrderBy","p":"Illuminate/Database/Query/Builder.html#method_enforceOrderBy","d":"<p>Throw an exception if the query doesn't have an orderBy clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::pluck","p":"Illuminate/Database/Query/Builder.html#method_pluck","d":"<p>Get a collection instance containing the values of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::stripTableForPluck","p":"Illuminate/Database/Query/Builder.html#method_stripTableForPluck","d":"<p>Strip off the table name or alias from a column identifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::pluckFromObjectColumn","p":"Illuminate/Database/Query/Builder.html#method_pluckFromObjectColumn","d":"<p>Retrieve column values from rows represented as objects.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::pluckFromArrayColumn","p":"Illuminate/Database/Query/Builder.html#method_pluckFromArrayColumn","d":"<p>Retrieve column values from rows represented as arrays.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::implode","p":"Illuminate/Database/Query/Builder.html#method_implode","d":"<p>Concatenate values of a given column as a string.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::exists","p":"Illuminate/Database/Query/Builder.html#method_exists","d":"<p>Determine if any rows exist for the current query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::doesntExist","p":"Illuminate/Database/Query/Builder.html#method_doesntExist","d":"<p>Determine if no rows exist for the current query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::existsOr","p":"Illuminate/Database/Query/Builder.html#method_existsOr","d":"<p>Execute the given callback if no rows exist for the current query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::doesntExistOr","p":"Illuminate/Database/Query/Builder.html#method_doesntExistOr","d":"<p>Execute the given callback if rows exist for the current query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::count","p":"Illuminate/Database/Query/Builder.html#method_count","d":"<p>Retrieve the &quot;count&quot; result of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::min","p":"Illuminate/Database/Query/Builder.html#method_min","d":"<p>Retrieve the minimum value of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::max","p":"Illuminate/Database/Query/Builder.html#method_max","d":"<p>Retrieve the maximum value of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::sum","p":"Illuminate/Database/Query/Builder.html#method_sum","d":"<p>Retrieve the sum of the values of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::avg","p":"Illuminate/Database/Query/Builder.html#method_avg","d":"<p>Retrieve the average of the values of a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::average","p":"Illuminate/Database/Query/Builder.html#method_average","d":"<p>Alias for the &quot;avg&quot; method.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::aggregate","p":"Illuminate/Database/Query/Builder.html#method_aggregate","d":"<p>Execute an aggregate function on the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::numericAggregate","p":"Illuminate/Database/Query/Builder.html#method_numericAggregate","d":"<p>Execute a numeric aggregate function on the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::setAggregate","p":"Illuminate/Database/Query/Builder.html#method_setAggregate","d":"<p>Set the aggregate property without running the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::onceWithColumns","p":"Illuminate/Database/Query/Builder.html#method_onceWithColumns","d":"<p>Execute the given callback while selecting the given columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::insert","p":"Illuminate/Database/Query/Builder.html#method_insert","d":"<p>Insert new records into the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::insertOrIgnore","p":"Illuminate/Database/Query/Builder.html#method_insertOrIgnore","d":"<p>Insert new records into the database while ignoring errors.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::insertGetId","p":"Illuminate/Database/Query/Builder.html#method_insertGetId","d":"<p>Insert a new record and get the value of the primary key.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::insertUsing","p":"Illuminate/Database/Query/Builder.html#method_insertUsing","d":"<p>Insert new records into the table using a subquery.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::update","p":"Illuminate/Database/Query/Builder.html#method_update","d":"<p>Update records in the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::updateFrom","p":"Illuminate/Database/Query/Builder.html#method_updateFrom","d":"<p>Update records in a PostgreSQL database using the update from syntax.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::updateOrInsert","p":"Illuminate/Database/Query/Builder.html#method_updateOrInsert","d":"<p>Insert or update a record matching the attributes, and fill it with values.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::upsert","p":"Illuminate/Database/Query/Builder.html#method_upsert","d":"<p>Insert new records or update the existing ones.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::increment","p":"Illuminate/Database/Query/Builder.html#method_increment","d":"<p>Increment a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::incrementEach","p":"Illuminate/Database/Query/Builder.html#method_incrementEach","d":"<p>Increment the given column's values by the given amounts.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::decrement","p":"Illuminate/Database/Query/Builder.html#method_decrement","d":"<p>Decrement a column's value by a given amount.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::decrementEach","p":"Illuminate/Database/Query/Builder.html#method_decrementEach","d":"<p>Decrement the given column's values by the given amounts.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::delete","p":"Illuminate/Database/Query/Builder.html#method_delete","d":"<p>Delete records from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::truncate","p":"Illuminate/Database/Query/Builder.html#method_truncate","d":"<p>Run a truncate statement on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::newQuery","p":"Illuminate/Database/Query/Builder.html#method_newQuery","d":"<p>Get a new instance of the query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::forSubQuery","p":"Illuminate/Database/Query/Builder.html#method_forSubQuery","d":"<p>Create a new query instance for a sub-query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getColumns","p":"Illuminate/Database/Query/Builder.html#method_getColumns","d":"<p>Get all of the query builder's columns in a text-only array with all expressions evaluated.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::raw","p":"Illuminate/Database/Query/Builder.html#method_raw","d":"<p>Create a raw database expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getBindings","p":"Illuminate/Database/Query/Builder.html#method_getBindings","d":"<p>Get the current query value bindings in a flattened array.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getRawBindings","p":"Illuminate/Database/Query/Builder.html#method_getRawBindings","d":"<p>Get the raw array of bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::setBindings","p":"Illuminate/Database/Query/Builder.html#method_setBindings","d":"<p>Set the bindings on the query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::addBinding","p":"Illuminate/Database/Query/Builder.html#method_addBinding","d":"<p>Add a binding to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::castBinding","p":"Illuminate/Database/Query/Builder.html#method_castBinding","d":"<p>Cast the given binding value.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::mergeBindings","p":"Illuminate/Database/Query/Builder.html#method_mergeBindings","d":"<p>Merge an array of bindings into our bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cleanBindings","p":"Illuminate/Database/Query/Builder.html#method_cleanBindings","d":"<p>Remove all of the expressions from a list of bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::flattenValue","p":"Illuminate/Database/Query/Builder.html#method_flattenValue","d":"<p>Get a scalar type value from an unknown type of input.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::defaultKeyName","p":"Illuminate/Database/Query/Builder.html#method_defaultKeyName","d":"<p>Get the default key name of the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getConnection","p":"Illuminate/Database/Query/Builder.html#method_getConnection","d":"<p>Get the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getProcessor","p":"Illuminate/Database/Query/Builder.html#method_getProcessor","d":"<p>Get the database query processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::getGrammar","p":"Illuminate/Database/Query/Builder.html#method_getGrammar","d":"<p>Get the query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::useWritePdo","p":"Illuminate/Database/Query/Builder.html#method_useWritePdo","d":"<p>Use the &quot;write&quot; PDO connection when executing the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::isQueryable","p":"Illuminate/Database/Query/Builder.html#method_isQueryable","d":"<p>Determine if the value is a query builder instance or a Closure.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::clone","p":"Illuminate/Database/Query/Builder.html#method_clone","d":"<p>Clone the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cloneWithout","p":"Illuminate/Database/Query/Builder.html#method_cloneWithout","d":"<p>Clone the query without the given properties.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::cloneWithoutBindings","p":"Illuminate/Database/Query/Builder.html#method_cloneWithoutBindings","d":"<p>Clone the query without the given bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::dump","p":"Illuminate/Database/Query/Builder.html#method_dump","d":"<p>Dump the current SQL and bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::dd","p":"Illuminate/Database/Query/Builder.html#method_dd","d":"<p>Die and dump the current SQL and bindings.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Builder::__call","p":"Illuminate/Database/Query/Builder.html#method___call","d":"<p>Handle dynamic method calls into the method.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Expression::__construct","p":"Illuminate/Database/Query/Expression.html#method___construct","d":"<p>Create a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Expression::getValue","p":"Illuminate/Database/Query/Expression.html#method_getValue","d":"<p>Get the value of the expression.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileSelect","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileSelect","d":"<p>Compile a select query into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileComponents","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileComponents","d":"<p>Compile the components necessary for a select clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileAggregate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileAggregate","d":"<p>Compile an aggregated select clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileColumns","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileColumns","d":"<p>Compile the &quot;select *&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileFrom","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileFrom","d":"<p>Compile the &quot;from&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileJoins","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileJoins","d":"<p>Compile the &quot;join&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileWheres","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileWheres","d":"<p>Compile the &quot;where&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileWheresToArray","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileWheresToArray","d":"<p>Get an array of all the where clauses for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::concatenateWhereClauses","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_concatenateWhereClauses","d":"<p>Format the where clause statements into one string.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereRaw","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereRaw","d":"<p>Compile a raw where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereBasic","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereBasic","d":"<p>Compile a basic where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereBitwise","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereBitwise","d":"<p>Compile a bitwise operator where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereIn","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereIn","d":"<p>Compile a &quot;where in&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotIn","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotIn","d":"<p>Compile a &quot;where not in&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotInRaw","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotInRaw","d":"<p>Compile a &quot;where not in raw&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereInRaw","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereInRaw","d":"<p>Compile a &quot;where in raw&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNull","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNull","d":"<p>Compile a &quot;where null&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotNull","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotNull","d":"<p>Compile a &quot;where not null&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereBetween","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereBetween","d":"<p>Compile a &quot;between&quot; where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereBetweenColumns","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereBetweenColumns","d":"<p>Compile a &quot;between&quot; where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereDate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereDate","d":"<p>Compile a &quot;where date&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereTime","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereTime","d":"<p>Compile a &quot;where time&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereDay","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereDay","d":"<p>Compile a &quot;where day&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereMonth","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereMonth","d":"<p>Compile a &quot;where month&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereYear","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereYear","d":"<p>Compile a &quot;where year&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::dateBasedWhere","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_dateBasedWhere","d":"<p>Compile a date based where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereColumn","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereColumn","d":"<p>Compile a where clause comparing two columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNested","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNested","d":"<p>Compile a nested where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereSub","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereSub","d":"<p>Compile a where condition with a sub-select.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereExists","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereExists","d":"<p>Compile a where exists clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereNotExists","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereNotExists","d":"<p>Compile a where exists clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereRowValues","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereRowValues","d":"<p>Compile a where row values condition.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereJsonBoolean","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereJsonBoolean","d":"<p>Compile a &quot;where JSON boolean&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereJsonContains","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereJsonContains","d":"<p>Compile a &quot;where JSON contains&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileJsonContains","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileJsonContains","d":"<p>Compile a &quot;JSON contains&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::prepareBindingForJsonContains","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_prepareBindingForJsonContains","d":"<p>Prepare the binding for a &quot;JSON contains&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereJsonContainsKey","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereJsonContainsKey","d":"<p>Compile a &quot;where JSON contains key&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileJsonContainsKey","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileJsonContainsKey","d":"<p>Compile a &quot;JSON contains key&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereJsonLength","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereJsonLength","d":"<p>Compile a &quot;where JSON length&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileJsonLength","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileJsonLength","d":"<p>Compile a &quot;JSON length&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileJsonValueCast","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileJsonValueCast","d":"<p>Compile a &quot;JSON value cast&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::whereFullText","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_whereFullText","d":"<p>Compile a &quot;where fulltext&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileGroups","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileGroups","d":"<p>Compile the &quot;group by&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileHavings","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileHavings","d":"<p>Compile the &quot;having&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileHaving","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileHaving","d":"<p>Compile a single having clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileBasicHaving","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileBasicHaving","d":"<p>Compile a basic having clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileHavingBetween","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileHavingBetween","d":"<p>Compile a &quot;between&quot; having clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileHavingNull","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileHavingNull","d":"<p>Compile a having null clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileHavingNotNull","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileHavingNotNull","d":"<p>Compile a having not null clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileHavingBit","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileHavingBit","d":"<p>Compile a having clause involving a bit operator.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileNestedHavings","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileNestedHavings","d":"<p>Compile a nested having clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileOrders","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileOrders","d":"<p>Compile the &quot;order by&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileOrdersToArray","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileOrdersToArray","d":"<p>Compile the query orders to an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileRandom","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileRandom","d":"<p>Compile the random statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileLimit","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileLimit","d":"<p>Compile the &quot;limit&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileOffset","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileOffset","d":"<p>Compile the &quot;offset&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUnions","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUnions","d":"<p>Compile the &quot;union&quot; queries attached to the main query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUnion","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUnion","d":"<p>Compile a single union statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::wrapUnion","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_wrapUnion","d":"<p>Wrap a union subquery in parentheses.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUnionAggregate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUnionAggregate","d":"<p>Compile a union aggregate query into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileExists","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileExists","d":"<p>Compile an exists statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileInsert","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileInsert","d":"<p>Compile an insert statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileInsertOrIgnore","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileInsertOrIgnore","d":"<p>Compile an insert ignore statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileInsertGetId","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileInsertGetId","d":"<p>Compile an insert and get ID statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileInsertUsing","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileInsertUsing","d":"<p>Compile an insert statement using a subquery into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUpdate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUpdate","d":"<p>Compile an update statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUpdateColumns","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUpdateColumns","d":"<p>Compile the columns for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUpdateWithoutJoins","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUpdateWithoutJoins","d":"<p>Compile an update statement without joins into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUpdateWithJoins","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUpdateWithJoins","d":"<p>Compile an update statement with joins into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileUpsert","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileUpsert","d":"<p>Compile an &quot;upsert&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileDelete","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileDelete","d":"<p>Compile a delete statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileDeleteWithoutJoins","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileDeleteWithoutJoins","d":"<p>Compile a delete statement without joins into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileDeleteWithJoins","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileDeleteWithJoins","d":"<p>Compile a delete statement with joins into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::prepareBindingsForDelete","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_prepareBindingsForDelete","d":"<p>Prepare the bindings for a delete statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileTruncate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileTruncate","d":"<p>Compile a truncate table statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileLock","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::supportsSavepoints","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_supportsSavepoints","d":"<p>Determine if the grammar supports savepoints.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileSavepoint","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileSavepoint","d":"<p>Compile the SQL statement to define a savepoint.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::compileSavepointRollBack","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_compileSavepointRollBack","d":"<p>Compile the SQL statement to execute a savepoint rollback.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::wrapJsonBooleanSelector","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_wrapJsonBooleanSelector","d":"<p>Wrap the given JSON selector for boolean values.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::wrapJsonBooleanValue","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_wrapJsonBooleanValue","d":"<p>Wrap the given JSON boolean value.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::concatenate","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_concatenate","d":"<p>Concatenate an array of segments, removing empties.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::removeLeadingBoolean","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_removeLeadingBoolean","d":"<p>Remove the leading boolean from a statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::getOperators","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_getOperators","d":"<p>Get the grammar specific operators.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\Grammar::getBitwiseOperators","p":"Illuminate/Database/Query/Grammars/Grammar.html#method_getBitwiseOperators","d":"<p>Get the grammar specific bitwise operators.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::whereNull","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_whereNull","d":"<p>Add a &quot;where null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::whereNotNull","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_whereNotNull","d":"<p>Add a &quot;where not null&quot; clause to the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::whereFullText","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_whereFullText","d":"<p>Compile a &quot;where fulltext&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileIndexHint","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileIndexHint","d":"<p>Compile the index hints for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileInsertOrIgnore","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileInsertOrIgnore","d":"<p>Compile an insert ignore statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileJsonContains","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileJsonContains","d":"<p>Compile a &quot;JSON contains&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileJsonContainsKey","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileJsonContainsKey","d":"<p>Compile a &quot;JSON contains key&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileJsonLength","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileJsonLength","d":"<p>Compile a &quot;JSON length&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileJsonValueCast","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileJsonValueCast","d":"<p>Compile a &quot;JSON value cast&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileRandom","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileRandom","d":"<p>Compile the random statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileLock","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileInsert","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileInsert","d":"<p>Compile an insert statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileUpdateColumns","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileUpdateColumns","d":"<p>Compile the columns for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileUpsert","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileUpsert","d":"<p>Compile an &quot;upsert&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileJsonUpdateColumn","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileJsonUpdateColumn","d":"<p>Prepare a JSON column being updated using the JSON_SET function.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileUpdateWithoutJoins","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileUpdateWithoutJoins","d":"<p>Compile an update statement without joins into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::compileDeleteWithoutJoins","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_compileDeleteWithoutJoins","d":"<p>Compile a delete query that does not use joins.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::wrapValue","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::wrapJsonSelector","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\MySqlGrammar::wrapJsonBooleanSelector","p":"Illuminate/Database/Query/Grammars/MySqlGrammar.html#method_wrapJsonBooleanSelector","d":"<p>Wrap the given JSON selector for boolean values.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::whereBasic","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_whereBasic","d":"<p>Compile a basic where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::whereBitwise","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_whereBitwise","d":"<p>Compile a bitwise operator where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::whereDate","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_whereDate","d":"<p>Compile a &quot;where date&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::whereTime","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_whereTime","d":"<p>Compile a &quot;where time&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::dateBasedWhere","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_dateBasedWhere","d":"<p>Compile a date based where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::whereFullText","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_whereFullText","d":"<p>Compile a &quot;where fulltext&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::validFullTextLanguages","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_validFullTextLanguages","d":"<p>Get an array of valid full text languages.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileColumns","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileColumns","d":"<p>Compile the &quot;select *&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileJsonContains","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileJsonContains","d":"<p>Compile a &quot;JSON contains&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileJsonContainsKey","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileJsonContainsKey","d":"<p>Compile a &quot;JSON contains key&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileJsonLength","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileJsonLength","d":"<p>Compile a &quot;JSON length&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileHaving","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileHaving","d":"<p>Compile a single having clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileHavingBitwise","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileHavingBitwise","d":"<p>Compile a having clause involving a bitwise operator.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileLock","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileInsertOrIgnore","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileInsertOrIgnore","d":"<p>Compile an insert ignore statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileInsertGetId","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileInsertGetId","d":"<p>Compile an insert and get ID statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdate","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdate","d":"<p>Compile an update statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateColumns","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateColumns","d":"<p>Compile the columns for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpsert","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpsert","d":"<p>Compile an &quot;upsert&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileJsonUpdateColumn","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileJsonUpdateColumn","d":"<p>Prepares a JSON column being updated using the JSONB_SET function.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateFrom","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateFrom","d":"<p>Compile an update from statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateWheres","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateWheres","d":"<p>Compile the additional where clauses for updates with joins.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateJoinWheres","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateJoinWheres","d":"<p>Compile the &quot;join&quot; clause where clauses for an update.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::prepareBindingsForUpdateFrom","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_prepareBindingsForUpdateFrom","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileUpdateWithJoinsOrLimit","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileUpdateWithJoinsOrLimit","d":"<p>Compile an update statement with joins or limit into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileDelete","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileDelete","d":"<p>Compile a delete statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileDeleteWithJoinsOrLimit","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileDeleteWithJoinsOrLimit","d":"<p>Compile a delete statement with joins or limit into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::compileTruncate","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_compileTruncate","d":"<p>Compile a truncate table statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::wrapJsonSelector","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::wrapJsonBooleanSelector","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_wrapJsonBooleanSelector","d":"<p>Wrap the given JSON selector for boolean values.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::wrapJsonBooleanValue","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_wrapJsonBooleanValue","d":"<p>Wrap the given JSON boolean value.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::wrapJsonPathAttributes","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_wrapJsonPathAttributes","d":"<p>Wrap the attributes of the given JSON path.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\PostgresGrammar::parseJsonPathArrayKeys","p":"Illuminate/Database/Query/Grammars/PostgresGrammar.html#method_parseJsonPathArrayKeys","d":"<p>Parse the given JSON path attribute for array keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileLock","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::wrapUnion","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_wrapUnion","d":"<p>Wrap a union subquery in parentheses.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereDate","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereDate","d":"<p>Compile a &quot;where date&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereDay","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereDay","d":"<p>Compile a &quot;where day&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereMonth","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereMonth","d":"<p>Compile a &quot;where month&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereYear","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereYear","d":"<p>Compile a &quot;where year&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::whereTime","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_whereTime","d":"<p>Compile a &quot;where time&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::dateBasedWhere","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_dateBasedWhere","d":"<p>Compile a date based where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileIndexHint","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileIndexHint","d":"<p>Compile the index hints for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileJsonLength","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileJsonLength","d":"<p>Compile a &quot;JSON length&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileJsonContainsKey","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileJsonContainsKey","d":"<p>Compile a &quot;JSON contains key&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileUpdate","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileUpdate","d":"<p>Compile an update statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileInsertOrIgnore","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileInsertOrIgnore","d":"<p>Compile an insert ignore statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileUpdateColumns","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileUpdateColumns","d":"<p>Compile the columns for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileUpsert","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileUpsert","d":"<p>Compile an &quot;upsert&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::groupJsonColumnsForUpdate","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_groupJsonColumnsForUpdate","d":"<p>Group the nested JSON columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileJsonPatch","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileJsonPatch","d":"<p>Compile a &quot;JSON&quot; patch statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileUpdateWithJoinsOrLimit","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileUpdateWithJoinsOrLimit","d":"<p>Compile an update statement with joins or limit into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileDelete","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileDelete","d":"<p>Compile a delete statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileDeleteWithJoinsOrLimit","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileDeleteWithJoinsOrLimit","d":"<p>Compile a delete statement with joins or limit into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::compileTruncate","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_compileTruncate","d":"<p>Compile a truncate table statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SQLiteGrammar::wrapJsonSelector","p":"Illuminate/Database/Query/Grammars/SQLiteGrammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileSelect","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileSelect","d":"<p>Compile a select query into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileColumns","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileColumns","d":"<p>Compile the &quot;select *&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileFrom","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileFrom","d":"<p>Compile the &quot;from&quot; portion of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileIndexHint","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileIndexHint","d":"<p>Compile the index hints for the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::whereBitwise","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_whereBitwise","d":"<p>Compile a bitwise operator where clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::whereDate","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_whereDate","d":"<p>Compile a &quot;where date&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::whereTime","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_whereTime","d":"<p>Compile a &quot;where time&quot; clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileJsonContains","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileJsonContains","d":"<p>Compile a &quot;JSON contains&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::prepareBindingForJsonContains","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_prepareBindingForJsonContains","d":"<p>Prepare the binding for a &quot;JSON contains&quot; statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileJsonContainsKey","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileJsonContainsKey","d":"<p>Compile a &quot;JSON contains key&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileJsonLength","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileJsonLength","d":"<p>Compile a &quot;JSON length&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileJsonValueCast","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileJsonValueCast","d":"<p>Compile a &quot;JSON value cast&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileHaving","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileHaving","d":"<p>Compile a single having clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileHavingBitwise","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileHavingBitwise","d":"<p>Compile a having clause involving a bitwise operator.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::sortBindingsForSubqueryOrderBy","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_sortBindingsForSubqueryOrderBy","d":"<p>Move the order bindings to be after the &quot;select&quot; statement to account for an order by subquery.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileRowConstraint","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileRowConstraint","d":"<p>Compile the limit / offset row constraint for a query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileDeleteWithoutJoins","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileDeleteWithoutJoins","d":"<p>Compile a delete statement without joins into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileRandom","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileRandom","d":"<p>Compile the random statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileLimit","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileLimit","d":"<p>Compile the &quot;limit&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileOffset","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileOffset","d":"<p>Compile the &quot;offset&quot; portions of the query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileLock","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileLock","d":"<p>Compile the lock into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapUnion","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapUnion","d":"<p>Wrap a union subquery in parentheses.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileExists","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileExists","d":"<p>Compile an exists statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileUpdateWithJoins","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileUpdateWithJoins","d":"<p>Compile an update statement with joins into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileUpsert","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileUpsert","d":"<p>Compile an &quot;upsert&quot; statement into SQL.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::prepareBindingsForUpdate","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_prepareBindingsForUpdate","d":"<p>Prepare the bindings for an update statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileSavepoint","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileSavepoint","d":"<p>Compile the SQL statement to define a savepoint.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::compileSavepointRollBack","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_compileSavepointRollBack","d":"<p>Compile the SQL statement to execute a savepoint rollback.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::getDateFormat","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_getDateFormat","d":"<p>Get the format for database stored dates.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapValue","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapJsonSelector","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapJsonBooleanValue","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapJsonBooleanValue","d":"<p>Wrap the given JSON boolean value.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapTable","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapTable","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Grammars\\SqlServerGrammar::wrapTableValuedFunction","p":"Illuminate/Database/Query/Grammars/SqlServerGrammar.html#method_wrapTableValuedFunction","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\IndexHint::__construct","p":"Illuminate/Database/Query/IndexHint.html#method___construct","d":"<p>Create a new index hint instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::__construct","p":"Illuminate/Database/Query/JoinClause.html#method___construct","d":"<p>Create a new join clause instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::on","p":"Illuminate/Database/Query/JoinClause.html#method_on","d":"<p>Add an &quot;on&quot; clause to the join.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::orOn","p":"Illuminate/Database/Query/JoinClause.html#method_orOn","d":"<p>Add an &quot;or on&quot; clause to the join.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::newQuery","p":"Illuminate/Database/Query/JoinClause.html#method_newQuery","d":"<p>Get a new instance of the join clause builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::forSubQuery","p":"Illuminate/Database/Query/JoinClause.html#method_forSubQuery","d":"<p>Create a new query instance for sub-query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\JoinClause::newParentQuery","p":"Illuminate/Database/Query/JoinClause.html#method_newParentQuery","d":"<p>Create a new parent query instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\MySqlProcessor::processColumnListing","p":"Illuminate/Database/Query/Processors/MySqlProcessor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\PostgresProcessor::processInsertGetId","p":"Illuminate/Database/Query/Processors/PostgresProcessor.html#method_processInsertGetId","d":"<p>Process an &quot;insert get ID&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\PostgresProcessor::processColumnListing","p":"Illuminate/Database/Query/Processors/PostgresProcessor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\Processor::processSelect","p":"Illuminate/Database/Query/Processors/Processor.html#method_processSelect","d":"<p>Process the results of a &quot;select&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\Processor::processInsertGetId","p":"Illuminate/Database/Query/Processors/Processor.html#method_processInsertGetId","d":"<p>Process an  &quot;insert get ID&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\Processor::processColumnListing","p":"Illuminate/Database/Query/Processors/Processor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\SQLiteProcessor::processColumnListing","p":"Illuminate/Database/Query/Processors/SQLiteProcessor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\SqlServerProcessor::processInsertGetId","p":"Illuminate/Database/Query/Processors/SqlServerProcessor.html#method_processInsertGetId","d":"<p>Process an &quot;insert get ID&quot; query.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\SqlServerProcessor::processInsertGetIdForOdbc","p":"Illuminate/Database/Query/Processors/SqlServerProcessor.html#method_processInsertGetIdForOdbc","d":"<p>Process an &quot;insert get ID&quot; query for ODBC.</p>"},{"t":"M","n":"Illuminate\\Database\\Query\\Processors\\SqlServerProcessor::processColumnListing","p":"Illuminate/Database/Query/Processors/SqlServerProcessor.html#method_processColumnListing","d":"<p>Process the results of a column listing query.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::__construct","p":"Illuminate/Database/SQLiteConnection.html#method___construct","d":"<p>Create a new database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getDefaultQueryGrammar","p":"Illuminate/Database/SQLiteConnection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getSchemaBuilder","p":"Illuminate/Database/SQLiteConnection.html#method_getSchemaBuilder","d":"<p>Get a schema builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getDefaultSchemaGrammar","p":"Illuminate/Database/SQLiteConnection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getSchemaState","p":"Illuminate/Database/SQLiteConnection.html#method_getSchemaState","d":"<p>Get the schema state for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getDefaultPostProcessor","p":"Illuminate/Database/SQLiteConnection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getDoctrineDriver","p":"Illuminate/Database/SQLiteConnection.html#method_getDoctrineDriver","d":"<p>Get the Doctrine DBAL driver.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteConnection::getForeignKeyConstraintsConfigurationValue","p":"Illuminate/Database/SQLiteConnection.html#method_getForeignKeyConstraintsConfigurationValue","d":"<p>Get the database connection foreign key constraints configuration option.</p>"},{"t":"M","n":"Illuminate\\Database\\SQLiteDatabaseDoesNotExistException::__construct","p":"Illuminate/Database/SQLiteDatabaseDoesNotExistException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::__construct","p":"Illuminate/Database/Schema/Blueprint.html#method___construct","d":"<p>Create a new schema blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::build","p":"Illuminate/Database/Schema/Blueprint.html#method_build","d":"<p>Execute the blueprint against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::toSql","p":"Illuminate/Database/Schema/Blueprint.html#method_toSql","d":"<p>Get the raw SQL statements for the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::ensureCommandsAreValid","p":"Illuminate/Database/Schema/Blueprint.html#method_ensureCommandsAreValid","d":"<p>Ensure the commands on the blueprint are valid for the connection type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::commandsNamed","p":"Illuminate/Database/Schema/Blueprint.html#method_commandsNamed","d":"<p>Get all of the commands matching the given names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addImpliedCommands","p":"Illuminate/Database/Schema/Blueprint.html#method_addImpliedCommands","d":"<p>Add the commands that are implied by the blueprint's state.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addFluentIndexes","p":"Illuminate/Database/Schema/Blueprint.html#method_addFluentIndexes","d":"<p>Add the index commands fluently specified on columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addFluentCommands","p":"Illuminate/Database/Schema/Blueprint.html#method_addFluentCommands","d":"<p>Add the fluent commands specified on any columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::creating","p":"Illuminate/Database/Schema/Blueprint.html#method_creating","d":"<p>Determine if the blueprint has a create command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::create","p":"Illuminate/Database/Schema/Blueprint.html#method_create","d":"<p>Indicate that the table needs to be created.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::temporary","p":"Illuminate/Database/Schema/Blueprint.html#method_temporary","d":"<p>Indicate that the table needs to be temporary.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::drop","p":"Illuminate/Database/Schema/Blueprint.html#method_drop","d":"<p>Indicate that the table should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropIfExists","p":"Illuminate/Database/Schema/Blueprint.html#method_dropIfExists","d":"<p>Indicate that the table should be dropped if it exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropColumn","p":"Illuminate/Database/Schema/Blueprint.html#method_dropColumn","d":"<p>Indicate that the given columns should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::renameColumn","p":"Illuminate/Database/Schema/Blueprint.html#method_renameColumn","d":"<p>Indicate that the given columns should be renamed.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropPrimary","p":"Illuminate/Database/Schema/Blueprint.html#method_dropPrimary","d":"<p>Indicate that the given primary key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropUnique","p":"Illuminate/Database/Schema/Blueprint.html#method_dropUnique","d":"<p>Indicate that the given unique key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropIndex","p":"Illuminate/Database/Schema/Blueprint.html#method_dropIndex","d":"<p>Indicate that the given index should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropFullText","p":"Illuminate/Database/Schema/Blueprint.html#method_dropFullText","d":"<p>Indicate that the given fulltext index should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropSpatialIndex","p":"Illuminate/Database/Schema/Blueprint.html#method_dropSpatialIndex","d":"<p>Indicate that the given spatial index should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropForeign","p":"Illuminate/Database/Schema/Blueprint.html#method_dropForeign","d":"<p>Indicate that the given foreign key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropConstrainedForeignId","p":"Illuminate/Database/Schema/Blueprint.html#method_dropConstrainedForeignId","d":"<p>Indicate that the given column and foreign key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropForeignIdFor","p":"Illuminate/Database/Schema/Blueprint.html#method_dropForeignIdFor","d":"<p>Indicate that the given foreign key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropConstrainedForeignIdFor","p":"Illuminate/Database/Schema/Blueprint.html#method_dropConstrainedForeignIdFor","d":"<p>Indicate that the given foreign key should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::renameIndex","p":"Illuminate/Database/Schema/Blueprint.html#method_renameIndex","d":"<p>Indicate that the given indexes should be renamed.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropTimestamps","p":"Illuminate/Database/Schema/Blueprint.html#method_dropTimestamps","d":"<p>Indicate that the timestamp columns should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropTimestampsTz","p":"Illuminate/Database/Schema/Blueprint.html#method_dropTimestampsTz","d":"<p>Indicate that the timestamp columns should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropSoftDeletes","p":"Illuminate/Database/Schema/Blueprint.html#method_dropSoftDeletes","d":"<p>Indicate that the soft delete column should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropSoftDeletesTz","p":"Illuminate/Database/Schema/Blueprint.html#method_dropSoftDeletesTz","d":"<p>Indicate that the soft delete column should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropRememberToken","p":"Illuminate/Database/Schema/Blueprint.html#method_dropRememberToken","d":"<p>Indicate that the remember token column should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_dropMorphs","d":"<p>Indicate that the polymorphic columns should be dropped.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::rename","p":"Illuminate/Database/Schema/Blueprint.html#method_rename","d":"<p>Rename the table to a given name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::primary","p":"Illuminate/Database/Schema/Blueprint.html#method_primary","d":"<p>Specify the primary key(s) for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unique","p":"Illuminate/Database/Schema/Blueprint.html#method_unique","d":"<p>Specify a unique index for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::index","p":"Illuminate/Database/Schema/Blueprint.html#method_index","d":"<p>Specify an index for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::fullText","p":"Illuminate/Database/Schema/Blueprint.html#method_fullText","d":"<p>Specify an fulltext for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::spatialIndex","p":"Illuminate/Database/Schema/Blueprint.html#method_spatialIndex","d":"<p>Specify a spatial index for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::rawIndex","p":"Illuminate/Database/Schema/Blueprint.html#method_rawIndex","d":"<p>Specify a raw index for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::foreign","p":"Illuminate/Database/Schema/Blueprint.html#method_foreign","d":"<p>Specify a foreign key for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::id","p":"Illuminate/Database/Schema/Blueprint.html#method_id","d":"<p>Create a new auto-incrementing big integer (8-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::increments","p":"Illuminate/Database/Schema/Blueprint.html#method_increments","d":"<p>Create a new auto-incrementing integer (4-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::integerIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_integerIncrements","d":"<p>Create a new auto-incrementing integer (4-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::tinyIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_tinyIncrements","d":"<p>Create a new auto-incrementing tiny integer (1-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::smallIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_smallIncrements","d":"<p>Create a new auto-incrementing small integer (2-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::mediumIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_mediumIncrements","d":"<p>Create a new auto-incrementing medium integer (3-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::bigIncrements","p":"Illuminate/Database/Schema/Blueprint.html#method_bigIncrements","d":"<p>Create a new auto-incrementing big integer (8-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::char","p":"Illuminate/Database/Schema/Blueprint.html#method_char","d":"<p>Create a new char column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::string","p":"Illuminate/Database/Schema/Blueprint.html#method_string","d":"<p>Create a new string column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::tinyText","p":"Illuminate/Database/Schema/Blueprint.html#method_tinyText","d":"<p>Create a new tiny text column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::text","p":"Illuminate/Database/Schema/Blueprint.html#method_text","d":"<p>Create a new text column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::mediumText","p":"Illuminate/Database/Schema/Blueprint.html#method_mediumText","d":"<p>Create a new medium text column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::longText","p":"Illuminate/Database/Schema/Blueprint.html#method_longText","d":"<p>Create a new long text column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::integer","p":"Illuminate/Database/Schema/Blueprint.html#method_integer","d":"<p>Create a new integer (4-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::tinyInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_tinyInteger","d":"<p>Create a new tiny integer (1-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::smallInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_smallInteger","d":"<p>Create a new small integer (2-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::mediumInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_mediumInteger","d":"<p>Create a new medium integer (3-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::bigInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_bigInteger","d":"<p>Create a new big integer (8-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedInteger","d":"<p>Create a new unsigned integer (4-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedTinyInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedTinyInteger","d":"<p>Create a new unsigned tiny integer (1-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedSmallInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedSmallInteger","d":"<p>Create a new unsigned small integer (2-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedMediumInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedMediumInteger","d":"<p>Create a new unsigned medium integer (3-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedBigInteger","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedBigInteger","d":"<p>Create a new unsigned big integer (8-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::foreignId","p":"Illuminate/Database/Schema/Blueprint.html#method_foreignId","d":"<p>Create a new unsigned big integer (8-byte) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::foreignIdFor","p":"Illuminate/Database/Schema/Blueprint.html#method_foreignIdFor","d":"<p>Create a foreign ID column for the given model.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::float","p":"Illuminate/Database/Schema/Blueprint.html#method_float","d":"<p>Create a new float column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::double","p":"Illuminate/Database/Schema/Blueprint.html#method_double","d":"<p>Create a new double column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::decimal","p":"Illuminate/Database/Schema/Blueprint.html#method_decimal","d":"<p>Create a new decimal column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedFloat","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedFloat","d":"<p>Create a new unsigned float column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedDouble","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedDouble","d":"<p>Create a new unsigned double column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::unsignedDecimal","p":"Illuminate/Database/Schema/Blueprint.html#method_unsignedDecimal","d":"<p>Create a new unsigned decimal column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::boolean","p":"Illuminate/Database/Schema/Blueprint.html#method_boolean","d":"<p>Create a new boolean column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::enum","p":"Illuminate/Database/Schema/Blueprint.html#method_enum","d":"<p>Create a new enum column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::set","p":"Illuminate/Database/Schema/Blueprint.html#method_set","d":"<p>Create a new set column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::json","p":"Illuminate/Database/Schema/Blueprint.html#method_json","d":"<p>Create a new json column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::jsonb","p":"Illuminate/Database/Schema/Blueprint.html#method_jsonb","d":"<p>Create a new jsonb column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::date","p":"Illuminate/Database/Schema/Blueprint.html#method_date","d":"<p>Create a new date column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dateTime","p":"Illuminate/Database/Schema/Blueprint.html#method_dateTime","d":"<p>Create a new date-time column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dateTimeTz","p":"Illuminate/Database/Schema/Blueprint.html#method_dateTimeTz","d":"<p>Create a new date-time column (with time zone) on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::time","p":"Illuminate/Database/Schema/Blueprint.html#method_time","d":"<p>Create a new time column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timeTz","p":"Illuminate/Database/Schema/Blueprint.html#method_timeTz","d":"<p>Create a new time column (with time zone) on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timestamp","p":"Illuminate/Database/Schema/Blueprint.html#method_timestamp","d":"<p>Create a new timestamp column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timestampTz","p":"Illuminate/Database/Schema/Blueprint.html#method_timestampTz","d":"<p>Create a new timestamp (with time zone) column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timestamps","p":"Illuminate/Database/Schema/Blueprint.html#method_timestamps","d":"<p>Add nullable creation and update timestamps to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::nullableTimestamps","p":"Illuminate/Database/Schema/Blueprint.html#method_nullableTimestamps","d":"<p>Add nullable creation and update timestamps to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::timestampsTz","p":"Illuminate/Database/Schema/Blueprint.html#method_timestampsTz","d":"<p>Add creation and update timestampTz columns to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::datetimes","p":"Illuminate/Database/Schema/Blueprint.html#method_datetimes","d":"<p>Add creation and update datetime columns to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::softDeletes","p":"Illuminate/Database/Schema/Blueprint.html#method_softDeletes","d":"<p>Add a &quot;deleted at&quot; timestamp for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::softDeletesTz","p":"Illuminate/Database/Schema/Blueprint.html#method_softDeletesTz","d":"<p>Add a &quot;deleted at&quot; timestampTz for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::softDeletesDatetime","p":"Illuminate/Database/Schema/Blueprint.html#method_softDeletesDatetime","d":"<p>Add a &quot;deleted at&quot; datetime column to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::year","p":"Illuminate/Database/Schema/Blueprint.html#method_year","d":"<p>Create a new year column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::binary","p":"Illuminate/Database/Schema/Blueprint.html#method_binary","d":"<p>Create a new binary column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::uuid","p":"Illuminate/Database/Schema/Blueprint.html#method_uuid","d":"<p>Create a new UUID column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::foreignUuid","p":"Illuminate/Database/Schema/Blueprint.html#method_foreignUuid","d":"<p>Create a new UUID column on the table with a foreign key constraint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::ulid","p":"Illuminate/Database/Schema/Blueprint.html#method_ulid","d":"<p>Create a new ULID column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::foreignUlid","p":"Illuminate/Database/Schema/Blueprint.html#method_foreignUlid","d":"<p>Create a new ULID column on the table with a foreign key constraint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::ipAddress","p":"Illuminate/Database/Schema/Blueprint.html#method_ipAddress","d":"<p>Create a new IP address column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::macAddress","p":"Illuminate/Database/Schema/Blueprint.html#method_macAddress","d":"<p>Create a new MAC address column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::geometry","p":"Illuminate/Database/Schema/Blueprint.html#method_geometry","d":"<p>Create a new geometry column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::point","p":"Illuminate/Database/Schema/Blueprint.html#method_point","d":"<p>Create a new point column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::lineString","p":"Illuminate/Database/Schema/Blueprint.html#method_lineString","d":"<p>Create a new linestring column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::polygon","p":"Illuminate/Database/Schema/Blueprint.html#method_polygon","d":"<p>Create a new polygon column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::geometryCollection","p":"Illuminate/Database/Schema/Blueprint.html#method_geometryCollection","d":"<p>Create a new geometrycollection column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::multiPoint","p":"Illuminate/Database/Schema/Blueprint.html#method_multiPoint","d":"<p>Create a new multipoint column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::multiLineString","p":"Illuminate/Database/Schema/Blueprint.html#method_multiLineString","d":"<p>Create a new multilinestring column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::multiPolygon","p":"Illuminate/Database/Schema/Blueprint.html#method_multiPolygon","d":"<p>Create a new multipolygon column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::multiPolygonZ","p":"Illuminate/Database/Schema/Blueprint.html#method_multiPolygonZ","d":"<p>Create a new multipolygon column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::computed","p":"Illuminate/Database/Schema/Blueprint.html#method_computed","d":"<p>Create a new generated, computed column on the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::morphs","p":"Illuminate/Database/Schema/Blueprint.html#method_morphs","d":"<p>Add the proper columns for a polymorphic table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::nullableMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_nullableMorphs","d":"<p>Add nullable columns for a polymorphic table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::numericMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_numericMorphs","d":"<p>Add the proper columns for a polymorphic table using numeric IDs (incremental).</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::nullableNumericMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_nullableNumericMorphs","d":"<p>Add nullable columns for a polymorphic table using numeric IDs (incremental).</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::uuidMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_uuidMorphs","d":"<p>Add the proper columns for a polymorphic table using UUIDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::nullableUuidMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_nullableUuidMorphs","d":"<p>Add nullable columns for a polymorphic table using UUIDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::ulidMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_ulidMorphs","d":"<p>Add the proper columns for a polymorphic table using ULIDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::nullableUlidMorphs","p":"Illuminate/Database/Schema/Blueprint.html#method_nullableUlidMorphs","d":"<p>Add nullable columns for a polymorphic table using ULIDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::rememberToken","p":"Illuminate/Database/Schema/Blueprint.html#method_rememberToken","d":"<p>Adds the <code>remember_token</code> column to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::comment","p":"Illuminate/Database/Schema/Blueprint.html#method_comment","d":"<p>Add a comment to the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::indexCommand","p":"Illuminate/Database/Schema/Blueprint.html#method_indexCommand","d":"<p>Add a new index command to the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::dropIndexCommand","p":"Illuminate/Database/Schema/Blueprint.html#method_dropIndexCommand","d":"<p>Create a new drop index command on the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::createIndexName","p":"Illuminate/Database/Schema/Blueprint.html#method_createIndexName","d":"<p>Create a default index name for the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addColumn","p":"Illuminate/Database/Schema/Blueprint.html#method_addColumn","d":"<p>Add a new column to the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addColumnDefinition","p":"Illuminate/Database/Schema/Blueprint.html#method_addColumnDefinition","d":"<p>Add a new column definition to the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::after","p":"Illuminate/Database/Schema/Blueprint.html#method_after","d":"<p>Add the columns from the callback after the given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::removeColumn","p":"Illuminate/Database/Schema/Blueprint.html#method_removeColumn","d":"<p>Remove a column from the schema blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::addCommand","p":"Illuminate/Database/Schema/Blueprint.html#method_addCommand","d":"<p>Add a new command to the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::createCommand","p":"Illuminate/Database/Schema/Blueprint.html#method_createCommand","d":"<p>Create a new Fluent command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getTable","p":"Illuminate/Database/Schema/Blueprint.html#method_getTable","d":"<p>Get the table the blueprint describes.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getColumns","p":"Illuminate/Database/Schema/Blueprint.html#method_getColumns","d":"<p>Get the columns on the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getCommands","p":"Illuminate/Database/Schema/Blueprint.html#method_getCommands","d":"<p>Get the commands on the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getAddedColumns","p":"Illuminate/Database/Schema/Blueprint.html#method_getAddedColumns","d":"<p>Get the columns on the blueprint that should be added.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Blueprint::getChangedColumns","p":"Illuminate/Database/Schema/Blueprint.html#method_getChangedColumns","d":"<p>Get the columns on the blueprint that should be changed.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::__construct","p":"Illuminate/Database/Schema/Builder.html#method___construct","d":"<p>Create a new database Schema manager.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::defaultStringLength","p":"Illuminate/Database/Schema/Builder.html#method_defaultStringLength","d":"<p>Set the default string length for migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::defaultMorphKeyType","p":"Illuminate/Database/Schema/Builder.html#method_defaultMorphKeyType","d":"<p>Set the default morph key type for migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::morphUsingUuids","p":"Illuminate/Database/Schema/Builder.html#method_morphUsingUuids","d":"<p>Set the default morph key type for migrations to UUIDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::morphUsingUlids","p":"Illuminate/Database/Schema/Builder.html#method_morphUsingUlids","d":"<p>Set the default morph key type for migrations to ULIDs.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::useNativeSchemaOperationsIfPossible","p":"Illuminate/Database/Schema/Builder.html#method_useNativeSchemaOperationsIfPossible","d":"<p>Attempt to use native schema operations for dropping, renaming, and modifying columns, even if Doctrine DBAL is installed.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::createDatabase","p":"Illuminate/Database/Schema/Builder.html#method_createDatabase","d":"<p>Create a database in the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::dropDatabaseIfExists","p":"Illuminate/Database/Schema/Builder.html#method_dropDatabaseIfExists","d":"<p>Drop a database from the schema if the database exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::hasTable","p":"Illuminate/Database/Schema/Builder.html#method_hasTable","d":"<p>Determine if the given table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::hasColumn","p":"Illuminate/Database/Schema/Builder.html#method_hasColumn","d":"<p>Determine if the given table has a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::hasColumns","p":"Illuminate/Database/Schema/Builder.html#method_hasColumns","d":"<p>Determine if the given table has given columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::whenTableHasColumn","p":"Illuminate/Database/Schema/Builder.html#method_whenTableHasColumn","d":"<p>Execute a table builder callback if the given table has a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::whenTableDoesntHaveColumn","p":"Illuminate/Database/Schema/Builder.html#method_whenTableDoesntHaveColumn","d":"<p>Execute a table builder callback if the given table doesn't have a given column.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::getColumnType","p":"Illuminate/Database/Schema/Builder.html#method_getColumnType","d":"<p>Get the data type for the given column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::getColumnListing","p":"Illuminate/Database/Schema/Builder.html#method_getColumnListing","d":"<p>Get the column listing for a given table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::table","p":"Illuminate/Database/Schema/Builder.html#method_table","d":"<p>Modify a table on the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::create","p":"Illuminate/Database/Schema/Builder.html#method_create","d":"<p>Create a new table on the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::drop","p":"Illuminate/Database/Schema/Builder.html#method_drop","d":"<p>Drop a table from the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::dropIfExists","p":"Illuminate/Database/Schema/Builder.html#method_dropIfExists","d":"<p>Drop a table from the schema if it exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::dropColumns","p":"Illuminate/Database/Schema/Builder.html#method_dropColumns","d":"<p>Drop columns from a table schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::dropAllTables","p":"Illuminate/Database/Schema/Builder.html#method_dropAllTables","d":"<p>Drop all tables from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::dropAllViews","p":"Illuminate/Database/Schema/Builder.html#method_dropAllViews","d":"<p>Drop all views from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::dropAllTypes","p":"Illuminate/Database/Schema/Builder.html#method_dropAllTypes","d":"<p>Drop all types from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::getAllTables","p":"Illuminate/Database/Schema/Builder.html#method_getAllTables","d":"<p>Get all of the table names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::rename","p":"Illuminate/Database/Schema/Builder.html#method_rename","d":"<p>Rename a table on the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::enableForeignKeyConstraints","p":"Illuminate/Database/Schema/Builder.html#method_enableForeignKeyConstraints","d":"<p>Enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::disableForeignKeyConstraints","p":"Illuminate/Database/Schema/Builder.html#method_disableForeignKeyConstraints","d":"<p>Disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::withoutForeignKeyConstraints","p":"Illuminate/Database/Schema/Builder.html#method_withoutForeignKeyConstraints","d":"<p>Disable foreign key constraints during the execution of a callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::build","p":"Illuminate/Database/Schema/Builder.html#method_build","d":"<p>Execute the blueprint to build / modify the table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::createBlueprint","p":"Illuminate/Database/Schema/Builder.html#method_createBlueprint","d":"<p>Create a new command set with a Closure.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::getConnection","p":"Illuminate/Database/Schema/Builder.html#method_getConnection","d":"<p>Get the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::setConnection","p":"Illuminate/Database/Schema/Builder.html#method_setConnection","d":"<p>Set the database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Builder::blueprintResolver","p":"Illuminate/Database/Schema/Builder.html#method_blueprintResolver","d":"<p>Set the Schema Blueprint resolver callback.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::after","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_after","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::always","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_always","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::autoIncrement","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_autoIncrement","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::change","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_change","d":"<p>Change the column</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::charset","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_charset","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::collation","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_collation","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::comment","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_comment","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::default","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_default","d":"<p>Specify a &quot;default&quot; value for the column</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::first","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_first","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::from","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_from","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::generatedAs","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_generatedAs","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::index","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_index","d":"<p>Add an index</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::invisible","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_invisible","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::nullable","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_nullable","d":"<p>Allow NULL values to be inserted into the column</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::persisted","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_persisted","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::primary","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_primary","d":"<p>Add a primary index</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::fulltext","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_fulltext","d":"<p>Add a fulltext index</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::spatialIndex","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_spatialIndex","d":"<p>Add a spatial index</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::startingValue","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_startingValue","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::storedAs","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_storedAs","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::type","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_type","d":"<p>Specify a type for the column</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::unique","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_unique","d":"<p>Add a unique index</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::unsigned","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_unsigned","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::useCurrent","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_useCurrent","d":"<p>Set the TIMESTAMP column to use CURRENT_TIMESTAMP as default value</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::useCurrentOnUpdate","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_useCurrentOnUpdate","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ColumnDefinition::virtualAs","p":"Illuminate/Database/Schema/ColumnDefinition.html#method_virtualAs","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignIdColumnDefinition::__construct","p":"Illuminate/Database/Schema/ForeignIdColumnDefinition.html#method___construct","d":"<p>Create a new foreign ID column definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignIdColumnDefinition::constrained","p":"Illuminate/Database/Schema/ForeignIdColumnDefinition.html#method_constrained","d":"<p>Create a foreign key constraint on this column referencing the &quot;id&quot; column of the conventionally related table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignIdColumnDefinition::references","p":"Illuminate/Database/Schema/ForeignIdColumnDefinition.html#method_references","d":"<p>Specify which column this foreign ID references on another table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::cascadeOnUpdate","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_cascadeOnUpdate","d":"<p>Indicate that updates should cascade.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::restrictOnUpdate","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_restrictOnUpdate","d":"<p>Indicate that updates should be restricted.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::cascadeOnDelete","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_cascadeOnDelete","d":"<p>Indicate that deletes should cascade.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::restrictOnDelete","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_restrictOnDelete","d":"<p>Indicate that deletes should be restricted.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::nullOnDelete","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_nullOnDelete","d":"<p>Indicate that deletes should set the foreign key value to null.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::noActionOnDelete","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_noActionOnDelete","d":"<p>Indicate that deletes should have &quot;no action&quot;.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::deferrable","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_deferrable","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::initiallyImmediate","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_initiallyImmediate","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::on","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_on","d":"<p>Specify the referenced table</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::onDelete","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_onDelete","d":"<p>Add an ON DELETE action</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::onUpdate","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_onUpdate","d":"<p>Add an ON UPDATE action</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\ForeignKeyDefinition::references","p":"Illuminate/Database/Schema/ForeignKeyDefinition.html#method_references","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::compile","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_compile","d":"<p>Compile a change column command into a series of SQL statements.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getChangedDiff","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getChangedDiff","d":"<p>Get the Doctrine table difference for the given changes.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getTableWithColumnChanges","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getTableWithColumnChanges","d":"<p>Get a copy of the given Doctrine table after making the column changes.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getDoctrineColumn","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getDoctrineColumn","d":"<p>Get the Doctrine column instance for a column change.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getDoctrineColumnChangeOptions","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getDoctrineColumnChangeOptions","d":"<p>Get the Doctrine column change options.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::getDoctrineColumnType","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_getDoctrineColumnType","d":"<p>Get the doctrine column type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::calculateDoctrineTextLength","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_calculateDoctrineTextLength","d":"<p>Calculate the proper column length to force the Doctrine text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::doesntNeedCharacterOptions","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_doesntNeedCharacterOptions","d":"<p>Determine if the given type does not need character / collation options.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::mapFluentOptionToDoctrine","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_mapFluentOptionToDoctrine","d":"<p>Get the matching Doctrine option for a given Fluent attribute name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\ChangeColumn::mapFluentValueToDoctrine","p":"Illuminate/Database/Schema/Grammars/ChangeColumn.html#method_mapFluentValueToDoctrine","d":"<p>Get the matching Doctrine value for a given Fluent attribute.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileCreateDatabase","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileCreateDatabase","d":"<p>Compile a create database command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileDropDatabaseIfExists","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileDropDatabaseIfExists","d":"<p>Compile a drop database if exists command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileRenameColumn","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileRenameColumn","d":"<p>Compile a rename column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileChange","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileChange","d":"<p>Compile a change column command into a series of SQL statements.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileFulltext","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileFulltext","d":"<p>Compile a fulltext index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileDropFullText","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileDropFullText","d":"<p>Compile a drop fulltext index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::compileForeign","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_compileForeign","d":"<p>Compile a foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getColumns","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getColumns","d":"<p>Compile the blueprint's added column definitions.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getType","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getType","d":"<p>Get the SQL for the column data type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::typeComputed","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_typeComputed","d":"<p>Create the column definition for a generated, computed column type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::addModifiers","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_addModifiers","d":"<p>Add the column modifiers to the definition.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getCommandByName","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getCommandByName","d":"<p>Get the primary key command if it exists on the blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getCommandsByName","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getCommandsByName","d":"<p>Get all of the commands with a given name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::prefixArray","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_prefixArray","d":"<p>Add a prefix to an array of values.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::wrapTable","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_wrapTable","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::wrap","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_wrap","d":"<p>Wrap a value in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getDefaultValue","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getDefaultValue","d":"<p>Format a value so that it can be used in &quot;default&quot; clauses.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getDoctrineTableDiff","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getDoctrineTableDiff","d":"<p>Create an empty Doctrine DBAL TableDiff from the Blueprint.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::getFluentCommands","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_getFluentCommands","d":"<p>Get the fluent commands for the grammar.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\Grammar::supportsSchemaTransactions","p":"Illuminate/Database/Schema/Grammars/Grammar.html#method_supportsSchemaTransactions","d":"<p>Check if this Grammar supports schema changes wrapped in a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreateDatabase","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreateDatabase","d":"<p>Compile a create database command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropDatabaseIfExists","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropDatabaseIfExists","d":"<p>Compile a drop database if exists command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileTableExists","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileTableExists","d":"<p>Compile the query to determine the list of tables.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileColumnListing","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileColumnListing","d":"<p>Compile the query to determine the list of columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreate","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreate","d":"<p>Compile a create table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreateTable","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreateTable","d":"<p>Create the main create table clause.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreateEncoding","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreateEncoding","d":"<p>Append the character set specifications to a command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileCreateEngine","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileCreateEngine","d":"<p>Append the engine specifications to a command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileAdd","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileAdd","d":"<p>Compile an add column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileAutoIncrementStartingValues","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileAutoIncrementStartingValues","d":"<p>Compile the auto-incrementing column starting values.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileRenameColumn","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileRenameColumn","d":"<p>Compile a rename column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileChange","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileChange","d":"<p>Compile a change column command into a series of SQL statements.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compilePrimary","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compilePrimary","d":"<p>Compile a primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileUnique","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileUnique","d":"<p>Compile a unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileIndex","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileIndex","d":"<p>Compile a plain index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileFullText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileFullText","d":"<p>Compile a fulltext index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileSpatialIndex","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileSpatialIndex","d":"<p>Compile a spatial index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileKey","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileKey","d":"<p>Compile an index creation command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDrop","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDrop","d":"<p>Compile a drop table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropIfExists","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropIfExists","d":"<p>Compile a drop table (if exists) command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropColumn","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropColumn","d":"<p>Compile a drop column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropPrimary","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropPrimary","d":"<p>Compile a drop primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropUnique","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropUnique","d":"<p>Compile a drop unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropIndex","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropIndex","d":"<p>Compile a drop index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropFullText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropFullText","d":"<p>Compile a drop fulltext index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropSpatialIndex","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropSpatialIndex","d":"<p>Compile a drop spatial index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropForeign","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropForeign","d":"<p>Compile a drop foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileRename","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileRename","d":"<p>Compile a rename table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileRenameIndex","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileRenameIndex","d":"<p>Compile a rename index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropAllTables","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropAllTables","d":"<p>Compile the SQL needed to drop all tables.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDropAllViews","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDropAllViews","d":"<p>Compile the SQL needed to drop all views.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileGetAllTables","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileGetAllTables","d":"<p>Compile the SQL needed to retrieve all table names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileGetAllViews","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileGetAllViews","d":"<p>Compile the SQL needed to retrieve all view names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileEnableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileEnableForeignKeyConstraints","d":"<p>Compile the command to enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileDisableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileDisableForeignKeyConstraints","d":"<p>Compile the command to disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::compileTableComment","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_compileTableComment","d":"<p>Compile a table comment command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeChar","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeChar","d":"<p>Create the column definition for a char type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeString","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeString","d":"<p>Create the column definition for a string type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTinyText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTinyText","d":"<p>Create the column definition for a tiny text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeText","d":"<p>Create the column definition for a text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMediumText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMediumText","d":"<p>Create the column definition for a medium text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeLongText","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeLongText","d":"<p>Create the column definition for a long text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBigInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBigInteger","d":"<p>Create the column definition for a big integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeInteger","d":"<p>Create the column definition for an integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMediumInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMediumInteger","d":"<p>Create the column definition for a medium integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTinyInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTinyInteger","d":"<p>Create the column definition for a tiny integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeSmallInteger","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeSmallInteger","d":"<p>Create the column definition for a small integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeFloat","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeFloat","d":"<p>Create the column definition for a float type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDouble","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDouble","d":"<p>Create the column definition for a double type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDecimal","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDecimal","d":"<p>Create the column definition for a decimal type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBoolean","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBoolean","d":"<p>Create the column definition for a boolean type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeEnum","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeEnum","d":"<p>Create the column definition for an enumeration type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeSet","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeSet","d":"<p>Create the column definition for a set enumeration type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeJson","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeJson","d":"<p>Create the column definition for a json type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeJsonb","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeJsonb","d":"<p>Create the column definition for a jsonb type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDate","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDate","d":"<p>Create the column definition for a date type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDateTime","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDateTime","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeDateTimeTz","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeDateTimeTz","d":"<p>Create the column definition for a date-time (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTime","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTime","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTimeTz","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTimeTz","d":"<p>Create the column definition for a time (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTimestamp","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTimestamp","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeTimestampTz","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeTimestampTz","d":"<p>Create the column definition for a timestamp (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeYear","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeYear","d":"<p>Create the column definition for a year type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeBinary","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeBinary","d":"<p>Create the column definition for a binary type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeUuid","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeUuid","d":"<p>Create the column definition for a uuid type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeIpAddress","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeIpAddress","d":"<p>Create the column definition for an IP address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMacAddress","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMacAddress","d":"<p>Create the column definition for a MAC address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeGeometry","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeGeometry","d":"<p>Create the column definition for a spatial Geometry type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typePoint","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typePoint","d":"<p>Create the column definition for a spatial Point type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeLineString","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeLineString","d":"<p>Create the column definition for a spatial LineString type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typePolygon","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typePolygon","d":"<p>Create the column definition for a spatial Polygon type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeGeometryCollection","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeGeometryCollection","d":"<p>Create the column definition for a spatial GeometryCollection type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMultiPoint","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMultiPoint","d":"<p>Create the column definition for a spatial MultiPoint type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMultiLineString","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMultiLineString","d":"<p>Create the column definition for a spatial MultiLineString type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeMultiPolygon","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeMultiPolygon","d":"<p>Create the column definition for a spatial MultiPolygon type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::typeComputed","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_typeComputed","d":"<p>Create the column definition for a generated, computed column type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyVirtualAs","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyVirtualAs","d":"<p>Get the SQL for a generated virtual column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyStoredAs","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyStoredAs","d":"<p>Get the SQL for a generated stored column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyUnsigned","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyUnsigned","d":"<p>Get the SQL for an unsigned column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyCharset","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyCharset","d":"<p>Get the SQL for a character set column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyCollate","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyCollate","d":"<p>Get the SQL for a collation column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyNullable","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyNullable","d":"<p>Get the SQL for a nullable column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyInvisible","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyInvisible","d":"<p>Get the SQL for an invisible column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyDefault","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyDefault","d":"<p>Get the SQL for a default column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyOnUpdate","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyOnUpdate","d":"<p>Get the SQL for an &quot;on update&quot; column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyIncrement","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyIncrement","d":"<p>Get the SQL for an auto-increment column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyFirst","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyFirst","d":"<p>Get the SQL for a &quot;first&quot; column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyAfter","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyAfter","d":"<p>Get the SQL for an &quot;after&quot; column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifyComment","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifyComment","d":"<p>Get the SQL for a &quot;comment&quot; column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::modifySrid","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_modifySrid","d":"<p>Get the SQL for a SRID column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::wrapValue","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_wrapValue","d":"<p>Wrap a single string in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\MySqlGrammar::wrapJsonSelector","p":"Illuminate/Database/Schema/Grammars/MySqlGrammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileCreateDatabase","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileCreateDatabase","d":"<p>Compile a create database command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropDatabaseIfExists","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropDatabaseIfExists","d":"<p>Compile a drop database if exists command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileTableExists","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileTableExists","d":"<p>Compile the query to determine if a table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileColumnListing","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileColumnListing","d":"<p>Compile the query to determine the list of columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileCreate","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileCreate","d":"<p>Compile a create table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileAdd","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileAdd","d":"<p>Compile a column addition command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileAutoIncrementStartingValues","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileAutoIncrementStartingValues","d":"<p>Compile the auto-incrementing column starting values.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileRenameColumn","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileRenameColumn","d":"<p>Compile a rename column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileChange","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileChange","d":"<p>Compile a change column command into a series of SQL statements.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compilePrimary","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compilePrimary","d":"<p>Compile a primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileUnique","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileUnique","d":"<p>Compile a unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileIndex","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileIndex","d":"<p>Compile a plain index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileFulltext","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileFulltext","d":"<p>Compile a fulltext index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileSpatialIndex","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileSpatialIndex","d":"<p>Compile a spatial index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileForeign","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileForeign","d":"<p>Compile a foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDrop","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDrop","d":"<p>Compile a drop table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropIfExists","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropIfExists","d":"<p>Compile a drop table (if exists) command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropAllTables","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropAllTables","d":"<p>Compile the SQL needed to drop all tables.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropAllViews","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropAllViews","d":"<p>Compile the SQL needed to drop all views.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropAllTypes","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropAllTypes","d":"<p>Compile the SQL needed to drop all types.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileGetAllTables","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileGetAllTables","d":"<p>Compile the SQL needed to retrieve all table names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileGetAllViews","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileGetAllViews","d":"<p>Compile the SQL needed to retrieve all view names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileGetAllTypes","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileGetAllTypes","d":"<p>Compile the SQL needed to retrieve all type names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropColumn","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropColumn","d":"<p>Compile a drop column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropPrimary","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropPrimary","d":"<p>Compile a drop primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropUnique","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropUnique","d":"<p>Compile a drop unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropIndex","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropIndex","d":"<p>Compile a drop index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropFullText","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropFullText","d":"<p>Compile a drop fulltext index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropSpatialIndex","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropSpatialIndex","d":"<p>Compile a drop spatial index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDropForeign","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDropForeign","d":"<p>Compile a drop foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileRename","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileRename","d":"<p>Compile a rename table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileRenameIndex","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileRenameIndex","d":"<p>Compile a rename index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileEnableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileEnableForeignKeyConstraints","d":"<p>Compile the command to enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileDisableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileDisableForeignKeyConstraints","d":"<p>Compile the command to disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileComment","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileComment","d":"<p>Compile a comment command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::compileTableComment","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_compileTableComment","d":"<p>Compile a table comment command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::escapeNames","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_escapeNames","d":"<p>Quote-escape the given tables, views, or types.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeChar","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeChar","d":"<p>Create the column definition for a char type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeString","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeString","d":"<p>Create the column definition for a string type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTinyText","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTinyText","d":"<p>Create the column definition for a tiny text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeText","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeText","d":"<p>Create the column definition for a text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMediumText","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMediumText","d":"<p>Create the column definition for a medium text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeLongText","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeLongText","d":"<p>Create the column definition for a long text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeInteger","d":"<p>Create the column definition for an integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBigInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBigInteger","d":"<p>Create the column definition for a big integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMediumInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMediumInteger","d":"<p>Create the column definition for a medium integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTinyInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTinyInteger","d":"<p>Create the column definition for a tiny integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeSmallInteger","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeSmallInteger","d":"<p>Create the column definition for a small integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeFloat","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeFloat","d":"<p>Create the column definition for a float type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDouble","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDouble","d":"<p>Create the column definition for a double type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeReal","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeReal","d":"<p>Create the column definition for a real type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDecimal","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDecimal","d":"<p>Create the column definition for a decimal type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBoolean","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBoolean","d":"<p>Create the column definition for a boolean type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeEnum","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeEnum","d":"<p>Create the column definition for an enumeration type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeJson","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeJson","d":"<p>Create the column definition for a json type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeJsonb","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeJsonb","d":"<p>Create the column definition for a jsonb type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDate","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDate","d":"<p>Create the column definition for a date type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDateTime","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDateTime","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeDateTimeTz","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeDateTimeTz","d":"<p>Create the column definition for a date-time (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTime","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTime","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTimeTz","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTimeTz","d":"<p>Create the column definition for a time (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTimestamp","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTimestamp","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeTimestampTz","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeTimestampTz","d":"<p>Create the column definition for a timestamp (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeYear","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeYear","d":"<p>Create the column definition for a year type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeBinary","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeBinary","d":"<p>Create the column definition for a binary type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeUuid","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeUuid","d":"<p>Create the column definition for a uuid type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeIpAddress","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeIpAddress","d":"<p>Create the column definition for an IP address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMacAddress","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMacAddress","d":"<p>Create the column definition for a MAC address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeGeometry","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeGeometry","d":"<p>Create the column definition for a spatial Geometry type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typePoint","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typePoint","d":"<p>Create the column definition for a spatial Point type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeLineString","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeLineString","d":"<p>Create the column definition for a spatial LineString type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typePolygon","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typePolygon","d":"<p>Create the column definition for a spatial Polygon type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeGeometryCollection","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeGeometryCollection","d":"<p>Create the column definition for a spatial GeometryCollection type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMultiPoint","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMultiPoint","d":"<p>Create the column definition for a spatial MultiPoint type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMultiLineString","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMultiLineString","d":"<p>Create the column definition for a spatial MultiLineString type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMultiPolygon","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMultiPolygon","d":"<p>Create the column definition for a spatial MultiPolygon type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::typeMultiPolygonZ","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_typeMultiPolygonZ","d":"<p>Create the column definition for a spatial MultiPolygonZ type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyCollate","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyCollate","d":"<p>Get the SQL for a collation column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyNullable","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyNullable","d":"<p>Get the SQL for a nullable column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyDefault","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyDefault","d":"<p>Get the SQL for a default column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyIncrement","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyIncrement","d":"<p>Get the SQL for an auto-increment column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyVirtualAs","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyVirtualAs","d":"<p>Get the SQL for a generated virtual column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyStoredAs","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyStoredAs","d":"<p>Get the SQL for a generated stored column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\PostgresGrammar::modifyGeneratedAs","p":"Illuminate/Database/Schema/Grammars/PostgresGrammar.html#method_modifyGeneratedAs","d":"<p>Get the SQL for an identity column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\RenameColumn::compile","p":"Illuminate/Database/Schema/Grammars/RenameColumn.html#method_compile","d":"<p>Compile a rename column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\RenameColumn::getRenamedDiff","p":"Illuminate/Database/Schema/Grammars/RenameColumn.html#method_getRenamedDiff","d":"<p>Get a new column instance with the new column name.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\RenameColumn::setRenamedColumns","p":"Illuminate/Database/Schema/Grammars/RenameColumn.html#method_setRenamedColumns","d":"<p>Set the renamed columns on the table diff.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileTableExists","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileTableExists","d":"<p>Compile the query to determine if a table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileColumnListing","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileColumnListing","d":"<p>Compile the query to determine the list of columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileCreate","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileCreate","d":"<p>Compile a create table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::addForeignKeys","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_addForeignKeys","d":"<p>Get the foreign key syntax for a table creation statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::getForeignKey","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_getForeignKey","d":"<p>Get the SQL for the foreign key.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::addPrimaryKeys","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_addPrimaryKeys","d":"<p>Get the primary key syntax for a table creation statement.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileAdd","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileAdd","d":"<p>Compile alter table commands for adding columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileRenameColumn","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileRenameColumn","d":"<p>Compile a rename column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileUnique","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileUnique","d":"<p>Compile a unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileIndex","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileIndex","d":"<p>Compile a plain index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileSpatialIndex","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileSpatialIndex","d":"<p>Compile a spatial index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileForeign","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileForeign","d":"<p>Compile a foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDrop","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDrop","d":"<p>Compile a drop table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropIfExists","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropIfExists","d":"<p>Compile a drop table (if exists) command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropAllTables","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropAllTables","d":"<p>Compile the SQL needed to drop all tables.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropAllViews","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropAllViews","d":"<p>Compile the SQL needed to drop all views.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileGetAllTables","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileGetAllTables","d":"<p>Compile the SQL needed to retrieve all table names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileGetAllViews","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileGetAllViews","d":"<p>Compile the SQL needed to retrieve all view names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileRebuild","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileRebuild","d":"<p>Compile the SQL needed to rebuild the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropColumn","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropColumn","d":"<p>Compile a drop column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropUnique","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropUnique","d":"<p>Compile a drop unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropIndex","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropIndex","d":"<p>Compile a drop index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDropSpatialIndex","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDropSpatialIndex","d":"<p>Compile a drop spatial index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileRename","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileRename","d":"<p>Compile a rename table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileRenameIndex","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileRenameIndex","d":"<p>Compile a rename index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileEnableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileEnableForeignKeyConstraints","d":"<p>Compile the command to enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDisableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDisableForeignKeyConstraints","d":"<p>Compile the command to disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileEnableWriteableSchema","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileEnableWriteableSchema","d":"<p>Compile the SQL needed to enable a writable schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::compileDisableWriteableSchema","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_compileDisableWriteableSchema","d":"<p>Compile the SQL needed to disable a writable schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeChar","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeChar","d":"<p>Create the column definition for a char type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeString","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeString","d":"<p>Create the column definition for a string type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTinyText","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTinyText","d":"<p>Create the column definition for a tiny text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeText","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeText","d":"<p>Create the column definition for a text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMediumText","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMediumText","d":"<p>Create the column definition for a medium text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeLongText","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeLongText","d":"<p>Create the column definition for a long text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeInteger","d":"<p>Create the column definition for an integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBigInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBigInteger","d":"<p>Create the column definition for a big integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMediumInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMediumInteger","d":"<p>Create the column definition for a medium integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTinyInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTinyInteger","d":"<p>Create the column definition for a tiny integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeSmallInteger","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeSmallInteger","d":"<p>Create the column definition for a small integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeFloat","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeFloat","d":"<p>Create the column definition for a float type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDouble","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDouble","d":"<p>Create the column definition for a double type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDecimal","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDecimal","d":"<p>Create the column definition for a decimal type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBoolean","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBoolean","d":"<p>Create the column definition for a boolean type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeEnum","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeEnum","d":"<p>Create the column definition for an enumeration type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeJson","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeJson","d":"<p>Create the column definition for a json type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeJsonb","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeJsonb","d":"<p>Create the column definition for a jsonb type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDate","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDate","d":"<p>Create the column definition for a date type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDateTime","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDateTime","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeDateTimeTz","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeDateTimeTz","d":"<p>Create the column definition for a date-time (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTime","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTime","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTimeTz","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTimeTz","d":"<p>Create the column definition for a time (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTimestamp","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTimestamp","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeTimestampTz","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeTimestampTz","d":"<p>Create the column definition for a timestamp (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeYear","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeYear","d":"<p>Create the column definition for a year type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeBinary","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeBinary","d":"<p>Create the column definition for a binary type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeUuid","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeUuid","d":"<p>Create the column definition for a uuid type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeIpAddress","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeIpAddress","d":"<p>Create the column definition for an IP address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMacAddress","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMacAddress","d":"<p>Create the column definition for a MAC address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeGeometry","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeGeometry","d":"<p>Create the column definition for a spatial Geometry type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typePoint","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typePoint","d":"<p>Create the column definition for a spatial Point type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeLineString","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeLineString","d":"<p>Create the column definition for a spatial LineString type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typePolygon","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typePolygon","d":"<p>Create the column definition for a spatial Polygon type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeGeometryCollection","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeGeometryCollection","d":"<p>Create the column definition for a spatial GeometryCollection type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMultiPoint","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMultiPoint","d":"<p>Create the column definition for a spatial MultiPoint type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMultiLineString","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMultiLineString","d":"<p>Create the column definition for a spatial MultiLineString type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeMultiPolygon","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeMultiPolygon","d":"<p>Create the column definition for a spatial MultiPolygon type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::typeComputed","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_typeComputed","d":"<p>Create the column definition for a generated, computed column type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyVirtualAs","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyVirtualAs","d":"<p>Get the SQL for a generated virtual column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyStoredAs","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyStoredAs","d":"<p>Get the SQL for a generated stored column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyNullable","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyNullable","d":"<p>Get the SQL for a nullable column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyDefault","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyDefault","d":"<p>Get the SQL for a default column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::modifyIncrement","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_modifyIncrement","d":"<p>Get the SQL for an auto-increment column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SQLiteGrammar::wrapJsonSelector","p":"Illuminate/Database/Schema/Grammars/SQLiteGrammar.html#method_wrapJsonSelector","d":"<p>Wrap the given JSON selector.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileCreateDatabase","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileCreateDatabase","d":"<p>Compile a create database command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropDatabaseIfExists","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropDatabaseIfExists","d":"<p>Compile a drop database if exists command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileTableExists","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileTableExists","d":"<p>Compile the query to determine if a table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileColumnListing","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileColumnListing","d":"<p>Compile the query to determine the list of columns.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileCreate","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileCreate","d":"<p>Compile a create table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileAdd","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileAdd","d":"<p>Compile a column addition table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileRenameColumn","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileRenameColumn","d":"<p>Compile a rename column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileChange","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileChange","d":"<p>Compile a change column command into a series of SQL statements.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compilePrimary","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compilePrimary","d":"<p>Compile a primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileUnique","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileUnique","d":"<p>Compile a unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileIndex","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileIndex","d":"<p>Compile a plain index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileSpatialIndex","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileSpatialIndex","d":"<p>Compile a spatial index key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDefault","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDefault","d":"<p>Compile a default command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDrop","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDrop","d":"<p>Compile a drop table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropIfExists","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropIfExists","d":"<p>Compile a drop table (if exists) command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropAllTables","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropAllTables","d":"<p>Compile the SQL needed to drop all tables.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropColumn","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropColumn","d":"<p>Compile a drop column command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropDefaultConstraint","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropDefaultConstraint","d":"<p>Compile a drop default constraint command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropPrimary","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropPrimary","d":"<p>Compile a drop primary key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropUnique","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropUnique","d":"<p>Compile a drop unique key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropIndex","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropIndex","d":"<p>Compile a drop index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropSpatialIndex","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropSpatialIndex","d":"<p>Compile a drop spatial index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropForeign","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropForeign","d":"<p>Compile a drop foreign key command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileRename","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileRename","d":"<p>Compile a rename table command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileRenameIndex","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileRenameIndex","d":"<p>Compile a rename index command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileEnableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileEnableForeignKeyConstraints","d":"<p>Compile the command to enable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDisableForeignKeyConstraints","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDisableForeignKeyConstraints","d":"<p>Compile the command to disable foreign key constraints.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropAllForeignKeys","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropAllForeignKeys","d":"<p>Compile the command to drop all foreign keys.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileDropAllViews","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileDropAllViews","d":"<p>Compile the command to drop all views.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileGetAllTables","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileGetAllTables","d":"<p>Compile the SQL needed to retrieve all table names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::compileGetAllViews","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_compileGetAllViews","d":"<p>Compile the SQL needed to retrieve all view names.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeChar","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeChar","d":"<p>Create the column definition for a char type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeString","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeString","d":"<p>Create the column definition for a string type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTinyText","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTinyText","d":"<p>Create the column definition for a tiny text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeText","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeText","d":"<p>Create the column definition for a text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMediumText","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMediumText","d":"<p>Create the column definition for a medium text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeLongText","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeLongText","d":"<p>Create the column definition for a long text type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeInteger","d":"<p>Create the column definition for an integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBigInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBigInteger","d":"<p>Create the column definition for a big integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMediumInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMediumInteger","d":"<p>Create the column definition for a medium integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTinyInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTinyInteger","d":"<p>Create the column definition for a tiny integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeSmallInteger","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeSmallInteger","d":"<p>Create the column definition for a small integer type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeFloat","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeFloat","d":"<p>Create the column definition for a float type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDouble","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDouble","d":"<p>Create the column definition for a double type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDecimal","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDecimal","d":"<p>Create the column definition for a decimal type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBoolean","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBoolean","d":"<p>Create the column definition for a boolean type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeEnum","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeEnum","d":"<p>Create the column definition for an enumeration type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeJson","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeJson","d":"<p>Create the column definition for a json type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeJsonb","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeJsonb","d":"<p>Create the column definition for a jsonb type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDate","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDate","d":"<p>Create the column definition for a date type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDateTime","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDateTime","d":"<p>Create the column definition for a date-time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeDateTimeTz","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeDateTimeTz","d":"<p>Create the column definition for a date-time (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTime","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTime","d":"<p>Create the column definition for a time type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTimeTz","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTimeTz","d":"<p>Create the column definition for a time (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTimestamp","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTimestamp","d":"<p>Create the column definition for a timestamp type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeTimestampTz","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeTimestampTz","d":"<p>Create the column definition for a timestamp (with time zone) type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeYear","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeYear","d":"<p>Create the column definition for a year type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeBinary","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeBinary","d":"<p>Create the column definition for a binary type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeUuid","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeUuid","d":"<p>Create the column definition for a uuid type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeIpAddress","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeIpAddress","d":"<p>Create the column definition for an IP address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMacAddress","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMacAddress","d":"<p>Create the column definition for a MAC address type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeGeometry","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeGeometry","d":"<p>Create the column definition for a spatial Geometry type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typePoint","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typePoint","d":"<p>Create the column definition for a spatial Point type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeLineString","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeLineString","d":"<p>Create the column definition for a spatial LineString type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typePolygon","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typePolygon","d":"<p>Create the column definition for a spatial Polygon type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeGeometryCollection","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeGeometryCollection","d":"<p>Create the column definition for a spatial GeometryCollection type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMultiPoint","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMultiPoint","d":"<p>Create the column definition for a spatial MultiPoint type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMultiLineString","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMultiLineString","d":"<p>Create the column definition for a spatial MultiLineString type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeMultiPolygon","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeMultiPolygon","d":"<p>Create the column definition for a spatial MultiPolygon type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::typeComputed","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_typeComputed","d":"<p>Create the column definition for a generated, computed column type.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyCollate","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyCollate","d":"<p>Get the SQL for a collation column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyNullable","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyNullable","d":"<p>Get the SQL for a nullable column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyDefault","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyDefault","d":"<p>Get the SQL for a default column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyIncrement","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyIncrement","d":"<p>Get the SQL for an auto-increment column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::modifyPersisted","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_modifyPersisted","d":"<p>Get the SQL for a generated stored column modifier.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::wrapTable","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_wrapTable","d":"<p>Wrap a table in keyword identifiers.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\Grammars\\SqlServerGrammar::quoteString","p":"Illuminate/Database/Schema/Grammars/SqlServerGrammar.html#method_quoteString","d":"<p>Quote the given string literal.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\IndexDefinition::algorithm","p":"Illuminate/Database/Schema/IndexDefinition.html#method_algorithm","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\IndexDefinition::language","p":"Illuminate/Database/Schema/IndexDefinition.html#method_language","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\IndexDefinition::deferrable","p":"Illuminate/Database/Schema/IndexDefinition.html#method_deferrable","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\IndexDefinition::initiallyImmediate","p":"Illuminate/Database/Schema/IndexDefinition.html#method_initiallyImmediate","d":""},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::createDatabase","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_createDatabase","d":"<p>Create a database in the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::dropDatabaseIfExists","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_dropDatabaseIfExists","d":"<p>Drop a database from the schema if the database exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::hasTable","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_hasTable","d":"<p>Determine if the given table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::getColumnListing","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_getColumnListing","d":"<p>Get the column listing for a given table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::dropAllTables","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_dropAllTables","d":"<p>Drop all tables from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::dropAllViews","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_dropAllViews","d":"<p>Drop all views from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::getAllTables","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_getAllTables","d":"<p>Get all of the table names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlBuilder::getAllViews","p":"Illuminate/Database/Schema/MySqlBuilder.html#method_getAllViews","d":"<p>Get all of the view names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlSchemaState::dump","p":"Illuminate/Database/Schema/MySqlSchemaState.html#method_dump","d":"<p>Dump the database's schema into a file.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlSchemaState::removeAutoIncrementingState","p":"Illuminate/Database/Schema/MySqlSchemaState.html#method_removeAutoIncrementingState","d":"<p>Remove the auto-incrementing state from the given schema dump.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlSchemaState::appendMigrationData","p":"Illuminate/Database/Schema/MySqlSchemaState.html#method_appendMigrationData","d":"<p>Append the migration data to the schema dump.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlSchemaState::load","p":"Illuminate/Database/Schema/MySqlSchemaState.html#method_load","d":"<p>Load the given schema file into the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlSchemaState::baseDumpCommand","p":"Illuminate/Database/Schema/MySqlSchemaState.html#method_baseDumpCommand","d":"<p>Get the base dump command arguments for MySQL as a string.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlSchemaState::connectionString","p":"Illuminate/Database/Schema/MySqlSchemaState.html#method_connectionString","d":"<p>Generate a basic connection string (--socket, --host, --port, --user, --password) for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlSchemaState::baseVariables","p":"Illuminate/Database/Schema/MySqlSchemaState.html#method_baseVariables","d":"<p>Get the base variables for a dump / load command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\MySqlSchemaState::executeDumpProcess","p":"Illuminate/Database/Schema/MySqlSchemaState.html#method_executeDumpProcess","d":"<p>Execute the given dump process.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::createDatabase","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_createDatabase","d":"<p>Create a database in the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::dropDatabaseIfExists","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_dropDatabaseIfExists","d":"<p>Drop a database from the schema if the database exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::hasTable","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_hasTable","d":"<p>Determine if the given table exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::dropAllTables","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_dropAllTables","d":"<p>Drop all tables from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::dropAllViews","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_dropAllViews","d":"<p>Drop all views from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::dropAllTypes","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_dropAllTypes","d":"<p>Drop all types from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::getAllTables","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_getAllTables","d":"<p>Get all of the table names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::getAllViews","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_getAllViews","d":"<p>Get all of the view names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::getAllTypes","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_getAllTypes","d":"<p>Get all of the type names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::getColumnListing","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_getColumnListing","d":"<p>Get the column listing for a given table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::parseSchemaAndTable","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_parseSchemaAndTable","d":"<p>Parse the database object reference and extract the database, schema, and table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresBuilder::parseSearchPath","p":"Illuminate/Database/Schema/PostgresBuilder.html#method_parseSearchPath","d":"<p>Parse the &quot;search_path&quot; configuration value into an array.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresSchemaState::dump","p":"Illuminate/Database/Schema/PostgresSchemaState.html#method_dump","d":"<p>Dump the database's schema into a file.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresSchemaState::load","p":"Illuminate/Database/Schema/PostgresSchemaState.html#method_load","d":"<p>Load the given schema file into the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresSchemaState::baseDumpCommand","p":"Illuminate/Database/Schema/PostgresSchemaState.html#method_baseDumpCommand","d":"<p>Get the base dump command arguments for PostgreSQL as a string.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\PostgresSchemaState::baseVariables","p":"Illuminate/Database/Schema/PostgresSchemaState.html#method_baseVariables","d":"<p>Get the base variables for a dump / load command.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SQLiteBuilder::createDatabase","p":"Illuminate/Database/Schema/SQLiteBuilder.html#method_createDatabase","d":"<p>Create a database in the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SQLiteBuilder::dropDatabaseIfExists","p":"Illuminate/Database/Schema/SQLiteBuilder.html#method_dropDatabaseIfExists","d":"<p>Drop a database from the schema if the database exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SQLiteBuilder::dropAllTables","p":"Illuminate/Database/Schema/SQLiteBuilder.html#method_dropAllTables","d":"<p>Drop all tables from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SQLiteBuilder::dropAllViews","p":"Illuminate/Database/Schema/SQLiteBuilder.html#method_dropAllViews","d":"<p>Drop all views from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SQLiteBuilder::getAllTables","p":"Illuminate/Database/Schema/SQLiteBuilder.html#method_getAllTables","d":"<p>Get all of the table names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SQLiteBuilder::getAllViews","p":"Illuminate/Database/Schema/SQLiteBuilder.html#method_getAllViews","d":"<p>Get all of the view names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SQLiteBuilder::refreshDatabaseFile","p":"Illuminate/Database/Schema/SQLiteBuilder.html#method_refreshDatabaseFile","d":"<p>Empty the database file.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SchemaState::__construct","p":"Illuminate/Database/Schema/SchemaState.html#method___construct","d":"<p>Create a new dumper instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SchemaState::dump","p":"Illuminate/Database/Schema/SchemaState.html#method_dump","d":"<p>Dump the database's schema into a file.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SchemaState::load","p":"Illuminate/Database/Schema/SchemaState.html#method_load","d":"<p>Load the given schema file into the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SchemaState::makeProcess","p":"Illuminate/Database/Schema/SchemaState.html#method_makeProcess","d":"<p>Create a new process instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SchemaState::withMigrationTable","p":"Illuminate/Database/Schema/SchemaState.html#method_withMigrationTable","d":"<p>Specify the name of the application's migration table.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SchemaState::handleOutputUsing","p":"Illuminate/Database/Schema/SchemaState.html#method_handleOutputUsing","d":"<p>Specify the callback that should be used to handle process output.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqlServerBuilder::createDatabase","p":"Illuminate/Database/Schema/SqlServerBuilder.html#method_createDatabase","d":"<p>Create a database in the schema.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqlServerBuilder::dropDatabaseIfExists","p":"Illuminate/Database/Schema/SqlServerBuilder.html#method_dropDatabaseIfExists","d":"<p>Drop a database from the schema if the database exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqlServerBuilder::dropAllTables","p":"Illuminate/Database/Schema/SqlServerBuilder.html#method_dropAllTables","d":"<p>Drop all tables from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqlServerBuilder::dropAllViews","p":"Illuminate/Database/Schema/SqlServerBuilder.html#method_dropAllViews","d":"<p>Drop all views from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqlServerBuilder::getAllTables","p":"Illuminate/Database/Schema/SqlServerBuilder.html#method_getAllTables","d":"<p>Drop all tables from the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqlServerBuilder::getAllViews","p":"Illuminate/Database/Schema/SqlServerBuilder.html#method_getAllViews","d":"<p>Get all of the view names for the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqliteSchemaState::dump","p":"Illuminate/Database/Schema/SqliteSchemaState.html#method_dump","d":"<p>Dump the database's schema into a file.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqliteSchemaState::appendMigrationData","p":"Illuminate/Database/Schema/SqliteSchemaState.html#method_appendMigrationData","d":"<p>Append the migration data to the schema dump.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqliteSchemaState::load","p":"Illuminate/Database/Schema/SqliteSchemaState.html#method_load","d":"<p>Load the given schema file into the database.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqliteSchemaState::baseCommand","p":"Illuminate/Database/Schema/SqliteSchemaState.html#method_baseCommand","d":"<p>Get the base sqlite command arguments as a string.</p>"},{"t":"M","n":"Illuminate\\Database\\Schema\\SqliteSchemaState::baseVariables","p":"Illuminate/Database/Schema/SqliteSchemaState.html#method_baseVariables","d":"<p>Get the base variables for a dump / load command.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::call","p":"Illuminate/Database/Seeder.html#method_call","d":"<p>Run the given seeder class.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::callWith","p":"Illuminate/Database/Seeder.html#method_callWith","d":"<p>Run the given seeder class.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::callSilent","p":"Illuminate/Database/Seeder.html#method_callSilent","d":"<p>Silently run the given seeder class.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::callOnce","p":"Illuminate/Database/Seeder.html#method_callOnce","d":"<p>Run the given seeder class once.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::resolve","p":"Illuminate/Database/Seeder.html#method_resolve","d":"<p>Resolve an instance of the given seeder class.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::setContainer","p":"Illuminate/Database/Seeder.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::setCommand","p":"Illuminate/Database/Seeder.html#method_setCommand","d":"<p>Set the console command instance.</p>"},{"t":"M","n":"Illuminate\\Database\\Seeder::__invoke","p":"Illuminate/Database/Seeder.html#method___invoke","d":"<p>Run the database seeds.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::transaction","p":"Illuminate/Database/SqlServerConnection.html#method_transaction","d":"<p>Execute a Closure within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getDefaultQueryGrammar","p":"Illuminate/Database/SqlServerConnection.html#method_getDefaultQueryGrammar","d":"<p>Get the default query grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getSchemaBuilder","p":"Illuminate/Database/SqlServerConnection.html#method_getSchemaBuilder","d":"<p>Get a schema builder instance for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getDefaultSchemaGrammar","p":"Illuminate/Database/SqlServerConnection.html#method_getDefaultSchemaGrammar","d":"<p>Get the default schema grammar instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getSchemaState","p":"Illuminate/Database/SqlServerConnection.html#method_getSchemaState","d":"<p>Get the schema state for the connection.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getDefaultPostProcessor","p":"Illuminate/Database/SqlServerConnection.html#method_getDefaultPostProcessor","d":"<p>Get the default post processor instance.</p>"},{"t":"M","n":"Illuminate\\Database\\SqlServerConnection::getDoctrineDriver","p":"Illuminate/Database/SqlServerConnection.html#method_getDoctrineDriver","d":"<p>Get the Doctrine DBAL driver.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::__construct","p":"Illuminate/Encryption/Encrypter.html#method___construct","d":"<p>Create a new encrypter instance.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::supported","p":"Illuminate/Encryption/Encrypter.html#method_supported","d":"<p>Determine if the given key and cipher combination is valid.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::generateKey","p":"Illuminate/Encryption/Encrypter.html#method_generateKey","d":"<p>Create a new encryption key for the given cipher.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::encrypt","p":"Illuminate/Encryption/Encrypter.html#method_encrypt","d":"<p>Encrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::encryptString","p":"Illuminate/Encryption/Encrypter.html#method_encryptString","d":"<p>Encrypt a string without serialization.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::decrypt","p":"Illuminate/Encryption/Encrypter.html#method_decrypt","d":"<p>Decrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::decryptString","p":"Illuminate/Encryption/Encrypter.html#method_decryptString","d":"<p>Decrypt the given string without unserialization.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::hash","p":"Illuminate/Encryption/Encrypter.html#method_hash","d":"<p>Create a MAC for the given value.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::getJsonPayload","p":"Illuminate/Encryption/Encrypter.html#method_getJsonPayload","d":"<p>Get the JSON array from the given payload.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::validPayload","p":"Illuminate/Encryption/Encrypter.html#method_validPayload","d":"<p>Verify that the encryption payload is valid.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::validMac","p":"Illuminate/Encryption/Encrypter.html#method_validMac","d":"<p>Determine if the MAC for the given payload is valid.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::ensureTagIsValid","p":"Illuminate/Encryption/Encrypter.html#method_ensureTagIsValid","d":"<p>Ensure the given tag is a valid tag given the selected cipher.</p>"},{"t":"M","n":"Illuminate\\Encryption\\Encrypter::getKey","p":"Illuminate/Encryption/Encrypter.html#method_getKey","d":"<p>Get the encryption key that the encrypter is currently using.</p>"},{"t":"M","n":"Illuminate\\Encryption\\EncryptionServiceProvider::register","p":"Illuminate/Encryption/EncryptionServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Encryption\\EncryptionServiceProvider::registerEncrypter","p":"Illuminate/Encryption/EncryptionServiceProvider.html#method_registerEncrypter","d":"<p>Register the encrypter.</p>"},{"t":"M","n":"Illuminate\\Encryption\\EncryptionServiceProvider::registerSerializableClosureSecurityKey","p":"Illuminate/Encryption/EncryptionServiceProvider.html#method_registerSerializableClosureSecurityKey","d":"<p>Configure Serializable Closure signing for security.</p>"},{"t":"M","n":"Illuminate\\Encryption\\EncryptionServiceProvider::parseKey","p":"Illuminate/Encryption/EncryptionServiceProvider.html#method_parseKey","d":"<p>Parse the encryption key.</p>"},{"t":"M","n":"Illuminate\\Encryption\\EncryptionServiceProvider::key","p":"Illuminate/Encryption/EncryptionServiceProvider.html#method_key","d":"<p>Extract the encryption key from the given configuration.</p>"},{"t":"M","n":"Illuminate\\Encryption\\MissingAppKeyException::__construct","p":"Illuminate/Encryption/MissingAppKeyException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::__construct","p":"Illuminate/Events/CallQueuedListener.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::handle","p":"Illuminate/Events/CallQueuedListener.html#method_handle","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::setJobInstanceIfNecessary","p":"Illuminate/Events/CallQueuedListener.html#method_setJobInstanceIfNecessary","d":"<p>Set the job instance of the given class if necessary.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::failed","p":"Illuminate/Events/CallQueuedListener.html#method_failed","d":"<p>Call the failed method on the job instance.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::prepareData","p":"Illuminate/Events/CallQueuedListener.html#method_prepareData","d":"<p>Unserialize the data if needed.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::displayName","p":"Illuminate/Events/CallQueuedListener.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Events\\CallQueuedListener::__clone","p":"Illuminate/Events/CallQueuedListener.html#method___clone","d":"<p>Prepare the instance for cloning.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::__construct","p":"Illuminate/Events/Dispatcher.html#method___construct","d":"<p>Create a new event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::listen","p":"Illuminate/Events/Dispatcher.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::setupWildcardListen","p":"Illuminate/Events/Dispatcher.html#method_setupWildcardListen","d":"<p>Setup a wildcard listener callback.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::hasListeners","p":"Illuminate/Events/Dispatcher.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::hasWildcardListeners","p":"Illuminate/Events/Dispatcher.html#method_hasWildcardListeners","d":"<p>Determine if the given event has any wildcard listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::push","p":"Illuminate/Events/Dispatcher.html#method_push","d":"<p>Register an event and payload to be fired later.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::flush","p":"Illuminate/Events/Dispatcher.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::subscribe","p":"Illuminate/Events/Dispatcher.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::resolveSubscriber","p":"Illuminate/Events/Dispatcher.html#method_resolveSubscriber","d":"<p>Resolve the subscriber instance.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::until","p":"Illuminate/Events/Dispatcher.html#method_until","d":"<p>Fire an event until the first non-null response is returned.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::dispatch","p":"Illuminate/Events/Dispatcher.html#method_dispatch","d":"<p>Fire an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::parseEventAndPayload","p":"Illuminate/Events/Dispatcher.html#method_parseEventAndPayload","d":"<p>Parse the given event and payload and prepare them for dispatching.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::shouldBroadcast","p":"Illuminate/Events/Dispatcher.html#method_shouldBroadcast","d":"<p>Determine if the payload has a broadcastable event.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::broadcastWhen","p":"Illuminate/Events/Dispatcher.html#method_broadcastWhen","d":"<p>Check if the event should be broadcasted by the condition.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::broadcastEvent","p":"Illuminate/Events/Dispatcher.html#method_broadcastEvent","d":"<p>Broadcast the given event class.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::getListeners","p":"Illuminate/Events/Dispatcher.html#method_getListeners","d":"<p>Get all of the listeners for a given event name.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::getWildcardListeners","p":"Illuminate/Events/Dispatcher.html#method_getWildcardListeners","d":"<p>Get the wildcard listeners for the event.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::addInterfaceListeners","p":"Illuminate/Events/Dispatcher.html#method_addInterfaceListeners","d":"<p>Add the listeners for the event's interfaces to the given array.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::prepareListeners","p":"Illuminate/Events/Dispatcher.html#method_prepareListeners","d":"<p>Prepare the listeners for a given event.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::makeListener","p":"Illuminate/Events/Dispatcher.html#method_makeListener","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createClassListener","p":"Illuminate/Events/Dispatcher.html#method_createClassListener","d":"<p>Create a class based listener using the IoC container.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createClassCallable","p":"Illuminate/Events/Dispatcher.html#method_createClassCallable","d":"<p>Create the class based event callable.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::parseClassCallable","p":"Illuminate/Events/Dispatcher.html#method_parseClassCallable","d":"<p>Parse the class listener into class and method.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::handlerShouldBeQueued","p":"Illuminate/Events/Dispatcher.html#method_handlerShouldBeQueued","d":"<p>Determine if the event handler class should be queued.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createQueuedHandlerCallable","p":"Illuminate/Events/Dispatcher.html#method_createQueuedHandlerCallable","d":"<p>Create a callable for putting an event handler on the queue.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::handlerShouldBeDispatchedAfterDatabaseTransactions","p":"Illuminate/Events/Dispatcher.html#method_handlerShouldBeDispatchedAfterDatabaseTransactions","d":"<p>Determine if the given event handler should be dispatched after all database transactions have committed.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createCallbackForListenerRunningAfterCommits","p":"Illuminate/Events/Dispatcher.html#method_createCallbackForListenerRunningAfterCommits","d":"<p>Create a callable for dispatching a listener after database transactions.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::handlerWantsToBeQueued","p":"Illuminate/Events/Dispatcher.html#method_handlerWantsToBeQueued","d":"<p>Determine if the event handler wants to be queued.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::queueHandler","p":"Illuminate/Events/Dispatcher.html#method_queueHandler","d":"<p>Queue the handler class.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::createListenerAndJob","p":"Illuminate/Events/Dispatcher.html#method_createListenerAndJob","d":"<p>Create the listener and job for a queued listener.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::propagateListenerOptions","p":"Illuminate/Events/Dispatcher.html#method_propagateListenerOptions","d":"<p>Propagate listener options to the job.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::forget","p":"Illuminate/Events/Dispatcher.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::forgetPushed","p":"Illuminate/Events/Dispatcher.html#method_forgetPushed","d":"<p>Forget all of the pushed listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::resolveQueue","p":"Illuminate/Events/Dispatcher.html#method_resolveQueue","d":"<p>Get the queue implementation from the resolver.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::setQueueResolver","p":"Illuminate/Events/Dispatcher.html#method_setQueueResolver","d":"<p>Set the queue resolver implementation.</p>"},{"t":"M","n":"Illuminate\\Events\\Dispatcher::getRawListeners","p":"Illuminate/Events/Dispatcher.html#method_getRawListeners","d":"<p>Gets the raw, unprepared listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\EventServiceProvider::register","p":"Illuminate/Events/EventServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Events\\InvokeQueuedClosure::handle","p":"Illuminate/Events/InvokeQueuedClosure.html#method_handle","d":"<p>Handle the event.</p>"},{"t":"M","n":"Illuminate\\Events\\InvokeQueuedClosure::failed","p":"Illuminate/Events/InvokeQueuedClosure.html#method_failed","d":"<p>Handle a job failure.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::__construct","p":"Illuminate/Events/NullDispatcher.html#method___construct","d":"<p>Create a new event dispatcher instance that does not fire.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::dispatch","p":"Illuminate/Events/NullDispatcher.html#method_dispatch","d":"<p>Don't fire an event.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::push","p":"Illuminate/Events/NullDispatcher.html#method_push","d":"<p>Don't register an event and payload to be fired later.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::until","p":"Illuminate/Events/NullDispatcher.html#method_until","d":"<p>Don't dispatch an event.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::listen","p":"Illuminate/Events/NullDispatcher.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::hasListeners","p":"Illuminate/Events/NullDispatcher.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::subscribe","p":"Illuminate/Events/NullDispatcher.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::flush","p":"Illuminate/Events/NullDispatcher.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::forget","p":"Illuminate/Events/NullDispatcher.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::forgetPushed","p":"Illuminate/Events/NullDispatcher.html#method_forgetPushed","d":"<p>Forget all of the queued listeners.</p>"},{"t":"M","n":"Illuminate\\Events\\NullDispatcher::__call","p":"Illuminate/Events/NullDispatcher.html#method___call","d":"<p>Dynamically pass method calls to the underlying dispatcher.</p>"},{"t":"M","n":"Illuminate\\Events\\QueuedClosure::__construct","p":"Illuminate/Events/QueuedClosure.html#method___construct","d":"<p>Create a new queued closure event listener resolver.</p>"},{"t":"M","n":"Illuminate\\Events\\QueuedClosure::onConnection","p":"Illuminate/Events/QueuedClosure.html#method_onConnection","d":"<p>Set the desired connection for the job.</p>"},{"t":"M","n":"Illuminate\\Events\\QueuedClosure::onQueue","p":"Illuminate/Events/QueuedClosure.html#method_onQueue","d":"<p>Set the desired queue for the job.</p>"},{"t":"M","n":"Illuminate\\Events\\QueuedClosure::delay","p":"Illuminate/Events/QueuedClosure.html#method_delay","d":"<p>Set the desired delay in seconds for the job.</p>"},{"t":"M","n":"Illuminate\\Events\\QueuedClosure::catch","p":"Illuminate/Events/QueuedClosure.html#method_catch","d":"<p>Specify a callback that should be invoked if the queued listener job fails.</p>"},{"t":"M","n":"Illuminate\\Events\\QueuedClosure::resolve","p":"Illuminate/Events/QueuedClosure.html#method_resolve","d":"<p>Resolve the actual event listener callback.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\AwsS3V3Adapter::__construct","p":"Illuminate/Filesystem/AwsS3V3Adapter.html#method___construct","d":"<p>Create a new AwsS3V3FilesystemAdapter instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\AwsS3V3Adapter::url","p":"Illuminate/Filesystem/AwsS3V3Adapter.html#method_url","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\AwsS3V3Adapter::providesTemporaryUrls","p":"Illuminate/Filesystem/AwsS3V3Adapter.html#method_providesTemporaryUrls","d":"<p>Determine if temporary URLs can be generated.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\AwsS3V3Adapter::temporaryUrl","p":"Illuminate/Filesystem/AwsS3V3Adapter.html#method_temporaryUrl","d":"<p>Get a temporary URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\AwsS3V3Adapter::temporaryUploadUrl","p":"Illuminate/Filesystem/AwsS3V3Adapter.html#method_temporaryUploadUrl","d":"<p>Get a temporary upload URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\AwsS3V3Adapter::getClient","p":"Illuminate/Filesystem/AwsS3V3Adapter.html#method_getClient","d":"<p>Get the underlying S3 client.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::exists","p":"Illuminate/Filesystem/Filesystem.html#method_exists","d":"<p>Determine if a file or directory exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::missing","p":"Illuminate/Filesystem/Filesystem.html#method_missing","d":"<p>Determine if a file or directory is missing.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::get","p":"Illuminate/Filesystem/Filesystem.html#method_get","d":"<p>Get the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::sharedGet","p":"Illuminate/Filesystem/Filesystem.html#method_sharedGet","d":"<p>Get contents of a file with shared access.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::getRequire","p":"Illuminate/Filesystem/Filesystem.html#method_getRequire","d":"<p>Get the returned value of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::requireOnce","p":"Illuminate/Filesystem/Filesystem.html#method_requireOnce","d":"<p>Require the given file once.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::lines","p":"Illuminate/Filesystem/Filesystem.html#method_lines","d":"<p>Get the contents of a file one line at a time.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::hash","p":"Illuminate/Filesystem/Filesystem.html#method_hash","d":"<p>Get the hash of the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::put","p":"Illuminate/Filesystem/Filesystem.html#method_put","d":"<p>Write the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::replace","p":"Illuminate/Filesystem/Filesystem.html#method_replace","d":"<p>Write the contents of a file, replacing it atomically if it already exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::replaceInFile","p":"Illuminate/Filesystem/Filesystem.html#method_replaceInFile","d":"<p>Replace a given string within a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::prepend","p":"Illuminate/Filesystem/Filesystem.html#method_prepend","d":"<p>Prepend to a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::append","p":"Illuminate/Filesystem/Filesystem.html#method_append","d":"<p>Append to a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::chmod","p":"Illuminate/Filesystem/Filesystem.html#method_chmod","d":"<p>Get or set UNIX mode of a file or directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::delete","p":"Illuminate/Filesystem/Filesystem.html#method_delete","d":"<p>Delete the file at a given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::move","p":"Illuminate/Filesystem/Filesystem.html#method_move","d":"<p>Move a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::copy","p":"Illuminate/Filesystem/Filesystem.html#method_copy","d":"<p>Copy a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::link","p":"Illuminate/Filesystem/Filesystem.html#method_link","d":"<p>Create a symlink to the target file or directory. On Windows, a hard link is created if the target is a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::relativeLink","p":"Illuminate/Filesystem/Filesystem.html#method_relativeLink","d":"<p>Create a relative symlink to the target file or directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::name","p":"Illuminate/Filesystem/Filesystem.html#method_name","d":"<p>Extract the file name from a file path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::basename","p":"Illuminate/Filesystem/Filesystem.html#method_basename","d":"<p>Extract the trailing name component from a file path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::dirname","p":"Illuminate/Filesystem/Filesystem.html#method_dirname","d":"<p>Extract the parent directory from a file path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::extension","p":"Illuminate/Filesystem/Filesystem.html#method_extension","d":"<p>Extract the file extension from a file path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::guessExtension","p":"Illuminate/Filesystem/Filesystem.html#method_guessExtension","d":"<p>Guess the file extension from the mime-type of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::type","p":"Illuminate/Filesystem/Filesystem.html#method_type","d":"<p>Get the file type of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::mimeType","p":"Illuminate/Filesystem/Filesystem.html#method_mimeType","d":"<p>Get the mime-type of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::size","p":"Illuminate/Filesystem/Filesystem.html#method_size","d":"<p>Get the file size of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::lastModified","p":"Illuminate/Filesystem/Filesystem.html#method_lastModified","d":"<p>Get the file's last modification time.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_isDirectory","d":"<p>Determine if the given path is a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isEmptyDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_isEmptyDirectory","d":"<p>Determine if the given path is a directory that does not contain any other files or directories.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isReadable","p":"Illuminate/Filesystem/Filesystem.html#method_isReadable","d":"<p>Determine if the given path is readable.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isWritable","p":"Illuminate/Filesystem/Filesystem.html#method_isWritable","d":"<p>Determine if the given path is writable.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::hasSameHash","p":"Illuminate/Filesystem/Filesystem.html#method_hasSameHash","d":"<p>Determine if two files are the same by comparing their hashes.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::isFile","p":"Illuminate/Filesystem/Filesystem.html#method_isFile","d":"<p>Determine if the given path is a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::glob","p":"Illuminate/Filesystem/Filesystem.html#method_glob","d":"<p>Find path names matching a given pattern.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::files","p":"Illuminate/Filesystem/Filesystem.html#method_files","d":"<p>Get an array of all files in a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::allFiles","p":"Illuminate/Filesystem/Filesystem.html#method_allFiles","d":"<p>Get all of the files from the given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::directories","p":"Illuminate/Filesystem/Filesystem.html#method_directories","d":"<p>Get all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::ensureDirectoryExists","p":"Illuminate/Filesystem/Filesystem.html#method_ensureDirectoryExists","d":"<p>Ensure a directory exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::makeDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_makeDirectory","d":"<p>Create a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::moveDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_moveDirectory","d":"<p>Move a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::copyDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_copyDirectory","d":"<p>Copy a directory from one location to another.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::deleteDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_deleteDirectory","d":"<p>Recursively delete a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::deleteDirectories","p":"Illuminate/Filesystem/Filesystem.html#method_deleteDirectories","d":"<p>Remove all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\Filesystem::cleanDirectory","p":"Illuminate/Filesystem/Filesystem.html#method_cleanDirectory","d":"<p>Empty the specified directory of all files and folders.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::__construct","p":"Illuminate/Filesystem/FilesystemAdapter.html#method___construct","d":"<p>Create a new filesystem adapter instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::assertExists","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_assertExists","d":"<p>Assert that the given file or directory exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::assertMissing","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_assertMissing","d":"<p>Assert that the given file or directory does not exist.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::assertDirectoryEmpty","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_assertDirectoryEmpty","d":"<p>Assert that the given directory is empty.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::exists","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_exists","d":"<p>Determine if a file or directory exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::missing","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_missing","d":"<p>Determine if a file or directory is missing.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::fileExists","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_fileExists","d":"<p>Determine if a file exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::fileMissing","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_fileMissing","d":"<p>Determine if a file is missing.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::directoryExists","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_directoryExists","d":"<p>Determine if a directory exists.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::directoryMissing","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_directoryMissing","d":"<p>Determine if a directory is missing.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::path","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_path","d":"<p>Get the full path for the file at the given &quot;short&quot; path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::get","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_get","d":"<p>Get the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::response","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_response","d":"<p>Create a streamed response for a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::download","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_download","d":"<p>Create a streamed download response for a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::fallbackName","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_fallbackName","d":"<p>Convert the string to ASCII characters that are equivalent to the given name.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::put","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_put","d":"<p>Write the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::putFile","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_putFile","d":"<p>Store the uploaded file on the disk.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::putFileAs","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_putFileAs","d":"<p>Store the uploaded file on the disk with a given name.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getVisibility","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getVisibility","d":"<p>Get the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::setVisibility","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_setVisibility","d":"<p>Set the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::prepend","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_prepend","d":"<p>Prepend to a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::append","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_append","d":"<p>Append to a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::delete","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_delete","d":"<p>Delete the file at a given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::copy","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_copy","d":"<p>Copy a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::move","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_move","d":"<p>Move a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::size","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_size","d":"<p>Get the file size of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::checksum","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_checksum","d":"<p>Get the checksum for a file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::mimeType","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_mimeType","d":"<p>Get the mime-type of a given file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::lastModified","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_lastModified","d":"<p>Get the file's last modification time.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::readStream","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_readStream","d":"<p>Get a resource to read the file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::writeStream","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_writeStream","d":"<p>Write a new file using a stream.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::url","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_url","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getFtpUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getFtpUrl","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getLocalUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getLocalUrl","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::providesTemporaryUrls","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_providesTemporaryUrls","d":"<p>Determine if temporary URLs can be generated.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::temporaryUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_temporaryUrl","d":"<p>Get a temporary URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::temporaryUploadUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_temporaryUploadUrl","d":"<p>Get a temporary upload URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::concatPathToUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_concatPathToUrl","d":"<p>Concatenate a path to a URL.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::replaceBaseUrl","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_replaceBaseUrl","d":"<p>Replace the scheme, host and port of the given UriInterface with values from the given URL.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::files","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_files","d":"<p>Get an array of all files in a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::allFiles","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_allFiles","d":"<p>Get all of the files from the given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::directories","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_directories","d":"<p>Get all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::allDirectories","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_allDirectories","d":"<p>Get all the directories within a given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::makeDirectory","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_makeDirectory","d":"<p>Create a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::deleteDirectory","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_deleteDirectory","d":"<p>Recursively delete a directory.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getDriver","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getDriver","d":"<p>Get the Flysystem driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getAdapter","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getAdapter","d":"<p>Get the Flysystem adapter.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::getConfig","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_getConfig","d":"<p>Get the configuration values.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::parseVisibility","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_parseVisibility","d":"<p>Parse the given visibility value.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::buildTemporaryUrlsUsing","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_buildTemporaryUrlsUsing","d":"<p>Define a custom temporary URL builder callback.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::throwsExceptions","p":"Illuminate/Filesystem/FilesystemAdapter.html#method_throwsExceptions","d":"<p>Determine if Flysystem exceptions should be thrown.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemAdapter::__call","p":"Illuminate/Filesystem/FilesystemAdapter.html#method___call","d":"<p>Pass dynamic methods call onto Flysystem.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::__construct","p":"Illuminate/Filesystem/FilesystemManager.html#method___construct","d":"<p>Create a new filesystem manager instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::drive","p":"Illuminate/Filesystem/FilesystemManager.html#method_drive","d":"<p>Get a filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::disk","p":"Illuminate/Filesystem/FilesystemManager.html#method_disk","d":"<p>Get a filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::cloud","p":"Illuminate/Filesystem/FilesystemManager.html#method_cloud","d":"<p>Get a default cloud filesystem instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::build","p":"Illuminate/Filesystem/FilesystemManager.html#method_build","d":"<p>Build an on-demand disk.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::get","p":"Illuminate/Filesystem/FilesystemManager.html#method_get","d":"<p>Attempt to get the disk from the local cache.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::resolve","p":"Illuminate/Filesystem/FilesystemManager.html#method_resolve","d":"<p>Resolve the given disk.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::callCustomCreator","p":"Illuminate/Filesystem/FilesystemManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createLocalDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createLocalDriver","d":"<p>Create an instance of the local driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createFtpDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createFtpDriver","d":"<p>Create an instance of the ftp driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createSftpDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createSftpDriver","d":"<p>Create an instance of the sftp driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createS3Driver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createS3Driver","d":"<p>Create an instance of the Amazon S3 driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::formatS3Config","p":"Illuminate/Filesystem/FilesystemManager.html#method_formatS3Config","d":"<p>Format the given S3 configuration with the default options.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createScopedDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_createScopedDriver","d":"<p>Create a scoped driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::createFlysystem","p":"Illuminate/Filesystem/FilesystemManager.html#method_createFlysystem","d":"<p>Create a Flysystem instance with the given adapter.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::set","p":"Illuminate/Filesystem/FilesystemManager.html#method_set","d":"<p>Set the given disk instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::getConfig","p":"Illuminate/Filesystem/FilesystemManager.html#method_getConfig","d":"<p>Get the filesystem connection configuration.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::getDefaultDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_getDefaultDriver","d":"<p>Get the default driver name.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::getDefaultCloudDriver","p":"Illuminate/Filesystem/FilesystemManager.html#method_getDefaultCloudDriver","d":"<p>Get the default cloud driver name.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::forgetDisk","p":"Illuminate/Filesystem/FilesystemManager.html#method_forgetDisk","d":"<p>Unset the given disk instances.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::purge","p":"Illuminate/Filesystem/FilesystemManager.html#method_purge","d":"<p>Disconnect the given disk and remove from local cache.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::extend","p":"Illuminate/Filesystem/FilesystemManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::setApplication","p":"Illuminate/Filesystem/FilesystemManager.html#method_setApplication","d":"<p>Set the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemManager::__call","p":"Illuminate/Filesystem/FilesystemManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::register","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::registerNativeFilesystem","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_registerNativeFilesystem","d":"<p>Register the native filesystem implementation.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::registerFlysystem","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_registerFlysystem","d":"<p>Register the driver based filesystem.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::registerManager","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_registerManager","d":"<p>Register the filesystem manager.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::getDefaultDriver","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_getDefaultDriver","d":"<p>Get the default file driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\FilesystemServiceProvider::getCloudDriver","p":"Illuminate/Filesystem/FilesystemServiceProvider.html#method_getCloudDriver","d":"<p>Get the default cloud based file driver.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::__construct","p":"Illuminate/Filesystem/LockableFile.html#method___construct","d":"<p>Create a new File instance.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::ensureDirectoryExists","p":"Illuminate/Filesystem/LockableFile.html#method_ensureDirectoryExists","d":"<p>Create the file's directory if necessary.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::createResource","p":"Illuminate/Filesystem/LockableFile.html#method_createResource","d":"<p>Create the file resource.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::read","p":"Illuminate/Filesystem/LockableFile.html#method_read","d":"<p>Read the file contents.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::size","p":"Illuminate/Filesystem/LockableFile.html#method_size","d":"<p>Get the file size.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::write","p":"Illuminate/Filesystem/LockableFile.html#method_write","d":"<p>Write to the file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::truncate","p":"Illuminate/Filesystem/LockableFile.html#method_truncate","d":"<p>Truncate the file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::getSharedLock","p":"Illuminate/Filesystem/LockableFile.html#method_getSharedLock","d":"<p>Get a shared lock on the file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::getExclusiveLock","p":"Illuminate/Filesystem/LockableFile.html#method_getExclusiveLock","d":"<p>Get an exclusive lock on the file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::releaseLock","p":"Illuminate/Filesystem/LockableFile.html#method_releaseLock","d":"<p>Release the lock on the file.</p>"},{"t":"M","n":"Illuminate\\Filesystem\\LockableFile::close","p":"Illuminate/Filesystem/LockableFile.html#method_close","d":"<p>Close the file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::getInstance","p":"Illuminate/Foundation/AliasLoader.html#method_getInstance","d":"<p>Get or create the singleton alias loader instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::load","p":"Illuminate/Foundation/AliasLoader.html#method_load","d":"<p>Load a class alias if it is registered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::loadFacade","p":"Illuminate/Foundation/AliasLoader.html#method_loadFacade","d":"<p>Load a real-time facade for the given alias.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::ensureFacadeExists","p":"Illuminate/Foundation/AliasLoader.html#method_ensureFacadeExists","d":"<p>Ensure that the given alias has an existing real-time facade class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::formatFacadeStub","p":"Illuminate/Foundation/AliasLoader.html#method_formatFacadeStub","d":"<p>Format the facade stub with the proper namespace and class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::alias","p":"Illuminate/Foundation/AliasLoader.html#method_alias","d":"<p>Add an alias to the loader.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::register","p":"Illuminate/Foundation/AliasLoader.html#method_register","d":"<p>Register the loader on the auto-loader stack.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::prependToLoaderStack","p":"Illuminate/Foundation/AliasLoader.html#method_prependToLoaderStack","d":"<p>Prepend the load method to the auto-loader stack.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::getAliases","p":"Illuminate/Foundation/AliasLoader.html#method_getAliases","d":"<p>Get the registered aliases.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::setAliases","p":"Illuminate/Foundation/AliasLoader.html#method_setAliases","d":"<p>Set the registered aliases.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::isRegistered","p":"Illuminate/Foundation/AliasLoader.html#method_isRegistered","d":"<p>Indicates if the loader has been registered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::setRegistered","p":"Illuminate/Foundation/AliasLoader.html#method_setRegistered","d":"<p>Set the &quot;registered&quot; state of the loader.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::setFacadeNamespace","p":"Illuminate/Foundation/AliasLoader.html#method_setFacadeNamespace","d":"<p>Set the real-time facade namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\AliasLoader::setInstance","p":"Illuminate/Foundation/AliasLoader.html#method_setInstance","d":"<p>Set the value of the singleton alias loader.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::__construct","p":"Illuminate/Foundation/Application.html#method___construct","d":"<p>Create a new Illuminate application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::version","p":"Illuminate/Foundation/Application.html#method_version","d":"<p>Get the version number of the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerBaseBindings","p":"Illuminate/Foundation/Application.html#method_registerBaseBindings","d":"<p>Register the basic bindings into the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerBaseServiceProviders","p":"Illuminate/Foundation/Application.html#method_registerBaseServiceProviders","d":"<p>Register all of the base service providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bootstrapWith","p":"Illuminate/Foundation/Application.html#method_bootstrapWith","d":"<p>Run the given array of bootstrap classes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::afterLoadingEnvironment","p":"Illuminate/Foundation/Application.html#method_afterLoadingEnvironment","d":"<p>Register a callback to run after loading the environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::beforeBootstrapping","p":"Illuminate/Foundation/Application.html#method_beforeBootstrapping","d":"<p>Register a callback to run before a bootstrapper.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::afterBootstrapping","p":"Illuminate/Foundation/Application.html#method_afterBootstrapping","d":"<p>Register a callback to run after a bootstrapper.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::hasBeenBootstrapped","p":"Illuminate/Foundation/Application.html#method_hasBeenBootstrapped","d":"<p>Determine if the application has been bootstrapped before.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::setBasePath","p":"Illuminate/Foundation/Application.html#method_setBasePath","d":"<p>Set the base path for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bindPathsInContainer","p":"Illuminate/Foundation/Application.html#method_bindPathsInContainer","d":"<p>Bind all of the application paths in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::path","p":"Illuminate/Foundation/Application.html#method_path","d":"<p>Get the path to the application &quot;app&quot; directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useAppPath","p":"Illuminate/Foundation/Application.html#method_useAppPath","d":"<p>Set the application directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::basePath","p":"Illuminate/Foundation/Application.html#method_basePath","d":"<p>Get the base path of the Laravel installation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bootstrapPath","p":"Illuminate/Foundation/Application.html#method_bootstrapPath","d":"<p>Get the path to the bootstrap directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useBootstrapPath","p":"Illuminate/Foundation/Application.html#method_useBootstrapPath","d":"<p>Set the bootstrap file directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::configPath","p":"Illuminate/Foundation/Application.html#method_configPath","d":"<p>Get the path to the application configuration files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useConfigPath","p":"Illuminate/Foundation/Application.html#method_useConfigPath","d":"<p>Set the configuration directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::databasePath","p":"Illuminate/Foundation/Application.html#method_databasePath","d":"<p>Get the path to the database directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useDatabasePath","p":"Illuminate/Foundation/Application.html#method_useDatabasePath","d":"<p>Set the database directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::langPath","p":"Illuminate/Foundation/Application.html#method_langPath","d":"<p>Get the path to the language files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useLangPath","p":"Illuminate/Foundation/Application.html#method_useLangPath","d":"<p>Set the language file directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::publicPath","p":"Illuminate/Foundation/Application.html#method_publicPath","d":"<p>Get the path to the public / web directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::usePublicPath","p":"Illuminate/Foundation/Application.html#method_usePublicPath","d":"<p>Set the public / web directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::storagePath","p":"Illuminate/Foundation/Application.html#method_storagePath","d":"<p>Get the path to the storage directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useStoragePath","p":"Illuminate/Foundation/Application.html#method_useStoragePath","d":"<p>Set the storage directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::resourcePath","p":"Illuminate/Foundation/Application.html#method_resourcePath","d":"<p>Get the path to the resources directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::viewPath","p":"Illuminate/Foundation/Application.html#method_viewPath","d":"<p>Get the path to the views directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::joinPaths","p":"Illuminate/Foundation/Application.html#method_joinPaths","d":"<p>Join the given paths together.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::environmentPath","p":"Illuminate/Foundation/Application.html#method_environmentPath","d":"<p>Get the path to the environment file directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::useEnvironmentPath","p":"Illuminate/Foundation/Application.html#method_useEnvironmentPath","d":"<p>Set the directory for the environment file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::loadEnvironmentFrom","p":"Illuminate/Foundation/Application.html#method_loadEnvironmentFrom","d":"<p>Set the environment file to be loaded during bootstrapping.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::environmentFile","p":"Illuminate/Foundation/Application.html#method_environmentFile","d":"<p>Get the environment file the application is using.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::environmentFilePath","p":"Illuminate/Foundation/Application.html#method_environmentFilePath","d":"<p>Get the fully qualified path to the environment file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::environment","p":"Illuminate/Foundation/Application.html#method_environment","d":"<p>Get or check the current application environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isLocal","p":"Illuminate/Foundation/Application.html#method_isLocal","d":"<p>Determine if the application is in the local environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isProduction","p":"Illuminate/Foundation/Application.html#method_isProduction","d":"<p>Determine if the application is in the production environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::detectEnvironment","p":"Illuminate/Foundation/Application.html#method_detectEnvironment","d":"<p>Detect the application's current environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::runningInConsole","p":"Illuminate/Foundation/Application.html#method_runningInConsole","d":"<p>Determine if the application is running in the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::runningUnitTests","p":"Illuminate/Foundation/Application.html#method_runningUnitTests","d":"<p>Determine if the application is running unit tests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::hasDebugModeEnabled","p":"Illuminate/Foundation/Application.html#method_hasDebugModeEnabled","d":"<p>Determine if the application is running with debug mode enabled.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerConfiguredProviders","p":"Illuminate/Foundation/Application.html#method_registerConfiguredProviders","d":"<p>Register all of the configured providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::register","p":"Illuminate/Foundation/Application.html#method_register","d":"<p>Register a service provider with the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getProvider","p":"Illuminate/Foundation/Application.html#method_getProvider","d":"<p>Get the registered service provider instance if it exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getProviders","p":"Illuminate/Foundation/Application.html#method_getProviders","d":"<p>Get the registered service provider instances if any exist.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::resolveProvider","p":"Illuminate/Foundation/Application.html#method_resolveProvider","d":"<p>Resolve a service provider instance from the class name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::markAsRegistered","p":"Illuminate/Foundation/Application.html#method_markAsRegistered","d":"<p>Mark the given provider as registered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::loadDeferredProviders","p":"Illuminate/Foundation/Application.html#method_loadDeferredProviders","d":"<p>Load and boot all of the remaining deferred providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::loadDeferredProvider","p":"Illuminate/Foundation/Application.html#method_loadDeferredProvider","d":"<p>Load the provider for a deferred service.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerDeferredProvider","p":"Illuminate/Foundation/Application.html#method_registerDeferredProvider","d":"<p>Register a deferred provider and service.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::make","p":"Illuminate/Foundation/Application.html#method_make","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::resolve","p":"Illuminate/Foundation/Application.html#method_resolve","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::loadDeferredProviderIfNeeded","p":"Illuminate/Foundation/Application.html#method_loadDeferredProviderIfNeeded","d":"<p>Load the deferred provider if the given type is a deferred service and the instance has not been loaded.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bound","p":"Illuminate/Foundation/Application.html#method_bound","d":"<p>Determine if the given abstract type has been bound.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isBooted","p":"Illuminate/Foundation/Application.html#method_isBooted","d":"<p>Determine if the application has booted.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::boot","p":"Illuminate/Foundation/Application.html#method_boot","d":"<p>Boot the application's service providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::bootProvider","p":"Illuminate/Foundation/Application.html#method_bootProvider","d":"<p>Boot the given service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::booting","p":"Illuminate/Foundation/Application.html#method_booting","d":"<p>Register a new boot listener.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::booted","p":"Illuminate/Foundation/Application.html#method_booted","d":"<p>Register a new &quot;booted&quot; listener.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::fireAppCallbacks","p":"Illuminate/Foundation/Application.html#method_fireAppCallbacks","d":"<p>Call the booting callbacks for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::handle","p":"Illuminate/Foundation/Application.html#method_handle","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Foundation\\Application::shouldSkipMiddleware","p":"Illuminate/Foundation/Application.html#method_shouldSkipMiddleware","d":"<p>Determine if middleware has been disabled for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getCachedServicesPath","p":"Illuminate/Foundation/Application.html#method_getCachedServicesPath","d":"<p>Get the path to the cached services.php file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getCachedPackagesPath","p":"Illuminate/Foundation/Application.html#method_getCachedPackagesPath","d":"<p>Get the path to the cached packages.php file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::configurationIsCached","p":"Illuminate/Foundation/Application.html#method_configurationIsCached","d":"<p>Determine if the application configuration is cached.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getCachedConfigPath","p":"Illuminate/Foundation/Application.html#method_getCachedConfigPath","d":"<p>Get the path to the configuration cache file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::routesAreCached","p":"Illuminate/Foundation/Application.html#method_routesAreCached","d":"<p>Determine if the application routes are cached.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getCachedRoutesPath","p":"Illuminate/Foundation/Application.html#method_getCachedRoutesPath","d":"<p>Get the path to the routes cache file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::eventsAreCached","p":"Illuminate/Foundation/Application.html#method_eventsAreCached","d":"<p>Determine if the application events are cached.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getCachedEventsPath","p":"Illuminate/Foundation/Application.html#method_getCachedEventsPath","d":"<p>Get the path to the events cache file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::normalizeCachePath","p":"Illuminate/Foundation/Application.html#method_normalizeCachePath","d":"<p>Normalize a relative or absolute path to a cache file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::addAbsoluteCachePathPrefix","p":"Illuminate/Foundation/Application.html#method_addAbsoluteCachePathPrefix","d":"<p>Add new prefix to list of absolute path prefixes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::maintenanceMode","p":"Illuminate/Foundation/Application.html#method_maintenanceMode","d":"<p>Get an instance of the maintenance mode manager implementation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isDownForMaintenance","p":"Illuminate/Foundation/Application.html#method_isDownForMaintenance","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::abort","p":"Illuminate/Foundation/Application.html#method_abort","d":"<p>Throw an HttpException with the given data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::terminating","p":"Illuminate/Foundation/Application.html#method_terminating","d":"<p>Register a terminating callback with the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::terminate","p":"Illuminate/Foundation/Application.html#method_terminate","d":"<p>Terminate the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getLoadedProviders","p":"Illuminate/Foundation/Application.html#method_getLoadedProviders","d":"<p>Get the service providers that have been loaded.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::providerIsLoaded","p":"Illuminate/Foundation/Application.html#method_providerIsLoaded","d":"<p>Determine if the given service provider is loaded.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getDeferredServices","p":"Illuminate/Foundation/Application.html#method_getDeferredServices","d":"<p>Get the application's deferred services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::setDeferredServices","p":"Illuminate/Foundation/Application.html#method_setDeferredServices","d":"<p>Set the application's deferred services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::addDeferredServices","p":"Illuminate/Foundation/Application.html#method_addDeferredServices","d":"<p>Add an array of services to the application's deferred services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isDeferredService","p":"Illuminate/Foundation/Application.html#method_isDeferredService","d":"<p>Determine if the given service is a deferred service.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::provideFacades","p":"Illuminate/Foundation/Application.html#method_provideFacades","d":"<p>Configure the real-time facade namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getLocale","p":"Illuminate/Foundation/Application.html#method_getLocale","d":"<p>Get the current application locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::currentLocale","p":"Illuminate/Foundation/Application.html#method_currentLocale","d":"<p>Get the current application locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getFallbackLocale","p":"Illuminate/Foundation/Application.html#method_getFallbackLocale","d":"<p>Get the current application fallback locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::setLocale","p":"Illuminate/Foundation/Application.html#method_setLocale","d":"<p>Set the current application locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::setFallbackLocale","p":"Illuminate/Foundation/Application.html#method_setFallbackLocale","d":"<p>Set the current application fallback locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::isLocale","p":"Illuminate/Foundation/Application.html#method_isLocale","d":"<p>Determine if the application locale is the given locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::registerCoreContainerAliases","p":"Illuminate/Foundation/Application.html#method_registerCoreContainerAliases","d":"<p>Register the core class aliases in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::flush","p":"Illuminate/Foundation/Application.html#method_flush","d":"<p>Flush the container of all bindings and resolved instances.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Application::getNamespace","p":"Illuminate/Foundation/Application.html#method_getNamespace","d":"<p>Get the application namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable::can","p":"Illuminate/Foundation/Auth/Access/Authorizable.html#method_can","d":"<p>Determine if the entity has the given abilities.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable::canAny","p":"Illuminate/Foundation/Auth/Access/Authorizable.html#method_canAny","d":"<p>Determine if the entity has any of the given abilities.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable::cant","p":"Illuminate/Foundation/Auth/Access/Authorizable.html#method_cant","d":"<p>Determine if the entity does not have the given abilities.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\Authorizable::cannot","p":"Illuminate/Foundation/Auth/Access/Authorizable.html#method_cannot","d":"<p>Determine if the entity does not have the given abilities.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::authorize","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_authorize","d":"<p>Authorize a given action for the current user.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::authorizeForUser","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_authorizeForUser","d":"<p>Authorize a given action for a user.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::parseAbilityAndArguments","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_parseAbilityAndArguments","d":"<p>Guesses the ability's name if it wasn't provided.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::normalizeGuessedAbilityName","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_normalizeGuessedAbilityName","d":"<p>Normalize the ability name that has been guessed from the method name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::authorizeResource","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_authorizeResource","d":"<p>Authorize a resource action based on the incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::resourceAbilityMap","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_resourceAbilityMap","d":"<p>Get the map of resource methods to ability names.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests::resourceMethodsWithoutModels","p":"Illuminate/Foundation/Auth/Access/AuthorizesRequests.html#method_resourceMethodsWithoutModels","d":"<p>Get the list of resource methods which do not have model parameters.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\EmailVerificationRequest::authorize","p":"Illuminate/Foundation/Auth/EmailVerificationRequest.html#method_authorize","d":"<p>Determine if the user is authorized to make this request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\EmailVerificationRequest::rules","p":"Illuminate/Foundation/Auth/EmailVerificationRequest.html#method_rules","d":"<p>Get the validation rules that apply to the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\EmailVerificationRequest::fulfill","p":"Illuminate/Foundation/Auth/EmailVerificationRequest.html#method_fulfill","d":"<p>Fulfill the email verification request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Auth\\EmailVerificationRequest::withValidator","p":"Illuminate/Foundation/Auth/EmailVerificationRequest.html#method_withValidator","d":"<p>Configure the validator instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\BootProviders::bootstrap","p":"Illuminate/Foundation/Bootstrap/BootProviders.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::bootstrap","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::handleError","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_handleError","d":"<p>Report PHP deprecations, or convert PHP errors to ErrorException instances.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::handleDeprecationError","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_handleDeprecationError","d":"<p>Reports a deprecation to the &quot;deprecations&quot; logger.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::shouldIgnoreDeprecationErrors","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_shouldIgnoreDeprecationErrors","d":"<p>Determine if deprecation errors should be ignored.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::ensureDeprecationLoggerIsConfigured","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_ensureDeprecationLoggerIsConfigured","d":"<p>Ensure the &quot;deprecations&quot; logger is configured.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::ensureNullLogDriverIsConfigured","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_ensureNullLogDriverIsConfigured","d":"<p>Ensure the &quot;null&quot; log driver is configured.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::handleException","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_handleException","d":"<p>Handle an uncaught exception from the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::renderForConsole","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::renderHttpResponse","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_renderHttpResponse","d":"<p>Render an exception as an HTTP response and send it.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::handleShutdown","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_handleShutdown","d":"<p>Handle the PHP shutdown event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::fatalErrorFromPhpError","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_fatalErrorFromPhpError","d":"<p>Create a new fatal error instance from an error array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::forwardsTo","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_forwardsTo","d":"<p>Forward a method call to the given method if an application instance exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::isDeprecation","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_isDeprecation","d":"<p>Determine if the error level is a deprecation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::isFatal","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_isFatal","d":"<p>Determine if the error type is fatal.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::getExceptionHandler","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_getExceptionHandler","d":"<p>Get an instance of the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\HandleExceptions::forgetApp","p":"Illuminate/Foundation/Bootstrap/HandleExceptions.html#method_forgetApp","d":"<p>Clear the local application instance from memory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration::bootstrap","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration::loadConfigurationFiles","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html#method_loadConfigurationFiles","d":"<p>Load the configuration items from all of the files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration::getConfigurationFiles","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html#method_getConfigurationFiles","d":"<p>Get all of the configuration files for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadConfiguration::getNestedDirectory","p":"Illuminate/Foundation/Bootstrap/LoadConfiguration.html#method_getNestedDirectory","d":"<p>Get the configuration file nesting path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables::bootstrap","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables::checkForSpecificEnvironmentFile","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html#method_checkForSpecificEnvironmentFile","d":"<p>Detect if a custom environment file matching the APP_ENV exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables::setEnvironmentFilePath","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html#method_setEnvironmentFilePath","d":"<p>Load a custom environment file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables::createDotenv","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html#method_createDotenv","d":"<p>Create a Dotenv instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\LoadEnvironmentVariables::writeErrorAndDie","p":"Illuminate/Foundation/Bootstrap/LoadEnvironmentVariables.html#method_writeErrorAndDie","d":"<p>Write the error information to the screen and exit.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\RegisterFacades::bootstrap","p":"Illuminate/Foundation/Bootstrap/RegisterFacades.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\RegisterProviders::bootstrap","p":"Illuminate/Foundation/Bootstrap/RegisterProviders.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bootstrap\\SetRequestForConsole::bootstrap","p":"Illuminate/Foundation/Bootstrap/SetRequestForConsole.html#method_bootstrap","d":"<p>Bootstrap the given application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\Dispatchable::dispatch","p":"Illuminate/Foundation/Bus/Dispatchable.html#method_dispatch","d":"<p>Dispatch the job with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\Dispatchable::dispatchIf","p":"Illuminate/Foundation/Bus/Dispatchable.html#method_dispatchIf","d":"<p>Dispatch the job with the given arguments if the given truth test passes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\Dispatchable::dispatchUnless","p":"Illuminate/Foundation/Bus/Dispatchable.html#method_dispatchUnless","d":"<p>Dispatch the job with the given arguments unless the given truth test passes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\Dispatchable::dispatchSync","p":"Illuminate/Foundation/Bus/Dispatchable.html#method_dispatchSync","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\Dispatchable::dispatchAfterResponse","p":"Illuminate/Foundation/Bus/Dispatchable.html#method_dispatchAfterResponse","d":"<p>Dispatch a command to its appropriate handler after the current process.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\Dispatchable::withChain","p":"Illuminate/Foundation/Bus/Dispatchable.html#method_withChain","d":"<p>Set the jobs that should run if this job is successful.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\DispatchesJobs::dispatch","p":"Illuminate/Foundation/Bus/DispatchesJobs.html#method_dispatch","d":"<p>Dispatch a job to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\DispatchesJobs::dispatchSync","p":"Illuminate/Foundation/Bus/DispatchesJobs.html#method_dispatchSync","d":"<p>Dispatch a job to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingChain::__construct","p":"Illuminate/Foundation/Bus/PendingChain.html#method___construct","d":"<p>Create a new PendingChain instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingChain::onConnection","p":"Illuminate/Foundation/Bus/PendingChain.html#method_onConnection","d":"<p>Set the desired connection for the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingChain::onQueue","p":"Illuminate/Foundation/Bus/PendingChain.html#method_onQueue","d":"<p>Set the desired queue for the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingChain::delay","p":"Illuminate/Foundation/Bus/PendingChain.html#method_delay","d":"<p>Set the desired delay in seconds for the chain.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingChain::catch","p":"Illuminate/Foundation/Bus/PendingChain.html#method_catch","d":"<p>Add a callback to be executed on job failure.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingChain::catchCallbacks","p":"Illuminate/Foundation/Bus/PendingChain.html#method_catchCallbacks","d":"<p>Get the &quot;catch&quot; callbacks that have been registered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingChain::dispatch","p":"Illuminate/Foundation/Bus/PendingChain.html#method_dispatch","d":"<p>Dispatch the job with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingClosureDispatch::catch","p":"Illuminate/Foundation/Bus/PendingClosureDispatch.html#method_catch","d":"<p>Add a callback to be executed if the job fails.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::__construct","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method___construct","d":"<p>Create a new pending job dispatch.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::onConnection","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_onConnection","d":"<p>Set the desired connection for the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::onQueue","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_onQueue","d":"<p>Set the desired queue for the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::allOnConnection","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_allOnConnection","d":"<p>Set the desired connection for the chain.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::allOnQueue","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_allOnQueue","d":"<p>Set the desired queue for the chain.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::delay","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_delay","d":"<p>Set the desired delay in seconds for the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::afterCommit","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_afterCommit","d":"<p>Indicate that the job should be dispatched after all database transactions have committed.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::beforeCommit","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_beforeCommit","d":"<p>Indicate that the job should not wait until database transactions have been committed before dispatching.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::chain","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_chain","d":"<p>Set the jobs that should run if this job is successful.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::afterResponse","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_afterResponse","d":"<p>Indicate that the job should be dispatched after the response is sent to the browser.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::shouldDispatch","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method_shouldDispatch","d":"<p>Determine if the job should be dispatched.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::__call","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method___call","d":"<p>Dynamically proxy methods to the underlying job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Bus\\PendingDispatch::__destruct","p":"Illuminate/Foundation/Bus/PendingDispatch.html#method___destruct","d":"<p>Handle the object's destruction.</p>"},{"t":"M","n":"Illuminate\\Foundation\\CacheBasedMaintenanceMode::__construct","p":"Illuminate/Foundation/CacheBasedMaintenanceMode.html#method___construct","d":"<p>Create a new cache based maintenance mode implementation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\CacheBasedMaintenanceMode::activate","p":"Illuminate/Foundation/CacheBasedMaintenanceMode.html#method_activate","d":"<p>Take the application down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\CacheBasedMaintenanceMode::deactivate","p":"Illuminate/Foundation/CacheBasedMaintenanceMode.html#method_deactivate","d":"<p>Take the application out of maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\CacheBasedMaintenanceMode::active","p":"Illuminate/Foundation/CacheBasedMaintenanceMode.html#method_active","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\CacheBasedMaintenanceMode::data","p":"Illuminate/Foundation/CacheBasedMaintenanceMode.html#method_data","d":"<p>Get the data array which was provided when the application was placed into maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\CacheBasedMaintenanceMode::getStore","p":"Illuminate/Foundation/CacheBasedMaintenanceMode.html#method_getStore","d":"<p>Get the cache store to use.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ComposerScripts::postInstall","p":"Illuminate/Foundation/ComposerScripts.html#method_postInstall","d":"<p>Handle the post-install Composer event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ComposerScripts::postUpdate","p":"Illuminate/Foundation/ComposerScripts.html#method_postUpdate","d":"<p>Handle the post-update Composer event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ComposerScripts::postAutoloadDump","p":"Illuminate/Foundation/ComposerScripts.html#method_postAutoloadDump","d":"<p>Handle the post-autoload-dump Composer event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ComposerScripts::clearCompiled","p":"Illuminate/Foundation/ComposerScripts.html#method_clearCompiled","d":"<p>Clear the cached Laravel bootstrapping files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Concerns\\ResolvesDumpSource::resolveDumpSource","p":"Illuminate/Foundation/Concerns/ResolvesDumpSource.html#method_resolveDumpSource","d":"<p>Resolve the source of the dump call.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Concerns\\ResolvesDumpSource::isCompiledViewFile","p":"Illuminate/Foundation/Concerns/ResolvesDumpSource.html#method_isCompiledViewFile","d":"<p>Determine if the given file is a view compiled.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Concerns\\ResolvesDumpSource::getOriginalFileForCompiledView","p":"Illuminate/Foundation/Concerns/ResolvesDumpSource.html#method_getOriginalFileForCompiledView","d":"<p>Get the original view compiled file by the given compiled file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Concerns\\ResolvesDumpSource::resolveSourceHref","p":"Illuminate/Foundation/Concerns/ResolvesDumpSource.html#method_resolveSourceHref","d":"<p>Resolve the source href, if possible.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Concerns\\ResolvesDumpSource::resolveDumpSourceUsing","p":"Illuminate/Foundation/Concerns/ResolvesDumpSource.html#method_resolveDumpSourceUsing","d":null},{"t":"M","n":"Illuminate\\Foundation\\Concerns\\ResolvesDumpSource::dontIncludeSource","p":"Illuminate/Foundation/Concerns/ResolvesDumpSource.html#method_dontIncludeSource","d":"<p>Don't include the location / file of the dump in dumps.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::__construct","p":"Illuminate/Foundation/Console/AboutCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::handle","p":"Illuminate/Foundation/Console/AboutCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::display","p":"Illuminate/Foundation/Console/AboutCommand.html#method_display","d":"<p>Display the application information.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::displayDetail","p":"Illuminate/Foundation/Console/AboutCommand.html#method_displayDetail","d":"<p>Display the application information as a detail view.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::displayJson","p":"Illuminate/Foundation/Console/AboutCommand.html#method_displayJson","d":"<p>Display the application information as JSON.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::gatherApplicationInformation","p":"Illuminate/Foundation/Console/AboutCommand.html#method_gatherApplicationInformation","d":"<p>Gather information about the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::hasPhpFiles","p":"Illuminate/Foundation/Console/AboutCommand.html#method_hasPhpFiles","d":"<p>Determine whether the given directory has PHP files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::add","p":"Illuminate/Foundation/Console/AboutCommand.html#method_add","d":"<p>Add additional data to the output of the &quot;about&quot; command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::addToSection","p":"Illuminate/Foundation/Console/AboutCommand.html#method_addToSection","d":"<p>Add additional data to the output of the &quot;about&quot; command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\AboutCommand::sections","p":"Illuminate/Foundation/Console/AboutCommand.html#method_sections","d":"<p>Get the sections provided to the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CastMakeCommand::getStub","p":"Illuminate/Foundation/Console/CastMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CastMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/CastMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CastMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/CastMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CastMakeCommand::getOptions","p":"Illuminate/Foundation/Console/CastMakeCommand.html#method_getOptions","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ChannelMakeCommand::buildClass","p":"Illuminate/Foundation/Console/ChannelMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ChannelMakeCommand::getStub","p":"Illuminate/Foundation/Console/ChannelMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ChannelMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ChannelMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ChannelMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ChannelMakeCommand.html#method_getOptions","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClearCompiledCommand::handle","p":"Illuminate/Foundation/Console/ClearCompiledCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CliDumper::__construct","p":"Illuminate/Foundation/Console/CliDumper.html#method___construct","d":"<p>Create a new CLI dumper instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CliDumper::register","p":"Illuminate/Foundation/Console/CliDumper.html#method_register","d":"<p>Create a new CLI dumper instance and register it as the default dumper.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CliDumper::dumpWithSource","p":"Illuminate/Foundation/Console/CliDumper.html#method_dumpWithSource","d":"<p>Dump a variable with its source file / line.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CliDumper::getDumpSourceContent","p":"Illuminate/Foundation/Console/CliDumper.html#method_getDumpSourceContent","d":"<p>Get the dump's source console content.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\CliDumper::supportsColors","p":"Illuminate/Foundation/Console/CliDumper.html#method_supportsColors","d":"{@inheritDoc}"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClosureCommand::__construct","p":"Illuminate/Foundation/Console/ClosureCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClosureCommand::execute","p":"Illuminate/Foundation/Console/ClosureCommand.html#method_execute","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClosureCommand::purpose","p":"Illuminate/Foundation/Console/ClosureCommand.html#method_purpose","d":"<p>Set the description for the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ClosureCommand::describe","p":"Illuminate/Foundation/Console/ClosureCommand.html#method_describe","d":"<p>Set the description for the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand::handle","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand::writeView","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html#method_writeView","d":"<p>Write the view for the component.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand::buildClass","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand::getView","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html#method_getView","d":"<p>Get the view name relative to the components directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand::getStub","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ComponentMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ComponentMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigCacheCommand::__construct","p":"Illuminate/Foundation/Console/ConfigCacheCommand.html#method___construct","d":"<p>Create a new config cache command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigCacheCommand::handle","p":"Illuminate/Foundation/Console/ConfigCacheCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigCacheCommand::getFreshConfiguration","p":"Illuminate/Foundation/Console/ConfigCacheCommand.html#method_getFreshConfiguration","d":"<p>Boot a fresh copy of the application configuration.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigClearCommand::__construct","p":"Illuminate/Foundation/Console/ConfigClearCommand.html#method___construct","d":"<p>Create a new config clear command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConfigClearCommand::handle","p":"Illuminate/Foundation/Console/ConfigClearCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::replaceClass","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_replaceClass","d":"<p>Replace the class name for the given stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::getStub","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::getArguments","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ConsoleMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ConsoleMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::configure","p":"Illuminate/Foundation/Console/DocsCommand.html#method_configure","d":"<p>Configure the current command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::handle","p":"Illuminate/Foundation/Console/DocsCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::openUrl","p":"Illuminate/Foundation/Console/DocsCommand.html#method_openUrl","d":"<p>Open the documentation URL.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::url","p":"Illuminate/Foundation/Console/DocsCommand.html#method_url","d":"<p>The URL to the documentation page.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::page","p":"Illuminate/Foundation/Console/DocsCommand.html#method_page","d":"<p>The page the user is opening.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::resolvePage","p":"Illuminate/Foundation/Console/DocsCommand.html#method_resolvePage","d":"<p>Determine the page to open.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::didNotRequestPage","p":"Illuminate/Foundation/Console/DocsCommand.html#method_didNotRequestPage","d":"<p>Determine if the user requested a specific page when calling the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::askForPage","p":"Illuminate/Foundation/Console/DocsCommand.html#method_askForPage","d":"<p>Ask the user which page they would like to open.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::askForPageViaCustomStrategy","p":"Illuminate/Foundation/Console/DocsCommand.html#method_askForPageViaCustomStrategy","d":"<p>Ask the user which page they would like to open via a custom strategy.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::askForPageViaAutocomplete","p":"Illuminate/Foundation/Console/DocsCommand.html#method_askForPageViaAutocomplete","d":"<p>Ask the user which page they would like to open using autocomplete.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::guessPage","p":"Illuminate/Foundation/Console/DocsCommand.html#method_guessPage","d":"<p>Guess the page the user is attempting to open.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::section","p":"Illuminate/Foundation/Console/DocsCommand.html#method_section","d":"<p>The section the user specifically asked to open.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::didNotRequestSection","p":"Illuminate/Foundation/Console/DocsCommand.html#method_didNotRequestSection","d":"<p>Determine if the user requested a specific section when calling the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::guessSection","p":"Illuminate/Foundation/Console/DocsCommand.html#method_guessSection","d":"<p>Guess the section the user is attempting to open.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::open","p":"Illuminate/Foundation/Console/DocsCommand.html#method_open","d":"<p>Open the URL in the user's browser.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::openViaCustomStrategy","p":"Illuminate/Foundation/Console/DocsCommand.html#method_openViaCustomStrategy","d":"<p>Open the URL via a custom strategy.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::openViaBuiltInStrategy","p":"Illuminate/Foundation/Console/DocsCommand.html#method_openViaBuiltInStrategy","d":"<p>Open the URL via the built in strategy.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::sectionsFor","p":"Illuminate/Foundation/Console/DocsCommand.html#method_sectionsFor","d":"<p>The available sections for the page.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::pages","p":"Illuminate/Foundation/Console/DocsCommand.html#method_pages","d":"<p>The pages available to open.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::docs","p":"Illuminate/Foundation/Console/DocsCommand.html#method_docs","d":"<p>Get the documentation index as a collection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::refreshDocs","p":"Illuminate/Foundation/Console/DocsCommand.html#method_refreshDocs","d":"<p>Refresh the cached copy of the documentation index.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::fetchDocs","p":"Illuminate/Foundation/Console/DocsCommand.html#method_fetchDocs","d":"<p>Fetch the documentation index from the Laravel website.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::version","p":"Illuminate/Foundation/Console/DocsCommand.html#method_version","d":"<p>Determine the version of the docs to open.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::searchQuery","p":"Illuminate/Foundation/Console/DocsCommand.html#method_searchQuery","d":"<p>The search query the user provided.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::isSearching","p":"Illuminate/Foundation/Console/DocsCommand.html#method_isSearching","d":"<p>Determine if the command is intended to perform a search.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::setVersion","p":"Illuminate/Foundation/Console/DocsCommand.html#method_setVersion","d":"<p>Set the documentation version.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::setUrlOpener","p":"Illuminate/Foundation/Console/DocsCommand.html#method_setUrlOpener","d":"<p>Set a custom URL opener.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DocsCommand::setSystemOsFamily","p":"Illuminate/Foundation/Console/DocsCommand.html#method_setSystemOsFamily","d":"<p>Set the system operating system family.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::handle","p":"Illuminate/Foundation/Console/DownCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::getDownFilePayload","p":"Illuminate/Foundation/Console/DownCommand.html#method_getDownFilePayload","d":"<p>Get the payload to be placed in the &quot;down&quot; file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::excludedPaths","p":"Illuminate/Foundation/Console/DownCommand.html#method_excludedPaths","d":"<p>Get the paths that should be excluded from maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::redirectPath","p":"Illuminate/Foundation/Console/DownCommand.html#method_redirectPath","d":"<p>Get the path that users should be redirected to.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::prerenderView","p":"Illuminate/Foundation/Console/DownCommand.html#method_prerenderView","d":"<p>Prerender the specified view so that it can be rendered even before loading Composer.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\DownCommand::getRetryTime","p":"Illuminate/Foundation/Console/DownCommand.html#method_getRetryTime","d":"<p>Get the number of seconds the client should wait before retrying their request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentCommand::handle","p":"Illuminate/Foundation/Console/EnvironmentCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand::__construct","p":"Illuminate/Foundation/Console/EnvironmentDecryptCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand::handle","p":"Illuminate/Foundation/Console/EnvironmentDecryptCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand::parseKey","p":"Illuminate/Foundation/Console/EnvironmentDecryptCommand.html#method_parseKey","d":"<p>Parse the encryption key.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand::outputFilePath","p":"Illuminate/Foundation/Console/EnvironmentDecryptCommand.html#method_outputFilePath","d":"<p>Get the output file path that should be used for the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand::__construct","p":"Illuminate/Foundation/Console/EnvironmentEncryptCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand::handle","p":"Illuminate/Foundation/Console/EnvironmentEncryptCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand::parseKey","p":"Illuminate/Foundation/Console/EnvironmentEncryptCommand.html#method_parseKey","d":"<p>Parse the encryption key.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventCacheCommand::handle","p":"Illuminate/Foundation/Console/EventCacheCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventCacheCommand::getEvents","p":"Illuminate/Foundation/Console/EventCacheCommand.html#method_getEvents","d":"<p>Get all of the events and listeners configured for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventClearCommand::__construct","p":"Illuminate/Foundation/Console/EventClearCommand.html#method___construct","d":"<p>Create a new config clear command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventClearCommand::handle","p":"Illuminate/Foundation/Console/EventClearCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventGenerateCommand::handle","p":"Illuminate/Foundation/Console/EventGenerateCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventGenerateCommand::makeEventAndListeners","p":"Illuminate/Foundation/Console/EventGenerateCommand.html#method_makeEventAndListeners","d":"<p>Make the event and listeners for the given event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventGenerateCommand::makeListeners","p":"Illuminate/Foundation/Console/EventGenerateCommand.html#method_makeListeners","d":"<p>Make the listeners for the given event.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::handle","p":"Illuminate/Foundation/Console/EventListCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::getEvents","p":"Illuminate/Foundation/Console/EventListCommand.html#method_getEvents","d":"<p>Get all of the events and listeners configured for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::getListenersOnDispatcher","p":"Illuminate/Foundation/Console/EventListCommand.html#method_getListenersOnDispatcher","d":"<p>Get the event / listeners from the dispatcher object.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::appendEventInterfaces","p":"Illuminate/Foundation/Console/EventListCommand.html#method_appendEventInterfaces","d":"<p>Add the event implemented interfaces to the output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::appendListenerInterfaces","p":"Illuminate/Foundation/Console/EventListCommand.html#method_appendListenerInterfaces","d":"<p>Add the listener implemented interfaces to the output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::stringifyClosure","p":"Illuminate/Foundation/Console/EventListCommand.html#method_stringifyClosure","d":"<p>Get a displayable string representation of a Closure listener.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::filterEvents","p":"Illuminate/Foundation/Console/EventListCommand.html#method_filterEvents","d":"<p>Filter the given events using the provided event name filter.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::filteringByEvent","p":"Illuminate/Foundation/Console/EventListCommand.html#method_filteringByEvent","d":"<p>Determine whether the user is filtering by an event name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::getRawListeners","p":"Illuminate/Foundation/Console/EventListCommand.html#method_getRawListeners","d":"<p>Gets the raw version of event listeners from the event dispatcher.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::getEventsDispatcher","p":"Illuminate/Foundation/Console/EventListCommand.html#method_getEventsDispatcher","d":"<p>Get the event dispatcher.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventListCommand::resolveEventsUsing","p":"Illuminate/Foundation/Console/EventListCommand.html#method_resolveEventsUsing","d":"<p>Set a callback that should be used when resolving the events dispatcher.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventMakeCommand::alreadyExists","p":"Illuminate/Foundation/Console/EventMakeCommand.html#method_alreadyExists","d":"<p>Determine if the class already exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventMakeCommand::getStub","p":"Illuminate/Foundation/Console/EventMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/EventMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/EventMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\EventMakeCommand::getOptions","p":"Illuminate/Foundation/Console/EventMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ExceptionMakeCommand::getStub","p":"Illuminate/Foundation/Console/ExceptionMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ExceptionMakeCommand::alreadyExists","p":"Illuminate/Foundation/Console/ExceptionMakeCommand.html#method_alreadyExists","d":"<p>Determine if the class already exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ExceptionMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ExceptionMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ExceptionMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ExceptionMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\JobMakeCommand::getStub","p":"Illuminate/Foundation/Console/JobMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\JobMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/JobMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\JobMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/JobMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\JobMakeCommand::getOptions","p":"Illuminate/Foundation/Console/JobMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::__construct","p":"Illuminate/Foundation/Console/Kernel.html#method___construct","d":"<p>Create a new console kernel instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::defineConsoleSchedule","p":"Illuminate/Foundation/Console/Kernel.html#method_defineConsoleSchedule","d":"<p>Define the application's command schedule.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::scheduleCache","p":"Illuminate/Foundation/Console/Kernel.html#method_scheduleCache","d":"<p>Get the name of the cache store that should manage scheduling mutexes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::handle","p":"Illuminate/Foundation/Console/Kernel.html#method_handle","d":"<p>Run the console application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::terminate","p":"Illuminate/Foundation/Console/Kernel.html#method_terminate","d":"<p>Terminate the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::whenCommandLifecycleIsLongerThan","p":"Illuminate/Foundation/Console/Kernel.html#method_whenCommandLifecycleIsLongerThan","d":"<p>Register a callback to be invoked when the command lifecycle duration exceeds a given amount of time.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::commandStartedAt","p":"Illuminate/Foundation/Console/Kernel.html#method_commandStartedAt","d":"<p>When the command being handled started.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::schedule","p":"Illuminate/Foundation/Console/Kernel.html#method_schedule","d":"<p>Define the application's command schedule.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::scheduleTimezone","p":"Illuminate/Foundation/Console/Kernel.html#method_scheduleTimezone","d":"<p>Get the timezone that should be used by default for scheduled events.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::commands","p":"Illuminate/Foundation/Console/Kernel.html#method_commands","d":"<p>Register the commands for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::command","p":"Illuminate/Foundation/Console/Kernel.html#method_command","d":"<p>Register a Closure based command with the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::load","p":"Illuminate/Foundation/Console/Kernel.html#method_load","d":"<p>Register all of the commands in the given directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::registerCommand","p":"Illuminate/Foundation/Console/Kernel.html#method_registerCommand","d":"<p>Register the given command with the console application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::call","p":"Illuminate/Foundation/Console/Kernel.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::queue","p":"Illuminate/Foundation/Console/Kernel.html#method_queue","d":"<p>Queue the given console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::all","p":"Illuminate/Foundation/Console/Kernel.html#method_all","d":"<p>Get all of the commands registered with the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::output","p":"Illuminate/Foundation/Console/Kernel.html#method_output","d":"<p>Get the output for the last run command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::bootstrap","p":"Illuminate/Foundation/Console/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for artisan commands.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::bootstrapWithoutBootingProviders","p":"Illuminate/Foundation/Console/Kernel.html#method_bootstrapWithoutBootingProviders","d":"<p>Bootstrap the application without booting service providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::getArtisan","p":"Illuminate/Foundation/Console/Kernel.html#method_getArtisan","d":"<p>Get the Artisan application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::setArtisan","p":"Illuminate/Foundation/Console/Kernel.html#method_setArtisan","d":"<p>Set the Artisan application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::bootstrappers","p":"Illuminate/Foundation/Console/Kernel.html#method_bootstrappers","d":"<p>Get the bootstrap classes for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::reportException","p":"Illuminate/Foundation/Console/Kernel.html#method_reportException","d":"<p>Report the exception to the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\Kernel::renderException","p":"Illuminate/Foundation/Console/Kernel.html#method_renderException","d":"<p>Render the given exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::handle","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::generateRandomKey","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_generateRandomKey","d":"<p>Generate a random key for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::setKeyInEnvironmentFile","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_setKeyInEnvironmentFile","d":"<p>Set the application key in the environment file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::writeNewEnvironmentFileWith","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_writeNewEnvironmentFileWith","d":"<p>Write a new environment file with the given key.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\KeyGenerateCommand::keyReplacementPattern","p":"Illuminate/Foundation/Console/KeyGenerateCommand.html#method_keyReplacementPattern","d":"<p>Get a regex pattern that will match env APP_KEY with any random key.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\LangPublishCommand::handle","p":"Illuminate/Foundation/Console/LangPublishCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::buildClass","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::getStub","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::alreadyExists","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_alreadyExists","d":"<p>Determine if the class already exists.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ListenerMakeCommand::afterPromptingForMissingArguments","p":"Illuminate/Foundation/Console/ListenerMakeCommand.html#method_afterPromptingForMissingArguments","d":"<p>Interact further with the user if they were prompted for missing arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::handle","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::writeMarkdownTemplate","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_writeMarkdownTemplate","d":"<p>Write the Markdown template for the mailable.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::buildClass","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::getView","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_getView","d":"<p>Get the view name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::getStub","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\MailMakeCommand::getOptions","p":"Illuminate/Foundation/Console/MailMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::handle","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::createFactory","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_createFactory","d":"<p>Create a model factory for the model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::createMigration","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_createMigration","d":"<p>Create a migration file for the model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::createSeeder","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_createSeeder","d":"<p>Create a seeder file for the model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::createController","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_createController","d":"<p>Create a controller for the model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::createPolicy","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_createPolicy","d":"<p>Create a policy file for the model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::getStub","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ModelMakeCommand::afterPromptingForMissingArguments","p":"Illuminate/Foundation/Console/ModelMakeCommand.html#method_afterPromptingForMissingArguments","d":"<p>Interact further with the user if they were prompted for missing arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::handle","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::writeMarkdownTemplate","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_writeMarkdownTemplate","d":"<p>Write the Markdown template for the mailable.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::buildClass","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::getStub","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\NotificationMakeCommand::getOptions","p":"Illuminate/Foundation/Console/NotificationMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand::buildClass","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand::replaceModel","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html#method_replaceModel","d":"<p>Replace the model for the given stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand::parseModel","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html#method_parseModel","d":"<p>Get the fully-qualified model class name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand::getStub","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html#method_getOptions","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ObserverMakeCommand::afterPromptingForMissingArguments","p":"Illuminate/Foundation/Console/ObserverMakeCommand.html#method_afterPromptingForMissingArguments","d":"<p>Interact further with the user if they were prompted for missing arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\OptimizeClearCommand::handle","p":"Illuminate/Foundation/Console/OptimizeClearCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\OptimizeCommand::handle","p":"Illuminate/Foundation/Console/OptimizeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PackageDiscoverCommand::handle","p":"Illuminate/Foundation/Console/PackageDiscoverCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::buildClass","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::replaceUserNamespace","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_replaceUserNamespace","d":"<p>Replace the User model namespace.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::userProviderModel","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_userProviderModel","d":"<p>Get the model for the guard's user provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::replaceModel","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_replaceModel","d":"<p>Replace the model for the given stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::getStub","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::getOptions","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_getOptions","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\PolicyMakeCommand::afterPromptingForMissingArguments","p":"Illuminate/Foundation/Console/PolicyMakeCommand.html#method_afterPromptingForMissingArguments","d":"<p>Interact further with the user if they were prompted for missing arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ProviderMakeCommand::getStub","p":"Illuminate/Foundation/Console/ProviderMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ProviderMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/ProviderMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ProviderMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ProviderMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ProviderMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ProviderMakeCommand.html#method_getOptions","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\QueuedCommand::__construct","p":"Illuminate/Foundation/Console/QueuedCommand.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\QueuedCommand::handle","p":"Illuminate/Foundation/Console/QueuedCommand.html#method_handle","d":"<p>Handle the job.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RequestMakeCommand::getStub","p":"Illuminate/Foundation/Console/RequestMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RequestMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/RequestMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RequestMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/RequestMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RequestMakeCommand::getOptions","p":"Illuminate/Foundation/Console/RequestMakeCommand.html#method_getOptions","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ResourceMakeCommand::handle","p":"Illuminate/Foundation/Console/ResourceMakeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ResourceMakeCommand::getStub","p":"Illuminate/Foundation/Console/ResourceMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ResourceMakeCommand::collection","p":"Illuminate/Foundation/Console/ResourceMakeCommand.html#method_collection","d":"<p>Determine if the command is generating a resource collection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ResourceMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/ResourceMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ResourceMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ResourceMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ResourceMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ResourceMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::__construct","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method___construct","d":"<p>Create a new route command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::handle","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::getFreshApplicationRoutes","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method_getFreshApplicationRoutes","d":"<p>Boot a fresh copy of the application and get the routes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::getFreshApplication","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method_getFreshApplication","d":"<p>Get a fresh application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteCacheCommand::buildRouteCacheFile","p":"Illuminate/Foundation/Console/RouteCacheCommand.html#method_buildRouteCacheFile","d":"<p>Build the route cache file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteClearCommand::__construct","p":"Illuminate/Foundation/Console/RouteClearCommand.html#method___construct","d":"<p>Create a new route clear command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteClearCommand::handle","p":"Illuminate/Foundation/Console/RouteClearCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::__construct","p":"Illuminate/Foundation/Console/RouteListCommand.html#method___construct","d":"<p>Create a new route command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::handle","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getRoutes","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getRoutes","d":"<p>Compile the routes into a displayable format.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getRouteInformation","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getRouteInformation","d":"<p>Get the route information for a given route.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::sortRoutes","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_sortRoutes","d":"<p>Sort the routes by a given element.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::pluckColumns","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_pluckColumns","d":"<p>Remove unnecessary columns from the routes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::displayRoutes","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_displayRoutes","d":"<p>Display the route information on the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getMiddleware","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getMiddleware","d":"<p>Get the middleware for the route.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::isVendorRoute","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_isVendorRoute","d":"<p>Determine if the route has been defined outside of the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::isFrameworkController","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_isFrameworkController","d":"<p>Determine if the route uses a framework controller.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::filterRoute","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_filterRoute","d":"<p>Filter the route by URI and / or name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getHeaders","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getHeaders","d":"<p>Get the table headers for the visible columns.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getColumns","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getColumns","d":"<p>Get the column names to show (lowercase table headers).</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::parseColumns","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_parseColumns","d":"<p>Parse the column list.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::asJson","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_asJson","d":"<p>Convert the given routes to JSON.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::forCli","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_forCli","d":"<p>Convert the given routes to regular CLI output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::formatActionForCli","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_formatActionForCli","d":"<p>Get the formatted action for display on the CLI.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::determineRouteCountOutput","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_determineRouteCountOutput","d":"<p>Determine and return the output for displaying the number of routes in the CLI output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getTerminalWidth","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getTerminalWidth","d":"<p>Get the terminal width.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::resolveTerminalWidthUsing","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_resolveTerminalWidthUsing","d":"<p>Set a callback that should be used when resolving the terminal width.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RouteListCommand::getOptions","p":"Illuminate/Foundation/Console/RouteListCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RuleMakeCommand::buildClass","p":"Illuminate/Foundation/Console/RuleMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RuleMakeCommand::getStub","p":"Illuminate/Foundation/Console/RuleMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RuleMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/RuleMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\RuleMakeCommand::getOptions","p":"Illuminate/Foundation/Console/RuleMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ScopeMakeCommand::getStub","p":"Illuminate/Foundation/Console/ScopeMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ScopeMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/ScopeMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ScopeMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/ScopeMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ScopeMakeCommand::getOptions","p":"Illuminate/Foundation/Console/ScopeMakeCommand.html#method_getOptions","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::handle","p":"Illuminate/Foundation/Console/ServeCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::startProcess","p":"Illuminate/Foundation/Console/ServeCommand.html#method_startProcess","d":"<p>Start a new server process.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::serverCommand","p":"Illuminate/Foundation/Console/ServeCommand.html#method_serverCommand","d":"<p>Get the full server command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::host","p":"Illuminate/Foundation/Console/ServeCommand.html#method_host","d":"<p>Get the host for the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::port","p":"Illuminate/Foundation/Console/ServeCommand.html#method_port","d":"<p>Get the port for the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::getHostAndPort","p":"Illuminate/Foundation/Console/ServeCommand.html#method_getHostAndPort","d":"<p>Get the host and port from the host option string.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::canTryAnotherPort","p":"Illuminate/Foundation/Console/ServeCommand.html#method_canTryAnotherPort","d":"<p>Check if the command has reached its maximum number of port tries.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::handleProcessOutput","p":"Illuminate/Foundation/Console/ServeCommand.html#method_handleProcessOutput","d":"<p>Returns a &quot;callable&quot; to handle the process output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::getDateFromLine","p":"Illuminate/Foundation/Console/ServeCommand.html#method_getDateFromLine","d":"<p>Get the date from the given PHP server output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::getRequestPortFromLine","p":"Illuminate/Foundation/Console/ServeCommand.html#method_getRequestPortFromLine","d":"<p>Get the request port from the given PHP server output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ServeCommand::getOptions","p":"Illuminate/Foundation/Console/ServeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\StorageLinkCommand::handle","p":"Illuminate/Foundation/Console/StorageLinkCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\StorageLinkCommand::links","p":"Illuminate/Foundation/Console/StorageLinkCommand.html#method_links","d":"<p>Get the symbolic links that are configured for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\StorageLinkCommand::isRemovableSymlink","p":"Illuminate/Foundation/Console/StorageLinkCommand.html#method_isRemovableSymlink","d":"<p>Determine if the provided path is a symlink that can be removed.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\StubPublishCommand::handle","p":"Illuminate/Foundation/Console/StubPublishCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::getStub","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::resolveStubPath","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::getPath","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_getPath","d":"<p>Get the destination class path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::getDefaultNamespace","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::rootNamespace","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_rootNamespace","d":"<p>Get the root namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::getOptions","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\TestMakeCommand::afterPromptingForMissingArguments","p":"Illuminate/Foundation/Console/TestMakeCommand.html#method_afterPromptingForMissingArguments","d":"<p>Interact further with the user if they were prompted for missing arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\UpCommand::handle","p":"Illuminate/Foundation/Console/UpCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::__construct","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method___construct","d":"<p>Create a new command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::handle","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::determineWhatShouldBePublished","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_determineWhatShouldBePublished","d":"<p>Determine the provider or tag(s) to publish.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::promptForProviderOrTag","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_promptForProviderOrTag","d":"<p>Prompt for which provider or tag to publish.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishableChoices","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishableChoices","d":"<p>The choices available via the prompt.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::parseChoice","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_parseChoice","d":"<p>Parse the answer that was given via the prompt.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishTag","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishTag","d":"<p>Publishes the assets for a tag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::pathsToPublish","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_pathsToPublish","d":"<p>Get all of the paths to publish.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishItem","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishItem","d":"<p>Publish the given item from and to the given location.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishFile","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishFile","d":"<p>Publish the file to the given path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::publishDirectory","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_publishDirectory","d":"<p>Publish the directory to the given directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::moveManagedFiles","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_moveManagedFiles","d":"<p>Move all the files in the given MountManager.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::createParentDirectory","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_createParentDirectory","d":"<p>Create the directory to house the published files if needed.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\VendorPublishCommand::status","p":"Illuminate/Foundation/Console/VendorPublishCommand.html#method_status","d":"<p>Write a status message to the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ViewCacheCommand::handle","p":"Illuminate/Foundation/Console/ViewCacheCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ViewCacheCommand::compileViews","p":"Illuminate/Foundation/Console/ViewCacheCommand.html#method_compileViews","d":"<p>Compile the given view files.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ViewCacheCommand::bladeFilesIn","p":"Illuminate/Foundation/Console/ViewCacheCommand.html#method_bladeFilesIn","d":"<p>Get the Blade files in the given path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ViewCacheCommand::paths","p":"Illuminate/Foundation/Console/ViewCacheCommand.html#method_paths","d":"<p>Get all of the possible view paths.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ViewClearCommand::__construct","p":"Illuminate/Foundation/Console/ViewClearCommand.html#method___construct","d":"<p>Create a new config clear command instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Console\\ViewClearCommand::handle","p":"Illuminate/Foundation/Console/ViewClearCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\EnvironmentDetector::detect","p":"Illuminate/Foundation/EnvironmentDetector.html#method_detect","d":"<p>Detect the application's current environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\EnvironmentDetector::detectWebEnvironment","p":"Illuminate/Foundation/EnvironmentDetector.html#method_detectWebEnvironment","d":"<p>Set the application environment for a web request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\EnvironmentDetector::detectConsoleEnvironment","p":"Illuminate/Foundation/EnvironmentDetector.html#method_detectConsoleEnvironment","d":"<p>Set the application environment from command-line arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\EnvironmentDetector::getEnvironmentArgument","p":"Illuminate/Foundation/EnvironmentDetector.html#method_getEnvironmentArgument","d":"<p>Get the environment argument from the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\DiscoverEvents::within","p":"Illuminate/Foundation/Events/DiscoverEvents.html#method_within","d":"<p>Get all of the events and listeners by searching the given listener directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\DiscoverEvents::getListenerEvents","p":"Illuminate/Foundation/Events/DiscoverEvents.html#method_getListenerEvents","d":"<p>Get all of the listeners and their corresponding events.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\DiscoverEvents::classFromFile","p":"Illuminate/Foundation/Events/DiscoverEvents.html#method_classFromFile","d":"<p>Extract the class name from the given file path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\Dispatchable::dispatch","p":"Illuminate/Foundation/Events/Dispatchable.html#method_dispatch","d":"<p>Dispatch the event with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\Dispatchable::dispatchIf","p":"Illuminate/Foundation/Events/Dispatchable.html#method_dispatchIf","d":"<p>Dispatch the event with the given arguments if the given truth test passes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\Dispatchable::dispatchUnless","p":"Illuminate/Foundation/Events/Dispatchable.html#method_dispatchUnless","d":"<p>Dispatch the event with the given arguments unless the given truth test passes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\Dispatchable::broadcast","p":"Illuminate/Foundation/Events/Dispatchable.html#method_broadcast","d":"<p>Broadcast the event with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\LocaleUpdated::__construct","p":"Illuminate/Foundation/Events/LocaleUpdated.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\PublishingStubs::__construct","p":"Illuminate/Foundation/Events/PublishingStubs.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\PublishingStubs::add","p":"Illuminate/Foundation/Events/PublishingStubs.html#method_add","d":"<p>Add a new stub to be published.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Events\\VendorTagPublished::__construct","p":"Illuminate/Foundation/Events/VendorTagPublished.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::__construct","p":"Illuminate/Foundation/Exceptions/Handler.html#method___construct","d":"<p>Create a new exception handler instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::register","p":"Illuminate/Foundation/Exceptions/Handler.html#method_register","d":"<p>Register the exception handling callbacks for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::reportable","p":"Illuminate/Foundation/Exceptions/Handler.html#method_reportable","d":"<p>Register a reportable callback.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderable","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderable","d":"<p>Register a renderable callback.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::map","p":"Illuminate/Foundation/Exceptions/Handler.html#method_map","d":"<p>Register a new exception mapping.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::ignore","p":"Illuminate/Foundation/Exceptions/Handler.html#method_ignore","d":"<p>Indicate that the given exception type should not be reported.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::level","p":"Illuminate/Foundation/Exceptions/Handler.html#method_level","d":"<p>Set the log level for the given exception type.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::report","p":"Illuminate/Foundation/Exceptions/Handler.html#method_report","d":"<p>Report or log an exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::shouldReport","p":"Illuminate/Foundation/Exceptions/Handler.html#method_shouldReport","d":"<p>Determine if the exception should be reported.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::shouldntReport","p":"Illuminate/Foundation/Exceptions/Handler.html#method_shouldntReport","d":"<p>Determine if the exception is in the &quot;do not report&quot; list.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::stopIgnoring","p":"Illuminate/Foundation/Exceptions/Handler.html#method_stopIgnoring","d":"<p>Remove the given exception class from the list of exceptions that should be ignored.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::buildExceptionContext","p":"Illuminate/Foundation/Exceptions/Handler.html#method_buildExceptionContext","d":"<p>Create the context array for logging the given exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::exceptionContext","p":"Illuminate/Foundation/Exceptions/Handler.html#method_exceptionContext","d":"<p>Get the default exception context variables for logging.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::context","p":"Illuminate/Foundation/Exceptions/Handler.html#method_context","d":"<p>Get the default context variables for logging.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::render","p":"Illuminate/Foundation/Exceptions/Handler.html#method_render","d":"<p>Render an exception into an HTTP response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::prepareException","p":"Illuminate/Foundation/Exceptions/Handler.html#method_prepareException","d":"<p>Prepare exception for rendering.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::mapException","p":"Illuminate/Foundation/Exceptions/Handler.html#method_mapException","d":"<p>Map the exception using a registered mapper if possible.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderViaCallbacks","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderViaCallbacks","d":"<p>Try to render a response from request and exception via render callbacks.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderExceptionResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderExceptionResponse","d":"<p>Render a default exception response if any.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::unauthenticated","p":"Illuminate/Foundation/Exceptions/Handler.html#method_unauthenticated","d":"<p>Convert an authentication exception into a response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::convertValidationExceptionToResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_convertValidationExceptionToResponse","d":"<p>Create a response object from the given validation exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::invalid","p":"Illuminate/Foundation/Exceptions/Handler.html#method_invalid","d":"<p>Convert a validation exception into a response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::invalidJson","p":"Illuminate/Foundation/Exceptions/Handler.html#method_invalidJson","d":"<p>Convert a validation exception into a JSON response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::shouldReturnJson","p":"Illuminate/Foundation/Exceptions/Handler.html#method_shouldReturnJson","d":"<p>Determine if the exception handler response should be JSON.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::prepareResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_prepareResponse","d":"<p>Prepare a response for the given exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::convertExceptionToResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_convertExceptionToResponse","d":"<p>Create a Symfony response for the given exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderExceptionContent","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderExceptionContent","d":"<p>Get the response content for the given exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderExceptionWithCustomRenderer","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderExceptionWithCustomRenderer","d":"<p>Render an exception to a string using the registered <code>ExceptionRenderer</code>.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderExceptionWithSymfony","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderExceptionWithSymfony","d":"<p>Render an exception to a string using Symfony.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderHttpException","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderHttpException","d":"<p>Render the given HttpException.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::registerErrorViewPaths","p":"Illuminate/Foundation/Exceptions/Handler.html#method_registerErrorViewPaths","d":"<p>Register the error template hint paths.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::getHttpExceptionView","p":"Illuminate/Foundation/Exceptions/Handler.html#method_getHttpExceptionView","d":"<p>Get the view used to render HTTP exceptions.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::toIlluminateResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_toIlluminateResponse","d":"<p>Map the given exception into an Illuminate response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::prepareJsonResponse","p":"Illuminate/Foundation/Exceptions/Handler.html#method_prepareJsonResponse","d":"<p>Prepare a JSON response for the given exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::convertExceptionToArray","p":"Illuminate/Foundation/Exceptions/Handler.html#method_convertExceptionToArray","d":"<p>Convert the given exception to an array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::renderForConsole","p":"Illuminate/Foundation/Exceptions/Handler.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Handler::isHttpException","p":"Illuminate/Foundation/Exceptions/Handler.html#method_isHttpException","d":"<p>Determine if the given exception is an HTTP exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\RegisterErrorViewPaths::__invoke","p":"Illuminate/Foundation/Exceptions/RegisterErrorViewPaths.html#method___invoke","d":"<p>Register the error view paths.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\ReportableHandler::__construct","p":"Illuminate/Foundation/Exceptions/ReportableHandler.html#method___construct","d":"<p>Create a new reportable handler instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\ReportableHandler::__invoke","p":"Illuminate/Foundation/Exceptions/ReportableHandler.html#method___invoke","d":"<p>Invoke the handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\ReportableHandler::handles","p":"Illuminate/Foundation/Exceptions/ReportableHandler.html#method_handles","d":"<p>Determine if the callback handles the given exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\ReportableHandler::stop","p":"Illuminate/Foundation/Exceptions/ReportableHandler.html#method_stop","d":"<p>Indicate that report handling should stop after invoking this callback.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsExceptionRenderer::render","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsExceptionRenderer.html#method_render","d":"<p>Renders the given exception as HTML.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsExceptionRenderer::whoopsHandler","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsExceptionRenderer.html#method_whoopsHandler","d":"<p>Get the Whoops handler for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsHandler::forDebug","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsHandler.html#method_forDebug","d":"<p>Create a new Whoops handler for debug mode.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsHandler::registerApplicationPaths","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsHandler.html#method_registerApplicationPaths","d":"<p>Register the application paths with the handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsHandler::directoriesExceptVendor","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsHandler.html#method_directoriesExceptVendor","d":"<p>Get the application paths except for the &quot;vendor&quot; directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsHandler::registerBlacklist","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsHandler.html#method_registerBlacklist","d":"<p>Register the blacklist with the handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Exceptions\\Whoops\\WhoopsHandler::registerEditor","p":"Illuminate/Foundation/Exceptions/Whoops/WhoopsHandler.html#method_registerEditor","d":"<p>Register the editor with the handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\FileBasedMaintenanceMode::activate","p":"Illuminate/Foundation/FileBasedMaintenanceMode.html#method_activate","d":"<p>Take the application down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\FileBasedMaintenanceMode::deactivate","p":"Illuminate/Foundation/FileBasedMaintenanceMode.html#method_deactivate","d":"<p>Take the application out of maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\FileBasedMaintenanceMode::active","p":"Illuminate/Foundation/FileBasedMaintenanceMode.html#method_active","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\FileBasedMaintenanceMode::data","p":"Illuminate/Foundation/FileBasedMaintenanceMode.html#method_data","d":"<p>Get the data array which was provided when the application was placed into maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\FileBasedMaintenanceMode::path","p":"Illuminate/Foundation/FileBasedMaintenanceMode.html#method_path","d":"<p>Get the path where the file is stored that signals that the application is down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Events\\RequestHandled::__construct","p":"Illuminate/Foundation/Http/Events/RequestHandled.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::getValidatorInstance","p":"Illuminate/Foundation/Http/FormRequest.html#method_getValidatorInstance","d":"<p>Get the validator instance for the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::createDefaultValidator","p":"Illuminate/Foundation/Http/FormRequest.html#method_createDefaultValidator","d":"<p>Create the default validator instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::validationData","p":"Illuminate/Foundation/Http/FormRequest.html#method_validationData","d":"<p>Get data to be validated from the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::failedValidation","p":"Illuminate/Foundation/Http/FormRequest.html#method_failedValidation","d":"<p>Handle a failed validation attempt.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::getRedirectUrl","p":"Illuminate/Foundation/Http/FormRequest.html#method_getRedirectUrl","d":"<p>Get the URL to redirect to on a validation error.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::passesAuthorization","p":"Illuminate/Foundation/Http/FormRequest.html#method_passesAuthorization","d":"<p>Determine if the request passes the authorization check.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::failedAuthorization","p":"Illuminate/Foundation/Http/FormRequest.html#method_failedAuthorization","d":"<p>Handle a failed authorization attempt.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::safe","p":"Illuminate/Foundation/Http/FormRequest.html#method_safe","d":"<p>Get a validated input container for the validated input.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::validated","p":"Illuminate/Foundation/Http/FormRequest.html#method_validated","d":"<p>Get the validated data from the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::messages","p":"Illuminate/Foundation/Http/FormRequest.html#method_messages","d":"<p>Get custom messages for validator errors.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::attributes","p":"Illuminate/Foundation/Http/FormRequest.html#method_attributes","d":"<p>Get custom attributes for validator errors.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::setValidator","p":"Illuminate/Foundation/Http/FormRequest.html#method_setValidator","d":"<p>Set the Validator instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::setRedirector","p":"Illuminate/Foundation/Http/FormRequest.html#method_setRedirector","d":"<p>Set the Redirector instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\FormRequest::setContainer","p":"Illuminate/Foundation/Http/FormRequest.html#method_setContainer","d":"<p>Set the container implementation.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\HtmlDumper::__construct","p":"Illuminate/Foundation/Http/HtmlDumper.html#method___construct","d":"<p>Create a new HTML dumper instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\HtmlDumper::register","p":"Illuminate/Foundation/Http/HtmlDumper.html#method_register","d":"<p>Create a new HTML dumper instance and register it as the default dumper.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\HtmlDumper::dumpWithSource","p":"Illuminate/Foundation/Http/HtmlDumper.html#method_dumpWithSource","d":"<p>Dump a variable with its source file / line.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\HtmlDumper::getDumpSourceContent","p":"Illuminate/Foundation/Http/HtmlDumper.html#method_getDumpSourceContent","d":"<p>Get the dump's source HTML content.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::__construct","p":"Illuminate/Foundation/Http/Kernel.html#method___construct","d":"<p>Create a new HTTP kernel instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::handle","p":"Illuminate/Foundation/Http/Kernel.html#method_handle","d":"<p>Handle an incoming HTTP request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::sendRequestThroughRouter","p":"Illuminate/Foundation/Http/Kernel.html#method_sendRequestThroughRouter","d":"<p>Send the given request through the middleware / router.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::bootstrap","p":"Illuminate/Foundation/Http/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for HTTP requests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::dispatchToRouter","p":"Illuminate/Foundation/Http/Kernel.html#method_dispatchToRouter","d":"<p>Get the route dispatcher callback.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::terminate","p":"Illuminate/Foundation/Http/Kernel.html#method_terminate","d":"<p>Call the terminate method on any terminable middleware.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::terminateMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_terminateMiddleware","d":"<p>Call the terminate method on any terminable middleware.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::whenRequestLifecycleIsLongerThan","p":"Illuminate/Foundation/Http/Kernel.html#method_whenRequestLifecycleIsLongerThan","d":"<p>Register a callback to be invoked when the requests lifecycle duration exceeds a given amount of time.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::requestStartedAt","p":"Illuminate/Foundation/Http/Kernel.html#method_requestStartedAt","d":"<p>When the request being handled started.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::gatherRouteMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_gatherRouteMiddleware","d":"<p>Gather the route middleware for the given request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::parseMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_parseMiddleware","d":"<p>Parse a middleware string to get the name and parameters.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::hasMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_hasMiddleware","d":"<p>Determine if the kernel has a given middleware.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::prependMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_prependMiddleware","d":"<p>Add a new middleware to the beginning of the stack if it does not already exist.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::pushMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_pushMiddleware","d":"<p>Add a new middleware to end of the stack if it does not already exist.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::prependMiddlewareToGroup","p":"Illuminate/Foundation/Http/Kernel.html#method_prependMiddlewareToGroup","d":"<p>Prepend the given middleware to the given middleware group.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::appendMiddlewareToGroup","p":"Illuminate/Foundation/Http/Kernel.html#method_appendMiddlewareToGroup","d":"<p>Append the given middleware to the given middleware group.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::prependToMiddlewarePriority","p":"Illuminate/Foundation/Http/Kernel.html#method_prependToMiddlewarePriority","d":"<p>Prepend the given middleware to the middleware priority list.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::appendToMiddlewarePriority","p":"Illuminate/Foundation/Http/Kernel.html#method_appendToMiddlewarePriority","d":"<p>Append the given middleware to the middleware priority list.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::syncMiddlewareToRouter","p":"Illuminate/Foundation/Http/Kernel.html#method_syncMiddlewareToRouter","d":"<p>Sync the current state of the middleware to the router.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::getMiddlewarePriority","p":"Illuminate/Foundation/Http/Kernel.html#method_getMiddlewarePriority","d":"<p>Get the priority-sorted list of middleware.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::bootstrappers","p":"Illuminate/Foundation/Http/Kernel.html#method_bootstrappers","d":"<p>Get the bootstrap classes for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::reportException","p":"Illuminate/Foundation/Http/Kernel.html#method_reportException","d":"<p>Report the exception to the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::renderException","p":"Illuminate/Foundation/Http/Kernel.html#method_renderException","d":"<p>Render the exception to a response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::getMiddlewareGroups","p":"Illuminate/Foundation/Http/Kernel.html#method_getMiddlewareGroups","d":"<p>Get the application's route middleware groups.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::getRouteMiddleware","p":"Illuminate/Foundation/Http/Kernel.html#method_getRouteMiddleware","d":"<p>Get the application's route middleware aliases.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::getMiddlewareAliases","p":"Illuminate/Foundation/Http/Kernel.html#method_getMiddlewareAliases","d":"<p>Get the application's route middleware aliases.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::getApplication","p":"Illuminate/Foundation/Http/Kernel.html#method_getApplication","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Kernel::setApplication","p":"Illuminate/Foundation/Http/Kernel.html#method_setApplication","d":"<p>Set the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\MaintenanceModeBypassCookie::create","p":"Illuminate/Foundation/Http/MaintenanceModeBypassCookie.html#method_create","d":"<p>Create a new maintenance mode bypass cookie.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\MaintenanceModeBypassCookie::isValid","p":"Illuminate/Foundation/Http/MaintenanceModeBypassCookie.html#method_isValid","d":"<p>Determine if the given maintenance mode bypass cookie is valid.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull::handle","p":"Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull::transform","p":"Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.html#method_transform","d":"<p>Transform the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull::skipWhen","p":"Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.html#method_skipWhen","d":"<p>Register a callback that instructs the middleware to be skipped.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests::__construct","p":"Illuminate/Foundation/Http/Middleware/HandlePrecognitiveRequests.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests::handle","p":"Illuminate/Foundation/Http/Middleware/HandlePrecognitiveRequests.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests::prepareForPrecognition","p":"Illuminate/Foundation/Http/Middleware/HandlePrecognitiveRequests.html#method_prepareForPrecognition","d":"<p>Prepare to handle a precognitive request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\HandlePrecognitiveRequests::appendVaryHeader","p":"Illuminate/Foundation/Http/Middleware/HandlePrecognitiveRequests.html#method_appendVaryHeader","d":"<p>Append the appropriate &quot;Vary&quot; header to the given response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::__construct","p":"Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::handle","p":"Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::hasValidBypassCookie","p":"Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.html#method_hasValidBypassCookie","d":"<p>Determine if the incoming request has a maintenance mode bypass cookie.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::inExceptArray","p":"Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.html#method_inExceptArray","d":"<p>Determine if the request has a URI that should be accessible in maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::bypassResponse","p":"Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.html#method_bypassResponse","d":"<p>Redirect the user back to the root of the application with a maintenance mode bypass cookie.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::getHeaders","p":"Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.html#method_getHeaders","d":"<p>Get the headers that should be sent with the response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance::getExcludedPaths","p":"Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.html#method_getExcludedPaths","d":"<p>Get the URIs that should be accessible even when maintenance mode is enabled.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::handle","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::clean","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_clean","d":"<p>Clean the request's data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::cleanParameterBag","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_cleanParameterBag","d":"<p>Clean the data in the parameter bag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::cleanArray","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_cleanArray","d":"<p>Clean the data in the given array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::cleanValue","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_cleanValue","d":"<p>Clean the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest::transform","p":"Illuminate/Foundation/Http/Middleware/TransformsRequest.html#method_transform","d":"<p>Transform the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TrimStrings::handle","p":"Illuminate/Foundation/Http/Middleware/TrimStrings.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TrimStrings::transform","p":"Illuminate/Foundation/Http/Middleware/TrimStrings.html#method_transform","d":"<p>Transform the given value.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\TrimStrings::skipWhen","p":"Illuminate/Foundation/Http/Middleware/TrimStrings.html#method_skipWhen","d":"<p>Register a callback that instructs the middleware to be skipped.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::handle","p":"Illuminate/Foundation/Http/Middleware/ValidatePostSize.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::getPostMaxSize","p":"Illuminate/Foundation/Http/Middleware/ValidatePostSize.html#method_getPostMaxSize","d":"<p>Determine the server 'post_max_size' as bytes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::__construct","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::handle","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::isReading","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_isReading","d":"<p>Determine if the HTTP request uses a \u2018read\u2019 verb.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::runningUnitTests","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_runningUnitTests","d":"<p>Determine if the application is running unit tests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::inExceptArray","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_inExceptArray","d":"<p>Determine if the request has a URI that should pass through CSRF verification.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::tokensMatch","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_tokensMatch","d":"<p>Determine if the session and input CSRF tokens match.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::getTokenFromRequest","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_getTokenFromRequest","d":"<p>Get the CSRF token from the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::shouldAddXsrfTokenCookie","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_shouldAddXsrfTokenCookie","d":"<p>Determine if the cookie should be added to the response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::addCookieToResponse","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_addCookieToResponse","d":"<p>Add the CSRF token to the response cookies.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::newCookie","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_newCookie","d":"<p>Create a new &quot;XSRF-TOKEN&quot; cookie that contains the CSRF token.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken::serialized","p":"Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html#method_serialized","d":"<p>Determine if the cookie contents should be serialized.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Inspiring::quote","p":"Illuminate/Foundation/Inspiring.html#method_quote","d":"<p>Get an inspiring quote.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Inspiring::quotes","p":"Illuminate/Foundation/Inspiring.html#method_quotes","d":"<p>Get the collection of inspiring quotes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Inspiring::formatForConsole","p":"Illuminate/Foundation/Inspiring.html#method_formatForConsole","d":"<p>Formats the given quote for a pretty console output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\MaintenanceModeManager::createFileDriver","p":"Illuminate/Foundation/MaintenanceModeManager.html#method_createFileDriver","d":"<p>Create an instance of the file based maintenance driver.</p>"},{"t":"M","n":"Illuminate\\Foundation\\MaintenanceModeManager::createCacheDriver","p":"Illuminate/Foundation/MaintenanceModeManager.html#method_createCacheDriver","d":"<p>Create an instance of the cache based maintenance driver.</p>"},{"t":"M","n":"Illuminate\\Foundation\\MaintenanceModeManager::getDefaultDriver","p":"Illuminate/Foundation/MaintenanceModeManager.html#method_getDefaultDriver","d":"<p>Get the default driver name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Mix::__invoke","p":"Illuminate/Foundation/Mix.html#method___invoke","d":"<p>Get the path to a versioned Mix file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::__construct","p":"Illuminate/Foundation/PackageManifest.html#method___construct","d":"<p>Create a new package manifest instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::providers","p":"Illuminate/Foundation/PackageManifest.html#method_providers","d":"<p>Get all of the service provider class names for all packages.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::aliases","p":"Illuminate/Foundation/PackageManifest.html#method_aliases","d":"<p>Get all of the aliases for all packages.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::config","p":"Illuminate/Foundation/PackageManifest.html#method_config","d":"<p>Get all of the values for all packages for the given configuration name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::getManifest","p":"Illuminate/Foundation/PackageManifest.html#method_getManifest","d":"<p>Get the current package manifest.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::build","p":"Illuminate/Foundation/PackageManifest.html#method_build","d":"<p>Build the manifest and write it to disk.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::format","p":"Illuminate/Foundation/PackageManifest.html#method_format","d":"<p>Format the given package name.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::packagesToIgnore","p":"Illuminate/Foundation/PackageManifest.html#method_packagesToIgnore","d":"<p>Get all of the package names that should be ignored.</p>"},{"t":"M","n":"Illuminate\\Foundation\\PackageManifest::write","p":"Illuminate/Foundation/PackageManifest.html#method_write","d":"<p>Write the given manifest array to disk.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Precognition::afterValidationHook","p":"Illuminate/Foundation/Precognition.html#method_afterValidationHook","d":"<p>Get the &quot;after&quot; validation hook that can be used for precognition requests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::__construct","p":"Illuminate/Foundation/ProviderRepository.html#method___construct","d":"<p>Create a new service repository instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::load","p":"Illuminate/Foundation/ProviderRepository.html#method_load","d":"<p>Register the application service providers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::loadManifest","p":"Illuminate/Foundation/ProviderRepository.html#method_loadManifest","d":"<p>Load the service provider manifest JSON file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::shouldRecompile","p":"Illuminate/Foundation/ProviderRepository.html#method_shouldRecompile","d":"<p>Determine if the manifest should be compiled.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::registerLoadEvents","p":"Illuminate/Foundation/ProviderRepository.html#method_registerLoadEvents","d":"<p>Register the load events for the given provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::compileManifest","p":"Illuminate/Foundation/ProviderRepository.html#method_compileManifest","d":"<p>Compile the application service manifest file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::freshManifest","p":"Illuminate/Foundation/ProviderRepository.html#method_freshManifest","d":"<p>Create a fresh service manifest data structure.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::writeManifest","p":"Illuminate/Foundation/ProviderRepository.html#method_writeManifest","d":"<p>Write the service manifest file to disk.</p>"},{"t":"M","n":"Illuminate\\Foundation\\ProviderRepository::createProvider","p":"Illuminate/Foundation/ProviderRepository.html#method_createProvider","d":"<p>Create a new provider instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::register","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCommands","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCommands","d":"<p>Register the given commands.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerAboutCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerAboutCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCacheClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCacheClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCacheForgetCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCacheForgetCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCacheTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCacheTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerCastMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerCastMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerChannelMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerChannelMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerComponentMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerComponentMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerConfigCacheCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerConfigCacheCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerConfigClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerConfigClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerConsoleMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerConsoleMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerControllerMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerControllerMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerEventMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerEventMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerExceptionMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerExceptionMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerFactoryMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerFactoryMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerEventClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerEventClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerJobMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerJobMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerListenerMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerListenerMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMailMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMailMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerMiddlewareMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerMiddlewareMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerModelMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerModelMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerNotificationMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerNotificationMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerNotificationTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerNotificationTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerObserverMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerObserverMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerPolicyMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerPolicyMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerProviderMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerProviderMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueForgetCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueForgetCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueListenCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueListenCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueMonitorCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueMonitorCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueuePruneBatchesCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueuePruneBatchesCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueuePruneFailedJobsCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueuePruneFailedJobsCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueRestartCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueRestartCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueWorkCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueWorkCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueFailedTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueFailedTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerQueueBatchesTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerQueueBatchesTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRequestMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRequestMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerResourceMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerResourceMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRuleMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRuleMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerScopeMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerScopeMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerSeederMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerSeederMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerSessionTableCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerSessionTableCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRouteCacheCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRouteCacheCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRouteClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRouteClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerRouteListCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerRouteListCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerSeedCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerSeedCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerTestMakeCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerTestMakeCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerVendorPublishCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerVendorPublishCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::registerViewClearCommand","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_registerViewClearCommand","d":"<p>Register the command.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ArtisanServiceProvider::provides","p":"Illuminate/Foundation/Providers/ArtisanServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ComposerServiceProvider::register","p":"Illuminate/Foundation/Providers/ComposerServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\ComposerServiceProvider::provides","p":"Illuminate/Foundation/Providers/ComposerServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FormRequestServiceProvider::register","p":"Illuminate/Foundation/Providers/FormRequestServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FormRequestServiceProvider::boot","p":"Illuminate/Foundation/Providers/FormRequestServiceProvider.html#method_boot","d":"<p>Bootstrap the application services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider::boot","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html#method_boot","d":"<p>Boot the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider::register","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerDumper","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html#method_registerDumper","d":"<p>Register an var dumper (with source) to debug variables.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerRequestValidation","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html#method_registerRequestValidation","d":"<p>Register the &quot;validate&quot; macro on the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerRequestSignatureValidation","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html#method_registerRequestSignatureValidation","d":"<p>Register the &quot;hasValidSignature&quot; macro on the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerExceptionTracking","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html#method_registerExceptionTracking","d":"<p>Register an event listener to track logged exceptions.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Providers\\FoundationServiceProvider::registerMaintenanceModeManager","p":"Illuminate/Foundation/Providers/FoundationServiceProvider.html#method_registerMaintenanceModeManager","d":"<p>Register the maintenance mode manager service.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Routing\\PrecognitionCallableDispatcher::dispatch","p":"Illuminate/Foundation/Routing/PrecognitionCallableDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given callable.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Routing\\PrecognitionControllerDispatcher::dispatch","p":"Illuminate/Foundation/Routing/PrecognitionControllerDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given controller and method.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Routing\\PrecognitionControllerDispatcher::ensureMethodExists","p":"Illuminate/Foundation/Routing/PrecognitionControllerDispatcher.html#method_ensureMethodExists","d":"<p>Ensure that the given method exists on the controller.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider::register","p":"Illuminate/Foundation/Support/Providers/AuthServiceProvider.html#method_register","d":"<p>Register the application's policies.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider::registerPolicies","p":"Illuminate/Foundation/Support/Providers/AuthServiceProvider.html#method_registerPolicies","d":"<p>Register the application's policies.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider::policies","p":"Illuminate/Foundation/Support/Providers/AuthServiceProvider.html#method_policies","d":"<p>Get the policies defined on the provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::register","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_register","d":"<p>Register the application's event listeners.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::boot","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_boot","d":"<p>Boot any application services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::listens","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_listens","d":"<p>Get the events and handlers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::getEvents","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_getEvents","d":"<p>Get the discovered events and listeners for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::discoveredEvents","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_discoveredEvents","d":"<p>Get the discovered events for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::shouldDiscoverEvents","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_shouldDiscoverEvents","d":"<p>Determine if events and listeners should be automatically discovered.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::discoverEvents","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_discoverEvents","d":"<p>Discover the events and listeners for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::discoverEventsWithin","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_discoverEventsWithin","d":"<p>Get the listener directories that should be used to discover events.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider::eventDiscoveryBasePath","p":"Illuminate/Foundation/Support/Providers/EventServiceProvider.html#method_eventDiscoveryBasePath","d":"<p>Get the base path to be used during event discovery.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::register","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_register","d":"<p>Register any application services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::boot","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_boot","d":"<p>Bootstrap any application services.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::routes","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_routes","d":"<p>Register the callback that will be used to load the application's routes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::setRootControllerNamespace","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_setRootControllerNamespace","d":"<p>Set the root controller namespace for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::routesAreCached","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_routesAreCached","d":"<p>Determine if the application routes are cached.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::loadCachedRoutes","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_loadCachedRoutes","d":"<p>Load the cached routes for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::loadRoutes","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method_loadRoutes","d":"<p>Load the application routes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider::__call","p":"Illuminate/Foundation/Support/Providers/RouteServiceProvider.html#method___call","d":"<p>Pass dynamic methods onto the router instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::actingAs","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_actingAs","d":"<p>Set the currently logged in user for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::be","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_be","d":"<p>Set the currently logged in user for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::assertAuthenticated","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_assertAuthenticated","d":"<p>Assert that the user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::assertGuest","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_assertGuest","d":"<p>Assert that the user is not authenticated.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::isAuthenticated","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_isAuthenticated","d":"<p>Return true if the user is authenticated, false otherwise.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::assertAuthenticatedAs","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_assertAuthenticatedAs","d":"<p>Assert that the user is authenticated as the given user.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::assertCredentials","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_assertCredentials","d":"<p>Assert that the given credentials are valid.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::assertInvalidCredentials","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_assertInvalidCredentials","d":"<p>Assert that the given credentials are invalid.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithAuthentication::hasCredentials","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithAuthentication.html#method_hasCredentials","d":"<p>Return true if the credentials are valid, false otherwise.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithConsole::artisan","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithConsole.html#method_artisan","d":"<p>Call artisan command and return code.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithConsole::withoutMockingConsoleOutput","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithConsole.html#method_withoutMockingConsoleOutput","d":"<p>Disable mocking the console output.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::swap","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_swap","d":"<p>Register an instance of an object in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::instance","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_instance","d":"<p>Register an instance of an object in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::mock","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_mock","d":"<p>Mock an instance of an object in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::partialMock","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_partialMock","d":"<p>Mock a partial instance of an object in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::spy","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_spy","d":"<p>Spy an instance of an object in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::forgetMock","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_forgetMock","d":"<p>Instruct the container to forget a previously mocked / spied instance of an object.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::withoutVite","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_withoutVite","d":"<p>Register an empty handler for Vite in the container.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::__invoke","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method___invoke","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::__call","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method___call","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::__toString","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method___toString","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::useIntegrityKey","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_useIntegrityKey","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::useBuildDirectory","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_useBuildDirectory","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::useHotFile","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_useHotFile","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::withEntryPoints","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_withEntryPoints","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::useScriptTagAttributes","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_useScriptTagAttributes","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::useStyleTagAttributes","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_useStyleTagAttributes","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithContainer::preloadedAssets","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithContainer.html#method_preloadedAssets","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertDatabaseHas","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertDatabaseHas","d":"<p>Assert that a given where condition exists in the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertDatabaseMissing","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertDatabaseMissing","d":"<p>Assert that a given where condition does not exist in the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertDatabaseCount","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertDatabaseCount","d":"<p>Assert the count of table entries.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertDatabaseEmpty","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertDatabaseEmpty","d":"<p>Assert that the given table has no entries.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertSoftDeleted","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertSoftDeleted","d":"<p>Assert the given record has been &quot;soft deleted&quot;.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertNotSoftDeleted","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertNotSoftDeleted","d":"<p>Assert the given record has not been &quot;soft deleted&quot;.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertModelExists","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertModelExists","d":"<p>Assert the given model exists in the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::assertModelMissing","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_assertModelMissing","d":"<p>Assert the given model does not exist in the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::expectsDatabaseQueryCount","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_expectsDatabaseQueryCount","d":"<p>Specify the number of database queries that should occur throughout the test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::isSoftDeletableModel","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_isSoftDeletableModel","d":"<p>Determine if the argument is a soft deletable model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::castAsJson","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_castAsJson","d":"<p>Cast a JSON string to a database compatible type.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::getConnection","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_getConnection","d":"<p>Get the database connection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::getTable","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_getTable","d":"<p>Get the table name from the given model or string.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::getTableConnection","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_getTableConnection","d":"<p>Get the table connection specified in the given model.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::newModelFor","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_newModelFor","d":"<p>Get the model entity from the given model or string.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDatabase::seed","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.html#method_seed","d":"<p>Seed a given database connection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDeprecationHandling::withDeprecationHandling","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDeprecationHandling.html#method_withDeprecationHandling","d":"<p>Restore deprecation handling.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithDeprecationHandling::withoutDeprecationHandling","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithDeprecationHandling.html#method_withoutDeprecationHandling","d":"<p>Disable deprecation handling for the test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::withExceptionHandling","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method_withExceptionHandling","d":"<p>Restore exception handling.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::handleExceptions","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method_handleExceptions","d":"<p>Only handle the given exceptions via the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::handleValidationExceptions","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method_handleValidationExceptions","d":"<p>Only handle validation exceptions via the exception handler.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::withoutExceptionHandling","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method_withoutExceptionHandling","d":"<p>Disable exception handling for the test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::__construct","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method___construct","d":"<p>Create a new class instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::report","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method_report","d":"<p>Report or log an exception.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::shouldReport","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method_shouldReport","d":"<p>Determine if the exception should be reported.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::render","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method_render","d":"<p>Render an exception into an HTTP response.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithExceptionHandling::renderForConsole","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithExceptionHandling.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithRedis::setUpRedis","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithRedis.html#method_setUpRedis","d":"<p>Setup redis connection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithRedis::tearDownRedis","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithRedis.html#method_tearDownRedis","d":"<p>Teardown redis connection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithRedis::redisDriverProvider","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithRedis.html#method_redisDriverProvider","d":"<p>Get redis driver provider.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithRedis::ifRedisAvailable","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithRedis.html#method_ifRedisAvailable","d":"<p>Run test if redis is available.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession::withSession","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html#method_withSession","d":"<p>Set the session to the given array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession::session","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html#method_session","d":"<p>Set the session to the given array.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession::startSession","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html#method_startSession","d":"<p>Start the session for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithSession::flushSession","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithSession.html#method_flushSession","d":"<p>Flush all of the current session data.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithTime::freezeTime","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithTime.html#method_freezeTime","d":"<p>Freeze time.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithTime::freezeSecond","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithTime.html#method_freezeSecond","d":"<p>Freeze time at the beginning of the current second.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithTime::travel","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithTime.html#method_travel","d":"<p>Begin travelling to another time.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithTime::travelTo","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithTime.html#method_travelTo","d":"<p>Travel to another time.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithTime::travelBack","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithTime.html#method_travelBack","d":"<p>Travel back to the current time.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithViews::view","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithViews.html#method_view","d":"<p>Create a new TestView from the given view.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithViews::blade","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithViews.html#method_blade","d":"<p>Render the contents of the given Blade template string.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithViews::component","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithViews.html#method_component","d":"<p>Render the given view component.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\InteractsWithViews::withViewErrors","p":"Illuminate/Foundation/Testing/Concerns/InteractsWithViews.html#method_withViewErrors","d":"<p>Populate the shared view error bag with the given errors.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withHeaders","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withHeaders","d":"<p>Define additional headers to be sent with the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withHeader","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withHeader","d":"<p>Add a header to be sent with the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withToken","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withToken","d":"<p>Add an authorization token for the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withBasicAuth","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withBasicAuth","d":"<p>Add a basic authentication header to the request with the given credentials.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withoutToken","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withoutToken","d":"<p>Remove the authorization token from the request.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::flushHeaders","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_flushHeaders","d":"<p>Flush all the configured headers.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withServerVariables","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withServerVariables","d":"<p>Define a set of server variables to be sent with the requests.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::withoutMiddleware","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_withoutMiddleware","d":"<p>Disable middleware for the test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Concerns\\MakesHttpRequests::handle","p":"Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.html#method_handle","d":null},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseMigrations::runDatabaseMigrations","p":"Illuminate/Foundation/Testing/DatabaseMigrations.html#method_runDatabaseMigrations","d":"<p>Define hooks to migrate the database before and after each test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTransactions::beginDatabaseTransaction","p":"Illuminate/Foundation/Testing/DatabaseTransactions.html#method_beginDatabaseTransaction","d":"<p>Handle database transactions on the specified connections.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTransactions::connectionsToTransact","p":"Illuminate/Foundation/Testing/DatabaseTransactions.html#method_connectionsToTransact","d":"<p>The database connections that should have transactions.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTruncation::truncateDatabaseTables","p":"Illuminate/Foundation/Testing/DatabaseTruncation.html#method_truncateDatabaseTables","d":"<p>Truncate the database tables for all configured connections.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTruncation::truncateTablesForAllConnections","p":"Illuminate/Foundation/Testing/DatabaseTruncation.html#method_truncateTablesForAllConnections","d":"<p>Truncate the database tables for all configured connections.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTruncation::truncateTablesForConnection","p":"Illuminate/Foundation/Testing/DatabaseTruncation.html#method_truncateTablesForConnection","d":"<p>Truncate the database tables for the given database connection.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTruncation::connectionsToTruncate","p":"Illuminate/Foundation/Testing/DatabaseTruncation.html#method_connectionsToTruncate","d":"<p>The database connections that should have their tables truncated.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\DatabaseTruncation::exceptTables","p":"Illuminate/Foundation/Testing/DatabaseTruncation.html#method_exceptTables","d":"<p>Get the tables that should not be truncated.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\LazilyRefreshDatabase::refreshDatabase","p":"Illuminate/Foundation/Testing/LazilyRefreshDatabase.html#method_refreshDatabase","d":"<p>Define hooks to migrate the database before and after each test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::refreshDatabase","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_refreshDatabase","d":"<p>Define hooks to migrate the database before and after each test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::usingInMemoryDatabase","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_usingInMemoryDatabase","d":"<p>Determine if an in-memory database is being used.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::refreshInMemoryDatabase","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_refreshInMemoryDatabase","d":"<p>Refresh the in-memory database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::migrateUsing","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_migrateUsing","d":"<p>The parameters that should be used when running &quot;migrate&quot;.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::refreshTestDatabase","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_refreshTestDatabase","d":"<p>Refresh a conventional test database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::beginDatabaseTransaction","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_beginDatabaseTransaction","d":"<p>Begin a database transaction on the testing database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::connectionsToTransact","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_connectionsToTransact","d":"<p>The database connections that should have transactions.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::beforeRefreshingDatabase","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_beforeRefreshingDatabase","d":"<p>Perform any work that should take place before the database has started refreshing.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\RefreshDatabase::afterRefreshingDatabase","p":"Illuminate/Foundation/Testing/RefreshDatabase.html#method_afterRefreshingDatabase","d":"<p>Perform any work that should take place once the database has finished refreshing.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::createApplication","p":"Illuminate/Foundation/Testing/TestCase.html#method_createApplication","d":"<p>Creates the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::setUp","p":"Illuminate/Foundation/Testing/TestCase.html#method_setUp","d":"<p>Setup the test environment.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::refreshApplication","p":"Illuminate/Foundation/Testing/TestCase.html#method_refreshApplication","d":"<p>Refresh the application instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::setUpTraits","p":"Illuminate/Foundation/Testing/TestCase.html#method_setUpTraits","d":"<p>Boot the testing helper traits.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::runTest","p":"Illuminate/Foundation/Testing/TestCase.html#method_runTest","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::tearDown","p":"Illuminate/Foundation/Testing/TestCase.html#method_tearDown","d":"<p>Clean up the testing environment before the next test.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::tearDownAfterClass","p":"Illuminate/Foundation/Testing/TestCase.html#method_tearDownAfterClass","d":"<p>Clean up the testing environment before the next test case.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::afterApplicationCreated","p":"Illuminate/Foundation/Testing/TestCase.html#method_afterApplicationCreated","d":"<p>Register a callback to be run after the application is created.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::beforeApplicationDestroyed","p":"Illuminate/Foundation/Testing/TestCase.html#method_beforeApplicationDestroyed","d":"<p>Register a callback to be run before the application is destroyed.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\TestCase::callBeforeApplicationDestroyedCallbacks","p":"Illuminate/Foundation/Testing/TestCase.html#method_callBeforeApplicationDestroyedCallbacks","d":"<p>Execute the application's pre-destruction callbacks.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Traits\\CanConfigureMigrationCommands::migrateFreshUsing","p":"Illuminate/Foundation/Testing/Traits/CanConfigureMigrationCommands.html#method_migrateFreshUsing","d":"<p>The parameters that should be used when running &quot;migrate:fresh&quot;.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Traits\\CanConfigureMigrationCommands::shouldDropViews","p":"Illuminate/Foundation/Testing/Traits/CanConfigureMigrationCommands.html#method_shouldDropViews","d":"<p>Determine if views should be dropped when refreshing the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Traits\\CanConfigureMigrationCommands::shouldDropTypes","p":"Illuminate/Foundation/Testing/Traits/CanConfigureMigrationCommands.html#method_shouldDropTypes","d":"<p>Determine if types should be dropped when refreshing the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Traits\\CanConfigureMigrationCommands::shouldSeed","p":"Illuminate/Foundation/Testing/Traits/CanConfigureMigrationCommands.html#method_shouldSeed","d":"<p>Determine if the seed task should be run when refreshing the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Traits\\CanConfigureMigrationCommands::seeder","p":"Illuminate/Foundation/Testing/Traits/CanConfigureMigrationCommands.html#method_seeder","d":"<p>Determine the specific seeder class that should be used when refreshing the database.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\WithFaker::setUpFaker","p":"Illuminate/Foundation/Testing/WithFaker.html#method_setUpFaker","d":"<p>Setup up the Faker instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\WithFaker::faker","p":"Illuminate/Foundation/Testing/WithFaker.html#method_faker","d":"<p>Get the default Faker instance for a given locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\WithFaker::makeFaker","p":"Illuminate/Foundation/Testing/WithFaker.html#method_makeFaker","d":"<p>Create a Faker instance for the given locale.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\WithoutEvents::disableEventsForAllTests","p":"Illuminate/Foundation/Testing/WithoutEvents.html#method_disableEventsForAllTests","d":"<p>Prevent all event handles from being executed.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\WithoutMiddleware::disableMiddlewareForAllTests","p":"Illuminate/Foundation/Testing/WithoutMiddleware.html#method_disableMiddlewareForAllTests","d":"<p>Prevent all middleware from being executed for this test class.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::__construct","p":"Illuminate/Foundation/Testing/Wormhole.html#method___construct","d":"<p>Create a new wormhole instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::millisecond","p":"Illuminate/Foundation/Testing/Wormhole.html#method_millisecond","d":"<p>Travel forward the given number of milliseconds.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::milliseconds","p":"Illuminate/Foundation/Testing/Wormhole.html#method_milliseconds","d":"<p>Travel forward the given number of milliseconds.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::second","p":"Illuminate/Foundation/Testing/Wormhole.html#method_second","d":"<p>Travel forward the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::seconds","p":"Illuminate/Foundation/Testing/Wormhole.html#method_seconds","d":"<p>Travel forward the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::minute","p":"Illuminate/Foundation/Testing/Wormhole.html#method_minute","d":"<p>Travel forward the given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::minutes","p":"Illuminate/Foundation/Testing/Wormhole.html#method_minutes","d":"<p>Travel forward the given number of minutes.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::hour","p":"Illuminate/Foundation/Testing/Wormhole.html#method_hour","d":"<p>Travel forward the given number of hours.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::hours","p":"Illuminate/Foundation/Testing/Wormhole.html#method_hours","d":"<p>Travel forward the given number of hours.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::day","p":"Illuminate/Foundation/Testing/Wormhole.html#method_day","d":"<p>Travel forward the given number of days.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::days","p":"Illuminate/Foundation/Testing/Wormhole.html#method_days","d":"<p>Travel forward the given number of days.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::week","p":"Illuminate/Foundation/Testing/Wormhole.html#method_week","d":"<p>Travel forward the given number of weeks.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::weeks","p":"Illuminate/Foundation/Testing/Wormhole.html#method_weeks","d":"<p>Travel forward the given number of weeks.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::month","p":"Illuminate/Foundation/Testing/Wormhole.html#method_month","d":"<p>Travel forward the given number of months.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::months","p":"Illuminate/Foundation/Testing/Wormhole.html#method_months","d":"<p>Travel forward the given number of months.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::year","p":"Illuminate/Foundation/Testing/Wormhole.html#method_year","d":"<p>Travel forward the given number of years.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::years","p":"Illuminate/Foundation/Testing/Wormhole.html#method_years","d":"<p>Travel forward the given number of years.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::back","p":"Illuminate/Foundation/Testing/Wormhole.html#method_back","d":"<p>Travel back to the current time.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Testing\\Wormhole::handleCallback","p":"Illuminate/Foundation/Testing/Wormhole.html#method_handleCallback","d":"<p>Handle the given optional execution callback.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::validateWith","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_validateWith","d":"<p>Run the validation routine against the given validator.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::validate","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_validate","d":"<p>Validate the given request with the given rules.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::validateWithBag","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_validateWithBag","d":"<p>Validate the given request with the given rules.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Validation\\ValidatesRequests::getValidationFactory","p":"Illuminate/Foundation/Validation/ValidatesRequests.html#method_getValidationFactory","d":"<p>Get a validation factory instance.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::preloadedAssets","p":"Illuminate/Foundation/Vite.html#method_preloadedAssets","d":"<p>Get the preloaded assets.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::cspNonce","p":"Illuminate/Foundation/Vite.html#method_cspNonce","d":"<p>Get the Content Security Policy nonce applied to all generated tags.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::useCspNonce","p":"Illuminate/Foundation/Vite.html#method_useCspNonce","d":"<p>Generate or set a Content Security Policy nonce to apply to all generated tags.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::useIntegrityKey","p":"Illuminate/Foundation/Vite.html#method_useIntegrityKey","d":"<p>Use the given key to detect integrity hashes in the manifest.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::withEntryPoints","p":"Illuminate/Foundation/Vite.html#method_withEntryPoints","d":"<p>Set the Vite entry points.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::useManifestFilename","p":"Illuminate/Foundation/Vite.html#method_useManifestFilename","d":"<p>Set the filename for the manifest file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::hotFile","p":"Illuminate/Foundation/Vite.html#method_hotFile","d":"<p>Get the Vite &quot;hot&quot; file path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::useHotFile","p":"Illuminate/Foundation/Vite.html#method_useHotFile","d":"<p>Set the Vite &quot;hot&quot; file path.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::useBuildDirectory","p":"Illuminate/Foundation/Vite.html#method_useBuildDirectory","d":"<p>Set the Vite build directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::useScriptTagAttributes","p":"Illuminate/Foundation/Vite.html#method_useScriptTagAttributes","d":"<p>Use the given callback to resolve attributes for script tags.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::useStyleTagAttributes","p":"Illuminate/Foundation/Vite.html#method_useStyleTagAttributes","d":"<p>Use the given callback to resolve attributes for style tags.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::usePreloadTagAttributes","p":"Illuminate/Foundation/Vite.html#method_usePreloadTagAttributes","d":"<p>Use the given callback to resolve attributes for preload tags.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::__invoke","p":"Illuminate/Foundation/Vite.html#method___invoke","d":"<p>Generate Vite tags for an entrypoint.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::makeTagForChunk","p":"Illuminate/Foundation/Vite.html#method_makeTagForChunk","d":"<p>Make tag for the given chunk.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::makePreloadTagForChunk","p":"Illuminate/Foundation/Vite.html#method_makePreloadTagForChunk","d":"<p>Make a preload tag for the given chunk.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::resolveScriptTagAttributes","p":"Illuminate/Foundation/Vite.html#method_resolveScriptTagAttributes","d":"<p>Resolve the attributes for the chunks generated script tag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::resolveStylesheetTagAttributes","p":"Illuminate/Foundation/Vite.html#method_resolveStylesheetTagAttributes","d":"<p>Resolve the attributes for the chunks generated stylesheet tag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::resolvePreloadTagAttributes","p":"Illuminate/Foundation/Vite.html#method_resolvePreloadTagAttributes","d":"<p>Resolve the attributes for the chunks generated preload tag.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::makeTag","p":"Illuminate/Foundation/Vite.html#method_makeTag","d":"<p>Generate an appropriate tag for the given URL in HMR mode.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::makeScriptTag","p":"Illuminate/Foundation/Vite.html#method_makeScriptTag","d":"<p>Generate a script tag for the given URL.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::makeStylesheetTag","p":"Illuminate/Foundation/Vite.html#method_makeStylesheetTag","d":"<p>Generate a stylesheet tag for the given URL in HMR mode.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::makeScriptTagWithAttributes","p":"Illuminate/Foundation/Vite.html#method_makeScriptTagWithAttributes","d":"<p>Generate a script tag with attributes for the given URL.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::makeStylesheetTagWithAttributes","p":"Illuminate/Foundation/Vite.html#method_makeStylesheetTagWithAttributes","d":"<p>Generate a link tag with attributes for the given URL.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::isCssPath","p":"Illuminate/Foundation/Vite.html#method_isCssPath","d":"<p>Determine whether the given path is a CSS file.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::parseAttributes","p":"Illuminate/Foundation/Vite.html#method_parseAttributes","d":"<p>Parse the attributes into key=&quot;value&quot; strings.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::reactRefresh","p":"Illuminate/Foundation/Vite.html#method_reactRefresh","d":"<p>Generate React refresh runtime script.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::hotAsset","p":"Illuminate/Foundation/Vite.html#method_hotAsset","d":"<p>Get the path to a given asset when running in HMR mode.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::asset","p":"Illuminate/Foundation/Vite.html#method_asset","d":"<p>Get the URL for an asset.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::assetPath","p":"Illuminate/Foundation/Vite.html#method_assetPath","d":"<p>Generate an asset path for the application.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::manifest","p":"Illuminate/Foundation/Vite.html#method_manifest","d":"<p>Get the the manifest file for the given build directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::manifestPath","p":"Illuminate/Foundation/Vite.html#method_manifestPath","d":"<p>Get the path to the manifest file for the given build directory.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::manifestHash","p":"Illuminate/Foundation/Vite.html#method_manifestHash","d":"<p>Get a unique hash representing the current manifest, or null if there is no manifest.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::chunk","p":"Illuminate/Foundation/Vite.html#method_chunk","d":"<p>Get the chunk for the given entry point / asset.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::isRunningHot","p":"Illuminate/Foundation/Vite.html#method_isRunningHot","d":"<p>Determine if the HMR server is running.</p>"},{"t":"M","n":"Illuminate\\Foundation\\Vite::toHtml","p":"Illuminate/Foundation/Vite.html#method_toHtml","d":"<p>Get the Vite tag content as a string of HTML.</p>"},{"t":"M","n":"Illuminate\\Hashing\\AbstractHasher::info","p":"Illuminate/Hashing/AbstractHasher.html#method_info","d":"<p>Get information about the given hashed value.</p>"},{"t":"M","n":"Illuminate\\Hashing\\AbstractHasher::check","p":"Illuminate/Hashing/AbstractHasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Hashing\\Argon2IdHasher::check","p":"Illuminate/Hashing/Argon2IdHasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Hashing\\Argon2IdHasher::algorithm","p":"Illuminate/Hashing/Argon2IdHasher.html#method_algorithm","d":"<p>Get the algorithm that should be used for hashing.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::__construct","p":"Illuminate/Hashing/ArgonHasher.html#method___construct","d":"<p>Create a new hasher instance.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::make","p":"Illuminate/Hashing/ArgonHasher.html#method_make","d":"<p>Hash the given value.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::algorithm","p":"Illuminate/Hashing/ArgonHasher.html#method_algorithm","d":"<p>Get the algorithm that should be used for hashing.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::check","p":"Illuminate/Hashing/ArgonHasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::needsRehash","p":"Illuminate/Hashing/ArgonHasher.html#method_needsRehash","d":"<p>Check if the given hash has been hashed using the given options.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::setMemory","p":"Illuminate/Hashing/ArgonHasher.html#method_setMemory","d":"<p>Set the default password memory factor.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::setTime","p":"Illuminate/Hashing/ArgonHasher.html#method_setTime","d":"<p>Set the default password timing factor.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::setThreads","p":"Illuminate/Hashing/ArgonHasher.html#method_setThreads","d":"<p>Set the default password threads factor.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::memory","p":"Illuminate/Hashing/ArgonHasher.html#method_memory","d":"<p>Extract the memory cost value from the options array.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::time","p":"Illuminate/Hashing/ArgonHasher.html#method_time","d":"<p>Extract the time cost value from the options array.</p>"},{"t":"M","n":"Illuminate\\Hashing\\ArgonHasher::threads","p":"Illuminate/Hashing/ArgonHasher.html#method_threads","d":"<p>Extract the thread's value from the options array.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::__construct","p":"Illuminate/Hashing/BcryptHasher.html#method___construct","d":"<p>Create a new hasher instance.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::make","p":"Illuminate/Hashing/BcryptHasher.html#method_make","d":"<p>Hash the given value.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::check","p":"Illuminate/Hashing/BcryptHasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::needsRehash","p":"Illuminate/Hashing/BcryptHasher.html#method_needsRehash","d":"<p>Check if the given hash has been hashed using the given options.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::setRounds","p":"Illuminate/Hashing/BcryptHasher.html#method_setRounds","d":"<p>Set the default password work factor.</p>"},{"t":"M","n":"Illuminate\\Hashing\\BcryptHasher::cost","p":"Illuminate/Hashing/BcryptHasher.html#method_cost","d":"<p>Extract the cost value from the options array.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashManager::createBcryptDriver","p":"Illuminate/Hashing/HashManager.html#method_createBcryptDriver","d":"<p>Create an instance of the Bcrypt hash Driver.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashManager::createArgonDriver","p":"Illuminate/Hashing/HashManager.html#method_createArgonDriver","d":"<p>Create an instance of the Argon2i hash Driver.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashManager::createArgon2idDriver","p":"Illuminate/Hashing/HashManager.html#method_createArgon2idDriver","d":"<p>Create an instance of the Argon2id hash Driver.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashManager::info","p":"Illuminate/Hashing/HashManager.html#method_info","d":"<p>Get information about the given hashed value.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashManager::make","p":"Illuminate/Hashing/HashManager.html#method_make","d":"<p>Hash the given value.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashManager::check","p":"Illuminate/Hashing/HashManager.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashManager::needsRehash","p":"Illuminate/Hashing/HashManager.html#method_needsRehash","d":"<p>Check if the given hash has been hashed using the given options.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashManager::getDefaultDriver","p":"Illuminate/Hashing/HashManager.html#method_getDefaultDriver","d":"<p>Get the default driver name.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashServiceProvider::register","p":"Illuminate/Hashing/HashServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Hashing\\HashServiceProvider::provides","p":"Illuminate/Hashing/HashServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::ok","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_ok","d":"<p>Determine if the response code was 200 &quot;OK&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::created","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_created","d":"<p>Determine if the response code was 201 &quot;Created&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::accepted","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_accepted","d":"<p>Determine if the response code was 202 &quot;Accepted&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::noContent","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_noContent","d":"<p>Determine if the response code was the given status code and the body has no content.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::movedPermanently","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_movedPermanently","d":"<p>Determine if the response code was a 301 &quot;Moved Permanently&quot;.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::found","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_found","d":"<p>Determine if the response code was a 302 &quot;Found&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::badRequest","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_badRequest","d":"<p>Determine if the response was a 400 &quot;Bad Request&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::unauthorized","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_unauthorized","d":"<p>Determine if the response was a 401 &quot;Unauthorized&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::paymentRequired","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_paymentRequired","d":"<p>Determine if the response was a 402 &quot;Payment Required&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::forbidden","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_forbidden","d":"<p>Determine if the response was a 403 &quot;Forbidden&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::notFound","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_notFound","d":"<p>Determine if the response was a 404 &quot;Not Found&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::requestTimeout","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_requestTimeout","d":"<p>Determine if the response was a 408 &quot;Request Timeout&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::conflict","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_conflict","d":"<p>Determine if the response was a 409 &quot;Conflict&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::unprocessableEntity","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_unprocessableEntity","d":"<p>Determine if the response was a 422 &quot;Unprocessable Entity&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Concerns\\DeterminesStatusCode::tooManyRequests","p":"Illuminate/Http/Client/Concerns/DeterminesStatusCode.html#method_tooManyRequests","d":"<p>Determine if the response was a 429 &quot;Too Many Requests&quot; response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Events\\ConnectionFailed::__construct","p":"Illuminate/Http/Client/Events/ConnectionFailed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Events\\RequestSending::__construct","p":"Illuminate/Http/Client/Events/RequestSending.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Events\\ResponseReceived::__construct","p":"Illuminate/Http/Client/Events/ResponseReceived.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::__construct","p":"Illuminate/Http/Client/Factory.html#method___construct","d":"<p>Create a new factory instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::response","p":"Illuminate/Http/Client/Factory.html#method_response","d":"<p>Create a new response instance for use during stubbing.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::sequence","p":"Illuminate/Http/Client/Factory.html#method_sequence","d":"<p>Get an invokable object that returns a sequence of responses in order for use during stubbing.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::fake","p":"Illuminate/Http/Client/Factory.html#method_fake","d":"<p>Register a stub callable that will intercept requests and be able to return stub responses.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::fakeSequence","p":"Illuminate/Http/Client/Factory.html#method_fakeSequence","d":"<p>Register a response sequence for the given URL pattern.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::stubUrl","p":"Illuminate/Http/Client/Factory.html#method_stubUrl","d":"<p>Stub the given URL using the given callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::preventStrayRequests","p":"Illuminate/Http/Client/Factory.html#method_preventStrayRequests","d":"<p>Indicate that an exception should be thrown if any request is not faked.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::allowStrayRequests","p":"Illuminate/Http/Client/Factory.html#method_allowStrayRequests","d":"<p>Indicate that an exception should not be thrown if any request is not faked.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::record","p":"Illuminate/Http/Client/Factory.html#method_record","d":"<p>Begin recording request / response pairs.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::recordRequestResponsePair","p":"Illuminate/Http/Client/Factory.html#method_recordRequestResponsePair","d":"<p>Record a request response pair.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::assertSent","p":"Illuminate/Http/Client/Factory.html#method_assertSent","d":"<p>Assert that a request / response pair was recorded matching a given truth test.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::assertSentInOrder","p":"Illuminate/Http/Client/Factory.html#method_assertSentInOrder","d":"<p>Assert that the given request was sent in the given order.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::assertNotSent","p":"Illuminate/Http/Client/Factory.html#method_assertNotSent","d":"<p>Assert that a request / response pair was not recorded matching a given truth test.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::assertNothingSent","p":"Illuminate/Http/Client/Factory.html#method_assertNothingSent","d":"<p>Assert that no request / response pair was recorded.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::assertSentCount","p":"Illuminate/Http/Client/Factory.html#method_assertSentCount","d":"<p>Assert how many requests have been recorded.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::assertSequencesAreEmpty","p":"Illuminate/Http/Client/Factory.html#method_assertSequencesAreEmpty","d":"<p>Assert that every created response sequence is empty.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::recorded","p":"Illuminate/Http/Client/Factory.html#method_recorded","d":"<p>Get a collection of the request / response pairs matching the given truth test.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::newPendingRequest","p":"Illuminate/Http/Client/Factory.html#method_newPendingRequest","d":"<p>Create a new pending request instance for this factory.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::getDispatcher","p":"Illuminate/Http/Client/Factory.html#method_getDispatcher","d":"<p>Get the current event dispatcher implementation.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Factory::__call","p":"Illuminate/Http/Client/Factory.html#method___call","d":"<p>Execute a method against a new pending request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::__construct","p":"Illuminate/Http/Client/PendingRequest.html#method___construct","d":"<p>Create a new HTTP Client instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::baseUrl","p":"Illuminate/Http/Client/PendingRequest.html#method_baseUrl","d":"<p>Set the base URL for the pending request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withBody","p":"Illuminate/Http/Client/PendingRequest.html#method_withBody","d":"<p>Attach a raw body to the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::asJson","p":"Illuminate/Http/Client/PendingRequest.html#method_asJson","d":"<p>Indicate the request contains JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::asForm","p":"Illuminate/Http/Client/PendingRequest.html#method_asForm","d":"<p>Indicate the request contains form parameters.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::attach","p":"Illuminate/Http/Client/PendingRequest.html#method_attach","d":"<p>Attach a file to the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::asMultipart","p":"Illuminate/Http/Client/PendingRequest.html#method_asMultipart","d":"<p>Indicate the request is a multi-part form request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::bodyFormat","p":"Illuminate/Http/Client/PendingRequest.html#method_bodyFormat","d":"<p>Specify the body format of the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::contentType","p":"Illuminate/Http/Client/PendingRequest.html#method_contentType","d":"<p>Specify the request's content type.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::acceptJson","p":"Illuminate/Http/Client/PendingRequest.html#method_acceptJson","d":"<p>Indicate that JSON should be returned by the server.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::accept","p":"Illuminate/Http/Client/PendingRequest.html#method_accept","d":"<p>Indicate the type of content that should be returned by the server.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withHeaders","p":"Illuminate/Http/Client/PendingRequest.html#method_withHeaders","d":"<p>Add the given headers to the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withBasicAuth","p":"Illuminate/Http/Client/PendingRequest.html#method_withBasicAuth","d":"<p>Specify the basic authentication username and password for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withDigestAuth","p":"Illuminate/Http/Client/PendingRequest.html#method_withDigestAuth","d":"<p>Specify the digest authentication username and password for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withToken","p":"Illuminate/Http/Client/PendingRequest.html#method_withToken","d":"<p>Specify an authorization token for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withUserAgent","p":"Illuminate/Http/Client/PendingRequest.html#method_withUserAgent","d":"<p>Specify the user agent for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withUrlParameters","p":"Illuminate/Http/Client/PendingRequest.html#method_withUrlParameters","d":"<p>Specify the URL parameters that can be substituted into the request URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withCookies","p":"Illuminate/Http/Client/PendingRequest.html#method_withCookies","d":"<p>Specify the cookies that should be included with the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::maxRedirects","p":"Illuminate/Http/Client/PendingRequest.html#method_maxRedirects","d":"<p>Specify the maximum number of redirects to allow.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withoutRedirecting","p":"Illuminate/Http/Client/PendingRequest.html#method_withoutRedirecting","d":"<p>Indicate that redirects should not be followed.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withoutVerifying","p":"Illuminate/Http/Client/PendingRequest.html#method_withoutVerifying","d":"<p>Indicate that TLS certificates should not be verified.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::sink","p":"Illuminate/Http/Client/PendingRequest.html#method_sink","d":"<p>Specify the path where the body of the response should be stored.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::timeout","p":"Illuminate/Http/Client/PendingRequest.html#method_timeout","d":"<p>Specify the timeout (in seconds) for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::connectTimeout","p":"Illuminate/Http/Client/PendingRequest.html#method_connectTimeout","d":"<p>Specify the connect timeout (in seconds) for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::retry","p":"Illuminate/Http/Client/PendingRequest.html#method_retry","d":"<p>Specify the number of times the request should be attempted.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withOptions","p":"Illuminate/Http/Client/PendingRequest.html#method_withOptions","d":"<p>Replace the specified options on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::withMiddleware","p":"Illuminate/Http/Client/PendingRequest.html#method_withMiddleware","d":"<p>Add new middleware the client handler stack.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::beforeSending","p":"Illuminate/Http/Client/PendingRequest.html#method_beforeSending","d":"<p>Add a new &quot;before sending&quot; callback to the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::throw","p":"Illuminate/Http/Client/PendingRequest.html#method_throw","d":"<p>Throw an exception if a server or client error occurs.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::throwIf","p":"Illuminate/Http/Client/PendingRequest.html#method_throwIf","d":"<p>Throw an exception if a server or client error occurred and the given condition evaluates to true.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::throwUnless","p":"Illuminate/Http/Client/PendingRequest.html#method_throwUnless","d":"<p>Throw an exception if a server or client error occurred and the given condition evaluates to false.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::dump","p":"Illuminate/Http/Client/PendingRequest.html#method_dump","d":"<p>Dump the request before sending.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::dd","p":"Illuminate/Http/Client/PendingRequest.html#method_dd","d":"<p>Dump the request before sending and end the script.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::get","p":"Illuminate/Http/Client/PendingRequest.html#method_get","d":"<p>Issue a GET request to the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::head","p":"Illuminate/Http/Client/PendingRequest.html#method_head","d":"<p>Issue a HEAD request to the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::post","p":"Illuminate/Http/Client/PendingRequest.html#method_post","d":"<p>Issue a POST request to the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::patch","p":"Illuminate/Http/Client/PendingRequest.html#method_patch","d":"<p>Issue a PATCH request to the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::put","p":"Illuminate/Http/Client/PendingRequest.html#method_put","d":"<p>Issue a PUT request to the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::delete","p":"Illuminate/Http/Client/PendingRequest.html#method_delete","d":"<p>Issue a DELETE request to the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::pool","p":"Illuminate/Http/Client/PendingRequest.html#method_pool","d":"<p>Send a pool of asynchronous requests concurrently.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::send","p":"Illuminate/Http/Client/PendingRequest.html#method_send","d":"<p>Send the request to the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::expandUrlParameters","p":"Illuminate/Http/Client/PendingRequest.html#method_expandUrlParameters","d":"<p>Substitute the URL parameters in the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::parseHttpOptions","p":"Illuminate/Http/Client/PendingRequest.html#method_parseHttpOptions","d":"<p>Parse the given HTTP options and set the appropriate additional options.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::parseMultipartBodyFormat","p":"Illuminate/Http/Client/PendingRequest.html#method_parseMultipartBodyFormat","d":"<p>Parse multi-part form data.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::makePromise","p":"Illuminate/Http/Client/PendingRequest.html#method_makePromise","d":"<p>Send an asynchronous request to the given URL.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::sendRequest","p":"Illuminate/Http/Client/PendingRequest.html#method_sendRequest","d":"<p>Send a request either synchronously or asynchronously.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::parseRequestData","p":"Illuminate/Http/Client/PendingRequest.html#method_parseRequestData","d":"<p>Get the request data as an array so that we can attach it to the request for convenient assertions.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::populateResponse","p":"Illuminate/Http/Client/PendingRequest.html#method_populateResponse","d":"<p>Populate the given response with additional data.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::buildClient","p":"Illuminate/Http/Client/PendingRequest.html#method_buildClient","d":"<p>Build the Guzzle client.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::requestsReusableClient","p":"Illuminate/Http/Client/PendingRequest.html#method_requestsReusableClient","d":"<p>Determine if a reusable client is required.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::getReusableClient","p":"Illuminate/Http/Client/PendingRequest.html#method_getReusableClient","d":"<p>Retrieve a reusable Guzzle client.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::createClient","p":"Illuminate/Http/Client/PendingRequest.html#method_createClient","d":"<p>Create new Guzzle client.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::buildHandlerStack","p":"Illuminate/Http/Client/PendingRequest.html#method_buildHandlerStack","d":"<p>Build the Guzzle client handler stack.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::pushHandlers","p":"Illuminate/Http/Client/PendingRequest.html#method_pushHandlers","d":"<p>Add the necessary handlers to the given handler stack.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::buildBeforeSendingHandler","p":"Illuminate/Http/Client/PendingRequest.html#method_buildBeforeSendingHandler","d":"<p>Build the before sending handler.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::buildRecorderHandler","p":"Illuminate/Http/Client/PendingRequest.html#method_buildRecorderHandler","d":"<p>Build the recorder handler.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::buildStubHandler","p":"Illuminate/Http/Client/PendingRequest.html#method_buildStubHandler","d":"<p>Build the stub handler.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::sinkStubHandler","p":"Illuminate/Http/Client/PendingRequest.html#method_sinkStubHandler","d":"<p>Get the sink stub handler callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::runBeforeSendingCallbacks","p":"Illuminate/Http/Client/PendingRequest.html#method_runBeforeSendingCallbacks","d":"<p>Execute the &quot;before sending&quot; callbacks.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::mergeOptions","p":"Illuminate/Http/Client/PendingRequest.html#method_mergeOptions","d":"<p>Replace the given options with the current request options.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::stub","p":"Illuminate/Http/Client/PendingRequest.html#method_stub","d":"<p>Register a stub callable that will intercept requests and be able to return stub responses.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::preventStrayRequests","p":"Illuminate/Http/Client/PendingRequest.html#method_preventStrayRequests","d":"<p>Indicate that an exception should be thrown if any request is not faked.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::async","p":"Illuminate/Http/Client/PendingRequest.html#method_async","d":"<p>Toggle asynchronicity in requests.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::getPromise","p":"Illuminate/Http/Client/PendingRequest.html#method_getPromise","d":"<p>Retrieve the pending request promise.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::dispatchRequestSendingEvent","p":"Illuminate/Http/Client/PendingRequest.html#method_dispatchRequestSendingEvent","d":"<p>Dispatch the RequestSending event if a dispatcher is available.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::dispatchResponseReceivedEvent","p":"Illuminate/Http/Client/PendingRequest.html#method_dispatchResponseReceivedEvent","d":"<p>Dispatch the ResponseReceived event if a dispatcher is available.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::dispatchConnectionFailedEvent","p":"Illuminate/Http/Client/PendingRequest.html#method_dispatchConnectionFailedEvent","d":"<p>Dispatch the ConnectionFailed event if a dispatcher is available.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::setClient","p":"Illuminate/Http/Client/PendingRequest.html#method_setClient","d":"<p>Set the client instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::setHandler","p":"Illuminate/Http/Client/PendingRequest.html#method_setHandler","d":"<p>Create a new client instance using the given handler.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\PendingRequest::getOptions","p":"Illuminate/Http/Client/PendingRequest.html#method_getOptions","d":"<p>Get the pending request options.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Pool::__construct","p":"Illuminate/Http/Client/Pool.html#method___construct","d":"<p>Create a new requests pool.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Pool::as","p":"Illuminate/Http/Client/Pool.html#method_as","d":"<p>Add a request to the pool with a key.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Pool::asyncRequest","p":"Illuminate/Http/Client/Pool.html#method_asyncRequest","d":"<p>Retrieve a new async pending request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Pool::getRequests","p":"Illuminate/Http/Client/Pool.html#method_getRequests","d":"<p>Retrieve the requests in the pool.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Pool::__call","p":"Illuminate/Http/Client/Pool.html#method___call","d":"<p>Add a request to the pool with a numeric index.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::__construct","p":"Illuminate/Http/Client/Request.html#method___construct","d":"<p>Create a new request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::method","p":"Illuminate/Http/Client/Request.html#method_method","d":"<p>Get the request method.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::url","p":"Illuminate/Http/Client/Request.html#method_url","d":"<p>Get the URL of the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::hasHeader","p":"Illuminate/Http/Client/Request.html#method_hasHeader","d":"<p>Determine if the request has a given header.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::hasHeaders","p":"Illuminate/Http/Client/Request.html#method_hasHeaders","d":"<p>Determine if the request has the given headers.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::header","p":"Illuminate/Http/Client/Request.html#method_header","d":"<p>Get the values for the header with the given name.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::headers","p":"Illuminate/Http/Client/Request.html#method_headers","d":"<p>Get the request headers.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::body","p":"Illuminate/Http/Client/Request.html#method_body","d":"<p>Get the body of the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::hasFile","p":"Illuminate/Http/Client/Request.html#method_hasFile","d":"<p>Determine if the request contains the given file.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::data","p":"Illuminate/Http/Client/Request.html#method_data","d":"<p>Get the request's data (form parameters or JSON).</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::parameters","p":"Illuminate/Http/Client/Request.html#method_parameters","d":"<p>Get the request's form parameters.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::json","p":"Illuminate/Http/Client/Request.html#method_json","d":"<p>Get the JSON decoded body of the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::isForm","p":"Illuminate/Http/Client/Request.html#method_isForm","d":"<p>Determine if the request is simple form data.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::isJson","p":"Illuminate/Http/Client/Request.html#method_isJson","d":"<p>Determine if the request is JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::isMultipart","p":"Illuminate/Http/Client/Request.html#method_isMultipart","d":"<p>Determine if the request is multipart.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::withData","p":"Illuminate/Http/Client/Request.html#method_withData","d":"<p>Set the decoded data on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::toPsrRequest","p":"Illuminate/Http/Client/Request.html#method_toPsrRequest","d":"<p>Get the underlying PSR compliant request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::offsetExists","p":"Illuminate/Http/Client/Request.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::offsetGet","p":"Illuminate/Http/Client/Request.html#method_offsetGet","d":"<p>Get the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::offsetSet","p":"Illuminate/Http/Client/Request.html#method_offsetSet","d":"<p>Set the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Request::offsetUnset","p":"Illuminate/Http/Client/Request.html#method_offsetUnset","d":"<p>Unset the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\RequestException::__construct","p":"Illuminate/Http/Client/RequestException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\RequestException::prepareMessage","p":"Illuminate/Http/Client/RequestException.html#method_prepareMessage","d":"<p>Prepare the exception message.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::__construct","p":"Illuminate/Http/Client/Response.html#method___construct","d":"<p>Create a new response instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::body","p":"Illuminate/Http/Client/Response.html#method_body","d":"<p>Get the body of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::json","p":"Illuminate/Http/Client/Response.html#method_json","d":"<p>Get the JSON decoded body of the response as an array or scalar value.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::object","p":"Illuminate/Http/Client/Response.html#method_object","d":"<p>Get the JSON decoded body of the response as an object.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::collect","p":"Illuminate/Http/Client/Response.html#method_collect","d":"<p>Get the JSON decoded body of the response as a collection.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::header","p":"Illuminate/Http/Client/Response.html#method_header","d":"<p>Get a header from the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::headers","p":"Illuminate/Http/Client/Response.html#method_headers","d":"<p>Get the headers from the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::status","p":"Illuminate/Http/Client/Response.html#method_status","d":"<p>Get the status code of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::reason","p":"Illuminate/Http/Client/Response.html#method_reason","d":"<p>Get the reason phrase of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::effectiveUri","p":"Illuminate/Http/Client/Response.html#method_effectiveUri","d":"<p>Get the effective URI of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::successful","p":"Illuminate/Http/Client/Response.html#method_successful","d":"<p>Determine if the request was successful.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::redirect","p":"Illuminate/Http/Client/Response.html#method_redirect","d":"<p>Determine if the response was a redirect.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::failed","p":"Illuminate/Http/Client/Response.html#method_failed","d":"<p>Determine if the response indicates a client or server error occurred.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::clientError","p":"Illuminate/Http/Client/Response.html#method_clientError","d":"<p>Determine if the response indicates a client error occurred.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::serverError","p":"Illuminate/Http/Client/Response.html#method_serverError","d":"<p>Determine if the response indicates a server error occurred.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::onError","p":"Illuminate/Http/Client/Response.html#method_onError","d":"<p>Execute the given callback if there was a server or client error.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::cookies","p":"Illuminate/Http/Client/Response.html#method_cookies","d":"<p>Get the response cookies.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::handlerStats","p":"Illuminate/Http/Client/Response.html#method_handlerStats","d":"<p>Get the handler stats of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::close","p":"Illuminate/Http/Client/Response.html#method_close","d":"<p>Close the stream and any underlying resources.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::toPsrResponse","p":"Illuminate/Http/Client/Response.html#method_toPsrResponse","d":"<p>Get the underlying PSR response for the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::toException","p":"Illuminate/Http/Client/Response.html#method_toException","d":"<p>Create an exception if a server or client error occurred.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::throw","p":"Illuminate/Http/Client/Response.html#method_throw","d":"<p>Throw an exception if a server or client error occurred.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::throwIf","p":"Illuminate/Http/Client/Response.html#method_throwIf","d":"<p>Throw an exception if a server or client error occurred and the given condition evaluates to true.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::throwIfStatus","p":"Illuminate/Http/Client/Response.html#method_throwIfStatus","d":"<p>Throw an exception if the response status code matches the given code.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::throwUnlessStatus","p":"Illuminate/Http/Client/Response.html#method_throwUnlessStatus","d":"<p>Throw an exception unless the response status code matches the given code.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::throwIfClientError","p":"Illuminate/Http/Client/Response.html#method_throwIfClientError","d":"<p>Throw an exception if the response status code is a 4xx level code.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::throwIfServerError","p":"Illuminate/Http/Client/Response.html#method_throwIfServerError","d":"<p>Throw an exception if the response status code is a 5xx level code.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::offsetExists","p":"Illuminate/Http/Client/Response.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::offsetGet","p":"Illuminate/Http/Client/Response.html#method_offsetGet","d":"<p>Get the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::offsetSet","p":"Illuminate/Http/Client/Response.html#method_offsetSet","d":"<p>Set the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::offsetUnset","p":"Illuminate/Http/Client/Response.html#method_offsetUnset","d":"<p>Unset the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::__toString","p":"Illuminate/Http/Client/Response.html#method___toString","d":"<p>Get the body of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\Response::__call","p":"Illuminate/Http/Client/Response.html#method___call","d":"<p>Dynamically proxy other methods to the underlying response.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::__construct","p":"Illuminate/Http/Client/ResponseSequence.html#method___construct","d":"<p>Create a new response sequence.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::push","p":"Illuminate/Http/Client/ResponseSequence.html#method_push","d":"<p>Push a response to the sequence.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::pushStatus","p":"Illuminate/Http/Client/ResponseSequence.html#method_pushStatus","d":"<p>Push a response with the given status code to the sequence.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::pushFile","p":"Illuminate/Http/Client/ResponseSequence.html#method_pushFile","d":"<p>Push response with the contents of a file as the body to the sequence.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::pushResponse","p":"Illuminate/Http/Client/ResponseSequence.html#method_pushResponse","d":"<p>Push a response to the sequence.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::whenEmpty","p":"Illuminate/Http/Client/ResponseSequence.html#method_whenEmpty","d":"<p>Make the sequence return a default response when it is empty.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::dontFailWhenEmpty","p":"Illuminate/Http/Client/ResponseSequence.html#method_dontFailWhenEmpty","d":"<p>Make the sequence return a default response when it is empty.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::isEmpty","p":"Illuminate/Http/Client/ResponseSequence.html#method_isEmpty","d":"<p>Indicate that this sequence has depleted all of its responses.</p>"},{"t":"M","n":"Illuminate\\Http\\Client\\ResponseSequence::__invoke","p":"Illuminate/Http/Client/ResponseSequence.html#method___invoke","d":"<p>Get the next response in the sequence.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\CanBePrecognitive::filterPrecognitiveRules","p":"Illuminate/Http/Concerns/CanBePrecognitive.html#method_filterPrecognitiveRules","d":"<p>Filter the given array of rules into an array of rules that are included in precognitive headers.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\CanBePrecognitive::isAttemptingPrecognition","p":"Illuminate/Http/Concerns/CanBePrecognitive.html#method_isAttemptingPrecognition","d":"<p>Determine if the request is attempting to be precognitive.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\CanBePrecognitive::isPrecognitive","p":"Illuminate/Http/Concerns/CanBePrecognitive.html#method_isPrecognitive","d":"<p>Determine if the request is precognitive.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::isJson","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_isJson","d":"<p>Determine if the request is sending JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::expectsJson","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_expectsJson","d":"<p>Determine if the current request probably expects a JSON response.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::wantsJson","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_wantsJson","d":"<p>Determine if the current request is asking for JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::accepts","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_accepts","d":"<p>Determines whether the current requests accepts a given content type.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::prefers","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_prefers","d":"<p>Return the most suitable content type from the given array based on content negotiation.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::acceptsAnyContentType","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_acceptsAnyContentType","d":"<p>Determine if the current request accepts any content type.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::acceptsJson","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_acceptsJson","d":"<p>Determines whether a request accepts JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::acceptsHtml","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_acceptsHtml","d":"<p>Determines whether a request accepts HTML.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::matchesType","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_matchesType","d":"<p>Determine if the given content types match.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithContentTypes::format","p":"Illuminate/Http/Concerns/InteractsWithContentTypes.html#method_format","d":"<p>Get the data format expected in the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::old","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_old","d":"<p>Retrieve an old input item.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::flash","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_flash","d":"<p>Flash the input for the current request to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::flashOnly","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_flashOnly","d":"<p>Flash only some of the input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::flashExcept","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_flashExcept","d":"<p>Flash only some of the input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithFlashData::flush","p":"Illuminate/Http/Concerns/InteractsWithFlashData.html#method_flush","d":"<p>Flush all of the old input from the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::server","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_server","d":"<p>Retrieve a server variable from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::hasHeader","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_hasHeader","d":"<p>Determine if a header is set on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::header","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_header","d":"<p>Retrieve a header from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::bearerToken","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_bearerToken","d":"<p>Get the bearer token from the request headers.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::exists","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_exists","d":"<p>Determine if the request contains a given input item key.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::has","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_has","d":"<p>Determine if the request contains a given input item key.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::hasAny","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_hasAny","d":"<p>Determine if the request contains any of the given inputs.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::whenHas","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_whenHas","d":"<p>Apply the callback if the request contains the given input item key.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::filled","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_filled","d":"<p>Determine if the request contains a non-empty value for an input item.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::isNotFilled","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_isNotFilled","d":"<p>Determine if the request contains an empty value for an input item.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::anyFilled","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_anyFilled","d":"<p>Determine if the request contains a non-empty value for any of the given inputs.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::whenFilled","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_whenFilled","d":"<p>Apply the callback if the request contains a non-empty value for the given input item key.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::missing","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_missing","d":"<p>Determine if the request is missing a given input item key.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::whenMissing","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_whenMissing","d":"<p>Apply the callback if the request is missing the given input item key.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::isEmptyString","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_isEmptyString","d":"<p>Determine if the given input key is an empty string for &quot;filled&quot;.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::keys","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_keys","d":"<p>Get the keys for all of the input and files.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::all","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_all","d":"<p>Get all of the input and files for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::input","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_input","d":"<p>Retrieve an input item from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::str","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_str","d":"<p>Retrieve input from the request as a Stringable instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::string","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_string","d":"<p>Retrieve input from the request as a Stringable instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::boolean","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_boolean","d":"<p>Retrieve input as a boolean value.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::integer","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_integer","d":"<p>Retrieve input as an integer value.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::float","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_float","d":"<p>Retrieve input as a float value.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::date","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_date","d":"<p>Retrieve input from the request as a Carbon instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::enum","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_enum","d":"<p>Retrieve input from the request as an enum.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::collect","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_collect","d":"<p>Retrieve input from the request as a collection.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::only","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_only","d":"<p>Get a subset containing the provided keys with values from the input data.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::except","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_except","d":"<p>Get all of the input except for a specified array of items.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::query","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_query","d":"<p>Retrieve a query string item from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::post","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_post","d":"<p>Retrieve a request payload item from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::hasCookie","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_hasCookie","d":"<p>Determine if a cookie is set on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::cookie","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_cookie","d":"<p>Retrieve a cookie from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::allFiles","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_allFiles","d":"<p>Get an array of all of the files on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::convertUploadedFiles","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_convertUploadedFiles","d":"<p>Convert the given array of Symfony UploadedFiles to custom Laravel UploadedFiles.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::hasFile","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_hasFile","d":"<p>Determine if the uploaded data contains a file.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::isValidFile","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_isValidFile","d":"<p>Check that the given file is a valid file instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::file","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_file","d":"<p>Retrieve a file from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::retrieveItem","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_retrieveItem","d":"<p>Retrieve a parameter item from a given source.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::dd","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_dd","d":"<p>Dump the request items and end the script.</p>"},{"t":"M","n":"Illuminate\\Http\\Concerns\\InteractsWithInput::dump","p":"Illuminate/Http/Concerns/InteractsWithInput.html#method_dump","d":"<p>Dump the items.</p>"},{"t":"M","n":"Illuminate\\Http\\Exceptions\\HttpResponseException::__construct","p":"Illuminate/Http/Exceptions/HttpResponseException.html#method___construct","d":"<p>Create a new HTTP response exception instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Exceptions\\HttpResponseException::getResponse","p":"Illuminate/Http/Exceptions/HttpResponseException.html#method_getResponse","d":"<p>Get the underlying response instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Exceptions\\PostTooLargeException::__construct","p":"Illuminate/Http/Exceptions/PostTooLargeException.html#method___construct","d":"<p>Create a new &quot;post too large&quot; exception instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Exceptions\\ThrottleRequestsException::__construct","p":"Illuminate/Http/Exceptions/ThrottleRequestsException.html#method___construct","d":"<p>Create a new throttle requests exception instance.</p>"},{"t":"M","n":"Illuminate\\Http\\FileHelpers::path","p":"Illuminate/Http/FileHelpers.html#method_path","d":"<p>Get the fully qualified path to the file.</p>"},{"t":"M","n":"Illuminate\\Http\\FileHelpers::extension","p":"Illuminate/Http/FileHelpers.html#method_extension","d":"<p>Get the file's extension.</p>"},{"t":"M","n":"Illuminate\\Http\\FileHelpers::hashName","p":"Illuminate/Http/FileHelpers.html#method_hashName","d":"<p>Get a filename for the file.</p>"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::__construct","p":"Illuminate/Http/JsonResponse.html#method___construct","d":"Constructor."},{"t":"M","n":"Illuminate\\Http\\JsonResponse::fromJsonString","p":"Illuminate/Http/JsonResponse.html#method_fromJsonString","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::withCallback","p":"Illuminate/Http/JsonResponse.html#method_withCallback","d":"<p>Sets the JSONP callback.</p>"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::getData","p":"Illuminate/Http/JsonResponse.html#method_getData","d":"<p>Get the json_decoded data from the response.</p>"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::setData","p":"Illuminate/Http/JsonResponse.html#method_setData","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::hasValidJson","p":"Illuminate/Http/JsonResponse.html#method_hasValidJson","d":"<p>Determine if an error occurred during JSON encoding.</p>"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::setEncodingOptions","p":"Illuminate/Http/JsonResponse.html#method_setEncodingOptions","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\JsonResponse::hasEncodingOption","p":"Illuminate/Http/JsonResponse.html#method_hasEncodingOption","d":"<p>Determine if a JSON encoding option is set.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\AddLinkHeadersForPreloadedAssets::handle","p":"Illuminate/Http/Middleware/AddLinkHeadersForPreloadedAssets.html#method_handle","d":"<p>Handle the incoming request.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\CheckResponseForModifications::handle","p":"Illuminate/Http/Middleware/CheckResponseForModifications.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\FrameGuard::handle","p":"Illuminate/Http/Middleware/FrameGuard.html#method_handle","d":"<p>Handle the given request and get the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\HandleCors::__construct","p":"Illuminate/Http/Middleware/HandleCors.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\HandleCors::handle","p":"Illuminate/Http/Middleware/HandleCors.html#method_handle","d":"<p>Handle the incoming request.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\HandleCors::hasMatchingPath","p":"Illuminate/Http/Middleware/HandleCors.html#method_hasMatchingPath","d":"<p>Get the path from the configuration to determine if the CORS service should run.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\HandleCors::getPathsByHost","p":"Illuminate/Http/Middleware/HandleCors.html#method_getPathsByHost","d":"<p>Get the CORS paths for the given host.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\SetCacheHeaders::handle","p":"Illuminate/Http/Middleware/SetCacheHeaders.html#method_handle","d":"<p>Add cache related HTTP headers.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\SetCacheHeaders::parseOptions","p":"Illuminate/Http/Middleware/SetCacheHeaders.html#method_parseOptions","d":"<p>Parse the given header options.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustHosts::__construct","p":"Illuminate/Http/Middleware/TrustHosts.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustHosts::hosts","p":"Illuminate/Http/Middleware/TrustHosts.html#method_hosts","d":"<p>Get the host patterns that should be trusted.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustHosts::handle","p":"Illuminate/Http/Middleware/TrustHosts.html#method_handle","d":"<p>Handle the incoming request.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustHosts::shouldSpecifyTrustedHosts","p":"Illuminate/Http/Middleware/TrustHosts.html#method_shouldSpecifyTrustedHosts","d":"<p>Determine if the application should specify trusted hosts.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustHosts::allSubdomainsOfApplicationUrl","p":"Illuminate/Http/Middleware/TrustHosts.html#method_allSubdomainsOfApplicationUrl","d":"<p>Get a regular expression matching the application URL and all of its subdomains.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustProxies::handle","p":"Illuminate/Http/Middleware/TrustProxies.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustProxies::setTrustedProxyIpAddresses","p":"Illuminate/Http/Middleware/TrustProxies.html#method_setTrustedProxyIpAddresses","d":"<p>Sets the trusted proxies on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustProxies::setTrustedProxyIpAddressesToSpecificIps","p":"Illuminate/Http/Middleware/TrustProxies.html#method_setTrustedProxyIpAddressesToSpecificIps","d":"<p>Specify the IP addresses to trust explicitly.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustProxies::setTrustedProxyIpAddressesToTheCallingIp","p":"Illuminate/Http/Middleware/TrustProxies.html#method_setTrustedProxyIpAddressesToTheCallingIp","d":"<p>Set the trusted proxy to be the IP address calling this servers.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustProxies::getTrustedHeaderNames","p":"Illuminate/Http/Middleware/TrustProxies.html#method_getTrustedHeaderNames","d":"<p>Retrieve trusted header name(s), falling back to defaults if config not set.</p>"},{"t":"M","n":"Illuminate\\Http\\Middleware\\TrustProxies::proxies","p":"Illuminate/Http/Middleware/TrustProxies.html#method_proxies","d":"<p>Get the trusted proxies.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::with","p":"Illuminate/Http/RedirectResponse.html#method_with","d":"<p>Flash a piece of data to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::withCookies","p":"Illuminate/Http/RedirectResponse.html#method_withCookies","d":"<p>Add multiple cookies to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::withInput","p":"Illuminate/Http/RedirectResponse.html#method_withInput","d":"<p>Flash an array of input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::removeFilesFromInput","p":"Illuminate/Http/RedirectResponse.html#method_removeFilesFromInput","d":"<p>Remove all uploaded files form the given input array.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::onlyInput","p":"Illuminate/Http/RedirectResponse.html#method_onlyInput","d":"<p>Flash an array of input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::exceptInput","p":"Illuminate/Http/RedirectResponse.html#method_exceptInput","d":"<p>Flash an array of input to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::withErrors","p":"Illuminate/Http/RedirectResponse.html#method_withErrors","d":"<p>Flash a container of errors to the session.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::parseErrors","p":"Illuminate/Http/RedirectResponse.html#method_parseErrors","d":"<p>Parse the given errors into an appropriate value.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::withFragment","p":"Illuminate/Http/RedirectResponse.html#method_withFragment","d":"<p>Add a fragment identifier to the URL.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::withoutFragment","p":"Illuminate/Http/RedirectResponse.html#method_withoutFragment","d":"<p>Remove any fragment identifier from the response URL.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::getOriginalContent","p":"Illuminate/Http/RedirectResponse.html#method_getOriginalContent","d":"<p>Get the original response content.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::getRequest","p":"Illuminate/Http/RedirectResponse.html#method_getRequest","d":"<p>Get the request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::setRequest","p":"Illuminate/Http/RedirectResponse.html#method_setRequest","d":"<p>Set the request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::getSession","p":"Illuminate/Http/RedirectResponse.html#method_getSession","d":"<p>Get the session store instance.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::setSession","p":"Illuminate/Http/RedirectResponse.html#method_setSession","d":"<p>Set the session store instance.</p>"},{"t":"M","n":"Illuminate\\Http\\RedirectResponse::__call","p":"Illuminate/Http/RedirectResponse.html#method___call","d":"<p>Dynamically bind flash data in the session.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::capture","p":"Illuminate/Http/Request.html#method_capture","d":"<p>Create a new Illuminate HTTP request from server variables.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::instance","p":"Illuminate/Http/Request.html#method_instance","d":"<p>Return the Request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::method","p":"Illuminate/Http/Request.html#method_method","d":"<p>Get the request method.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::root","p":"Illuminate/Http/Request.html#method_root","d":"<p>Get the root URL for the application.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::url","p":"Illuminate/Http/Request.html#method_url","d":"<p>Get the URL (no query string) for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fullUrl","p":"Illuminate/Http/Request.html#method_fullUrl","d":"<p>Get the full URL for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fullUrlWithQuery","p":"Illuminate/Http/Request.html#method_fullUrlWithQuery","d":"<p>Get the full URL for the request with the added query string parameters.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fullUrlWithoutQuery","p":"Illuminate/Http/Request.html#method_fullUrlWithoutQuery","d":"<p>Get the full URL for the request without the given query string parameters.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::path","p":"Illuminate/Http/Request.html#method_path","d":"<p>Get the current path info for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::decodedPath","p":"Illuminate/Http/Request.html#method_decodedPath","d":"<p>Get the current decoded path info for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::segment","p":"Illuminate/Http/Request.html#method_segment","d":"<p>Get a segment from the URI (1 based index).</p>"},{"t":"M","n":"Illuminate\\Http\\Request::segments","p":"Illuminate/Http/Request.html#method_segments","d":"<p>Get all of the segments for the request path.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::is","p":"Illuminate/Http/Request.html#method_is","d":"<p>Determine if the current request URI matches a pattern.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::routeIs","p":"Illuminate/Http/Request.html#method_routeIs","d":"<p>Determine if the route name matches a given pattern.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fullUrlIs","p":"Illuminate/Http/Request.html#method_fullUrlIs","d":"<p>Determine if the current request URL and query string match a pattern.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::host","p":"Illuminate/Http/Request.html#method_host","d":"<p>Get the host name.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::httpHost","p":"Illuminate/Http/Request.html#method_httpHost","d":"<p>Get the HTTP host being requested.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::schemeAndHttpHost","p":"Illuminate/Http/Request.html#method_schemeAndHttpHost","d":"<p>Get the scheme and HTTP host.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::ajax","p":"Illuminate/Http/Request.html#method_ajax","d":"<p>Determine if the request is the result of an AJAX call.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::pjax","p":"Illuminate/Http/Request.html#method_pjax","d":"<p>Determine if the request is the result of a PJAX call.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::prefetch","p":"Illuminate/Http/Request.html#method_prefetch","d":"<p>Determine if the request is the result of a prefetch call.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::secure","p":"Illuminate/Http/Request.html#method_secure","d":"<p>Determine if the request is over HTTPS.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::ip","p":"Illuminate/Http/Request.html#method_ip","d":"<p>Get the client IP address.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::ips","p":"Illuminate/Http/Request.html#method_ips","d":"<p>Get the client IP addresses.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::userAgent","p":"Illuminate/Http/Request.html#method_userAgent","d":"<p>Get the client user agent.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::merge","p":"Illuminate/Http/Request.html#method_merge","d":"<p>Merge new input into the current request's input array.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::mergeIfMissing","p":"Illuminate/Http/Request.html#method_mergeIfMissing","d":"<p>Merge new input into the request's input, but only when that key is missing from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::replace","p":"Illuminate/Http/Request.html#method_replace","d":"<p>Replace the input for the current request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::get","p":"Illuminate/Http/Request.html#method_get","d":"<p>This method belongs to Symfony HttpFoundation and is not usually needed when using Laravel.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::json","p":"Illuminate/Http/Request.html#method_json","d":"<p>Get the JSON payload for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::getInputSource","p":"Illuminate/Http/Request.html#method_getInputSource","d":"<p>Get the input source for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::createFrom","p":"Illuminate/Http/Request.html#method_createFrom","d":"<p>Create a new request instance from the given Laravel request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::createFromBase","p":"Illuminate/Http/Request.html#method_createFromBase","d":"<p>Create an Illuminate request from a Symfony instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::duplicate","p":"Illuminate/Http/Request.html#method_duplicate","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\Request::filterFiles","p":"Illuminate/Http/Request.html#method_filterFiles","d":"<p>Filter the given array of files, removing any empty values.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::hasSession","p":"Illuminate/Http/Request.html#method_hasSession","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\Request::getSession","p":"Illuminate/Http/Request.html#method_getSession","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Http\\Request::session","p":"Illuminate/Http/Request.html#method_session","d":"<p>Get the session associated with the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setLaravelSession","p":"Illuminate/Http/Request.html#method_setLaravelSession","d":"<p>Set the session instance on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setRequestLocale","p":"Illuminate/Http/Request.html#method_setRequestLocale","d":"<p>Set the locale for the request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setDefaultRequestLocale","p":"Illuminate/Http/Request.html#method_setDefaultRequestLocale","d":"<p>Set the default locale for the request instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::user","p":"Illuminate/Http/Request.html#method_user","d":"<p>Get the user making the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::route","p":"Illuminate/Http/Request.html#method_route","d":"<p>Get the route handling the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::fingerprint","p":"Illuminate/Http/Request.html#method_fingerprint","d":"<p>Get a unique fingerprint for the request / route / IP address.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setJson","p":"Illuminate/Http/Request.html#method_setJson","d":"<p>Set the JSON payload for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::getUserResolver","p":"Illuminate/Http/Request.html#method_getUserResolver","d":"<p>Get the user resolver callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setUserResolver","p":"Illuminate/Http/Request.html#method_setUserResolver","d":"<p>Set the user resolver callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::getRouteResolver","p":"Illuminate/Http/Request.html#method_getRouteResolver","d":"<p>Get the route resolver callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::setRouteResolver","p":"Illuminate/Http/Request.html#method_setRouteResolver","d":"<p>Set the route resolver callback.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::toArray","p":"Illuminate/Http/Request.html#method_toArray","d":"<p>Get all of the input and files for the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::offsetExists","p":"Illuminate/Http/Request.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::offsetGet","p":"Illuminate/Http/Request.html#method_offsetGet","d":"<p>Get the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::offsetSet","p":"Illuminate/Http/Request.html#method_offsetSet","d":"<p>Set the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::offsetUnset","p":"Illuminate/Http/Request.html#method_offsetUnset","d":"<p>Remove the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::__isset","p":"Illuminate/Http/Request.html#method___isset","d":"<p>Check if an input element is set on the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::__get","p":"Illuminate/Http/Request.html#method___get","d":"<p>Get an input element from the request.</p>"},{"t":"M","n":"Illuminate\\Http\\Request::validate","p":"Illuminate/Http/Request.html#method_validate","d":""},{"t":"M","n":"Illuminate\\Http\\Request::validateWithBag","p":"Illuminate/Http/Request.html#method_validateWithBag","d":""},{"t":"M","n":"Illuminate\\Http\\Request::hasValidSignature","p":"Illuminate/Http/Request.html#method_hasValidSignature","d":""},{"t":"M","n":"Illuminate\\Http\\Resources\\CollectsResources::collectResource","p":"Illuminate/Http/Resources/CollectsResources.html#method_collectResource","d":"<p>Map the given collection resource into its individual resources.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\CollectsResources::collects","p":"Illuminate/Http/Resources/CollectsResources.html#method_collects","d":"<p>Get the resource that this resource collects.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\CollectsResources::jsonOptions","p":"Illuminate/Http/Resources/CollectsResources.html#method_jsonOptions","d":"<p>Get the JSON serialization options that should be applied to the resource response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\CollectsResources::getIterator","p":"Illuminate/Http/Resources/CollectsResources.html#method_getIterator","d":"<p>Get an iterator for the resource collection.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::filter","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_filter","d":"<p>Filter the given data, removing any optional values.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::mergeData","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_mergeData","d":"<p>Merge the given data in at the given index.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::removeMissingValues","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_removeMissingValues","d":"<p>Remove the missing values from the filtered data.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::when","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_when","d":"<p>Retrieve a value if the given &quot;condition&quot; is truthy.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::unless","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_unless","d":"<p>Retrieve a value if the given &quot;condition&quot; is falsy.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::merge","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_merge","d":"<p>Merge a value into the array.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::mergeWhen","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_mergeWhen","d":"<p>Merge a value if the given condition is truthy.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::mergeUnless","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_mergeUnless","d":"<p>Merge a value unless the given condition is truthy.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::attributes","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_attributes","d":"<p>Merge the given attributes.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::whenHas","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_whenHas","d":"<p>Retrieve an attribute if it exists on the resource.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::whenNull","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_whenNull","d":"<p>Retrieve a model attribute if it is null.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::whenNotNull","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_whenNotNull","d":"<p>Retrieve a model attribute if it is not null.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::whenAppended","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_whenAppended","d":"<p>Retrieve an accessor when it has been appended.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::whenLoaded","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_whenLoaded","d":"<p>Retrieve a relationship if it has been loaded.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::whenCounted","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_whenCounted","d":"<p>Retrieve a relationship count if it exists.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::whenPivotLoaded","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_whenPivotLoaded","d":"<p>Execute a callback if the given pivot table has been loaded.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::whenPivotLoadedAs","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_whenPivotLoadedAs","d":"<p>Execute a callback if the given pivot table with a custom accessor has been loaded.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\ConditionallyLoadsAttributes::transform","p":"Illuminate/Http/Resources/ConditionallyLoadsAttributes.html#method_transform","d":"<p>Transform the given value if it is present.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::getRouteKey","p":"Illuminate/Http/Resources/DelegatesToResource.html#method_getRouteKey","d":"<p>Get the value of the resource's route key.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::getRouteKeyName","p":"Illuminate/Http/Resources/DelegatesToResource.html#method_getRouteKeyName","d":"<p>Get the route key for the resource.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::resolveRouteBinding","p":"Illuminate/Http/Resources/DelegatesToResource.html#method_resolveRouteBinding","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::resolveChildRouteBinding","p":"Illuminate/Http/Resources/DelegatesToResource.html#method_resolveChildRouteBinding","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::offsetExists","p":"Illuminate/Http/Resources/DelegatesToResource.html#method_offsetExists","d":"<p>Determine if the given attribute exists.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::offsetGet","p":"Illuminate/Http/Resources/DelegatesToResource.html#method_offsetGet","d":"<p>Get the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::offsetSet","p":"Illuminate/Http/Resources/DelegatesToResource.html#method_offsetSet","d":"<p>Set the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::offsetUnset","p":"Illuminate/Http/Resources/DelegatesToResource.html#method_offsetUnset","d":"<p>Unset the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::__isset","p":"Illuminate/Http/Resources/DelegatesToResource.html#method___isset","d":"<p>Determine if an attribute exists on the resource.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::__unset","p":"Illuminate/Http/Resources/DelegatesToResource.html#method___unset","d":"<p>Unset an attribute on the resource.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::__get","p":"Illuminate/Http/Resources/DelegatesToResource.html#method___get","d":"<p>Dynamically get properties from the underlying resource.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\DelegatesToResource::__call","p":"Illuminate/Http/Resources/DelegatesToResource.html#method___call","d":"<p>Dynamically pass method calls to the underlying resource.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\AnonymousResourceCollection::__construct","p":"Illuminate/Http/Resources/Json/AnonymousResourceCollection.html#method___construct","d":"<p>Create a new anonymous resource collection.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::__construct","p":"Illuminate/Http/Resources/Json/JsonResource.html#method___construct","d":"<p>Create a new resource instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::make","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_make","d":"<p>Create a new resource instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::collection","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_collection","d":"<p>Create a new anonymous resource collection.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::newCollection","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_newCollection","d":"<p>Create a new resource collection instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::resolve","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_resolve","d":"<p>Resolve the resource to an array.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::toArray","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_toArray","d":"<p>Transform the resource into an array.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::toJson","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_toJson","d":"<p>Convert the model instance to JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::with","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_with","d":"<p>Get any additional data that should be returned with the resource array.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::additional","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_additional","d":"<p>Add additional meta data to the resource response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::jsonOptions","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_jsonOptions","d":"<p>Get the JSON serialization options that should be applied to the resource response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::withResponse","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_withResponse","d":"<p>Customize the response for a request.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::wrap","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_wrap","d":"<p>Set the string that should wrap the outer-most resource array.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::withoutWrapping","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_withoutWrapping","d":"<p>Disable wrapping of the outer-most resource array.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::response","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_response","d":"<p>Transform the resource into an HTTP response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::toResponse","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_toResponse","d":"<p>Create an HTTP response that represents the object.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\JsonResource::jsonSerialize","p":"Illuminate/Http/Resources/Json/JsonResource.html#method_jsonSerialize","d":"<p>Prepare the resource for JSON serialization.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\PaginatedResourceResponse::toResponse","p":"Illuminate/Http/Resources/Json/PaginatedResourceResponse.html#method_toResponse","d":"<p>Create an HTTP response that represents the object.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\PaginatedResourceResponse::paginationInformation","p":"Illuminate/Http/Resources/Json/PaginatedResourceResponse.html#method_paginationInformation","d":"<p>Add the pagination information to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\PaginatedResourceResponse::paginationLinks","p":"Illuminate/Http/Resources/Json/PaginatedResourceResponse.html#method_paginationLinks","d":"<p>Get the pagination links for the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\PaginatedResourceResponse::meta","p":"Illuminate/Http/Resources/Json/PaginatedResourceResponse.html#method_meta","d":"<p>Gather the meta data for the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceCollection::__construct","p":"Illuminate/Http/Resources/Json/ResourceCollection.html#method___construct","d":"<p>Create a new resource instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceCollection::preserveQuery","p":"Illuminate/Http/Resources/Json/ResourceCollection.html#method_preserveQuery","d":"<p>Indicate that all current query parameters should be appended to pagination links.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceCollection::withQuery","p":"Illuminate/Http/Resources/Json/ResourceCollection.html#method_withQuery","d":"<p>Specify the query string parameters that should be present on pagination links.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceCollection::count","p":"Illuminate/Http/Resources/Json/ResourceCollection.html#method_count","d":"<p>Return the count of items in the resource collection.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceCollection::toArray","p":"Illuminate/Http/Resources/Json/ResourceCollection.html#method_toArray","d":"<p>Transform the resource into a JSON array.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceCollection::toResponse","p":"Illuminate/Http/Resources/Json/ResourceCollection.html#method_toResponse","d":"<p>Create an HTTP response that represents the object.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceCollection::preparePaginatedResponse","p":"Illuminate/Http/Resources/Json/ResourceCollection.html#method_preparePaginatedResponse","d":"<p>Create a paginate-aware HTTP response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceResponse::__construct","p":"Illuminate/Http/Resources/Json/ResourceResponse.html#method___construct","d":"<p>Create a new resource response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceResponse::toResponse","p":"Illuminate/Http/Resources/Json/ResourceResponse.html#method_toResponse","d":"<p>Create an HTTP response that represents the object.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceResponse::wrap","p":"Illuminate/Http/Resources/Json/ResourceResponse.html#method_wrap","d":"<p>Wrap the given data if necessary.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceResponse::haveDefaultWrapperAndDataIsUnwrapped","p":"Illuminate/Http/Resources/Json/ResourceResponse.html#method_haveDefaultWrapperAndDataIsUnwrapped","d":"<p>Determine if we have a default wrapper and the given data is unwrapped.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceResponse::haveAdditionalInformationAndDataIsUnwrapped","p":"Illuminate/Http/Resources/Json/ResourceResponse.html#method_haveAdditionalInformationAndDataIsUnwrapped","d":"<p>Determine if &quot;with&quot; data has been added and our data is unwrapped.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceResponse::wrapper","p":"Illuminate/Http/Resources/Json/ResourceResponse.html#method_wrapper","d":"<p>Get the default data wrapper for the resource.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\Json\\ResourceResponse::calculateStatus","p":"Illuminate/Http/Resources/Json/ResourceResponse.html#method_calculateStatus","d":"<p>Calculate the appropriate status code for the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\MergeValue::__construct","p":"Illuminate/Http/Resources/MergeValue.html#method___construct","d":"<p>Create a new merge value instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\MissingValue::isMissing","p":"Illuminate/Http/Resources/MissingValue.html#method_isMissing","d":"<p>Determine if the object should be considered &quot;missing&quot;.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\PotentiallyMissing::isMissing","p":"Illuminate/Http/Resources/PotentiallyMissing.html#method_isMissing","d":"<p>Determine if the object should be considered &quot;missing&quot;.</p>"},{"t":"M","n":"Illuminate\\Http\\Response::__construct","p":"Illuminate/Http/Response.html#method___construct","d":"<p>Create a new HTTP response.</p>"},{"t":"M","n":"Illuminate\\Http\\Response::setContent","p":"Illuminate/Http/Response.html#method_setContent","d":"<p>Set the content on the response.</p>"},{"t":"M","n":"Illuminate\\Http\\Response::shouldBeJson","p":"Illuminate/Http/Response.html#method_shouldBeJson","d":"<p>Determine if the given content should be turned into JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\Response::morphToJson","p":"Illuminate/Http/Response.html#method_morphToJson","d":"<p>Morph the given content into JSON.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::status","p":"Illuminate/Http/ResponseTrait.html#method_status","d":"<p>Get the status code for the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::statusText","p":"Illuminate/Http/ResponseTrait.html#method_statusText","d":"<p>Get the status text for the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::content","p":"Illuminate/Http/ResponseTrait.html#method_content","d":"<p>Get the content of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::getOriginalContent","p":"Illuminate/Http/ResponseTrait.html#method_getOriginalContent","d":"<p>Get the original response content.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::header","p":"Illuminate/Http/ResponseTrait.html#method_header","d":"<p>Set a header on the Response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::withHeaders","p":"Illuminate/Http/ResponseTrait.html#method_withHeaders","d":"<p>Add an array of headers to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::cookie","p":"Illuminate/Http/ResponseTrait.html#method_cookie","d":"<p>Add a cookie to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::withCookie","p":"Illuminate/Http/ResponseTrait.html#method_withCookie","d":"<p>Add a cookie to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::withoutCookie","p":"Illuminate/Http/ResponseTrait.html#method_withoutCookie","d":"<p>Expire a cookie when sending the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::getCallback","p":"Illuminate/Http/ResponseTrait.html#method_getCallback","d":"<p>Get the callback of the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::withException","p":"Illuminate/Http/ResponseTrait.html#method_withException","d":"<p>Set the exception to attach to the response.</p>"},{"t":"M","n":"Illuminate\\Http\\ResponseTrait::throwResponse","p":"Illuminate/Http/ResponseTrait.html#method_throwResponse","d":"<p>Throws the response in a HttpResponseException instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::__construct","p":"Illuminate/Http/Testing/File.html#method___construct","d":"<p>Create a new file instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::create","p":"Illuminate/Http/Testing/File.html#method_create","d":"<p>Create a new fake file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::createWithContent","p":"Illuminate/Http/Testing/File.html#method_createWithContent","d":"<p>Create a new fake file with content.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::image","p":"Illuminate/Http/Testing/File.html#method_image","d":"<p>Create a new fake image.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::size","p":"Illuminate/Http/Testing/File.html#method_size","d":"<p>Set the &quot;size&quot; of the file in kilobytes.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::getSize","p":"Illuminate/Http/Testing/File.html#method_getSize","d":"<p>Get the size of the file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::mimeType","p":"Illuminate/Http/Testing/File.html#method_mimeType","d":"<p>Set the &quot;MIME type&quot; for the file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::getMimeType","p":"Illuminate/Http/Testing/File.html#method_getMimeType","d":"<p>Get the MIME type of the file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\File::tempFilePath","p":"Illuminate/Http/Testing/File.html#method_tempFilePath","d":"<p>Get the path to the temporary file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\FileFactory::create","p":"Illuminate/Http/Testing/FileFactory.html#method_create","d":"<p>Create a new fake file.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\FileFactory::createWithContent","p":"Illuminate/Http/Testing/FileFactory.html#method_createWithContent","d":"<p>Create a new fake file with content.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\FileFactory::image","p":"Illuminate/Http/Testing/FileFactory.html#method_image","d":"<p>Create a new fake image.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\FileFactory::generateImage","p":"Illuminate/Http/Testing/FileFactory.html#method_generateImage","d":"<p>Generate a dummy image of the given width and height.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\MimeType::getMimeTypes","p":"Illuminate/Http/Testing/MimeType.html#method_getMimeTypes","d":"<p>Get the mime types instance.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\MimeType::from","p":"Illuminate/Http/Testing/MimeType.html#method_from","d":"<p>Get the MIME type for a file based on the file's extension.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\MimeType::get","p":"Illuminate/Http/Testing/MimeType.html#method_get","d":"<p>Get the MIME type for a given extension or return all mimes.</p>"},{"t":"M","n":"Illuminate\\Http\\Testing\\MimeType::search","p":"Illuminate/Http/Testing/MimeType.html#method_search","d":"<p>Search for the extension of a given MIME type.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::fake","p":"Illuminate/Http/UploadedFile.html#method_fake","d":"<p>Begin creating a new file fake.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::store","p":"Illuminate/Http/UploadedFile.html#method_store","d":"<p>Store the uploaded file on a filesystem disk.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::storePublicly","p":"Illuminate/Http/UploadedFile.html#method_storePublicly","d":"<p>Store the uploaded file on a filesystem disk with public visibility.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::storePubliclyAs","p":"Illuminate/Http/UploadedFile.html#method_storePubliclyAs","d":"<p>Store the uploaded file on a filesystem disk with public visibility.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::storeAs","p":"Illuminate/Http/UploadedFile.html#method_storeAs","d":"<p>Store the uploaded file on a filesystem disk.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::get","p":"Illuminate/Http/UploadedFile.html#method_get","d":"<p>Get the contents of the uploaded file.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::clientExtension","p":"Illuminate/Http/UploadedFile.html#method_clientExtension","d":"<p>Get the file's extension supplied by the client.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::createFromBase","p":"Illuminate/Http/UploadedFile.html#method_createFromBase","d":"<p>Create a new file instance from a base instance.</p>"},{"t":"M","n":"Illuminate\\Http\\UploadedFile::parseOptions","p":"Illuminate/Http/UploadedFile.html#method_parseOptions","d":"<p>Parse and format the given options.</p>"},{"t":"M","n":"Illuminate\\Log\\Events\\MessageLogged::__construct","p":"Illuminate/Log/Events/MessageLogged.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::__construct","p":"Illuminate/Log/LogManager.html#method___construct","d":"<p>Create a new Log manager instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::build","p":"Illuminate/Log/LogManager.html#method_build","d":"<p>Build an on-demand log channel.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::stack","p":"Illuminate/Log/LogManager.html#method_stack","d":"<p>Create a new, on-demand aggregate logger instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::channel","p":"Illuminate/Log/LogManager.html#method_channel","d":"<p>Get a log channel instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::driver","p":"Illuminate/Log/LogManager.html#method_driver","d":"<p>Get a log driver instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::get","p":"Illuminate/Log/LogManager.html#method_get","d":"<p>Attempt to get the log from the local cache.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::tap","p":"Illuminate/Log/LogManager.html#method_tap","d":"<p>Apply the configured taps for the logger.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::parseTap","p":"Illuminate/Log/LogManager.html#method_parseTap","d":"<p>Parse the given tap class string into a class name and arguments string.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createEmergencyLogger","p":"Illuminate/Log/LogManager.html#method_createEmergencyLogger","d":"<p>Create an emergency log handler to avoid white screens of death.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::resolve","p":"Illuminate/Log/LogManager.html#method_resolve","d":"<p>Resolve the given log instance by name.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::callCustomCreator","p":"Illuminate/Log/LogManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createCustomDriver","p":"Illuminate/Log/LogManager.html#method_createCustomDriver","d":"<p>Create a custom log driver instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createStackDriver","p":"Illuminate/Log/LogManager.html#method_createStackDriver","d":"<p>Create an aggregate log driver instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createSingleDriver","p":"Illuminate/Log/LogManager.html#method_createSingleDriver","d":"<p>Create an instance of the single file log driver.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createDailyDriver","p":"Illuminate/Log/LogManager.html#method_createDailyDriver","d":"<p>Create an instance of the daily file log driver.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createSlackDriver","p":"Illuminate/Log/LogManager.html#method_createSlackDriver","d":"<p>Create an instance of the Slack log driver.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createSyslogDriver","p":"Illuminate/Log/LogManager.html#method_createSyslogDriver","d":"<p>Create an instance of the syslog log driver.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createErrorlogDriver","p":"Illuminate/Log/LogManager.html#method_createErrorlogDriver","d":"<p>Create an instance of the &quot;error log&quot; log driver.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::createMonologDriver","p":"Illuminate/Log/LogManager.html#method_createMonologDriver","d":"<p>Create an instance of any handler available in Monolog.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::prepareHandlers","p":"Illuminate/Log/LogManager.html#method_prepareHandlers","d":"<p>Prepare the handlers for usage by Monolog.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::prepareHandler","p":"Illuminate/Log/LogManager.html#method_prepareHandler","d":"<p>Prepare the handler for usage by Monolog.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::formatter","p":"Illuminate/Log/LogManager.html#method_formatter","d":"<p>Get a Monolog formatter instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::shareContext","p":"Illuminate/Log/LogManager.html#method_shareContext","d":"<p>Share context across channels and stacks.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::sharedContext","p":"Illuminate/Log/LogManager.html#method_sharedContext","d":"<p>The context shared across channels and stacks.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::flushSharedContext","p":"Illuminate/Log/LogManager.html#method_flushSharedContext","d":"<p>Flush the shared context.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::getFallbackChannelName","p":"Illuminate/Log/LogManager.html#method_getFallbackChannelName","d":"<p>Get fallback log channel name.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::configurationFor","p":"Illuminate/Log/LogManager.html#method_configurationFor","d":"<p>Get the log connection configuration.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::getDefaultDriver","p":"Illuminate/Log/LogManager.html#method_getDefaultDriver","d":"<p>Get the default log driver name.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::setDefaultDriver","p":"Illuminate/Log/LogManager.html#method_setDefaultDriver","d":"<p>Set the default log driver name.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::extend","p":"Illuminate/Log/LogManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::forgetChannel","p":"Illuminate/Log/LogManager.html#method_forgetChannel","d":"<p>Unset the given channel instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::parseDriver","p":"Illuminate/Log/LogManager.html#method_parseDriver","d":"<p>Parse the driver name.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::getChannels","p":"Illuminate/Log/LogManager.html#method_getChannels","d":"<p>Get all of the resolved log channels.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::emergency","p":"Illuminate/Log/LogManager.html#method_emergency","d":"<p>System is unusable.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::alert","p":"Illuminate/Log/LogManager.html#method_alert","d":"<p>Action must be taken immediately.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::critical","p":"Illuminate/Log/LogManager.html#method_critical","d":"<p>Critical conditions.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::error","p":"Illuminate/Log/LogManager.html#method_error","d":"<p>Runtime errors that do not require immediate action but should typically\nbe logged and monitored.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::warning","p":"Illuminate/Log/LogManager.html#method_warning","d":"<p>Exceptional occurrences that are not errors.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::notice","p":"Illuminate/Log/LogManager.html#method_notice","d":"<p>Normal but significant events.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::info","p":"Illuminate/Log/LogManager.html#method_info","d":"<p>Interesting events.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::debug","p":"Illuminate/Log/LogManager.html#method_debug","d":"<p>Detailed debug information.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::log","p":"Illuminate/Log/LogManager.html#method_log","d":"<p>Logs with an arbitrary level.</p>"},{"t":"M","n":"Illuminate\\Log\\LogManager::__call","p":"Illuminate/Log/LogManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Log\\LogServiceProvider::register","p":"Illuminate/Log/LogServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::__construct","p":"Illuminate/Log/Logger.html#method___construct","d":"<p>Create a new log writer instance.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::emergency","p":"Illuminate/Log/Logger.html#method_emergency","d":"<p>Log an emergency message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::alert","p":"Illuminate/Log/Logger.html#method_alert","d":"<p>Log an alert message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::critical","p":"Illuminate/Log/Logger.html#method_critical","d":"<p>Log a critical message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::error","p":"Illuminate/Log/Logger.html#method_error","d":"<p>Log an error message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::warning","p":"Illuminate/Log/Logger.html#method_warning","d":"<p>Log a warning message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::notice","p":"Illuminate/Log/Logger.html#method_notice","d":"<p>Log a notice to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::info","p":"Illuminate/Log/Logger.html#method_info","d":"<p>Log an informational message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::debug","p":"Illuminate/Log/Logger.html#method_debug","d":"<p>Log a debug message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::log","p":"Illuminate/Log/Logger.html#method_log","d":"<p>Log a message to the logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::write","p":"Illuminate/Log/Logger.html#method_write","d":"<p>Dynamically pass log calls into the writer.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::writeLog","p":"Illuminate/Log/Logger.html#method_writeLog","d":"<p>Write a message to the log.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::withContext","p":"Illuminate/Log/Logger.html#method_withContext","d":"<p>Add context to all future logs.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::withoutContext","p":"Illuminate/Log/Logger.html#method_withoutContext","d":"<p>Flush the existing context array.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::listen","p":"Illuminate/Log/Logger.html#method_listen","d":"<p>Register a new callback handler for when a log event is triggered.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::fireLogEvent","p":"Illuminate/Log/Logger.html#method_fireLogEvent","d":"<p>Fires a log event.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::formatMessage","p":"Illuminate/Log/Logger.html#method_formatMessage","d":"<p>Format the parameters for the logger.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::getLogger","p":"Illuminate/Log/Logger.html#method_getLogger","d":"<p>Get the underlying logger implementation.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::getEventDispatcher","p":"Illuminate/Log/Logger.html#method_getEventDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::setEventDispatcher","p":"Illuminate/Log/Logger.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Log\\Logger::__call","p":"Illuminate/Log/Logger.html#method___call","d":"<p>Dynamically proxy method calls to the underlying logger.</p>"},{"t":"M","n":"Illuminate\\Log\\ParsesLogConfiguration::getFallbackChannelName","p":"Illuminate/Log/ParsesLogConfiguration.html#method_getFallbackChannelName","d":"<p>Get fallback log channel name.</p>"},{"t":"M","n":"Illuminate\\Log\\ParsesLogConfiguration::level","p":"Illuminate/Log/ParsesLogConfiguration.html#method_level","d":"<p>Parse the string level into a Monolog constant.</p>"},{"t":"M","n":"Illuminate\\Log\\ParsesLogConfiguration::actionLevel","p":"Illuminate/Log/ParsesLogConfiguration.html#method_actionLevel","d":"<p>Parse the action level from the given configuration.</p>"},{"t":"M","n":"Illuminate\\Log\\ParsesLogConfiguration::parseChannel","p":"Illuminate/Log/ParsesLogConfiguration.html#method_parseChannel","d":"<p>Extract the log channel from the given configuration.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::fromPath","p":"Illuminate/Mail/Attachment.html#method_fromPath","d":"<p>Create a mail attachment from a path.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::fromData","p":"Illuminate/Mail/Attachment.html#method_fromData","d":"<p>Create a mail attachment from in-memory data.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::fromStorage","p":"Illuminate/Mail/Attachment.html#method_fromStorage","d":"<p>Create a mail attachment from a file in the default storage disk.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::fromStorageDisk","p":"Illuminate/Mail/Attachment.html#method_fromStorageDisk","d":"<p>Create a mail attachment from a file in the specified storage disk.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::as","p":"Illuminate/Mail/Attachment.html#method_as","d":"<p>Set the attached file's filename.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::withMime","p":"Illuminate/Mail/Attachment.html#method_withMime","d":"<p>Set the attached file's mime type.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::attachWith","p":"Illuminate/Mail/Attachment.html#method_attachWith","d":"<p>Attach the attachment with the given strategies.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::attachTo","p":"Illuminate/Mail/Attachment.html#method_attachTo","d":"<p>Attach the attachment to a built-in mail type.</p>"},{"t":"M","n":"Illuminate\\Mail\\Attachment::isEquivalent","p":"Illuminate/Mail/Attachment.html#method_isEquivalent","d":"<p>Determine if the given attachment is equivalent to this attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Events\\MessageSending::__construct","p":"Illuminate/Mail/Events/MessageSending.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Events\\MessageSent::__construct","p":"Illuminate/Mail/Events/MessageSent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Events\\MessageSent::__serialize","p":"Illuminate/Mail/Events/MessageSent.html#method___serialize","d":"<p>Get the serializable representation of the object.</p>"},{"t":"M","n":"Illuminate\\Mail\\Events\\MessageSent::__unserialize","p":"Illuminate/Mail/Events/MessageSent.html#method___unserialize","d":"<p>Marshal the object from its serialized data.</p>"},{"t":"M","n":"Illuminate\\Mail\\Events\\MessageSent::__get","p":"Illuminate/Mail/Events/MessageSent.html#method___get","d":"<p>Dynamically get the original message.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::__construct","p":"Illuminate/Mail/MailManager.html#method___construct","d":"<p>Create a new Mail manager instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::mailer","p":"Illuminate/Mail/MailManager.html#method_mailer","d":"<p>Get a mailer instance by name.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::driver","p":"Illuminate/Mail/MailManager.html#method_driver","d":"<p>Get a mailer driver instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::get","p":"Illuminate/Mail/MailManager.html#method_get","d":"<p>Attempt to get the mailer from the local cache.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::resolve","p":"Illuminate/Mail/MailManager.html#method_resolve","d":"<p>Resolve the given mailer.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createSymfonyTransport","p":"Illuminate/Mail/MailManager.html#method_createSymfonyTransport","d":"<p>Create a new transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createSmtpTransport","p":"Illuminate/Mail/MailManager.html#method_createSmtpTransport","d":"<p>Create an instance of the Symfony SMTP Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::configureSmtpTransport","p":"Illuminate/Mail/MailManager.html#method_configureSmtpTransport","d":"<p>Configure the additional SMTP driver options.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createSendmailTransport","p":"Illuminate/Mail/MailManager.html#method_createSendmailTransport","d":"<p>Create an instance of the Symfony Sendmail Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createSesTransport","p":"Illuminate/Mail/MailManager.html#method_createSesTransport","d":"<p>Create an instance of the Symfony Amazon SES Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createSesV2Transport","p":"Illuminate/Mail/MailManager.html#method_createSesV2Transport","d":"<p>Create an instance of the Symfony Amazon SES V2 Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::addSesCredentials","p":"Illuminate/Mail/MailManager.html#method_addSesCredentials","d":"<p>Add the SES credentials to the configuration array.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createMailTransport","p":"Illuminate/Mail/MailManager.html#method_createMailTransport","d":"<p>Create an instance of the Symfony Mail Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createMailgunTransport","p":"Illuminate/Mail/MailManager.html#method_createMailgunTransport","d":"<p>Create an instance of the Symfony Mailgun Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createPostmarkTransport","p":"Illuminate/Mail/MailManager.html#method_createPostmarkTransport","d":"<p>Create an instance of the Symfony Postmark Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createFailoverTransport","p":"Illuminate/Mail/MailManager.html#method_createFailoverTransport","d":"<p>Create an instance of the Symfony Failover Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createLogTransport","p":"Illuminate/Mail/MailManager.html#method_createLogTransport","d":"<p>Create an instance of the Log Transport driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::createArrayTransport","p":"Illuminate/Mail/MailManager.html#method_createArrayTransport","d":"<p>Create an instance of the Array Transport Driver.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::getHttpClient","p":"Illuminate/Mail/MailManager.html#method_getHttpClient","d":"<p>Get a configured Symfony HTTP client instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::setGlobalAddress","p":"Illuminate/Mail/MailManager.html#method_setGlobalAddress","d":"<p>Set a global address on the mailer by type.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::getConfig","p":"Illuminate/Mail/MailManager.html#method_getConfig","d":"<p>Get the mail connection configuration.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::getDefaultDriver","p":"Illuminate/Mail/MailManager.html#method_getDefaultDriver","d":"<p>Get the default mail driver name.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::setDefaultDriver","p":"Illuminate/Mail/MailManager.html#method_setDefaultDriver","d":"<p>Set the default mail driver name.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::purge","p":"Illuminate/Mail/MailManager.html#method_purge","d":"<p>Disconnect the given mailer and remove from local cache.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::extend","p":"Illuminate/Mail/MailManager.html#method_extend","d":"<p>Register a custom transport creator Closure.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::getApplication","p":"Illuminate/Mail/MailManager.html#method_getApplication","d":"<p>Get the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::setApplication","p":"Illuminate/Mail/MailManager.html#method_setApplication","d":"<p>Set the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::forgetMailers","p":"Illuminate/Mail/MailManager.html#method_forgetMailers","d":"<p>Forget all of the resolved mailer instances.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailManager::__call","p":"Illuminate/Mail/MailManager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::register","p":"Illuminate/Mail/MailServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::registerIlluminateMailer","p":"Illuminate/Mail/MailServiceProvider.html#method_registerIlluminateMailer","d":"<p>Register the Illuminate mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::registerMarkdownRenderer","p":"Illuminate/Mail/MailServiceProvider.html#method_registerMarkdownRenderer","d":"<p>Register the Markdown renderer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\MailServiceProvider::provides","p":"Illuminate/Mail/MailServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::send","p":"Illuminate/Mail/Mailable.html#method_send","d":"<p>Send the message using the given mailer.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::queue","p":"Illuminate/Mail/Mailable.html#method_queue","d":"<p>Queue the message for sending.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::later","p":"Illuminate/Mail/Mailable.html#method_later","d":"<p>Deliver the queued message after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::newQueuedJob","p":"Illuminate/Mail/Mailable.html#method_newQueuedJob","d":"<p>Make the queued mailable job instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::render","p":"Illuminate/Mail/Mailable.html#method_render","d":"<p>Render the mailable into a view.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildView","p":"Illuminate/Mail/Mailable.html#method_buildView","d":"<p>Build the view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildMarkdownView","p":"Illuminate/Mail/Mailable.html#method_buildMarkdownView","d":"<p>Build the Markdown view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildViewData","p":"Illuminate/Mail/Mailable.html#method_buildViewData","d":"<p>Build the view data for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildMarkdownText","p":"Illuminate/Mail/Mailable.html#method_buildMarkdownText","d":"<p>Build the text view for a Markdown message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildFrom","p":"Illuminate/Mail/Mailable.html#method_buildFrom","d":"<p>Add the sender to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildRecipients","p":"Illuminate/Mail/Mailable.html#method_buildRecipients","d":"<p>Add all of the recipients to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildSubject","p":"Illuminate/Mail/Mailable.html#method_buildSubject","d":"<p>Set the subject for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildAttachments","p":"Illuminate/Mail/Mailable.html#method_buildAttachments","d":"<p>Add all of the attachments to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildDiskAttachments","p":"Illuminate/Mail/Mailable.html#method_buildDiskAttachments","d":"<p>Add all of the disk attachments to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildTags","p":"Illuminate/Mail/Mailable.html#method_buildTags","d":"<p>Add all defined tags to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildMetadata","p":"Illuminate/Mail/Mailable.html#method_buildMetadata","d":"<p>Add all defined metadata to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::runCallbacks","p":"Illuminate/Mail/Mailable.html#method_runCallbacks","d":"<p>Run the callbacks for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::locale","p":"Illuminate/Mail/Mailable.html#method_locale","d":"<p>Set the locale of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::priority","p":"Illuminate/Mail/Mailable.html#method_priority","d":"<p>Set the priority of this message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::from","p":"Illuminate/Mail/Mailable.html#method_from","d":"<p>Set the sender of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasFrom","p":"Illuminate/Mail/Mailable.html#method_hasFrom","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::to","p":"Illuminate/Mail/Mailable.html#method_to","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasTo","p":"Illuminate/Mail/Mailable.html#method_hasTo","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::cc","p":"Illuminate/Mail/Mailable.html#method_cc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasCc","p":"Illuminate/Mail/Mailable.html#method_hasCc","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::bcc","p":"Illuminate/Mail/Mailable.html#method_bcc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasBcc","p":"Illuminate/Mail/Mailable.html#method_hasBcc","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::replyTo","p":"Illuminate/Mail/Mailable.html#method_replyTo","d":"<p>Set the &quot;reply to&quot; address of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasReplyTo","p":"Illuminate/Mail/Mailable.html#method_hasReplyTo","d":"<p>Determine if the given replyTo is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::setAddress","p":"Illuminate/Mail/Mailable.html#method_setAddress","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::addressesToArray","p":"Illuminate/Mail/Mailable.html#method_addressesToArray","d":"<p>Convert the given recipient arguments to an array.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::normalizeRecipient","p":"Illuminate/Mail/Mailable.html#method_normalizeRecipient","d":"<p>Convert the given recipient into an object.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasRecipient","p":"Illuminate/Mail/Mailable.html#method_hasRecipient","d":"<p>Determine if the given recipient is set on the mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::subject","p":"Illuminate/Mail/Mailable.html#method_subject","d":"<p>Set the subject of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasSubject","p":"Illuminate/Mail/Mailable.html#method_hasSubject","d":"<p>Determine if the mailable has the given subject.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::markdown","p":"Illuminate/Mail/Mailable.html#method_markdown","d":"<p>Set the Markdown template for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::view","p":"Illuminate/Mail/Mailable.html#method_view","d":"<p>Set the view and view data for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::html","p":"Illuminate/Mail/Mailable.html#method_html","d":"<p>Set the rendered HTML content for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::text","p":"Illuminate/Mail/Mailable.html#method_text","d":"<p>Set the plain text view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::with","p":"Illuminate/Mail/Mailable.html#method_with","d":"<p>Set the view data for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::attach","p":"Illuminate/Mail/Mailable.html#method_attach","d":"<p>Attach a file to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::attachMany","p":"Illuminate/Mail/Mailable.html#method_attachMany","d":"<p>Attach multiple files to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasAttachment","p":"Illuminate/Mail/Mailable.html#method_hasAttachment","d":"<p>Determine if the mailable has the given attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::attachFromStorage","p":"Illuminate/Mail/Mailable.html#method_attachFromStorage","d":"<p>Attach a file to the message from storage.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::attachFromStorageDisk","p":"Illuminate/Mail/Mailable.html#method_attachFromStorageDisk","d":"<p>Attach a file to the message from storage.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasAttachmentFromStorage","p":"Illuminate/Mail/Mailable.html#method_hasAttachmentFromStorage","d":"<p>Determine if the mailable has the given attachment from storage.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasAttachmentFromStorageDisk","p":"Illuminate/Mail/Mailable.html#method_hasAttachmentFromStorageDisk","d":"<p>Determine if the mailable has the given attachment from a specific storage disk.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::attachData","p":"Illuminate/Mail/Mailable.html#method_attachData","d":"<p>Attach in-memory data as an attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasAttachedData","p":"Illuminate/Mail/Mailable.html#method_hasAttachedData","d":"<p>Determine if the mailable has the given data as an attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::tag","p":"Illuminate/Mail/Mailable.html#method_tag","d":"<p>Add a tag header to the message when supported by the underlying transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasTag","p":"Illuminate/Mail/Mailable.html#method_hasTag","d":"<p>Determine if the mailable has the given tag.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::metadata","p":"Illuminate/Mail/Mailable.html#method_metadata","d":"<p>Add a metadata header to the message when supported by the underlying transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::hasMetadata","p":"Illuminate/Mail/Mailable.html#method_hasMetadata","d":"<p>Determine if the mailable has the given metadata.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertFrom","p":"Illuminate/Mail/Mailable.html#method_assertFrom","d":"<p>Assert that the mailable is from the given address.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertTo","p":"Illuminate/Mail/Mailable.html#method_assertTo","d":"<p>Assert that the mailable has the given recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasTo","p":"Illuminate/Mail/Mailable.html#method_assertHasTo","d":"<p>Assert that the mailable has the given recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasCc","p":"Illuminate/Mail/Mailable.html#method_assertHasCc","d":"<p>Assert that the mailable has the given recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasBcc","p":"Illuminate/Mail/Mailable.html#method_assertHasBcc","d":"<p>Assert that the mailable has the given recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasReplyTo","p":"Illuminate/Mail/Mailable.html#method_assertHasReplyTo","d":"<p>Assert that the mailable has the given &quot;reply to&quot; address.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasSubject","p":"Illuminate/Mail/Mailable.html#method_assertHasSubject","d":"<p>Assert that the mailable has the given subject.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertSeeInHtml","p":"Illuminate/Mail/Mailable.html#method_assertSeeInHtml","d":"<p>Assert that the given text is present in the HTML email body.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertDontSeeInHtml","p":"Illuminate/Mail/Mailable.html#method_assertDontSeeInHtml","d":"<p>Assert that the given text is not present in the HTML email body.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertSeeInOrderInHtml","p":"Illuminate/Mail/Mailable.html#method_assertSeeInOrderInHtml","d":"<p>Assert that the given text strings are present in order in the HTML email body.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertSeeInText","p":"Illuminate/Mail/Mailable.html#method_assertSeeInText","d":"<p>Assert that the given text is present in the plain-text email body.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertDontSeeInText","p":"Illuminate/Mail/Mailable.html#method_assertDontSeeInText","d":"<p>Assert that the given text is not present in the plain-text email body.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertSeeInOrderInText","p":"Illuminate/Mail/Mailable.html#method_assertSeeInOrderInText","d":"<p>Assert that the given text strings are present in order in the plain-text email body.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasAttachment","p":"Illuminate/Mail/Mailable.html#method_assertHasAttachment","d":"<p>Assert the mailable has the given attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasAttachedData","p":"Illuminate/Mail/Mailable.html#method_assertHasAttachedData","d":"<p>Assert the mailable has the given data as an attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasAttachmentFromStorage","p":"Illuminate/Mail/Mailable.html#method_assertHasAttachmentFromStorage","d":"<p>Assert the mailable has the given attachment from storage.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasAttachmentFromStorageDisk","p":"Illuminate/Mail/Mailable.html#method_assertHasAttachmentFromStorageDisk","d":"<p>Assert the mailable has the given attachment from a specific storage disk.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasTag","p":"Illuminate/Mail/Mailable.html#method_assertHasTag","d":"<p>Assert that the mailable has the given tag.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::assertHasMetadata","p":"Illuminate/Mail/Mailable.html#method_assertHasMetadata","d":"<p>Assert that the mailable has the given metadata.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::renderForAssertions","p":"Illuminate/Mail/Mailable.html#method_renderForAssertions","d":"<p>Render the HTML and plain-text version of the mailable into views for assertions.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::mailer","p":"Illuminate/Mail/Mailable.html#method_mailer","d":"<p>Set the name of the mailer that should send the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::withSymfonyMessage","p":"Illuminate/Mail/Mailable.html#method_withSymfonyMessage","d":"<p>Register a callback to be called with the Symfony message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::buildViewDataUsing","p":"Illuminate/Mail/Mailable.html#method_buildViewDataUsing","d":"<p>Register a callback to be called while building the view data.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailable::__call","p":"Illuminate/Mail/Mailable.html#method___call","d":"<p>Dynamically bind parameters to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Address::__construct","p":"Illuminate/Mail/Mailables/Address.html#method___construct","d":"<p>Create a new address instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Content::__construct","p":"Illuminate/Mail/Mailables/Content.html#method___construct","d":"<p>Create a new content definition.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Content::view","p":"Illuminate/Mail/Mailables/Content.html#method_view","d":"<p>Set the view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Content::html","p":"Illuminate/Mail/Mailables/Content.html#method_html","d":"<p>Set the view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Content::text","p":"Illuminate/Mail/Mailables/Content.html#method_text","d":"<p>Set the plain text view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Content::markdown","p":"Illuminate/Mail/Mailables/Content.html#method_markdown","d":"<p>Set the Markdown view for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Content::htmlString","p":"Illuminate/Mail/Mailables/Content.html#method_htmlString","d":"<p>Set the pre-rendered HTML for the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Content::with","p":"Illuminate/Mail/Mailables/Content.html#method_with","d":"<p>Add a piece of view data to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::__construct","p":"Illuminate/Mail/Mailables/Envelope.html#method___construct","d":"<p>Create a new message envelope instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::normalizeAddresses","p":"Illuminate/Mail/Mailables/Envelope.html#method_normalizeAddresses","d":"<p>Normalize the given array of addresses.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::from","p":"Illuminate/Mail/Mailables/Envelope.html#method_from","d":"<p>Specify who the message will be &quot;from&quot;.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::to","p":"Illuminate/Mail/Mailables/Envelope.html#method_to","d":"<p>Add a &quot;to&quot; recipient to the message envelope.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::cc","p":"Illuminate/Mail/Mailables/Envelope.html#method_cc","d":"<p>Add a &quot;cc&quot; recipient to the message envelope.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::bcc","p":"Illuminate/Mail/Mailables/Envelope.html#method_bcc","d":"<p>Add a &quot;bcc&quot; recipient to the message envelope.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::replyTo","p":"Illuminate/Mail/Mailables/Envelope.html#method_replyTo","d":"<p>Add a &quot;reply to&quot; recipient to the message envelope.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::subject","p":"Illuminate/Mail/Mailables/Envelope.html#method_subject","d":"<p>Set the subject of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::tags","p":"Illuminate/Mail/Mailables/Envelope.html#method_tags","d":"<p>Add &quot;tags&quot; to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::tag","p":"Illuminate/Mail/Mailables/Envelope.html#method_tag","d":"<p>Add a &quot;tag&quot; to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::metadata","p":"Illuminate/Mail/Mailables/Envelope.html#method_metadata","d":"<p>Add metadata to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::using","p":"Illuminate/Mail/Mailables/Envelope.html#method_using","d":"<p>Add a Symfony Message customization callback to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::isFrom","p":"Illuminate/Mail/Mailables/Envelope.html#method_isFrom","d":"<p>Determine if the message is from the given address.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::hasTo","p":"Illuminate/Mail/Mailables/Envelope.html#method_hasTo","d":"<p>Determine if the message has the given address as a recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::hasCc","p":"Illuminate/Mail/Mailables/Envelope.html#method_hasCc","d":"<p>Determine if the message has the given address as a &quot;cc&quot; recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::hasBcc","p":"Illuminate/Mail/Mailables/Envelope.html#method_hasBcc","d":"<p>Determine if the message has the given address as a &quot;bcc&quot; recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::hasReplyTo","p":"Illuminate/Mail/Mailables/Envelope.html#method_hasReplyTo","d":"<p>Determine if the message has the given address as a &quot;reply to&quot; recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::hasRecipient","p":"Illuminate/Mail/Mailables/Envelope.html#method_hasRecipient","d":"<p>Determine if the message has the given recipient.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::hasSubject","p":"Illuminate/Mail/Mailables/Envelope.html#method_hasSubject","d":"<p>Determine if the message has the given subject.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Envelope::hasMetadata","p":"Illuminate/Mail/Mailables/Envelope.html#method_hasMetadata","d":"<p>Determine if the message has the given metadata.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Headers::__construct","p":"Illuminate/Mail/Mailables/Headers.html#method___construct","d":"<p>Create a new instance of headers for a message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Headers::messageId","p":"Illuminate/Mail/Mailables/Headers.html#method_messageId","d":"<p>Set the message ID.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Headers::references","p":"Illuminate/Mail/Mailables/Headers.html#method_references","d":"<p>Set the message IDs referenced by this message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Headers::text","p":"Illuminate/Mail/Mailables/Headers.html#method_text","d":"<p>Set the headers for this message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailables\\Headers::referencesString","p":"Illuminate/Mail/Mailables/Headers.html#method_referencesString","d":"<p>Get the references header as a string.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::__construct","p":"Illuminate/Mail/Mailer.html#method___construct","d":"<p>Create a new Mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::alwaysFrom","p":"Illuminate/Mail/Mailer.html#method_alwaysFrom","d":"<p>Set the global from address and name.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::alwaysReplyTo","p":"Illuminate/Mail/Mailer.html#method_alwaysReplyTo","d":"<p>Set the global reply-to address and name.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::alwaysReturnPath","p":"Illuminate/Mail/Mailer.html#method_alwaysReturnPath","d":"<p>Set the global return path address.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::alwaysTo","p":"Illuminate/Mail/Mailer.html#method_alwaysTo","d":"<p>Set the global to address and name.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::to","p":"Illuminate/Mail/Mailer.html#method_to","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::cc","p":"Illuminate/Mail/Mailer.html#method_cc","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::bcc","p":"Illuminate/Mail/Mailer.html#method_bcc","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::html","p":"Illuminate/Mail/Mailer.html#method_html","d":"<p>Send a new message with only an HTML part.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::raw","p":"Illuminate/Mail/Mailer.html#method_raw","d":"<p>Send a new message with only a raw text part.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::plain","p":"Illuminate/Mail/Mailer.html#method_plain","d":"<p>Send a new message with only a plain part.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::render","p":"Illuminate/Mail/Mailer.html#method_render","d":"<p>Render the given message as a view.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::send","p":"Illuminate/Mail/Mailer.html#method_send","d":"<p>Send a new message using a view.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::sendMailable","p":"Illuminate/Mail/Mailer.html#method_sendMailable","d":"<p>Send the given mailable.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::parseView","p":"Illuminate/Mail/Mailer.html#method_parseView","d":"<p>Parse the given view name or array.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::addContent","p":"Illuminate/Mail/Mailer.html#method_addContent","d":"<p>Add the content to a given message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::renderView","p":"Illuminate/Mail/Mailer.html#method_renderView","d":"<p>Render the given view.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::setGlobalToAndRemoveCcAndBcc","p":"Illuminate/Mail/Mailer.html#method_setGlobalToAndRemoveCcAndBcc","d":"<p>Set the global &quot;to&quot; address on the given message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::queue","p":"Illuminate/Mail/Mailer.html#method_queue","d":"<p>Queue a new e-mail message for sending.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::onQueue","p":"Illuminate/Mail/Mailer.html#method_onQueue","d":"<p>Queue a new e-mail message for sending on the given queue.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::queueOn","p":"Illuminate/Mail/Mailer.html#method_queueOn","d":"<p>Queue a new e-mail message for sending on the given queue.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::later","p":"Illuminate/Mail/Mailer.html#method_later","d":"<p>Queue a new e-mail message for sending after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::laterOn","p":"Illuminate/Mail/Mailer.html#method_laterOn","d":"<p>Queue a new e-mail message for sending after (n) seconds on the given queue.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::createMessage","p":"Illuminate/Mail/Mailer.html#method_createMessage","d":"<p>Create a new message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::sendSymfonyMessage","p":"Illuminate/Mail/Mailer.html#method_sendSymfonyMessage","d":"<p>Send a Symfony Email instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::shouldSendMessage","p":"Illuminate/Mail/Mailer.html#method_shouldSendMessage","d":"<p>Determines if the email can be sent.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::dispatchSentEvent","p":"Illuminate/Mail/Mailer.html#method_dispatchSentEvent","d":"<p>Dispatch the message sent event.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::getSymfonyTransport","p":"Illuminate/Mail/Mailer.html#method_getSymfonyTransport","d":"<p>Get the Symfony Transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::getViewFactory","p":"Illuminate/Mail/Mailer.html#method_getViewFactory","d":"<p>Get the view factory instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::setSymfonyTransport","p":"Illuminate/Mail/Mailer.html#method_setSymfonyTransport","d":"<p>Set the Symfony Transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Mailer::setQueue","p":"Illuminate/Mail/Mailer.html#method_setQueue","d":"<p>Set the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::__construct","p":"Illuminate/Mail/Markdown.html#method___construct","d":"<p>Create a new Markdown renderer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::render","p":"Illuminate/Mail/Markdown.html#method_render","d":"<p>Render the Markdown template into HTML.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::renderText","p":"Illuminate/Mail/Markdown.html#method_renderText","d":"<p>Render the Markdown template into text.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::parse","p":"Illuminate/Mail/Markdown.html#method_parse","d":"<p>Parse the given Markdown text into HTML.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::htmlComponentPaths","p":"Illuminate/Mail/Markdown.html#method_htmlComponentPaths","d":"<p>Get the HTML component paths.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::textComponentPaths","p":"Illuminate/Mail/Markdown.html#method_textComponentPaths","d":"<p>Get the text component paths.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::componentPaths","p":"Illuminate/Mail/Markdown.html#method_componentPaths","d":"<p>Get the component paths.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::loadComponentsFrom","p":"Illuminate/Mail/Markdown.html#method_loadComponentsFrom","d":"<p>Register new mail component paths.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::theme","p":"Illuminate/Mail/Markdown.html#method_theme","d":"<p>Set the default theme to be used.</p>"},{"t":"M","n":"Illuminate\\Mail\\Markdown::getTheme","p":"Illuminate/Mail/Markdown.html#method_getTheme","d":"<p>Get the theme currently being used by the renderer.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::__construct","p":"Illuminate/Mail/Message.html#method___construct","d":"<p>Create a new message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::from","p":"Illuminate/Mail/Message.html#method_from","d":"<p>Add a &quot;from&quot; address to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::sender","p":"Illuminate/Mail/Message.html#method_sender","d":"<p>Set the &quot;sender&quot; of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::returnPath","p":"Illuminate/Mail/Message.html#method_returnPath","d":"<p>Set the &quot;return path&quot; of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::to","p":"Illuminate/Mail/Message.html#method_to","d":"<p>Add a recipient to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::forgetTo","p":"Illuminate/Mail/Message.html#method_forgetTo","d":"<p>Remove all &quot;to&quot; addresses from the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::cc","p":"Illuminate/Mail/Message.html#method_cc","d":"<p>Add a carbon copy to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::forgetCc","p":"Illuminate/Mail/Message.html#method_forgetCc","d":"<p>Remove all carbon copy addresses from the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::bcc","p":"Illuminate/Mail/Message.html#method_bcc","d":"<p>Add a blind carbon copy to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::forgetBcc","p":"Illuminate/Mail/Message.html#method_forgetBcc","d":"<p>Remove all of the blind carbon copy addresses from the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::replyTo","p":"Illuminate/Mail/Message.html#method_replyTo","d":"<p>Add a &quot;reply to&quot; address to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::addAddresses","p":"Illuminate/Mail/Message.html#method_addAddresses","d":"<p>Add a recipient to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::addAddressDebugHeader","p":"Illuminate/Mail/Message.html#method_addAddressDebugHeader","d":"<p>Add an address debug header for a list of recipients.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::subject","p":"Illuminate/Mail/Message.html#method_subject","d":"<p>Set the subject of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::priority","p":"Illuminate/Mail/Message.html#method_priority","d":"<p>Set the message priority level.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::attach","p":"Illuminate/Mail/Message.html#method_attach","d":"<p>Attach a file to the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::attachData","p":"Illuminate/Mail/Message.html#method_attachData","d":"<p>Attach in-memory data as an attachment.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::embed","p":"Illuminate/Mail/Message.html#method_embed","d":"<p>Embed a file in the message and get the CID.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::embedData","p":"Illuminate/Mail/Message.html#method_embedData","d":"<p>Embed in-memory data in the message and get the CID.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::getSymfonyMessage","p":"Illuminate/Mail/Message.html#method_getSymfonyMessage","d":"<p>Get the underlying Symfony Email instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Message::__call","p":"Illuminate/Mail/Message.html#method___call","d":"<p>Dynamically pass missing methods to the Symfony instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::__construct","p":"Illuminate/Mail/PendingMail.html#method___construct","d":"<p>Create a new mailable mailer instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::locale","p":"Illuminate/Mail/PendingMail.html#method_locale","d":"<p>Set the locale of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::to","p":"Illuminate/Mail/PendingMail.html#method_to","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::cc","p":"Illuminate/Mail/PendingMail.html#method_cc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::bcc","p":"Illuminate/Mail/PendingMail.html#method_bcc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::send","p":"Illuminate/Mail/PendingMail.html#method_send","d":"<p>Send a new mailable message instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::queue","p":"Illuminate/Mail/PendingMail.html#method_queue","d":"<p>Push the given mailable onto the queue.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::later","p":"Illuminate/Mail/PendingMail.html#method_later","d":"<p>Deliver the queued message after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Mail\\PendingMail::fill","p":"Illuminate/Mail/PendingMail.html#method_fill","d":"<p>Populate the mailable with the addresses.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::__construct","p":"Illuminate/Mail/SendQueuedMailable.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::handle","p":"Illuminate/Mail/SendQueuedMailable.html#method_handle","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::backoff","p":"Illuminate/Mail/SendQueuedMailable.html#method_backoff","d":"<p>Get the number of seconds before a released mailable will be available.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::retryUntil","p":"Illuminate/Mail/SendQueuedMailable.html#method_retryUntil","d":"<p>Determine the time at which the job should timeout.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::failed","p":"Illuminate/Mail/SendQueuedMailable.html#method_failed","d":"<p>Call the failed method on the mailable instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::displayName","p":"Illuminate/Mail/SendQueuedMailable.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Mail\\SendQueuedMailable::__clone","p":"Illuminate/Mail/SendQueuedMailable.html#method___clone","d":"<p>Prepare the instance for cloning.</p>"},{"t":"M","n":"Illuminate\\Mail\\SentMessage::__construct","p":"Illuminate/Mail/SentMessage.html#method___construct","d":"<p>Create a new SentMessage instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\SentMessage::getSymfonySentMessage","p":"Illuminate/Mail/SentMessage.html#method_getSymfonySentMessage","d":"<p>Get the underlying Symfony Email instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\SentMessage::__call","p":"Illuminate/Mail/SentMessage.html#method___call","d":"<p>Dynamically pass missing methods to the Symfony instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::__construct","p":"Illuminate/Mail/Transport/ArrayTransport.html#method___construct","d":"<p>Create a new array transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::send","p":"Illuminate/Mail/Transport/ArrayTransport.html#method_send","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::messages","p":"Illuminate/Mail/Transport/ArrayTransport.html#method_messages","d":"<p>Retrieve the collection of messages.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::flush","p":"Illuminate/Mail/Transport/ArrayTransport.html#method_flush","d":"<p>Clear all of the messages from the local collection.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\ArrayTransport::__toString","p":"Illuminate/Mail/Transport/ArrayTransport.html#method___toString","d":"<p>Get the string representation of the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\LogTransport::__construct","p":"Illuminate/Mail/Transport/LogTransport.html#method___construct","d":"<p>Create a new log transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\LogTransport::send","p":"Illuminate/Mail/Transport/LogTransport.html#method_send","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\LogTransport::logger","p":"Illuminate/Mail/Transport/LogTransport.html#method_logger","d":"<p>Get the logger for the LogTransport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\LogTransport::__toString","p":"Illuminate/Mail/Transport/LogTransport.html#method___toString","d":"<p>Get the string representation of the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesTransport::__construct","p":"Illuminate/Mail/Transport/SesTransport.html#method___construct","d":"<p>Create a new SES transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesTransport::doSend","p":"Illuminate/Mail/Transport/SesTransport.html#method_doSend","d":"{@inheritDoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesTransport::ses","p":"Illuminate/Mail/Transport/SesTransport.html#method_ses","d":"<p>Get the Amazon SES client for the SesTransport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesTransport::getOptions","p":"Illuminate/Mail/Transport/SesTransport.html#method_getOptions","d":"<p>Get the transmission options being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesTransport::setOptions","p":"Illuminate/Mail/Transport/SesTransport.html#method_setOptions","d":"<p>Set the transmission options being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesTransport::__toString","p":"Illuminate/Mail/Transport/SesTransport.html#method___toString","d":"<p>Get the string representation of the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesV2Transport::__construct","p":"Illuminate/Mail/Transport/SesV2Transport.html#method___construct","d":"<p>Create a new SES V2 transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesV2Transport::doSend","p":"Illuminate/Mail/Transport/SesV2Transport.html#method_doSend","d":"{@inheritDoc}"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesV2Transport::ses","p":"Illuminate/Mail/Transport/SesV2Transport.html#method_ses","d":"<p>Get the Amazon SES V2 client for the SesV2Transport instance.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesV2Transport::getOptions","p":"Illuminate/Mail/Transport/SesV2Transport.html#method_getOptions","d":"<p>Get the transmission options being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesV2Transport::setOptions","p":"Illuminate/Mail/Transport/SesV2Transport.html#method_setOptions","d":"<p>Set the transmission options being used by the transport.</p>"},{"t":"M","n":"Illuminate\\Mail\\Transport\\SesV2Transport::__toString","p":"Illuminate/Mail/Transport/SesV2Transport.html#method___toString","d":"<p>Get the string representation of the transport.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Action::__construct","p":"Illuminate/Notifications/Action.html#method___construct","d":"<p>Create a new action instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\AnonymousNotifiable::route","p":"Illuminate/Notifications/AnonymousNotifiable.html#method_route","d":"<p>Add routing information to the target.</p>"},{"t":"M","n":"Illuminate\\Notifications\\AnonymousNotifiable::notify","p":"Illuminate/Notifications/AnonymousNotifiable.html#method_notify","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\AnonymousNotifiable::notifyNow","p":"Illuminate/Notifications/AnonymousNotifiable.html#method_notifyNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Notifications\\AnonymousNotifiable::routeNotificationFor","p":"Illuminate/Notifications/AnonymousNotifiable.html#method_routeNotificationFor","d":"<p>Get the notification routing information for the given driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\AnonymousNotifiable::getKey","p":"Illuminate/Notifications/AnonymousNotifiable.html#method_getKey","d":"<p>Get the value of the notifiable's primary key.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::send","p":"Illuminate/Notifications/ChannelManager.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::sendNow","p":"Illuminate/Notifications/ChannelManager.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::channel","p":"Illuminate/Notifications/ChannelManager.html#method_channel","d":"<p>Get a channel instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createDatabaseDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createDatabaseDriver","d":"<p>Create an instance of the database driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createBroadcastDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createBroadcastDriver","d":"<p>Create an instance of the broadcast driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createMailDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createMailDriver","d":"<p>Create an instance of the mail driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::createDriver","p":"Illuminate/Notifications/ChannelManager.html#method_createDriver","d":"<p>Create a new driver instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::getDefaultDriver","p":"Illuminate/Notifications/ChannelManager.html#method_getDefaultDriver","d":"<p>Get the default channel driver name.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::deliversVia","p":"Illuminate/Notifications/ChannelManager.html#method_deliversVia","d":"<p>Get the default channel driver name.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::deliverVia","p":"Illuminate/Notifications/ChannelManager.html#method_deliverVia","d":"<p>Set the default channel driver name.</p>"},{"t":"M","n":"Illuminate\\Notifications\\ChannelManager::locale","p":"Illuminate/Notifications/ChannelManager.html#method_locale","d":"<p>Set the locale of notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\BroadcastChannel::__construct","p":"Illuminate/Notifications/Channels/BroadcastChannel.html#method___construct","d":"<p>Create a new broadcast channel.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\BroadcastChannel::send","p":"Illuminate/Notifications/Channels/BroadcastChannel.html#method_send","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\BroadcastChannel::getData","p":"Illuminate/Notifications/Channels/BroadcastChannel.html#method_getData","d":"<p>Get the data for the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\DatabaseChannel::send","p":"Illuminate/Notifications/Channels/DatabaseChannel.html#method_send","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\DatabaseChannel::buildPayload","p":"Illuminate/Notifications/Channels/DatabaseChannel.html#method_buildPayload","d":"<p>Build an array payload for the DatabaseNotification Model.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\DatabaseChannel::getData","p":"Illuminate/Notifications/Channels/DatabaseChannel.html#method_getData","d":"<p>Get the data for the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::__construct","p":"Illuminate/Notifications/Channels/MailChannel.html#method___construct","d":"<p>Create a new mail channel instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::send","p":"Illuminate/Notifications/Channels/MailChannel.html#method_send","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::messageBuilder","p":"Illuminate/Notifications/Channels/MailChannel.html#method_messageBuilder","d":"<p>Get the mailer Closure for the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::buildView","p":"Illuminate/Notifications/Channels/MailChannel.html#method_buildView","d":"<p>Build the notification's view.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::additionalMessageData","p":"Illuminate/Notifications/Channels/MailChannel.html#method_additionalMessageData","d":"<p>Get additional meta-data to pass along with the view data.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::buildMessage","p":"Illuminate/Notifications/Channels/MailChannel.html#method_buildMessage","d":"<p>Build the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::addressMessage","p":"Illuminate/Notifications/Channels/MailChannel.html#method_addressMessage","d":"<p>Address the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::addSender","p":"Illuminate/Notifications/Channels/MailChannel.html#method_addSender","d":"<p>Add the &quot;from&quot; and &quot;reply to&quot; addresses to the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::getRecipients","p":"Illuminate/Notifications/Channels/MailChannel.html#method_getRecipients","d":"<p>Get the recipients of the given message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::addAttachments","p":"Illuminate/Notifications/Channels/MailChannel.html#method_addAttachments","d":"<p>Add the attachments to the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Channels\\MailChannel::runCallbacks","p":"Illuminate/Notifications/Channels/MailChannel.html#method_runCallbacks","d":"<p>Run the callbacks for the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Console\\NotificationTableCommand::__construct","p":"Illuminate/Notifications/Console/NotificationTableCommand.html#method___construct","d":"<p>Create a new notifications table command instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Console\\NotificationTableCommand::handle","p":"Illuminate/Notifications/Console/NotificationTableCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Console\\NotificationTableCommand::createBaseMigration","p":"Illuminate/Notifications/Console/NotificationTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::notifiable","p":"Illuminate/Notifications/DatabaseNotification.html#method_notifiable","d":"<p>Get the notifiable entity that the notification belongs to.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::markAsRead","p":"Illuminate/Notifications/DatabaseNotification.html#method_markAsRead","d":"<p>Mark the notification as read.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::markAsUnread","p":"Illuminate/Notifications/DatabaseNotification.html#method_markAsUnread","d":"<p>Mark the notification as unread.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::read","p":"Illuminate/Notifications/DatabaseNotification.html#method_read","d":"<p>Determine if a notification has been read.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::unread","p":"Illuminate/Notifications/DatabaseNotification.html#method_unread","d":"<p>Determine if a notification has not been read.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::scopeRead","p":"Illuminate/Notifications/DatabaseNotification.html#method_scopeRead","d":"<p>Scope a query to only include read notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::scopeUnread","p":"Illuminate/Notifications/DatabaseNotification.html#method_scopeUnread","d":"<p>Scope a query to only include unread notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotification::newCollection","p":"Illuminate/Notifications/DatabaseNotification.html#method_newCollection","d":"<p>Create a new database notification collection instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotificationCollection::markAsRead","p":"Illuminate/Notifications/DatabaseNotificationCollection.html#method_markAsRead","d":"<p>Mark all notifications as read.</p>"},{"t":"M","n":"Illuminate\\Notifications\\DatabaseNotificationCollection::markAsUnread","p":"Illuminate/Notifications/DatabaseNotificationCollection.html#method_markAsUnread","d":"<p>Mark all notifications as unread.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::__construct","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::broadcastOn","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method_broadcastOn","d":"<p>Get the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::channelName","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method_channelName","d":"<p>Get the broadcast channel name for the event.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::broadcastWith","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method_broadcastWith","d":"<p>Get the data that should be sent with the broadcasted event.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\BroadcastNotificationCreated::broadcastType","p":"Illuminate/Notifications/Events/BroadcastNotificationCreated.html#method_broadcastType","d":"<p>Get the type of the notification being broadcast.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\NotificationFailed::__construct","p":"Illuminate/Notifications/Events/NotificationFailed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\NotificationSending::__construct","p":"Illuminate/Notifications/Events/NotificationSending.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Events\\NotificationSent::__construct","p":"Illuminate/Notifications/Events/NotificationSent.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\HasDatabaseNotifications::notifications","p":"Illuminate/Notifications/HasDatabaseNotifications.html#method_notifications","d":"<p>Get the entity's notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\HasDatabaseNotifications::readNotifications","p":"Illuminate/Notifications/HasDatabaseNotifications.html#method_readNotifications","d":"<p>Get the entity's read notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\HasDatabaseNotifications::unreadNotifications","p":"Illuminate/Notifications/HasDatabaseNotifications.html#method_unreadNotifications","d":"<p>Get the entity's unread notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\BroadcastMessage::__construct","p":"Illuminate/Notifications/Messages/BroadcastMessage.html#method___construct","d":"<p>Create a new message instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\BroadcastMessage::data","p":"Illuminate/Notifications/Messages/BroadcastMessage.html#method_data","d":"<p>Set the message data.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\DatabaseMessage::__construct","p":"Illuminate/Notifications/Messages/DatabaseMessage.html#method___construct","d":"<p>Create a new database message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::view","p":"Illuminate/Notifications/Messages/MailMessage.html#method_view","d":"<p>Set the view for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::markdown","p":"Illuminate/Notifications/Messages/MailMessage.html#method_markdown","d":"<p>Set the Markdown template for the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::template","p":"Illuminate/Notifications/Messages/MailMessage.html#method_template","d":"<p>Set the default markdown template.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::theme","p":"Illuminate/Notifications/Messages/MailMessage.html#method_theme","d":"<p>Set the theme to use with the Markdown template.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::from","p":"Illuminate/Notifications/Messages/MailMessage.html#method_from","d":"<p>Set the from address for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::replyTo","p":"Illuminate/Notifications/Messages/MailMessage.html#method_replyTo","d":"<p>Set the &quot;reply to&quot; address of the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::cc","p":"Illuminate/Notifications/Messages/MailMessage.html#method_cc","d":"<p>Set the cc address for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::bcc","p":"Illuminate/Notifications/Messages/MailMessage.html#method_bcc","d":"<p>Set the bcc address for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::attach","p":"Illuminate/Notifications/Messages/MailMessage.html#method_attach","d":"<p>Attach a file to the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::attachData","p":"Illuminate/Notifications/Messages/MailMessage.html#method_attachData","d":"<p>Attach in-memory data as an attachment.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::tag","p":"Illuminate/Notifications/Messages/MailMessage.html#method_tag","d":"<p>Add a tag header to the message when supported by the underlying transport.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::metadata","p":"Illuminate/Notifications/Messages/MailMessage.html#method_metadata","d":"<p>Add a metadata header to the message when supported by the underlying transport.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::priority","p":"Illuminate/Notifications/Messages/MailMessage.html#method_priority","d":"<p>Set the priority of this message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::data","p":"Illuminate/Notifications/Messages/MailMessage.html#method_data","d":"<p>Get the data array for the mail message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::parseAddresses","p":"Illuminate/Notifications/Messages/MailMessage.html#method_parseAddresses","d":"<p>Parse the multi-address array into the necessary format.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::arrayOfAddresses","p":"Illuminate/Notifications/Messages/MailMessage.html#method_arrayOfAddresses","d":"<p>Determine if the given &quot;address&quot; is actually an array of addresses.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::render","p":"Illuminate/Notifications/Messages/MailMessage.html#method_render","d":"<p>Render the mail notification message into an HTML string.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\MailMessage::withSymfonyMessage","p":"Illuminate/Notifications/Messages/MailMessage.html#method_withSymfonyMessage","d":"<p>Register a callback to be called with the Symfony message instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::success","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_success","d":"<p>Indicate that the notification gives information about a successful operation.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::error","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_error","d":"<p>Indicate that the notification gives information about an error.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::level","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_level","d":"<p>Set the &quot;level&quot; of the notification (success, error, etc.).</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::subject","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_subject","d":"<p>Set the subject of the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::greeting","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_greeting","d":"<p>Set the greeting of the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::salutation","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_salutation","d":"<p>Set the salutation of the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::line","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_line","d":"<p>Add a line of text to the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::lineIf","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_lineIf","d":"<p>Add a line of text to the notification if the given condition is true.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::lines","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_lines","d":"<p>Add lines of text to the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::linesIf","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_linesIf","d":"<p>Add lines of text to the notification if the given condition is true.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::with","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_with","d":"<p>Add a line of text to the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::formatLine","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_formatLine","d":"<p>Format the given line of text.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::action","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_action","d":"<p>Configure the &quot;call to action&quot; button.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::mailer","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_mailer","d":"<p>Set the name of the mailer that should send the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Messages\\SimpleMessage::toArray","p":"Illuminate/Notifications/Messages/SimpleMessage.html#method_toArray","d":"<p>Get an array representation of the message.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Notification::broadcastOn","p":"Illuminate/Notifications/Notification.html#method_broadcastOn","d":"<p>Get the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Notifications\\Notification::locale","p":"Illuminate/Notifications/Notification.html#method_locale","d":"<p>Set the locale to send this notification in.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::__construct","p":"Illuminate/Notifications/NotificationSender.html#method___construct","d":"<p>Create a new notification sender instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::send","p":"Illuminate/Notifications/NotificationSender.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::sendNow","p":"Illuminate/Notifications/NotificationSender.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::preferredLocale","p":"Illuminate/Notifications/NotificationSender.html#method_preferredLocale","d":"<p>Get the notifiable's preferred locale for the notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::sendToNotifiable","p":"Illuminate/Notifications/NotificationSender.html#method_sendToNotifiable","d":"<p>Send the given notification to the given notifiable via a channel.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::shouldSendNotification","p":"Illuminate/Notifications/NotificationSender.html#method_shouldSendNotification","d":"<p>Determines if the notification can be sent.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::queueNotification","p":"Illuminate/Notifications/NotificationSender.html#method_queueNotification","d":"<p>Queue the given notification instances.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationSender::formatNotifiables","p":"Illuminate/Notifications/NotificationSender.html#method_formatNotifiables","d":"<p>Format the notifiables into a Collection / array if necessary.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationServiceProvider::boot","p":"Illuminate/Notifications/NotificationServiceProvider.html#method_boot","d":"<p>Boot the application services.</p>"},{"t":"M","n":"Illuminate\\Notifications\\NotificationServiceProvider::register","p":"Illuminate/Notifications/NotificationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Notifications\\RoutesNotifications::notify","p":"Illuminate/Notifications/RoutesNotifications.html#method_notify","d":"<p>Send the given notification.</p>"},{"t":"M","n":"Illuminate\\Notifications\\RoutesNotifications::notifyNow","p":"Illuminate/Notifications/RoutesNotifications.html#method_notifyNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Notifications\\RoutesNotifications::routeNotificationFor","p":"Illuminate/Notifications/RoutesNotifications.html#method_routeNotificationFor","d":"<p>Get the notification routing information for the given driver.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::__construct","p":"Illuminate/Notifications/SendQueuedNotifications.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::wrapNotifiables","p":"Illuminate/Notifications/SendQueuedNotifications.html#method_wrapNotifiables","d":"<p>Wrap the notifiable(s) in a collection.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::handle","p":"Illuminate/Notifications/SendQueuedNotifications.html#method_handle","d":"<p>Send the notifications.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::displayName","p":"Illuminate/Notifications/SendQueuedNotifications.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::failed","p":"Illuminate/Notifications/SendQueuedNotifications.html#method_failed","d":"<p>Call the failed method on the notification instance.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::backoff","p":"Illuminate/Notifications/SendQueuedNotifications.html#method_backoff","d":"<p>Get the number of seconds before a released notification will be available.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::retryUntil","p":"Illuminate/Notifications/SendQueuedNotifications.html#method_retryUntil","d":"<p>Determine the time at which the job should timeout.</p>"},{"t":"M","n":"Illuminate\\Notifications\\SendQueuedNotifications::__clone","p":"Illuminate/Notifications/SendQueuedNotifications.html#method___clone","d":"<p>Prepare the instance for cloning.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::url","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_url","d":"<p>Get the URL for a given cursor.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::previousPageUrl","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::nextPageUrl","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_nextPageUrl","d":"<p>The URL for the next page, or null.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::previousCursor","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_previousCursor","d":"<p>Get the &quot;cursor&quot; that points to the previous set of items.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::nextCursor","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_nextCursor","d":"<p>Get the &quot;cursor&quot; that points to the next set of items.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::getCursorForItem","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_getCursorForItem","d":"<p>Get a cursor instance for the given item.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::getParametersForItem","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_getParametersForItem","d":"<p>Get the cursor parameters for a given object.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::getPivotParameterForItem","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_getPivotParameterForItem","d":"<p>Get the cursor parameter value from a pivot model if applicable.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::ensureParameterIsPrimitive","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_ensureParameterIsPrimitive","d":"<p>Ensure the parameter is a primitive type.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::fragment","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::appends","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::appendArray","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_appendArray","d":"<p>Add an array of query string values.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::withQueryString","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_withQueryString","d":"<p>Add all current query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::addQuery","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_addQuery","d":"<p>Add a query string value to the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::buildFragment","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_buildFragment","d":"<p>Build the full fragment portion of a URL.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::loadMorph","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_loadMorph","d":"<p>Load a set of relationships onto the mixed relationship collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::loadMorphCount","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_loadMorphCount","d":"<p>Load a set of relationship counts onto the mixed relationship collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::items","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_items","d":"<p>Get the slice of items being paginated.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::through","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_through","d":"<p>Transform each item in the slice of items using a callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::perPage","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_perPage","d":"<p>Get the number of items shown per page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::cursor","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_cursor","d":"<p>Get the current cursor being paginated.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::getCursorName","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_getCursorName","d":"<p>Get the query string variable used to store the cursor.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::setCursorName","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_setCursorName","d":"<p>Set the query string variable used to store the cursor.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::withPath","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_withPath","d":"<p>Set the base path to assign to all URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::setPath","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_setPath","d":"<p>Set the base path to assign to all URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::path","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_path","d":"<p>Get the base path for paginator generated URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::resolveCurrentCursor","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_resolveCurrentCursor","d":"<p>Resolve the current cursor or return the default value.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::currentCursorResolver","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_currentCursorResolver","d":"<p>Set the current cursor resolver callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::viewFactory","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_viewFactory","d":"<p>Get an instance of the view factory from the resolver.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::getIterator","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_getIterator","d":"<p>Get an iterator for the items.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::isEmpty","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::isNotEmpty","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_isNotEmpty","d":"<p>Determine if the list of items is not empty.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::count","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_count","d":"<p>Get the number of items for the current page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::getCollection","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_getCollection","d":"<p>Get the paginator's underlying collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::setCollection","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_setCollection","d":"<p>Set the paginator's underlying collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::getOptions","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_getOptions","d":"<p>Get the paginator options.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::offsetExists","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_offsetExists","d":"<p>Determine if the given item exists.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::offsetGet","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_offsetGet","d":"<p>Get the item at the given offset.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::offsetSet","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_offsetSet","d":"<p>Set the item at the given offset.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::offsetUnset","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_offsetUnset","d":"<p>Unset the item at the given key.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::toHtml","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method_toHtml","d":"<p>Render the contents of the paginator to HTML.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::__call","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method___call","d":"<p>Make dynamic calls into the collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractCursorPaginator::__toString","p":"Illuminate/Pagination/AbstractCursorPaginator.html#method___toString","d":"<p>Render the contents of the paginator when casting to a string.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::isValidPageNumber","p":"Illuminate/Pagination/AbstractPaginator.html#method_isValidPageNumber","d":"<p>Determine if the given value is a valid page number.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::previousPageUrl","p":"Illuminate/Pagination/AbstractPaginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getUrlRange","p":"Illuminate/Pagination/AbstractPaginator.html#method_getUrlRange","d":"<p>Create a range of pagination URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::url","p":"Illuminate/Pagination/AbstractPaginator.html#method_url","d":"<p>Get the URL for a given page number.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::fragment","p":"Illuminate/Pagination/AbstractPaginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::appends","p":"Illuminate/Pagination/AbstractPaginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::appendArray","p":"Illuminate/Pagination/AbstractPaginator.html#method_appendArray","d":"<p>Add an array of query string values.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::withQueryString","p":"Illuminate/Pagination/AbstractPaginator.html#method_withQueryString","d":"<p>Add all current query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::addQuery","p":"Illuminate/Pagination/AbstractPaginator.html#method_addQuery","d":"<p>Add a query string value to the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::buildFragment","p":"Illuminate/Pagination/AbstractPaginator.html#method_buildFragment","d":"<p>Build the full fragment portion of a URL.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::loadMorph","p":"Illuminate/Pagination/AbstractPaginator.html#method_loadMorph","d":"<p>Load a set of relationships onto the mixed relationship collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::loadMorphCount","p":"Illuminate/Pagination/AbstractPaginator.html#method_loadMorphCount","d":"<p>Load a set of relationship counts onto the mixed relationship collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::items","p":"Illuminate/Pagination/AbstractPaginator.html#method_items","d":"<p>Get the slice of items being paginated.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::firstItem","p":"Illuminate/Pagination/AbstractPaginator.html#method_firstItem","d":"<p>Get the number of the first item in the slice.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::lastItem","p":"Illuminate/Pagination/AbstractPaginator.html#method_lastItem","d":"<p>Get the number of the last item in the slice.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::through","p":"Illuminate/Pagination/AbstractPaginator.html#method_through","d":"<p>Transform each item in the slice of items using a callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::perPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_perPage","d":"<p>Get the number of items shown per page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::hasPages","p":"Illuminate/Pagination/AbstractPaginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::onFirstPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_onFirstPage","d":"<p>Determine if the paginator is on the first page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::onLastPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_onLastPage","d":"<p>Determine if the paginator is on the last page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::currentPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_currentPage","d":"<p>Get the current page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getPageName","p":"Illuminate/Pagination/AbstractPaginator.html#method_getPageName","d":"<p>Get the query string variable used to store the page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::setPageName","p":"Illuminate/Pagination/AbstractPaginator.html#method_setPageName","d":"<p>Set the query string variable used to store the page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::withPath","p":"Illuminate/Pagination/AbstractPaginator.html#method_withPath","d":"<p>Set the base path to assign to all URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::setPath","p":"Illuminate/Pagination/AbstractPaginator.html#method_setPath","d":"<p>Set the base path to assign to all URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::onEachSide","p":"Illuminate/Pagination/AbstractPaginator.html#method_onEachSide","d":"<p>Set the number of links to display on each side of current page link.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::path","p":"Illuminate/Pagination/AbstractPaginator.html#method_path","d":"<p>Get the base path for paginator generated URLs.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::resolveCurrentPath","p":"Illuminate/Pagination/AbstractPaginator.html#method_resolveCurrentPath","d":"<p>Resolve the current request path or return the default value.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::currentPathResolver","p":"Illuminate/Pagination/AbstractPaginator.html#method_currentPathResolver","d":"<p>Set the current request path resolver callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::resolveCurrentPage","p":"Illuminate/Pagination/AbstractPaginator.html#method_resolveCurrentPage","d":"<p>Resolve the current page or return the default value.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::currentPageResolver","p":"Illuminate/Pagination/AbstractPaginator.html#method_currentPageResolver","d":"<p>Set the current page resolver callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::resolveQueryString","p":"Illuminate/Pagination/AbstractPaginator.html#method_resolveQueryString","d":"<p>Resolve the query string or return the default value.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::queryStringResolver","p":"Illuminate/Pagination/AbstractPaginator.html#method_queryStringResolver","d":"<p>Set with query string resolver callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::viewFactory","p":"Illuminate/Pagination/AbstractPaginator.html#method_viewFactory","d":"<p>Get an instance of the view factory from the resolver.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::viewFactoryResolver","p":"Illuminate/Pagination/AbstractPaginator.html#method_viewFactoryResolver","d":"<p>Set the view factory resolver callback.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::defaultView","p":"Illuminate/Pagination/AbstractPaginator.html#method_defaultView","d":"<p>Set the default pagination view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::defaultSimpleView","p":"Illuminate/Pagination/AbstractPaginator.html#method_defaultSimpleView","d":"<p>Set the default &quot;simple&quot; pagination view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::useTailwind","p":"Illuminate/Pagination/AbstractPaginator.html#method_useTailwind","d":"<p>Indicate that Tailwind styling should be used for generated links.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::useBootstrap","p":"Illuminate/Pagination/AbstractPaginator.html#method_useBootstrap","d":"<p>Indicate that Bootstrap 4 styling should be used for generated links.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::useBootstrapThree","p":"Illuminate/Pagination/AbstractPaginator.html#method_useBootstrapThree","d":"<p>Indicate that Bootstrap 3 styling should be used for generated links.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::useBootstrapFour","p":"Illuminate/Pagination/AbstractPaginator.html#method_useBootstrapFour","d":"<p>Indicate that Bootstrap 4 styling should be used for generated links.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::useBootstrapFive","p":"Illuminate/Pagination/AbstractPaginator.html#method_useBootstrapFive","d":"<p>Indicate that Bootstrap 5 styling should be used for generated links.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getIterator","p":"Illuminate/Pagination/AbstractPaginator.html#method_getIterator","d":"<p>Get an iterator for the items.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::isEmpty","p":"Illuminate/Pagination/AbstractPaginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::isNotEmpty","p":"Illuminate/Pagination/AbstractPaginator.html#method_isNotEmpty","d":"<p>Determine if the list of items is not empty.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::count","p":"Illuminate/Pagination/AbstractPaginator.html#method_count","d":"<p>Get the number of items for the current page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getCollection","p":"Illuminate/Pagination/AbstractPaginator.html#method_getCollection","d":"<p>Get the paginator's underlying collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::setCollection","p":"Illuminate/Pagination/AbstractPaginator.html#method_setCollection","d":"<p>Set the paginator's underlying collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::getOptions","p":"Illuminate/Pagination/AbstractPaginator.html#method_getOptions","d":"<p>Get the paginator options.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::offsetExists","p":"Illuminate/Pagination/AbstractPaginator.html#method_offsetExists","d":"<p>Determine if the given item exists.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::offsetGet","p":"Illuminate/Pagination/AbstractPaginator.html#method_offsetGet","d":"<p>Get the item at the given offset.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::offsetSet","p":"Illuminate/Pagination/AbstractPaginator.html#method_offsetSet","d":"<p>Set the item at the given offset.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::offsetUnset","p":"Illuminate/Pagination/AbstractPaginator.html#method_offsetUnset","d":"<p>Unset the item at the given key.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::toHtml","p":"Illuminate/Pagination/AbstractPaginator.html#method_toHtml","d":"<p>Render the contents of the paginator to HTML.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::__call","p":"Illuminate/Pagination/AbstractPaginator.html#method___call","d":"<p>Make dynamic calls into the collection.</p>"},{"t":"M","n":"Illuminate\\Pagination\\AbstractPaginator::__toString","p":"Illuminate/Pagination/AbstractPaginator.html#method___toString","d":"<p>Render the contents of the paginator when casting to a string.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Cursor::__construct","p":"Illuminate/Pagination/Cursor.html#method___construct","d":"<p>Create a new cursor instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Cursor::parameter","p":"Illuminate/Pagination/Cursor.html#method_parameter","d":"<p>Get the given parameter from the cursor.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Cursor::parameters","p":"Illuminate/Pagination/Cursor.html#method_parameters","d":"<p>Get the given parameters from the cursor.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Cursor::pointsToNextItems","p":"Illuminate/Pagination/Cursor.html#method_pointsToNextItems","d":"<p>Determine whether the cursor points to the next set of items.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Cursor::pointsToPreviousItems","p":"Illuminate/Pagination/Cursor.html#method_pointsToPreviousItems","d":"<p>Determine whether the cursor points to the previous set of items.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Cursor::toArray","p":"Illuminate/Pagination/Cursor.html#method_toArray","d":"<p>Get the array representation of the cursor.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Cursor::encode","p":"Illuminate/Pagination/Cursor.html#method_encode","d":"<p>Get the encoded string representation of the cursor to construct a URL.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Cursor::fromEncoded","p":"Illuminate/Pagination/Cursor.html#method_fromEncoded","d":"<p>Get a cursor instance from the encoded string representation.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::__construct","p":"Illuminate/Pagination/CursorPaginator.html#method___construct","d":"<p>Create a new paginator instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::setItems","p":"Illuminate/Pagination/CursorPaginator.html#method_setItems","d":"<p>Set the items for the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::links","p":"Illuminate/Pagination/CursorPaginator.html#method_links","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::render","p":"Illuminate/Pagination/CursorPaginator.html#method_render","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::hasMorePages","p":"Illuminate/Pagination/CursorPaginator.html#method_hasMorePages","d":"<p>Determine if there are more items in the data source.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::hasPages","p":"Illuminate/Pagination/CursorPaginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::onFirstPage","p":"Illuminate/Pagination/CursorPaginator.html#method_onFirstPage","d":"<p>Determine if the paginator is on the first page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::onLastPage","p":"Illuminate/Pagination/CursorPaginator.html#method_onLastPage","d":"<p>Determine if the paginator is on the last page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::toArray","p":"Illuminate/Pagination/CursorPaginator.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::jsonSerialize","p":"Illuminate/Pagination/CursorPaginator.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Pagination\\CursorPaginator::toJson","p":"Illuminate/Pagination/CursorPaginator.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::__construct","p":"Illuminate/Pagination/LengthAwarePaginator.html#method___construct","d":"<p>Create a new paginator instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::setCurrentPage","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_setCurrentPage","d":"<p>Get the current page for the request.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::links","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_links","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::render","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_render","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::linkCollection","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_linkCollection","d":"<p>Get the paginator links as a collection (for JSON responses).</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::elements","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_elements","d":"<p>Get the array of elements to pass to the view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::total","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_total","d":"<p>Get the total number of items being paginated.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::hasMorePages","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_hasMorePages","d":"<p>Determine if there are more items in the data source.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::nextPageUrl","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_nextPageUrl","d":"<p>Get the URL for the next page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::lastPage","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_lastPage","d":"<p>Get the last page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::toArray","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::jsonSerialize","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Pagination\\LengthAwarePaginator::toJson","p":"Illuminate/Pagination/LengthAwarePaginator.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Pagination\\PaginationServiceProvider::boot","p":"Illuminate/Pagination/PaginationServiceProvider.html#method_boot","d":"<p>Bootstrap any application services.</p>"},{"t":"M","n":"Illuminate\\Pagination\\PaginationServiceProvider::register","p":"Illuminate/Pagination/PaginationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Pagination\\PaginationState::resolveUsing","p":"Illuminate/Pagination/PaginationState.html#method_resolveUsing","d":"<p>Bind the pagination state resolvers using the given application container as a base.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::__construct","p":"Illuminate/Pagination/Paginator.html#method___construct","d":"<p>Create a new paginator instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::setCurrentPage","p":"Illuminate/Pagination/Paginator.html#method_setCurrentPage","d":"<p>Get the current page for the request.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::setItems","p":"Illuminate/Pagination/Paginator.html#method_setItems","d":"<p>Set the items for the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::nextPageUrl","p":"Illuminate/Pagination/Paginator.html#method_nextPageUrl","d":"<p>Get the URL for the next page.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::links","p":"Illuminate/Pagination/Paginator.html#method_links","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::render","p":"Illuminate/Pagination/Paginator.html#method_render","d":"<p>Render the paginator using the given view.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::hasMorePagesWhen","p":"Illuminate/Pagination/Paginator.html#method_hasMorePagesWhen","d":"<p>Manually indicate that the paginator does have more pages.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::hasMorePages","p":"Illuminate/Pagination/Paginator.html#method_hasMorePages","d":"<p>Determine if there are more items in the data source.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::toArray","p":"Illuminate/Pagination/Paginator.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::jsonSerialize","p":"Illuminate/Pagination/Paginator.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Pagination\\Paginator::toJson","p":"Illuminate/Pagination/Paginator.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::__construct","p":"Illuminate/Pagination/UrlWindow.html#method___construct","d":"<p>Create a new URL window instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::make","p":"Illuminate/Pagination/UrlWindow.html#method_make","d":"<p>Create a new URL window instance.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::get","p":"Illuminate/Pagination/UrlWindow.html#method_get","d":"<p>Get the window of URLs to be shown.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getSmallSlider","p":"Illuminate/Pagination/UrlWindow.html#method_getSmallSlider","d":"<p>Get the slider of URLs there are not enough pages to slide.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getUrlSlider","p":"Illuminate/Pagination/UrlWindow.html#method_getUrlSlider","d":"<p>Create a URL slider links.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getSliderTooCloseToBeginning","p":"Illuminate/Pagination/UrlWindow.html#method_getSliderTooCloseToBeginning","d":"<p>Get the slider of URLs when too close to the beginning of the window.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getSliderTooCloseToEnding","p":"Illuminate/Pagination/UrlWindow.html#method_getSliderTooCloseToEnding","d":"<p>Get the slider of URLs when too close to the ending of the window.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getFullSlider","p":"Illuminate/Pagination/UrlWindow.html#method_getFullSlider","d":"<p>Get the slider of URLs when a full slider can be made.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getAdjacentUrlRange","p":"Illuminate/Pagination/UrlWindow.html#method_getAdjacentUrlRange","d":"<p>Get the page range for the current page window.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getStart","p":"Illuminate/Pagination/UrlWindow.html#method_getStart","d":"<p>Get the starting URLs of a pagination slider.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::getFinish","p":"Illuminate/Pagination/UrlWindow.html#method_getFinish","d":"<p>Get the ending URLs of a pagination slider.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::hasPages","p":"Illuminate/Pagination/UrlWindow.html#method_hasPages","d":"<p>Determine if the underlying paginator being presented has pages to show.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::currentPage","p":"Illuminate/Pagination/UrlWindow.html#method_currentPage","d":"<p>Get the current page from the paginator.</p>"},{"t":"M","n":"Illuminate\\Pagination\\UrlWindow::lastPage","p":"Illuminate/Pagination/UrlWindow.html#method_lastPage","d":"<p>Get the last page from the paginator.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::__construct","p":"Illuminate/Pipeline/Hub.html#method___construct","d":"<p>Create a new Hub instance.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::defaults","p":"Illuminate/Pipeline/Hub.html#method_defaults","d":"<p>Define the default named pipeline.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::pipeline","p":"Illuminate/Pipeline/Hub.html#method_pipeline","d":"<p>Define a new named pipeline.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::pipe","p":"Illuminate/Pipeline/Hub.html#method_pipe","d":"<p>Send an object through one of the available pipelines.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::getContainer","p":"Illuminate/Pipeline/Hub.html#method_getContainer","d":"<p>Get the container instance used by the hub.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Hub::setContainer","p":"Illuminate/Pipeline/Hub.html#method_setContainer","d":"<p>Set the container instance used by the hub.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::__construct","p":"Illuminate/Pipeline/Pipeline.html#method___construct","d":"<p>Create a new class instance.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::send","p":"Illuminate/Pipeline/Pipeline.html#method_send","d":"<p>Set the object being sent through the pipeline.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::through","p":"Illuminate/Pipeline/Pipeline.html#method_through","d":"<p>Set the array of pipes.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::pipe","p":"Illuminate/Pipeline/Pipeline.html#method_pipe","d":"<p>Push additional pipes onto the pipeline.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::via","p":"Illuminate/Pipeline/Pipeline.html#method_via","d":"<p>Set the method to call on the pipes.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::then","p":"Illuminate/Pipeline/Pipeline.html#method_then","d":"<p>Run the pipeline with a final destination callback.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::thenReturn","p":"Illuminate/Pipeline/Pipeline.html#method_thenReturn","d":"<p>Run the pipeline and return the result.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::prepareDestination","p":"Illuminate/Pipeline/Pipeline.html#method_prepareDestination","d":"<p>Get the final piece of the Closure onion.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::carry","p":"Illuminate/Pipeline/Pipeline.html#method_carry","d":"<p>Get a Closure that represents a slice of the application onion.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::parsePipeString","p":"Illuminate/Pipeline/Pipeline.html#method_parsePipeString","d":"<p>Parse full pipe string to get name and parameters.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::pipes","p":"Illuminate/Pipeline/Pipeline.html#method_pipes","d":"<p>Get the array of configured pipes.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::getContainer","p":"Illuminate/Pipeline/Pipeline.html#method_getContainer","d":"<p>Get the container instance.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::setContainer","p":"Illuminate/Pipeline/Pipeline.html#method_setContainer","d":"<p>Set the container instance.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::handleCarry","p":"Illuminate/Pipeline/Pipeline.html#method_handleCarry","d":"<p>Handle the value returned from each pipe before passing it to the next.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\Pipeline::handleException","p":"Illuminate/Pipeline/Pipeline.html#method_handleException","d":"<p>Handle the given exception.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\PipelineServiceProvider::register","p":"Illuminate/Pipeline/PipelineServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Pipeline\\PipelineServiceProvider::provides","p":"Illuminate/Pipeline/PipelineServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Process\\Exceptions\\ProcessFailedException::__construct","p":"Illuminate/Process/Exceptions/ProcessFailedException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Process\\Exceptions\\ProcessTimedOutException::__construct","p":"Illuminate/Process/Exceptions/ProcessTimedOutException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::result","p":"Illuminate/Process/Factory.html#method_result","d":"<p>Create a new fake process response for testing purposes.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::describe","p":"Illuminate/Process/Factory.html#method_describe","d":"<p>Begin describing a fake process lifecycle.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::sequence","p":"Illuminate/Process/Factory.html#method_sequence","d":"<p>Begin describing a fake process sequence.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::fake","p":"Illuminate/Process/Factory.html#method_fake","d":"<p>Indicate that the process factory should fake processes.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::isRecording","p":"Illuminate/Process/Factory.html#method_isRecording","d":"<p>Determine if the process factory has fake process handlers and is recording processes.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::recordIfRecording","p":"Illuminate/Process/Factory.html#method_recordIfRecording","d":"<p>Record the given process if processes should be recorded.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::record","p":"Illuminate/Process/Factory.html#method_record","d":"<p>Record the given process.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::preventStrayProcesses","p":"Illuminate/Process/Factory.html#method_preventStrayProcesses","d":"<p>Indicate that an exception should be thrown if any process is not faked.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::preventingStrayProcesses","p":"Illuminate/Process/Factory.html#method_preventingStrayProcesses","d":"<p>Determine if stray processes are being prevented.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::assertRan","p":"Illuminate/Process/Factory.html#method_assertRan","d":"<p>Assert that a process was recorded matching a given truth test.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::assertRanTimes","p":"Illuminate/Process/Factory.html#method_assertRanTimes","d":"<p>Assert that a process was recorded a given number of times matching a given truth test.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::assertNotRan","p":"Illuminate/Process/Factory.html#method_assertNotRan","d":"<p>Assert that a process was not recorded matching a given truth test.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::assertDidntRun","p":"Illuminate/Process/Factory.html#method_assertDidntRun","d":"<p>Assert that a process was not recorded matching a given truth test.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::assertNothingRan","p":"Illuminate/Process/Factory.html#method_assertNothingRan","d":"<p>Assert that no processes were recorded.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::pool","p":"Illuminate/Process/Factory.html#method_pool","d":"<p>Start defining a pool of processes.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::concurrently","p":"Illuminate/Process/Factory.html#method_concurrently","d":"<p>Run a pool of processes and wait for them to finish executing.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::newPendingProcess","p":"Illuminate/Process/Factory.html#method_newPendingProcess","d":"<p>Create a new pending process associated with this factory.</p>"},{"t":"M","n":"Illuminate\\Process\\Factory::__call","p":"Illuminate/Process/Factory.html#method___call","d":"<p>Dynamically proxy methods to a new pending process instance.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::__construct","p":"Illuminate/Process/FakeInvokedProcess.html#method___construct","d":"<p>Create a new invoked process instance.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::id","p":"Illuminate/Process/FakeInvokedProcess.html#method_id","d":"<p>Get the process ID if the process is still running.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::signal","p":"Illuminate/Process/FakeInvokedProcess.html#method_signal","d":"<p>Send a signal to the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::hasReceivedSignal","p":"Illuminate/Process/FakeInvokedProcess.html#method_hasReceivedSignal","d":"<p>Determine if the process has received the given signal.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::running","p":"Illuminate/Process/FakeInvokedProcess.html#method_running","d":"<p>Determine if the process is still running.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::invokeOutputHandlerWithNextLineOfOutput","p":"Illuminate/Process/FakeInvokedProcess.html#method_invokeOutputHandlerWithNextLineOfOutput","d":"<p>Invoke the asynchronous output handler with the next single line of output if necessary.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::output","p":"Illuminate/Process/FakeInvokedProcess.html#method_output","d":"<p>Get the standard output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::errorOutput","p":"Illuminate/Process/FakeInvokedProcess.html#method_errorOutput","d":"<p>Get the error output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::latestOutput","p":"Illuminate/Process/FakeInvokedProcess.html#method_latestOutput","d":"<p>Get the latest standard output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::latestErrorOutput","p":"Illuminate/Process/FakeInvokedProcess.html#method_latestErrorOutput","d":"<p>Get the latest error output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::wait","p":"Illuminate/Process/FakeInvokedProcess.html#method_wait","d":"<p>Wait for the process to finish.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::predictProcessResult","p":"Illuminate/Process/FakeInvokedProcess.html#method_predictProcessResult","d":"<p>Get the ultimate process result that wil be returned by this &quot;process&quot;.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeInvokedProcess::withOutputHandler","p":"Illuminate/Process/FakeInvokedProcess.html#method_withOutputHandler","d":"<p>Set the general output handler for the fake invoked process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::id","p":"Illuminate/Process/FakeProcessDescription.html#method_id","d":"<p>Specify the process ID that should be assigned to the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::output","p":"Illuminate/Process/FakeProcessDescription.html#method_output","d":"<p>Describe a line of standard output.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::errorOutput","p":"Illuminate/Process/FakeProcessDescription.html#method_errorOutput","d":"<p>Describe a line of error output.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::replaceOutput","p":"Illuminate/Process/FakeProcessDescription.html#method_replaceOutput","d":"<p>Replace the entire output buffer with the given string.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::replaceErrorOutput","p":"Illuminate/Process/FakeProcessDescription.html#method_replaceErrorOutput","d":"<p>Replace the entire error output buffer with the given string.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::exitCode","p":"Illuminate/Process/FakeProcessDescription.html#method_exitCode","d":"<p>Specify the process exit code.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::iterations","p":"Illuminate/Process/FakeProcessDescription.html#method_iterations","d":"<p>Specify how many times the &quot;isRunning&quot; method should return &quot;true&quot;.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::runsFor","p":"Illuminate/Process/FakeProcessDescription.html#method_runsFor","d":"<p>Specify how many times the &quot;isRunning&quot; method should return &quot;true&quot;.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::toSymfonyProcess","p":"Illuminate/Process/FakeProcessDescription.html#method_toSymfonyProcess","d":"<p>Turn the fake process description into an actual process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::toProcessResult","p":"Illuminate/Process/FakeProcessDescription.html#method_toProcessResult","d":"<p>Conver the process description into a process result.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::resolveOutput","p":"Illuminate/Process/FakeProcessDescription.html#method_resolveOutput","d":"<p>Resolve the standard output as a string.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessDescription::resolveErrorOutput","p":"Illuminate/Process/FakeProcessDescription.html#method_resolveErrorOutput","d":"<p>Resolve the error output as a string.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::__construct","p":"Illuminate/Process/FakeProcessResult.html#method___construct","d":"<p>Create a new process result instance.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::normalizeOutput","p":"Illuminate/Process/FakeProcessResult.html#method_normalizeOutput","d":"<p>Normalize the given output into a string with newlines.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::command","p":"Illuminate/Process/FakeProcessResult.html#method_command","d":"<p>Get the original command executed by the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::withCommand","p":"Illuminate/Process/FakeProcessResult.html#method_withCommand","d":"<p>Create a new fake process result with the given command.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::successful","p":"Illuminate/Process/FakeProcessResult.html#method_successful","d":"<p>Determine if the process was successful.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::failed","p":"Illuminate/Process/FakeProcessResult.html#method_failed","d":"<p>Determine if the process failed.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::exitCode","p":"Illuminate/Process/FakeProcessResult.html#method_exitCode","d":"<p>Get the exit code of the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::output","p":"Illuminate/Process/FakeProcessResult.html#method_output","d":"<p>Get the standard output of the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::seeInOutput","p":"Illuminate/Process/FakeProcessResult.html#method_seeInOutput","d":"<p>Determine if the output contains the given string.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::errorOutput","p":"Illuminate/Process/FakeProcessResult.html#method_errorOutput","d":"<p>Get the error output of the process.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::seeInErrorOutput","p":"Illuminate/Process/FakeProcessResult.html#method_seeInErrorOutput","d":"<p>Determine if the error output contains the given string.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::throw","p":"Illuminate/Process/FakeProcessResult.html#method_throw","d":"<p>Throw an exception if the process failed.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessResult::throwIf","p":"Illuminate/Process/FakeProcessResult.html#method_throwIf","d":"<p>Throw an exception if the process failed and the given condition is true.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessSequence::__construct","p":"Illuminate/Process/FakeProcessSequence.html#method___construct","d":"<p>Create a new fake process sequence instance.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessSequence::push","p":"Illuminate/Process/FakeProcessSequence.html#method_push","d":"<p>Push a new process result or description onto the sequence.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessSequence::whenEmpty","p":"Illuminate/Process/FakeProcessSequence.html#method_whenEmpty","d":"<p>Make the sequence return a default result when it is empty.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessSequence::toProcessResult","p":"Illuminate/Process/FakeProcessSequence.html#method_toProcessResult","d":"<p>Convert the given result into an actual process result or description.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessSequence::dontFailWhenEmpty","p":"Illuminate/Process/FakeProcessSequence.html#method_dontFailWhenEmpty","d":"<p>Make the sequence return a default result when it is empty.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessSequence::isEmpty","p":"Illuminate/Process/FakeProcessSequence.html#method_isEmpty","d":"<p>Indicate that this sequence has depleted all of its process results.</p>"},{"t":"M","n":"Illuminate\\Process\\FakeProcessSequence::__invoke","p":"Illuminate/Process/FakeProcessSequence.html#method___invoke","d":"<p>Get the next process in the sequence.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::__construct","p":"Illuminate/Process/InvokedProcess.html#method___construct","d":"<p>Create a new invoked process instance.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::id","p":"Illuminate/Process/InvokedProcess.html#method_id","d":"<p>Get the process ID if the process is still running.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::signal","p":"Illuminate/Process/InvokedProcess.html#method_signal","d":"<p>Send a signal to the process.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::running","p":"Illuminate/Process/InvokedProcess.html#method_running","d":"<p>Determine if the process is still running.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::output","p":"Illuminate/Process/InvokedProcess.html#method_output","d":"<p>Get the standard output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::errorOutput","p":"Illuminate/Process/InvokedProcess.html#method_errorOutput","d":"<p>Get the error output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::latestOutput","p":"Illuminate/Process/InvokedProcess.html#method_latestOutput","d":"<p>Get the latest standard output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::latestErrorOutput","p":"Illuminate/Process/InvokedProcess.html#method_latestErrorOutput","d":"<p>Get the latest error output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcess::wait","p":"Illuminate/Process/InvokedProcess.html#method_wait","d":"<p>Wait for the process to finish.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcessPool::__construct","p":"Illuminate/Process/InvokedProcessPool.html#method___construct","d":"<p>Create a new invoked process pool.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcessPool::signal","p":"Illuminate/Process/InvokedProcessPool.html#method_signal","d":"<p>Send a signal to each running process in the pool, returning the processes that were signalled.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcessPool::running","p":"Illuminate/Process/InvokedProcessPool.html#method_running","d":"<p>Get the processes in the pool that are still currently running.</p>"},{"t":"M","n":"Illuminate\\Process\\InvokedProcessPool::wait","p":"Illuminate/Process/InvokedProcessPool.html#method_wait","d":"<p>Wait for the processes to finish.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::__construct","p":"Illuminate/Process/PendingProcess.html#method___construct","d":"<p>Create a new pending process instance.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::command","p":"Illuminate/Process/PendingProcess.html#method_command","d":"<p>Specify the command that will invoke the process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::path","p":"Illuminate/Process/PendingProcess.html#method_path","d":"<p>Specify the working directory of the process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::timeout","p":"Illuminate/Process/PendingProcess.html#method_timeout","d":"<p>Specify the maximum number of seconds the process may run.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::idleTimeout","p":"Illuminate/Process/PendingProcess.html#method_idleTimeout","d":"<p>Specify the maximum number of seconds a process may go without returning output.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::forever","p":"Illuminate/Process/PendingProcess.html#method_forever","d":"<p>Indicate that the process may run forever without timing out.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::env","p":"Illuminate/Process/PendingProcess.html#method_env","d":"<p>Set the additional environent variables for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::input","p":"Illuminate/Process/PendingProcess.html#method_input","d":"<p>Set the standard input that should be provided when invoking the process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::quietly","p":"Illuminate/Process/PendingProcess.html#method_quietly","d":"<p>Disable output for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::tty","p":"Illuminate/Process/PendingProcess.html#method_tty","d":"<p>Enable TTY mode for the process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::options","p":"Illuminate/Process/PendingProcess.html#method_options","d":"<p>Set the &quot;proc_open&quot; options that should be used when invoking the process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::run","p":"Illuminate/Process/PendingProcess.html#method_run","d":"<p>Run the process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::start","p":"Illuminate/Process/PendingProcess.html#method_start","d":"<p>Start the process in the background.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::toSymfonyProcess","p":"Illuminate/Process/PendingProcess.html#method_toSymfonyProcess","d":"<p>Get a Symfony Process instance from the current pending command.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::withFakeHandlers","p":"Illuminate/Process/PendingProcess.html#method_withFakeHandlers","d":"<p>Specify the fake process result handlers for the pending process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::fakeFor","p":"Illuminate/Process/PendingProcess.html#method_fakeFor","d":"<p>Get the fake handler for the given command, if applicable.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::resolveSynchronousFake","p":"Illuminate/Process/PendingProcess.html#method_resolveSynchronousFake","d":"<p>Resolve the given fake handler for a synchronous process.</p>"},{"t":"M","n":"Illuminate\\Process\\PendingProcess::resolveAsynchronousFake","p":"Illuminate/Process/PendingProcess.html#method_resolveAsynchronousFake","d":"<p>Resolve the given fake handler for an asynchronous process.</p>"},{"t":"M","n":"Illuminate\\Process\\Pool::__construct","p":"Illuminate/Process/Pool.html#method___construct","d":"<p>Create a new process pool.</p>"},{"t":"M","n":"Illuminate\\Process\\Pool::as","p":"Illuminate/Process/Pool.html#method_as","d":"<p>Add a process to the pool with a key.</p>"},{"t":"M","n":"Illuminate\\Process\\Pool::start","p":"Illuminate/Process/Pool.html#method_start","d":"<p>Start all of the processes in the pool.</p>"},{"t":"M","n":"Illuminate\\Process\\Pool::run","p":"Illuminate/Process/Pool.html#method_run","d":"<p>Start and wait for the processes to finish.</p>"},{"t":"M","n":"Illuminate\\Process\\Pool::wait","p":"Illuminate/Process/Pool.html#method_wait","d":"<p>Start and wait for the processes to finish.</p>"},{"t":"M","n":"Illuminate\\Process\\Pool::__call","p":"Illuminate/Process/Pool.html#method___call","d":"<p>Dynamically proxy methods calls to a new pending process.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessPoolResults::__construct","p":"Illuminate/Process/ProcessPoolResults.html#method___construct","d":"<p>Create a new process pool result set.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessPoolResults::collect","p":"Illuminate/Process/ProcessPoolResults.html#method_collect","d":"<p>Get the results as a collection.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessPoolResults::offsetExists","p":"Illuminate/Process/ProcessPoolResults.html#method_offsetExists","d":"<p>Determine if the given array offset exists.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessPoolResults::offsetGet","p":"Illuminate/Process/ProcessPoolResults.html#method_offsetGet","d":"<p>Get the result at the given offset.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessPoolResults::offsetSet","p":"Illuminate/Process/ProcessPoolResults.html#method_offsetSet","d":"<p>Set the result at the given offset.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessPoolResults::offsetUnset","p":"Illuminate/Process/ProcessPoolResults.html#method_offsetUnset","d":"<p>Unset the result at the given offset.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::__construct","p":"Illuminate/Process/ProcessResult.html#method___construct","d":"<p>Create a new process result instance.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::command","p":"Illuminate/Process/ProcessResult.html#method_command","d":"<p>Get the original command executed by the process.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::successful","p":"Illuminate/Process/ProcessResult.html#method_successful","d":"<p>Determine if the process was successful.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::failed","p":"Illuminate/Process/ProcessResult.html#method_failed","d":"<p>Determine if the process failed.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::exitCode","p":"Illuminate/Process/ProcessResult.html#method_exitCode","d":"<p>Get the exit code of the process.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::output","p":"Illuminate/Process/ProcessResult.html#method_output","d":"<p>Get the standard output of the process.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::seeInOutput","p":"Illuminate/Process/ProcessResult.html#method_seeInOutput","d":"<p>Determine if the output contains the given string.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::errorOutput","p":"Illuminate/Process/ProcessResult.html#method_errorOutput","d":"<p>Get the error output of the process.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::seeInErrorOutput","p":"Illuminate/Process/ProcessResult.html#method_seeInErrorOutput","d":"<p>Determine if the error output contains the given string.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::throw","p":"Illuminate/Process/ProcessResult.html#method_throw","d":"<p>Throw an exception if the process failed.</p>"},{"t":"M","n":"Illuminate\\Process\\ProcessResult::throwIf","p":"Illuminate/Process/ProcessResult.html#method_throwIf","d":"<p>Throw an exception if the process failed and the given condition is true.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::__construct","p":"Illuminate/Queue/BeanstalkdQueue.html#method___construct","d":"<p>Create a new Beanstalkd queue instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::size","p":"Illuminate/Queue/BeanstalkdQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::push","p":"Illuminate/Queue/BeanstalkdQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::pushRaw","p":"Illuminate/Queue/BeanstalkdQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::later","p":"Illuminate/Queue/BeanstalkdQueue.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::bulk","p":"Illuminate/Queue/BeanstalkdQueue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::pop","p":"Illuminate/Queue/BeanstalkdQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::deleteMessage","p":"Illuminate/Queue/BeanstalkdQueue.html#method_deleteMessage","d":"<p>Delete a message from the Beanstalk queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::getQueue","p":"Illuminate/Queue/BeanstalkdQueue.html#method_getQueue","d":"<p>Get the queue or return the default.</p>"},{"t":"M","n":"Illuminate\\Queue\\BeanstalkdQueue::getPheanstalk","p":"Illuminate/Queue/BeanstalkdQueue.html#method_getPheanstalk","d":"<p>Get the underlying Pheanstalk instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedClosure::__construct","p":"Illuminate/Queue/CallQueuedClosure.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedClosure::create","p":"Illuminate/Queue/CallQueuedClosure.html#method_create","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedClosure::handle","p":"Illuminate/Queue/CallQueuedClosure.html#method_handle","d":"<p>Execute the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedClosure::onFailure","p":"Illuminate/Queue/CallQueuedClosure.html#method_onFailure","d":"<p>Add a callback to be executed if the job fails.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedClosure::failed","p":"Illuminate/Queue/CallQueuedClosure.html#method_failed","d":"<p>Handle a job failure.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedClosure::displayName","p":"Illuminate/Queue/CallQueuedClosure.html#method_displayName","d":"<p>Get the display name for the queued job.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::__construct","p":"Illuminate/Queue/CallQueuedHandler.html#method___construct","d":"<p>Create a new handler instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::call","p":"Illuminate/Queue/CallQueuedHandler.html#method_call","d":"<p>Handle the queued job.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::getCommand","p":"Illuminate/Queue/CallQueuedHandler.html#method_getCommand","d":"<p>Get the command from the given payload.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::dispatchThroughMiddleware","p":"Illuminate/Queue/CallQueuedHandler.html#method_dispatchThroughMiddleware","d":"<p>Dispatch the given job / command through its specified middleware.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::resolveHandler","p":"Illuminate/Queue/CallQueuedHandler.html#method_resolveHandler","d":"<p>Resolve the handler for the given command.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::setJobInstanceIfNecessary","p":"Illuminate/Queue/CallQueuedHandler.html#method_setJobInstanceIfNecessary","d":"<p>Set the job instance of the given class if necessary.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::ensureNextJobInChainIsDispatched","p":"Illuminate/Queue/CallQueuedHandler.html#method_ensureNextJobInChainIsDispatched","d":"<p>Ensure the next job in the chain is dispatched if applicable.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::ensureSuccessfulBatchJobIsRecorded","p":"Illuminate/Queue/CallQueuedHandler.html#method_ensureSuccessfulBatchJobIsRecorded","d":"<p>Ensure the batch is notified of the successful job completion.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::ensureUniqueJobLockIsReleased","p":"Illuminate/Queue/CallQueuedHandler.html#method_ensureUniqueJobLockIsReleased","d":"<p>Ensure the lock for a unique job is released.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::handleModelNotFound","p":"Illuminate/Queue/CallQueuedHandler.html#method_handleModelNotFound","d":"<p>Handle a model not found exception.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::failed","p":"Illuminate/Queue/CallQueuedHandler.html#method_failed","d":"<p>Call the failed method on the job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::ensureFailedBatchJobIsRecorded","p":"Illuminate/Queue/CallQueuedHandler.html#method_ensureFailedBatchJobIsRecorded","d":"<p>Ensure the batch is notified of the failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\CallQueuedHandler::ensureChainCatchCallbacksAreInvoked","p":"Illuminate/Queue/CallQueuedHandler.html#method_ensureChainCatchCallbacksAreInvoked","d":"<p>Ensure the chained job catch callbacks are invoked.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::__construct","p":"Illuminate/Queue/Capsule/Manager.html#method___construct","d":"<p>Create a new queue capsule manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::setupDefaultConfiguration","p":"Illuminate/Queue/Capsule/Manager.html#method_setupDefaultConfiguration","d":"<p>Setup the default queue configuration options.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::setupManager","p":"Illuminate/Queue/Capsule/Manager.html#method_setupManager","d":"<p>Build the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::registerConnectors","p":"Illuminate/Queue/Capsule/Manager.html#method_registerConnectors","d":"<p>Register the default connectors that the component ships with.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::connection","p":"Illuminate/Queue/Capsule/Manager.html#method_connection","d":"<p>Get a connection instance from the global manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::push","p":"Illuminate/Queue/Capsule/Manager.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::bulk","p":"Illuminate/Queue/Capsule/Manager.html#method_bulk","d":"<p>Push a new an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::later","p":"Illuminate/Queue/Capsule/Manager.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::getConnection","p":"Illuminate/Queue/Capsule/Manager.html#method_getConnection","d":"<p>Get a registered connection instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::addConnection","p":"Illuminate/Queue/Capsule/Manager.html#method_addConnection","d":"<p>Register a connection with the manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::getQueueManager","p":"Illuminate/Queue/Capsule/Manager.html#method_getQueueManager","d":"<p>Get the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::__call","p":"Illuminate/Queue/Capsule/Manager.html#method___call","d":"<p>Pass dynamic instance methods to the manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\Capsule\\Manager::__callStatic","p":"Illuminate/Queue/Capsule/Manager.html#method___callStatic","d":"<p>Dynamically pass methods to the default connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\BeanstalkdConnector::connect","p":"Illuminate/Queue/Connectors/BeanstalkdConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\BeanstalkdConnector::pheanstalk","p":"Illuminate/Queue/Connectors/BeanstalkdConnector.html#method_pheanstalk","d":"<p>Create a Pheanstalk instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\ConnectorInterface::connect","p":"Illuminate/Queue/Connectors/ConnectorInterface.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\DatabaseConnector::__construct","p":"Illuminate/Queue/Connectors/DatabaseConnector.html#method___construct","d":"<p>Create a new connector instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\DatabaseConnector::connect","p":"Illuminate/Queue/Connectors/DatabaseConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\NullConnector::connect","p":"Illuminate/Queue/Connectors/NullConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\RedisConnector::__construct","p":"Illuminate/Queue/Connectors/RedisConnector.html#method___construct","d":"<p>Create a new Redis queue connector instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\RedisConnector::connect","p":"Illuminate/Queue/Connectors/RedisConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\SqsConnector::connect","p":"Illuminate/Queue/Connectors/SqsConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\SqsConnector::getDefaultConfiguration","p":"Illuminate/Queue/Connectors/SqsConnector.html#method_getDefaultConfiguration","d":"<p>Get the default configuration for SQS.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\SyncConnector::connect","p":"Illuminate/Queue/Connectors/SyncConnector.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\BatchesTableCommand::__construct","p":"Illuminate/Queue/Console/BatchesTableCommand.html#method___construct","d":"<p>Create a new batched queue jobs table command instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\BatchesTableCommand::handle","p":"Illuminate/Queue/Console/BatchesTableCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\BatchesTableCommand::createBaseMigration","p":"Illuminate/Queue/Console/BatchesTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the table.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\BatchesTableCommand::replaceMigration","p":"Illuminate/Queue/Console/BatchesTableCommand.html#method_replaceMigration","d":"<p>Replace the generated migration with the batches job table stub.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ClearCommand::handle","p":"Illuminate/Queue/Console/ClearCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ClearCommand::getQueue","p":"Illuminate/Queue/Console/ClearCommand.html#method_getQueue","d":"<p>Get the queue name to clear.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ClearCommand::getArguments","p":"Illuminate/Queue/Console/ClearCommand.html#method_getArguments","d":"<p>Get the console command arguments.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ClearCommand::getOptions","p":"Illuminate/Queue/Console/ClearCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FailedTableCommand::__construct","p":"Illuminate/Queue/Console/FailedTableCommand.html#method___construct","d":"<p>Create a new failed queue jobs table command instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FailedTableCommand::handle","p":"Illuminate/Queue/Console/FailedTableCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FailedTableCommand::createBaseMigration","p":"Illuminate/Queue/Console/FailedTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the table.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FailedTableCommand::replaceMigration","p":"Illuminate/Queue/Console/FailedTableCommand.html#method_replaceMigration","d":"<p>Replace the generated migration with the failed job table stub.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\FlushFailedCommand::handle","p":"Illuminate/Queue/Console/FlushFailedCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ForgetFailedCommand::handle","p":"Illuminate/Queue/Console/ForgetFailedCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::handle","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::getFailedJobs","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_getFailedJobs","d":"<p>Compile the failed jobs into a displayable format.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::parseFailedJob","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_parseFailedJob","d":"<p>Parse the failed job row.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::matchJobName","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_matchJobName","d":"<p>Match the job name from the payload.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListFailedCommand::displayFailedJobs","p":"Illuminate/Queue/Console/ListFailedCommand.html#method_displayFailedJobs","d":"<p>Display the failed jobs in the console.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::__construct","p":"Illuminate/Queue/Console/ListenCommand.html#method___construct","d":"<p>Create a new queue listen command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::handle","p":"Illuminate/Queue/Console/ListenCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::getQueue","p":"Illuminate/Queue/Console/ListenCommand.html#method_getQueue","d":"<p>Get the name of the queue connection to listen on.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::gatherOptions","p":"Illuminate/Queue/Console/ListenCommand.html#method_gatherOptions","d":"<p>Get the listener options for the command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\ListenCommand::setOutputHandler","p":"Illuminate/Queue/Console/ListenCommand.html#method_setOutputHandler","d":"<p>Set the options on the queue listener.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\MonitorCommand::__construct","p":"Illuminate/Queue/Console/MonitorCommand.html#method___construct","d":"<p>Create a new queue monitor command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\MonitorCommand::handle","p":"Illuminate/Queue/Console/MonitorCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\MonitorCommand::parseQueues","p":"Illuminate/Queue/Console/MonitorCommand.html#method_parseQueues","d":"<p>Parse the queues into an array of the connections and queues.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\MonitorCommand::displaySizes","p":"Illuminate/Queue/Console/MonitorCommand.html#method_displaySizes","d":"<p>Display the queue sizes in the console.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\MonitorCommand::dispatchEvents","p":"Illuminate/Queue/Console/MonitorCommand.html#method_dispatchEvents","d":"<p>Fire the monitoring events.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\PruneBatchesCommand::handle","p":"Illuminate/Queue/Console/PruneBatchesCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\PruneFailedJobsCommand::handle","p":"Illuminate/Queue/Console/PruneFailedJobsCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RestartCommand::__construct","p":"Illuminate/Queue/Console/RestartCommand.html#method___construct","d":"<p>Create a new queue restart command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RestartCommand::handle","p":"Illuminate/Queue/Console/RestartCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryBatchCommand::handle","p":"Illuminate/Queue/Console/RetryBatchCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::handle","p":"Illuminate/Queue/Console/RetryCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::getJobIds","p":"Illuminate/Queue/Console/RetryCommand.html#method_getJobIds","d":"<p>Get the job IDs to be retried.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::getJobIdsByQueue","p":"Illuminate/Queue/Console/RetryCommand.html#method_getJobIdsByQueue","d":"<p>Get the job IDs by queue, if applicable.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::getJobIdsByRanges","p":"Illuminate/Queue/Console/RetryCommand.html#method_getJobIdsByRanges","d":"<p>Get the job IDs ranges, if applicable.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::retryJob","p":"Illuminate/Queue/Console/RetryCommand.html#method_retryJob","d":"<p>Retry the queue job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::resetAttempts","p":"Illuminate/Queue/Console/RetryCommand.html#method_resetAttempts","d":"<p>Reset the payload attempts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\RetryCommand::refreshRetryUntil","p":"Illuminate/Queue/Console/RetryCommand.html#method_refreshRetryUntil","d":"<p>Refresh the &quot;retry until&quot; timestamp for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\TableCommand::__construct","p":"Illuminate/Queue/Console/TableCommand.html#method___construct","d":"<p>Create a new queue job table command instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\TableCommand::handle","p":"Illuminate/Queue/Console/TableCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\TableCommand::createBaseMigration","p":"Illuminate/Queue/Console/TableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the table.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\TableCommand::replaceMigration","p":"Illuminate/Queue/Console/TableCommand.html#method_replaceMigration","d":"<p>Replace the generated migration with the job table stub.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::__construct","p":"Illuminate/Queue/Console/WorkCommand.html#method___construct","d":"<p>Create a new queue work command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::handle","p":"Illuminate/Queue/Console/WorkCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::runWorker","p":"Illuminate/Queue/Console/WorkCommand.html#method_runWorker","d":"<p>Run the worker instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::gatherWorkerOptions","p":"Illuminate/Queue/Console/WorkCommand.html#method_gatherWorkerOptions","d":"<p>Gather all of the queue worker options as a single object.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::listenForEvents","p":"Illuminate/Queue/Console/WorkCommand.html#method_listenForEvents","d":"<p>Listen for the queue events in order to update the console output.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::writeOutput","p":"Illuminate/Queue/Console/WorkCommand.html#method_writeOutput","d":"<p>Write the status output for the queue worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::now","p":"Illuminate/Queue/Console/WorkCommand.html#method_now","d":"<p>Get the current date / time.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::logFailedJob","p":"Illuminate/Queue/Console/WorkCommand.html#method_logFailedJob","d":"<p>Store a failed job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::getQueue","p":"Illuminate/Queue/Console/WorkCommand.html#method_getQueue","d":"<p>Get the queue name for the worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Console\\WorkCommand::downForMaintenance","p":"Illuminate/Queue/Console/WorkCommand.html#method_downForMaintenance","d":"<p>Determine if the worker should run in maintenance mode.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::__construct","p":"Illuminate/Queue/DatabaseQueue.html#method___construct","d":"<p>Create a new database queue instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::size","p":"Illuminate/Queue/DatabaseQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::push","p":"Illuminate/Queue/DatabaseQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::pushRaw","p":"Illuminate/Queue/DatabaseQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::later","p":"Illuminate/Queue/DatabaseQueue.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::bulk","p":"Illuminate/Queue/DatabaseQueue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::release","p":"Illuminate/Queue/DatabaseQueue.html#method_release","d":"<p>Release a reserved job back onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::pushToDatabase","p":"Illuminate/Queue/DatabaseQueue.html#method_pushToDatabase","d":"<p>Push a raw payload to the database with a given delay of (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::buildDatabaseRecord","p":"Illuminate/Queue/DatabaseQueue.html#method_buildDatabaseRecord","d":"<p>Create an array to insert for the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::pop","p":"Illuminate/Queue/DatabaseQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::getNextAvailableJob","p":"Illuminate/Queue/DatabaseQueue.html#method_getNextAvailableJob","d":"<p>Get the next available job for the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::getLockForPopping","p":"Illuminate/Queue/DatabaseQueue.html#method_getLockForPopping","d":"<p>Get the lock required for popping the next job.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::isAvailable","p":"Illuminate/Queue/DatabaseQueue.html#method_isAvailable","d":"<p>Modify the query to check for available jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::isReservedButExpired","p":"Illuminate/Queue/DatabaseQueue.html#method_isReservedButExpired","d":"<p>Modify the query to check for jobs that are reserved but have expired.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::marshalJob","p":"Illuminate/Queue/DatabaseQueue.html#method_marshalJob","d":"<p>Marshal the reserved job into a DatabaseJob instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::markJobAsReserved","p":"Illuminate/Queue/DatabaseQueue.html#method_markJobAsReserved","d":"<p>Mark the given job ID as reserved.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::deleteReserved","p":"Illuminate/Queue/DatabaseQueue.html#method_deleteReserved","d":"<p>Delete a reserved job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::deleteAndRelease","p":"Illuminate/Queue/DatabaseQueue.html#method_deleteAndRelease","d":"<p>Delete a reserved job from the reserved queue and release it.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::clear","p":"Illuminate/Queue/DatabaseQueue.html#method_clear","d":"<p>Delete all of the jobs from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::getQueue","p":"Illuminate/Queue/DatabaseQueue.html#method_getQueue","d":"<p>Get the queue or return the default.</p>"},{"t":"M","n":"Illuminate\\Queue\\DatabaseQueue::getDatabase","p":"Illuminate/Queue/DatabaseQueue.html#method_getDatabase","d":"<p>Get the underlying database instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobExceptionOccurred::__construct","p":"Illuminate/Queue/Events/JobExceptionOccurred.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobFailed::__construct","p":"Illuminate/Queue/Events/JobFailed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobProcessed::__construct","p":"Illuminate/Queue/Events/JobProcessed.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobProcessing::__construct","p":"Illuminate/Queue/Events/JobProcessing.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobQueued::__construct","p":"Illuminate/Queue/Events/JobQueued.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobReleasedAfterException::__construct","p":"Illuminate/Queue/Events/JobReleasedAfterException.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobRetryRequested::__construct","p":"Illuminate/Queue/Events/JobRetryRequested.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\JobRetryRequested::payload","p":"Illuminate/Queue/Events/JobRetryRequested.html#method_payload","d":"<p>The job payload.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\Looping::__construct","p":"Illuminate/Queue/Events/Looping.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\QueueBusy::__construct","p":"Illuminate/Queue/Events/QueueBusy.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Events\\WorkerStopping::__construct","p":"Illuminate/Queue/Events/WorkerStopping.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::__construct","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method___construct","d":"<p>Create a new database failed job provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::log","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::all","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::find","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::forget","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::flush","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::prune","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_prune","d":"<p>Prune all of the entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseFailedJobProvider::getTable","p":"Illuminate/Queue/Failed/DatabaseFailedJobProvider.html#method_getTable","d":"<p>Get a new query builder instance for the table.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider::__construct","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html#method___construct","d":"<p>Create a new database failed job provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider::log","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider::all","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider::find","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider::forget","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider::flush","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider::prune","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html#method_prune","d":"<p>Prune all of the entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DatabaseUuidFailedJobProvider::getTable","p":"Illuminate/Queue/Failed/DatabaseUuidFailedJobProvider.html#method_getTable","d":"<p>Get a new query builder instance for the table.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DynamoDbFailedJobProvider::__construct","p":"Illuminate/Queue/Failed/DynamoDbFailedJobProvider.html#method___construct","d":"<p>Create a new DynamoDb failed job provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DynamoDbFailedJobProvider::log","p":"Illuminate/Queue/Failed/DynamoDbFailedJobProvider.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DynamoDbFailedJobProvider::all","p":"Illuminate/Queue/Failed/DynamoDbFailedJobProvider.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DynamoDbFailedJobProvider::find","p":"Illuminate/Queue/Failed/DynamoDbFailedJobProvider.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DynamoDbFailedJobProvider::forget","p":"Illuminate/Queue/Failed/DynamoDbFailedJobProvider.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\DynamoDbFailedJobProvider::flush","p":"Illuminate/Queue/Failed/DynamoDbFailedJobProvider.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::log","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::all","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::find","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::forget","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::flush","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::log","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::all","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::find","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::forget","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\NullFailedJobProvider::flush","p":"Illuminate/Queue/Failed/NullFailedJobProvider.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\PrunableFailedJobProvider::prune","p":"Illuminate/Queue/Failed/PrunableFailedJobProvider.html#method_prune","d":"<p>Prune all of the entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::attempts","p":"Illuminate/Queue/InteractsWithQueue.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::delete","p":"Illuminate/Queue/InteractsWithQueue.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::fail","p":"Illuminate/Queue/InteractsWithQueue.html#method_fail","d":"<p>Fail the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::release","p":"Illuminate/Queue/InteractsWithQueue.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\InteractsWithQueue::setJob","p":"Illuminate/Queue/InteractsWithQueue.html#method_setJob","d":"<p>Set the base queue job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\InvalidPayloadException::__construct","p":"Illuminate/Queue/InvalidPayloadException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::__construct","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::release","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::bury","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_bury","d":"<p>Bury the job in the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::delete","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::attempts","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::getJobId","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::getRawBody","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::getPheanstalk","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getPheanstalk","d":"<p>Get the underlying Pheanstalk instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\BeanstalkdJob::getPheanstalkJob","p":"Illuminate/Queue/Jobs/BeanstalkdJob.html#method_getPheanstalkJob","d":"<p>Get the underlying Pheanstalk job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::__construct","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::release","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::delete","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::attempts","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::getJobId","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::getRawBody","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJob::getJobRecord","p":"Illuminate/Queue/Jobs/DatabaseJob.html#method_getJobRecord","d":"<p>Get the database job record.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord::__construct","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html#method___construct","d":"<p>Create a new job record instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord::increment","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html#method_increment","d":"<p>Increment the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord::touch","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html#method_touch","d":"<p>Update the &quot;reserved at&quot; timestamp of the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\DatabaseJobRecord::__get","p":"Illuminate/Queue/Jobs/DatabaseJobRecord.html#method___get","d":"<p>Dynamically access the underlying job information.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getJobId","p":"Illuminate/Queue/Jobs/Job.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getRawBody","p":"Illuminate/Queue/Jobs/Job.html#method_getRawBody","d":"<p>Get the raw body of the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::uuid","p":"Illuminate/Queue/Jobs/Job.html#method_uuid","d":"<p>Get the UUID of the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::fire","p":"Illuminate/Queue/Jobs/Job.html#method_fire","d":"<p>Fire the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::delete","p":"Illuminate/Queue/Jobs/Job.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::isDeleted","p":"Illuminate/Queue/Jobs/Job.html#method_isDeleted","d":"<p>Determine if the job has been deleted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::release","p":"Illuminate/Queue/Jobs/Job.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::isReleased","p":"Illuminate/Queue/Jobs/Job.html#method_isReleased","d":"<p>Determine if the job was released back into the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::isDeletedOrReleased","p":"Illuminate/Queue/Jobs/Job.html#method_isDeletedOrReleased","d":"<p>Determine if the job has been deleted or released.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::hasFailed","p":"Illuminate/Queue/Jobs/Job.html#method_hasFailed","d":"<p>Determine if the job has been marked as a failure.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::markAsFailed","p":"Illuminate/Queue/Jobs/Job.html#method_markAsFailed","d":"<p>Mark the job as &quot;failed&quot;.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::fail","p":"Illuminate/Queue/Jobs/Job.html#method_fail","d":"<p>Delete the job, call the &quot;failed&quot; method, and raise the failed job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::failed","p":"Illuminate/Queue/Jobs/Job.html#method_failed","d":"<p>Process an exception that caused the job to fail.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::resolve","p":"Illuminate/Queue/Jobs/Job.html#method_resolve","d":"<p>Resolve the given class.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getResolvedJob","p":"Illuminate/Queue/Jobs/Job.html#method_getResolvedJob","d":"<p>Get the resolved job handler instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::payload","p":"Illuminate/Queue/Jobs/Job.html#method_payload","d":"<p>Get the decoded body of the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::maxTries","p":"Illuminate/Queue/Jobs/Job.html#method_maxTries","d":"<p>Get the number of times to attempt a job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::maxExceptions","p":"Illuminate/Queue/Jobs/Job.html#method_maxExceptions","d":"<p>Get the number of times to attempt a job after an exception.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::shouldFailOnTimeout","p":"Illuminate/Queue/Jobs/Job.html#method_shouldFailOnTimeout","d":"<p>Determine if the job should fail when it timeouts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::backoff","p":"Illuminate/Queue/Jobs/Job.html#method_backoff","d":"<p>The number of seconds to wait before retrying a job that encountered an uncaught exception.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::timeout","p":"Illuminate/Queue/Jobs/Job.html#method_timeout","d":"<p>Get the number of seconds the job can run.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::retryUntil","p":"Illuminate/Queue/Jobs/Job.html#method_retryUntil","d":"<p>Get the timestamp indicating when the job should timeout.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getName","p":"Illuminate/Queue/Jobs/Job.html#method_getName","d":"<p>Get the name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::resolveName","p":"Illuminate/Queue/Jobs/Job.html#method_resolveName","d":"<p>Get the resolved name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getConnectionName","p":"Illuminate/Queue/Jobs/Job.html#method_getConnectionName","d":"<p>Get the name of the connection the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getQueue","p":"Illuminate/Queue/Jobs/Job.html#method_getQueue","d":"<p>Get the name of the queue the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\Job::getContainer","p":"Illuminate/Queue/Jobs/Job.html#method_getContainer","d":"<p>Get the service container instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\JobName::parse","p":"Illuminate/Queue/Jobs/JobName.html#method_parse","d":"<p>Parse the given job name into a class / method array.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\JobName::resolve","p":"Illuminate/Queue/Jobs/JobName.html#method_resolve","d":"<p>Get the resolved name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::__construct","p":"Illuminate/Queue/Jobs/RedisJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::getRawBody","p":"Illuminate/Queue/Jobs/RedisJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::delete","p":"Illuminate/Queue/Jobs/RedisJob.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::release","p":"Illuminate/Queue/Jobs/RedisJob.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::attempts","p":"Illuminate/Queue/Jobs/RedisJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::getJobId","p":"Illuminate/Queue/Jobs/RedisJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::getRedisQueue","p":"Illuminate/Queue/Jobs/RedisJob.html#method_getRedisQueue","d":"<p>Get the underlying Redis factory implementation.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\RedisJob::getReservedJob","p":"Illuminate/Queue/Jobs/RedisJob.html#method_getReservedJob","d":"<p>Get the underlying reserved Redis job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::__construct","p":"Illuminate/Queue/Jobs/SqsJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::release","p":"Illuminate/Queue/Jobs/SqsJob.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::delete","p":"Illuminate/Queue/Jobs/SqsJob.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::attempts","p":"Illuminate/Queue/Jobs/SqsJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::getJobId","p":"Illuminate/Queue/Jobs/SqsJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::getRawBody","p":"Illuminate/Queue/Jobs/SqsJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::getSqs","p":"Illuminate/Queue/Jobs/SqsJob.html#method_getSqs","d":"<p>Get the underlying SQS client instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SqsJob::getSqsJob","p":"Illuminate/Queue/Jobs/SqsJob.html#method_getSqsJob","d":"<p>Get the underlying raw SQS job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::__construct","p":"Illuminate/Queue/Jobs/SyncJob.html#method___construct","d":"<p>Create a new job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::release","p":"Illuminate/Queue/Jobs/SyncJob.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::attempts","p":"Illuminate/Queue/Jobs/SyncJob.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::getJobId","p":"Illuminate/Queue/Jobs/SyncJob.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::getRawBody","p":"Illuminate/Queue/Jobs/SyncJob.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Jobs\\SyncJob::getQueue","p":"Illuminate/Queue/Jobs/SyncJob.html#method_getQueue","d":"<p>Get the name of the queue the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::__construct","p":"Illuminate/Queue/Listener.html#method___construct","d":"<p>Create a new queue listener.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::phpBinary","p":"Illuminate/Queue/Listener.html#method_phpBinary","d":"<p>Get the PHP binary.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::artisanBinary","p":"Illuminate/Queue/Listener.html#method_artisanBinary","d":"<p>Get the Artisan binary.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::listen","p":"Illuminate/Queue/Listener.html#method_listen","d":"<p>Listen to the given queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::makeProcess","p":"Illuminate/Queue/Listener.html#method_makeProcess","d":"<p>Create a new Symfony process for the worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::addEnvironment","p":"Illuminate/Queue/Listener.html#method_addEnvironment","d":"<p>Add the environment option to the given command.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::createCommand","p":"Illuminate/Queue/Listener.html#method_createCommand","d":"<p>Create the command with the listener options.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::runProcess","p":"Illuminate/Queue/Listener.html#method_runProcess","d":"<p>Run the given process.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::handleWorkerOutput","p":"Illuminate/Queue/Listener.html#method_handleWorkerOutput","d":"<p>Handle output from the worker process.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::memoryExceeded","p":"Illuminate/Queue/Listener.html#method_memoryExceeded","d":"<p>Determine if the memory limit has been exceeded.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::stop","p":"Illuminate/Queue/Listener.html#method_stop","d":"<p>Stop listening and bail out of the script.</p>"},{"t":"M","n":"Illuminate\\Queue\\Listener::setOutputHandler","p":"Illuminate/Queue/Listener.html#method_setOutputHandler","d":"<p>Set the output handler callback.</p>"},{"t":"M","n":"Illuminate\\Queue\\ListenerOptions::__construct","p":"Illuminate/Queue/ListenerOptions.html#method___construct","d":"<p>Create a new listener options instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::size","p":"Illuminate/Queue/LuaScripts.html#method_size","d":"<p>Get the Lua script for computing the size of queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::push","p":"Illuminate/Queue/LuaScripts.html#method_push","d":"<p>Get the Lua script for pushing jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::pop","p":"Illuminate/Queue/LuaScripts.html#method_pop","d":"<p>Get the Lua script for popping the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::release","p":"Illuminate/Queue/LuaScripts.html#method_release","d":"<p>Get the Lua script for releasing reserved jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::migrateExpiredJobs","p":"Illuminate/Queue/LuaScripts.html#method_migrateExpiredJobs","d":"<p>Get the Lua script to migrate expired jobs back onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\LuaScripts::clear","p":"Illuminate/Queue/LuaScripts.html#method_clear","d":"<p>Get the Lua script for removing all jobs from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimited::__construct","p":"Illuminate/Queue/Middleware/RateLimited.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimited::handle","p":"Illuminate/Queue/Middleware/RateLimited.html#method_handle","d":"<p>Process the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimited::handleJob","p":"Illuminate/Queue/Middleware/RateLimited.html#method_handleJob","d":"<p>Handle a rate limited job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimited::dontRelease","p":"Illuminate/Queue/Middleware/RateLimited.html#method_dontRelease","d":"<p>Do not release the job back to the queue if the limit is exceeded.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimited::getTimeUntilNextRetry","p":"Illuminate/Queue/Middleware/RateLimited.html#method_getTimeUntilNextRetry","d":"<p>Get the number of seconds that should elapse before the job is retried.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimited::__sleep","p":"Illuminate/Queue/Middleware/RateLimited.html#method___sleep","d":"<p>Prepare the object for serialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimited::__wakeup","p":"Illuminate/Queue/Middleware/RateLimited.html#method___wakeup","d":"<p>Prepare the object after unserialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimitedWithRedis::__construct","p":"Illuminate/Queue/Middleware/RateLimitedWithRedis.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimitedWithRedis::handleJob","p":"Illuminate/Queue/Middleware/RateLimitedWithRedis.html#method_handleJob","d":"<p>Handle a rate limited job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimitedWithRedis::tooManyAttempts","p":"Illuminate/Queue/Middleware/RateLimitedWithRedis.html#method_tooManyAttempts","d":"<p>Determine if the given key has been &quot;accessed&quot; too many times.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimitedWithRedis::getTimeUntilNextRetry","p":"Illuminate/Queue/Middleware/RateLimitedWithRedis.html#method_getTimeUntilNextRetry","d":"<p>Get the number of seconds that should elapse before the job is retried.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\RateLimitedWithRedis::__wakeup","p":"Illuminate/Queue/Middleware/RateLimitedWithRedis.html#method___wakeup","d":"<p>Prepare the object after unserialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\SkipIfBatchCancelled::handle","p":"Illuminate/Queue/Middleware/SkipIfBatchCancelled.html#method_handle","d":"<p>Process the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::__construct","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::handle","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method_handle","d":"<p>Process the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::when","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method_when","d":"<p>Specify a callback that should determine if rate limiting behavior should apply.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::withPrefix","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method_withPrefix","d":"<p>Set the prefix of the rate limiter key.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::backoff","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method_backoff","d":"<p>Specify the number of minutes a job should be delayed when it is released (before it has reached its max exceptions).</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::getKey","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method_getKey","d":"<p>Get the cache key associated for the rate limiter.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::by","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method_by","d":"<p>Set the value that the rate limiter should be keyed by.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::byJob","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method_byJob","d":"<p>Indicate that the throttle key should use the job's UUID.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptions::getTimeUntilNextRetry","p":"Illuminate/Queue/Middleware/ThrottlesExceptions.html#method_getTimeUntilNextRetry","d":"<p>Get the number of seconds that should elapse before the job is retried.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\ThrottlesExceptionsWithRedis::handle","p":"Illuminate/Queue/Middleware/ThrottlesExceptionsWithRedis.html#method_handle","d":"<p>Process the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping::__construct","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping::handle","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html#method_handle","d":"<p>Process the job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping::releaseAfter","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html#method_releaseAfter","d":"<p>Set the delay (in seconds) to release the job back to the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping::dontRelease","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html#method_dontRelease","d":"<p>Do not release the job back to the queue if no lock can be acquired.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping::expireAfter","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html#method_expireAfter","d":"<p>Set the maximum number of seconds that can elapse before the lock is released.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping::withPrefix","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html#method_withPrefix","d":"<p>Set the prefix of the lock key.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping::shared","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html#method_shared","d":"<p>Indicate that the lock key should be shared across job classes.</p>"},{"t":"M","n":"Illuminate\\Queue\\Middleware\\WithoutOverlapping::getLockKey","p":"Illuminate/Queue/Middleware/WithoutOverlapping.html#method_getLockKey","d":"<p>Get the lock key for the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::size","p":"Illuminate/Queue/NullQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::push","p":"Illuminate/Queue/NullQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::pushRaw","p":"Illuminate/Queue/NullQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::later","p":"Illuminate/Queue/NullQueue.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\NullQueue::pop","p":"Illuminate/Queue/NullQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::pushOn","p":"Illuminate/Queue/Queue.html#method_pushOn","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::laterOn","p":"Illuminate/Queue/Queue.html#method_laterOn","d":"<p>Push a new job onto a specific queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::bulk","p":"Illuminate/Queue/Queue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createPayload","p":"Illuminate/Queue/Queue.html#method_createPayload","d":"<p>Create a payload string from the given job and data.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createPayloadArray","p":"Illuminate/Queue/Queue.html#method_createPayloadArray","d":"<p>Create a payload array from the given job and data.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createObjectPayload","p":"Illuminate/Queue/Queue.html#method_createObjectPayload","d":"<p>Create a payload for an object-based queue handler.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::getDisplayName","p":"Illuminate/Queue/Queue.html#method_getDisplayName","d":"<p>Get the display name for the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::getJobBackoff","p":"Illuminate/Queue/Queue.html#method_getJobBackoff","d":"<p>Get the backoff for an object-based queue handler.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::getJobExpiration","p":"Illuminate/Queue/Queue.html#method_getJobExpiration","d":"<p>Get the expiration timestamp for an object-based queue handler.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::jobShouldBeEncrypted","p":"Illuminate/Queue/Queue.html#method_jobShouldBeEncrypted","d":"<p>Determine if the job should be encrypted.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createStringPayload","p":"Illuminate/Queue/Queue.html#method_createStringPayload","d":"<p>Create a typical, string based queue payload array.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::createPayloadUsing","p":"Illuminate/Queue/Queue.html#method_createPayloadUsing","d":"<p>Register a callback to be executed when creating job payloads.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::withCreatePayloadHooks","p":"Illuminate/Queue/Queue.html#method_withCreatePayloadHooks","d":"<p>Create the given payload using any registered payload hooks.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::enqueueUsing","p":"Illuminate/Queue/Queue.html#method_enqueueUsing","d":"<p>Enqueue a job using the given callback.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::shouldDispatchAfterCommit","p":"Illuminate/Queue/Queue.html#method_shouldDispatchAfterCommit","d":"<p>Determine if the job should be dispatched after all database transactions have committed.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::raiseJobQueuedEvent","p":"Illuminate/Queue/Queue.html#method_raiseJobQueuedEvent","d":"<p>Raise the job queued event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::getConnectionName","p":"Illuminate/Queue/Queue.html#method_getConnectionName","d":"<p>Get the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::setConnectionName","p":"Illuminate/Queue/Queue.html#method_setConnectionName","d":"<p>Set the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::getContainer","p":"Illuminate/Queue/Queue.html#method_getContainer","d":"<p>Get the container instance being used by the connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Queue::setContainer","p":"Illuminate/Queue/Queue.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::__construct","p":"Illuminate/Queue/QueueManager.html#method___construct","d":"<p>Create a new queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::before","p":"Illuminate/Queue/QueueManager.html#method_before","d":"<p>Register an event listener for the before job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::after","p":"Illuminate/Queue/QueueManager.html#method_after","d":"<p>Register an event listener for the after job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::exceptionOccurred","p":"Illuminate/Queue/QueueManager.html#method_exceptionOccurred","d":"<p>Register an event listener for the exception occurred job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::looping","p":"Illuminate/Queue/QueueManager.html#method_looping","d":"<p>Register an event listener for the daemon queue loop.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::failing","p":"Illuminate/Queue/QueueManager.html#method_failing","d":"<p>Register an event listener for the failed job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::stopping","p":"Illuminate/Queue/QueueManager.html#method_stopping","d":"<p>Register an event listener for the daemon queue stopping.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::connected","p":"Illuminate/Queue/QueueManager.html#method_connected","d":"<p>Determine if the driver is connected.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::connection","p":"Illuminate/Queue/QueueManager.html#method_connection","d":"<p>Resolve a queue connection instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::resolve","p":"Illuminate/Queue/QueueManager.html#method_resolve","d":"<p>Resolve a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getConnector","p":"Illuminate/Queue/QueueManager.html#method_getConnector","d":"<p>Get the connector for a given driver.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::extend","p":"Illuminate/Queue/QueueManager.html#method_extend","d":"<p>Add a queue connection resolver.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::addConnector","p":"Illuminate/Queue/QueueManager.html#method_addConnector","d":"<p>Add a queue connection resolver.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getConfig","p":"Illuminate/Queue/QueueManager.html#method_getConfig","d":"<p>Get the queue connection configuration.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getDefaultDriver","p":"Illuminate/Queue/QueueManager.html#method_getDefaultDriver","d":"<p>Get the name of the default queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::setDefaultDriver","p":"Illuminate/Queue/QueueManager.html#method_setDefaultDriver","d":"<p>Set the name of the default queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getName","p":"Illuminate/Queue/QueueManager.html#method_getName","d":"<p>Get the full name for the given connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::getApplication","p":"Illuminate/Queue/QueueManager.html#method_getApplication","d":"<p>Get the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::setApplication","p":"Illuminate/Queue/QueueManager.html#method_setApplication","d":"<p>Set the application instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueManager::__call","p":"Illuminate/Queue/QueueManager.html#method___call","d":"<p>Dynamically pass calls to the default connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::register","p":"Illuminate/Queue/QueueServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::configureSerializableClosureUses","p":"Illuminate/Queue/QueueServiceProvider.html#method_configureSerializableClosureUses","d":"<p>Configure serializable closures uses.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerManager","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerManager","d":"<p>Register the queue manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerConnection","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerConnection","d":"<p>Register the default queue connection binding.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerConnectors","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerConnectors","d":"<p>Register the connectors on the queue manager.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerNullConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerNullConnector","d":"<p>Register the Null queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerSyncConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerSyncConnector","d":"<p>Register the Sync queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerDatabaseConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerDatabaseConnector","d":"<p>Register the database queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerRedisConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerRedisConnector","d":"<p>Register the Redis queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerBeanstalkdConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerBeanstalkdConnector","d":"<p>Register the Beanstalkd queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerSqsConnector","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerSqsConnector","d":"<p>Register the Amazon SQS queue connector.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerWorker","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerWorker","d":"<p>Register the queue worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerListener","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerListener","d":"<p>Register the queue listener.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::registerFailedJobServices","p":"Illuminate/Queue/QueueServiceProvider.html#method_registerFailedJobServices","d":"<p>Register the failed job services.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::databaseFailedJobProvider","p":"Illuminate/Queue/QueueServiceProvider.html#method_databaseFailedJobProvider","d":"<p>Create a new database failed job provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::databaseUuidFailedJobProvider","p":"Illuminate/Queue/QueueServiceProvider.html#method_databaseUuidFailedJobProvider","d":"<p>Create a new database failed job provider that uses UUIDs as IDs.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::dynamoFailedJobProvider","p":"Illuminate/Queue/QueueServiceProvider.html#method_dynamoFailedJobProvider","d":"<p>Create a new DynamoDb failed job provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\QueueServiceProvider::provides","p":"Illuminate/Queue/QueueServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::__construct","p":"Illuminate/Queue/RedisQueue.html#method___construct","d":"<p>Create a new Redis queue instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::size","p":"Illuminate/Queue/RedisQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::bulk","p":"Illuminate/Queue/RedisQueue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::push","p":"Illuminate/Queue/RedisQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::pushRaw","p":"Illuminate/Queue/RedisQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::later","p":"Illuminate/Queue/RedisQueue.html#method_later","d":"<p>Push a new job onto the queue after a delay.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::laterRaw","p":"Illuminate/Queue/RedisQueue.html#method_laterRaw","d":"<p>Push a raw job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::createPayloadArray","p":"Illuminate/Queue/RedisQueue.html#method_createPayloadArray","d":"<p>Create a payload string from the given job and data.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::pop","p":"Illuminate/Queue/RedisQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::migrate","p":"Illuminate/Queue/RedisQueue.html#method_migrate","d":"<p>Migrate any delayed or expired jobs onto the primary queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::migrateExpiredJobs","p":"Illuminate/Queue/RedisQueue.html#method_migrateExpiredJobs","d":"<p>Migrate the delayed jobs that are ready to the regular queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::retrieveNextJob","p":"Illuminate/Queue/RedisQueue.html#method_retrieveNextJob","d":"<p>Retrieve the next job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::deleteReserved","p":"Illuminate/Queue/RedisQueue.html#method_deleteReserved","d":"<p>Delete a reserved job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::deleteAndRelease","p":"Illuminate/Queue/RedisQueue.html#method_deleteAndRelease","d":"<p>Delete a reserved job from the reserved queue and release it.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::clear","p":"Illuminate/Queue/RedisQueue.html#method_clear","d":"<p>Delete all of the jobs from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::getRandomId","p":"Illuminate/Queue/RedisQueue.html#method_getRandomId","d":"<p>Get a random ID string.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::getQueue","p":"Illuminate/Queue/RedisQueue.html#method_getQueue","d":"<p>Get the queue or return the default.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::getConnection","p":"Illuminate/Queue/RedisQueue.html#method_getConnection","d":"<p>Get the connection for the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\RedisQueue::getRedis","p":"Illuminate/Queue/RedisQueue.html#method_getRedis","d":"<p>Get the underlying Redis instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::getSerializedPropertyValue","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_getSerializedPropertyValue","d":"<p>Get the property value prepared for serialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::getRestoredPropertyValue","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_getRestoredPropertyValue","d":"<p>Get the restored property value after deserialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::restoreCollection","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_restoreCollection","d":"<p>Restore a queueable collection instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::restoreModel","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_restoreModel","d":"<p>Restore the model from the model identifier instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesAndRestoresModelIdentifiers::getQueryForModelRestoration","p":"Illuminate/Queue/SerializesAndRestoresModelIdentifiers.html#method_getQueryForModelRestoration","d":"<p>Get the query for model restoration.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesModels::__serialize","p":"Illuminate/Queue/SerializesModels.html#method___serialize","d":"<p>Prepare the instance values for serialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesModels::__unserialize","p":"Illuminate/Queue/SerializesModels.html#method___unserialize","d":"<p>Restore the model after serialization.</p>"},{"t":"M","n":"Illuminate\\Queue\\SerializesModels::getPropertyValue","p":"Illuminate/Queue/SerializesModels.html#method_getPropertyValue","d":"<p>Get the property value for the given property.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::__construct","p":"Illuminate/Queue/SqsQueue.html#method___construct","d":"<p>Create a new Amazon SQS queue instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::size","p":"Illuminate/Queue/SqsQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::push","p":"Illuminate/Queue/SqsQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::pushRaw","p":"Illuminate/Queue/SqsQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::later","p":"Illuminate/Queue/SqsQueue.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::bulk","p":"Illuminate/Queue/SqsQueue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::pop","p":"Illuminate/Queue/SqsQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::clear","p":"Illuminate/Queue/SqsQueue.html#method_clear","d":"<p>Delete all of the jobs from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::getQueue","p":"Illuminate/Queue/SqsQueue.html#method_getQueue","d":"<p>Get the queue or return the default.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::suffixQueue","p":"Illuminate/Queue/SqsQueue.html#method_suffixQueue","d":"<p>Add the given suffix to the given queue name.</p>"},{"t":"M","n":"Illuminate\\Queue\\SqsQueue::getSqs","p":"Illuminate/Queue/SqsQueue.html#method_getSqs","d":"<p>Get the underlying SQS instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::size","p":"Illuminate/Queue/SyncQueue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::push","p":"Illuminate/Queue/SyncQueue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::resolveJob","p":"Illuminate/Queue/SyncQueue.html#method_resolveJob","d":"<p>Resolve a Sync job instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::raiseBeforeJobEvent","p":"Illuminate/Queue/SyncQueue.html#method_raiseBeforeJobEvent","d":"<p>Raise the before queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::raiseAfterJobEvent","p":"Illuminate/Queue/SyncQueue.html#method_raiseAfterJobEvent","d":"<p>Raise the after queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::raiseExceptionOccurredJobEvent","p":"Illuminate/Queue/SyncQueue.html#method_raiseExceptionOccurredJobEvent","d":"<p>Raise the exception occurred queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::handleException","p":"Illuminate/Queue/SyncQueue.html#method_handleException","d":"<p>Handle an exception that occurred while processing a job.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::pushRaw","p":"Illuminate/Queue/SyncQueue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::later","p":"Illuminate/Queue/SyncQueue.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\SyncQueue::pop","p":"Illuminate/Queue/SyncQueue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::__construct","p":"Illuminate/Queue/Worker.html#method___construct","d":"<p>Create a new queue worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::daemon","p":"Illuminate/Queue/Worker.html#method_daemon","d":"<p>Listen to the given queue in a loop.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::registerTimeoutHandler","p":"Illuminate/Queue/Worker.html#method_registerTimeoutHandler","d":"<p>Register the worker timeout handler.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::resetTimeoutHandler","p":"Illuminate/Queue/Worker.html#method_resetTimeoutHandler","d":"<p>Reset the worker timeout handler.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::timeoutForJob","p":"Illuminate/Queue/Worker.html#method_timeoutForJob","d":"<p>Get the appropriate timeout for the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::daemonShouldRun","p":"Illuminate/Queue/Worker.html#method_daemonShouldRun","d":"<p>Determine if the daemon should process on this iteration.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::pauseWorker","p":"Illuminate/Queue/Worker.html#method_pauseWorker","d":"<p>Pause the worker for the current loop.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::stopIfNecessary","p":"Illuminate/Queue/Worker.html#method_stopIfNecessary","d":"<p>Determine the exit code to stop the process if necessary.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::runNextJob","p":"Illuminate/Queue/Worker.html#method_runNextJob","d":"<p>Process the next job on the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::getNextJob","p":"Illuminate/Queue/Worker.html#method_getNextJob","d":"<p>Get the next job from the queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::runJob","p":"Illuminate/Queue/Worker.html#method_runJob","d":"<p>Process the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::stopWorkerIfLostConnection","p":"Illuminate/Queue/Worker.html#method_stopWorkerIfLostConnection","d":"<p>Stop the worker if we have lost connection to a database.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::process","p":"Illuminate/Queue/Worker.html#method_process","d":"<p>Process the given job from the queue.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::handleJobException","p":"Illuminate/Queue/Worker.html#method_handleJobException","d":"<p>Handle an exception that occurred while the job was running.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::markJobAsFailedIfAlreadyExceedsMaxAttempts","p":"Illuminate/Queue/Worker.html#method_markJobAsFailedIfAlreadyExceedsMaxAttempts","d":"<p>Mark the given job as failed if it has exceeded the maximum allowed attempts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::markJobAsFailedIfWillExceedMaxAttempts","p":"Illuminate/Queue/Worker.html#method_markJobAsFailedIfWillExceedMaxAttempts","d":"<p>Mark the given job as failed if it has exceeded the maximum allowed attempts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::markJobAsFailedIfWillExceedMaxExceptions","p":"Illuminate/Queue/Worker.html#method_markJobAsFailedIfWillExceedMaxExceptions","d":"<p>Mark the given job as failed if it has exceeded the maximum allowed attempts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::markJobAsFailedIfItShouldFailOnTimeout","p":"Illuminate/Queue/Worker.html#method_markJobAsFailedIfItShouldFailOnTimeout","d":"<p>Mark the given job as failed if it should fail on timeouts.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::failJob","p":"Illuminate/Queue/Worker.html#method_failJob","d":"<p>Mark the given job as failed and raise the relevant event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::calculateBackoff","p":"Illuminate/Queue/Worker.html#method_calculateBackoff","d":"<p>Calculate the backoff for the given job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::raiseBeforeJobEvent","p":"Illuminate/Queue/Worker.html#method_raiseBeforeJobEvent","d":"<p>Raise the before queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::raiseAfterJobEvent","p":"Illuminate/Queue/Worker.html#method_raiseAfterJobEvent","d":"<p>Raise the after queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::raiseExceptionOccurredJobEvent","p":"Illuminate/Queue/Worker.html#method_raiseExceptionOccurredJobEvent","d":"<p>Raise the exception occurred queue job event.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::queueShouldRestart","p":"Illuminate/Queue/Worker.html#method_queueShouldRestart","d":"<p>Determine if the queue worker should restart.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::getTimestampOfLastQueueRestart","p":"Illuminate/Queue/Worker.html#method_getTimestampOfLastQueueRestart","d":"<p>Get the last queue restart timestamp, or null.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::listenForSignals","p":"Illuminate/Queue/Worker.html#method_listenForSignals","d":"<p>Enable async signals for the process.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::supportsAsyncSignals","p":"Illuminate/Queue/Worker.html#method_supportsAsyncSignals","d":"<p>Determine if &quot;async&quot; signals are supported.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::memoryExceeded","p":"Illuminate/Queue/Worker.html#method_memoryExceeded","d":"<p>Determine if the memory limit has been exceeded.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::stop","p":"Illuminate/Queue/Worker.html#method_stop","d":"<p>Stop listening and bail out of the script.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::kill","p":"Illuminate/Queue/Worker.html#method_kill","d":"<p>Kill the process.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::maxAttemptsExceededException","p":"Illuminate/Queue/Worker.html#method_maxAttemptsExceededException","d":"<p>Create an instance of MaxAttemptsExceededException.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::sleep","p":"Illuminate/Queue/Worker.html#method_sleep","d":"<p>Sleep the script for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::setCache","p":"Illuminate/Queue/Worker.html#method_setCache","d":"<p>Set the cache repository implementation.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::setName","p":"Illuminate/Queue/Worker.html#method_setName","d":"<p>Set the name of the worker.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::popUsing","p":"Illuminate/Queue/Worker.html#method_popUsing","d":"<p>Register a callback to be executed to pick jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::getManager","p":"Illuminate/Queue/Worker.html#method_getManager","d":"<p>Get the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\Worker::setManager","p":"Illuminate/Queue/Worker.html#method_setManager","d":"<p>Set the queue manager instance.</p>"},{"t":"M","n":"Illuminate\\Queue\\WorkerOptions::__construct","p":"Illuminate/Queue/WorkerOptions.html#method___construct","d":"<p>Create a new worker options instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::createSubscription","p":"Illuminate/Redis/Connections/Connection.html#method_createSubscription","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::funnel","p":"Illuminate/Redis/Connections/Connection.html#method_funnel","d":"<p>Funnel a callback for a maximum number of simultaneous executions.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::throttle","p":"Illuminate/Redis/Connections/Connection.html#method_throttle","d":"<p>Throttle a callback for a maximum number of executions over a given duration.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::client","p":"Illuminate/Redis/Connections/Connection.html#method_client","d":"<p>Get the underlying Redis client.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::subscribe","p":"Illuminate/Redis/Connections/Connection.html#method_subscribe","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::psubscribe","p":"Illuminate/Redis/Connections/Connection.html#method_psubscribe","d":"<p>Subscribe to a set of given channels with wildcards.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::command","p":"Illuminate/Redis/Connections/Connection.html#method_command","d":"<p>Run a command against the Redis database.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::event","p":"Illuminate/Redis/Connections/Connection.html#method_event","d":"<p>Fire the given event if possible.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::listen","p":"Illuminate/Redis/Connections/Connection.html#method_listen","d":"<p>Register a Redis command listener with the connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::getName","p":"Illuminate/Redis/Connections/Connection.html#method_getName","d":"<p>Get the connection name.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::setName","p":"Illuminate/Redis/Connections/Connection.html#method_setName","d":"<p>Set the connections name.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::getEventDispatcher","p":"Illuminate/Redis/Connections/Connection.html#method_getEventDispatcher","d":"<p>Get the event dispatcher used by the connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::setEventDispatcher","p":"Illuminate/Redis/Connections/Connection.html#method_setEventDispatcher","d":"<p>Set the event dispatcher instance on the connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::unsetEventDispatcher","p":"Illuminate/Redis/Connections/Connection.html#method_unsetEventDispatcher","d":"<p>Unset the event dispatcher instance on the connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\Connection::__call","p":"Illuminate/Redis/Connections/Connection.html#method___call","d":"<p>Pass other method calls down to the underlying client.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::pack","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_pack","d":"<p>Prepares the given values to be used with the <code>eval</code> command, including serialization and compression.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::compressed","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_compressed","d":"<p>Determine if compression is enabled.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::lzfCompressed","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_lzfCompressed","d":"<p>Determine if LZF compression is enabled.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::zstdCompressed","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_zstdCompressed","d":"<p>Determine if ZSTD compression is enabled.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::lz4Compressed","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_lz4Compressed","d":"<p>Determine if LZ4 compression is enabled.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::supportsPacking","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_supportsPacking","d":"<p>Determine if the current PhpRedis extension version supports packing.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::supportsLzf","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_supportsLzf","d":"<p>Determine if the current PhpRedis extension version supports LZF compression.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::supportsZstd","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_supportsZstd","d":"<p>Determine if the current PhpRedis extension version supports Zstd compression.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PacksPhpRedisValues::phpRedisVersionAtLeast","p":"Illuminate/Redis/Connections/PacksPhpRedisValues.html#method_phpRedisVersionAtLeast","d":"<p>Determine if the PhpRedis extension version is at least the given version.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisClusterConnection::flushdb","p":"Illuminate/Redis/Connections/PhpRedisClusterConnection.html#method_flushdb","d":"<p>Flush the selected Redis database on all master nodes.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::__construct","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method___construct","d":"<p>Create a new PhpRedis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::get","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_get","d":"<p>Returns the value of the given key.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::mget","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_mget","d":"<p>Get the values of all the given keys.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::set","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_set","d":"<p>Set the string value in the argument as the value of the key.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::setnx","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_setnx","d":"<p>Set the given key if it doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::hmget","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_hmget","d":"<p>Get the value of the given hash fields.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::hmset","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_hmset","d":"<p>Set the given hash fields to their respective values.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::hsetnx","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_hsetnx","d":"<p>Set the given hash field if it doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::lrem","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_lrem","d":"<p>Removes the first count occurrences of the value element from the list.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::blpop","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_blpop","d":"<p>Removes and returns the first element of the list stored at key.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::brpop","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_brpop","d":"<p>Removes and returns the last element of the list stored at key.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::spop","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_spop","d":"<p>Removes and returns a random element from the set value at key.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::zadd","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_zadd","d":"<p>Add one or more members to a sorted set or update its score if it already exists.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::zrangebyscore","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_zrangebyscore","d":"<p>Return elements with score between $min and $max.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::zrevrangebyscore","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_zrevrangebyscore","d":"<p>Return elements with score between $min and $max.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::zinterstore","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_zinterstore","d":"<p>Find the intersection between sets and store in a new set.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::zunionstore","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_zunionstore","d":"<p>Find the union between sets and store in a new set.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::scan","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_scan","d":"<p>Scans all keys based on options.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::zscan","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_zscan","d":"<p>Scans the given set for all values based on options.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::hscan","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_hscan","d":"<p>Scans the given hash for all values based on options.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::sscan","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_sscan","d":"<p>Scans the given set for all values based on options.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::pipeline","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_pipeline","d":"<p>Execute commands in a pipeline.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::transaction","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_transaction","d":"<p>Execute commands in a transaction.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::evalsha","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_evalsha","d":"<p>Evaluate a LUA script serverside, from the SHA1 hash of the script instead of the script itself.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::eval","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_eval","d":"<p>Evaluate a script and return its result.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::subscribe","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_subscribe","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::psubscribe","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_psubscribe","d":"<p>Subscribe to a set of given channels with wildcards.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::createSubscription","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_createSubscription","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::flushdb","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_flushdb","d":"<p>Flush the selected Redis database.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::executeRaw","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_executeRaw","d":"<p>Execute a raw command.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::command","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_command","d":"<p>Run a command against the Redis database.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::disconnect","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method_disconnect","d":"<p>Disconnects from the Redis instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PhpRedisConnection::__call","p":"Illuminate/Redis/Connections/PhpRedisConnection.html#method___call","d":"<p>Pass other method calls down to the underlying client.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PredisClusterConnection::flushdb","p":"Illuminate/Redis/Connections/PredisClusterConnection.html#method_flushdb","d":"<p>Flush the selected Redis database on all cluster nodes.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PredisConnection::__construct","p":"Illuminate/Redis/Connections/PredisConnection.html#method___construct","d":"<p>Create a new Predis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connections\\PredisConnection::createSubscription","p":"Illuminate/Redis/Connections/PredisConnection.html#method_createSubscription","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::connect","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_connect","d":"<p>Create a new clustered PhpRedis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::connectToCluster","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_connectToCluster","d":"<p>Create a new clustered PhpRedis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::buildClusterConnectionString","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_buildClusterConnectionString","d":"<p>Build a single cluster seed string from an array.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::createClient","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_createClient","d":"<p>Create the Redis client instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::establishConnection","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_establishConnection","d":"<p>Establish a connection with the Redis host.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::createRedisClusterInstance","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_createRedisClusterInstance","d":"<p>Create a new redis cluster instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PhpRedisConnector::formatHost","p":"Illuminate/Redis/Connectors/PhpRedisConnector.html#method_formatHost","d":"<p>Format the host using the scheme if available.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PredisConnector::connect","p":"Illuminate/Redis/Connectors/PredisConnector.html#method_connect","d":"<p>Create a new clustered Predis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Connectors\\PredisConnector::connectToCluster","p":"Illuminate/Redis/Connectors/PredisConnector.html#method_connectToCluster","d":"<p>Create a new clustered Predis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\Events\\CommandExecuted::__construct","p":"Illuminate/Redis/Events/CommandExecuted.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiter::__construct","p":"Illuminate/Redis/Limiters/ConcurrencyLimiter.html#method___construct","d":"<p>Create a new concurrency limiter instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiter::block","p":"Illuminate/Redis/Limiters/ConcurrencyLimiter.html#method_block","d":"<p>Attempt to acquire the lock for the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiter::acquire","p":"Illuminate/Redis/Limiters/ConcurrencyLimiter.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiter::lockScript","p":"Illuminate/Redis/Limiters/ConcurrencyLimiter.html#method_lockScript","d":"<p>Get the Lua script for acquiring a lock.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiter::release","p":"Illuminate/Redis/Limiters/ConcurrencyLimiter.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiter::releaseScript","p":"Illuminate/Redis/Limiters/ConcurrencyLimiter.html#method_releaseScript","d":"<p>Get the Lua script to atomically release a lock.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiterBuilder::__construct","p":"Illuminate/Redis/Limiters/ConcurrencyLimiterBuilder.html#method___construct","d":"<p>Create a new builder instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiterBuilder::limit","p":"Illuminate/Redis/Limiters/ConcurrencyLimiterBuilder.html#method_limit","d":"<p>Set the maximum number of locks that can be obtained per time window.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiterBuilder::releaseAfter","p":"Illuminate/Redis/Limiters/ConcurrencyLimiterBuilder.html#method_releaseAfter","d":"<p>Set the number of seconds until the lock will be released.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiterBuilder::block","p":"Illuminate/Redis/Limiters/ConcurrencyLimiterBuilder.html#method_block","d":"<p>Set the amount of time to block until a lock is available.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiterBuilder::sleep","p":"Illuminate/Redis/Limiters/ConcurrencyLimiterBuilder.html#method_sleep","d":"<p>The number of milliseconds to wait between lock acquisition attempts.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\ConcurrencyLimiterBuilder::then","p":"Illuminate/Redis/Limiters/ConcurrencyLimiterBuilder.html#method_then","d":"<p>Execute the given callback if a lock is obtained, otherwise call the failure callback.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiter::__construct","p":"Illuminate/Redis/Limiters/DurationLimiter.html#method___construct","d":"<p>Create a new duration limiter instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiter::block","p":"Illuminate/Redis/Limiters/DurationLimiter.html#method_block","d":"<p>Attempt to acquire the lock for the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiter::acquire","p":"Illuminate/Redis/Limiters/DurationLimiter.html#method_acquire","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiter::tooManyAttempts","p":"Illuminate/Redis/Limiters/DurationLimiter.html#method_tooManyAttempts","d":"<p>Determine if the key has been &quot;accessed&quot; too many times.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiter::clear","p":"Illuminate/Redis/Limiters/DurationLimiter.html#method_clear","d":"<p>Clear the limiter.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiter::luaScript","p":"Illuminate/Redis/Limiters/DurationLimiter.html#method_luaScript","d":"<p>Get the Lua script for acquiring a lock.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiter::tooManyAttemptsLuaScript","p":"Illuminate/Redis/Limiters/DurationLimiter.html#method_tooManyAttemptsLuaScript","d":"<p>Get the Lua script to determine if the key has been &quot;accessed&quot; too many times.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiterBuilder::__construct","p":"Illuminate/Redis/Limiters/DurationLimiterBuilder.html#method___construct","d":"<p>Create a new builder instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiterBuilder::allow","p":"Illuminate/Redis/Limiters/DurationLimiterBuilder.html#method_allow","d":"<p>Set the maximum number of locks that can be obtained per time window.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiterBuilder::every","p":"Illuminate/Redis/Limiters/DurationLimiterBuilder.html#method_every","d":"<p>Set the amount of time the lock window is maintained.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiterBuilder::block","p":"Illuminate/Redis/Limiters/DurationLimiterBuilder.html#method_block","d":"<p>Set the amount of time to block until a lock is available.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiterBuilder::sleep","p":"Illuminate/Redis/Limiters/DurationLimiterBuilder.html#method_sleep","d":"<p>The number of milliseconds to wait between lock acquisition attempts.</p>"},{"t":"M","n":"Illuminate\\Redis\\Limiters\\DurationLimiterBuilder::then","p":"Illuminate/Redis/Limiters/DurationLimiterBuilder.html#method_then","d":"<p>Execute the given callback if a lock is obtained, otherwise call the failure callback.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::__construct","p":"Illuminate/Redis/RedisManager.html#method___construct","d":"<p>Create a new Redis manager instance.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::connection","p":"Illuminate/Redis/RedisManager.html#method_connection","d":"<p>Get a Redis connection by name.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::resolve","p":"Illuminate/Redis/RedisManager.html#method_resolve","d":"<p>Resolve the given connection by name.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::resolveCluster","p":"Illuminate/Redis/RedisManager.html#method_resolveCluster","d":"<p>Resolve the given cluster connection by name.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::configure","p":"Illuminate/Redis/RedisManager.html#method_configure","d":"<p>Configure the given connection to prepare it for commands.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::connector","p":"Illuminate/Redis/RedisManager.html#method_connector","d":"<p>Get the connector instance for the current driver.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::parseConnectionConfiguration","p":"Illuminate/Redis/RedisManager.html#method_parseConnectionConfiguration","d":"<p>Parse the Redis connection configuration.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::connections","p":"Illuminate/Redis/RedisManager.html#method_connections","d":"<p>Return all of the created connections.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::enableEvents","p":"Illuminate/Redis/RedisManager.html#method_enableEvents","d":"<p>Enable the firing of Redis command events.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::disableEvents","p":"Illuminate/Redis/RedisManager.html#method_disableEvents","d":"<p>Disable the firing of Redis command events.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::setDriver","p":"Illuminate/Redis/RedisManager.html#method_setDriver","d":"<p>Set the default driver.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::purge","p":"Illuminate/Redis/RedisManager.html#method_purge","d":"<p>Disconnect the given connection and remove from local cache.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::extend","p":"Illuminate/Redis/RedisManager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisManager::__call","p":"Illuminate/Redis/RedisManager.html#method___call","d":"<p>Pass methods onto the default Redis connection.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisServiceProvider::register","p":"Illuminate/Redis/RedisServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Redis\\RedisServiceProvider::provides","p":"Illuminate/Redis/RedisServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::handleMatchedRoute","p":"Illuminate/Routing/AbstractRouteCollection.html#method_handleMatchedRoute","d":"<p>Handle the matched route.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::checkForAlternateVerbs","p":"Illuminate/Routing/AbstractRouteCollection.html#method_checkForAlternateVerbs","d":"<p>Determine if any routes match on another HTTP verb.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::matchAgainstRoutes","p":"Illuminate/Routing/AbstractRouteCollection.html#method_matchAgainstRoutes","d":"<p>Determine if a route in the array matches the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::getRouteForMethods","p":"Illuminate/Routing/AbstractRouteCollection.html#method_getRouteForMethods","d":"<p>Get a route (if necessary) that responds when other available methods are present.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::requestMethodNotAllowed","p":"Illuminate/Routing/AbstractRouteCollection.html#method_requestMethodNotAllowed","d":"<p>Throw a method not allowed HTTP exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::methodNotAllowed","p":"Illuminate/Routing/AbstractRouteCollection.html#method_methodNotAllowed","d":"<p>Throw a method not allowed HTTP exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::compile","p":"Illuminate/Routing/AbstractRouteCollection.html#method_compile","d":"<p>Compile the routes for caching.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::dumper","p":"Illuminate/Routing/AbstractRouteCollection.html#method_dumper","d":"<p>Return the CompiledUrlMatcherDumper instance for the route collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::toSymfonyRouteCollection","p":"Illuminate/Routing/AbstractRouteCollection.html#method_toSymfonyRouteCollection","d":"<p>Convert the collection to a Symfony RouteCollection instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::addToSymfonyRoutesCollection","p":"Illuminate/Routing/AbstractRouteCollection.html#method_addToSymfonyRoutesCollection","d":"<p>Add a route to the SymfonyRouteCollection instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::generateRouteName","p":"Illuminate/Routing/AbstractRouteCollection.html#method_generateRouteName","d":"<p>Get a randomly generated route name.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::getIterator","p":"Illuminate/Routing/AbstractRouteCollection.html#method_getIterator","d":"<p>Get an iterator for the items.</p>"},{"t":"M","n":"Illuminate\\Routing\\AbstractRouteCollection::count","p":"Illuminate/Routing/AbstractRouteCollection.html#method_count","d":"<p>Count the number of items in the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\CallableDispatcher::__construct","p":"Illuminate/Routing/CallableDispatcher.html#method___construct","d":"<p>Create a new callable dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\CallableDispatcher::dispatch","p":"Illuminate/Routing/CallableDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given callable.</p>"},{"t":"M","n":"Illuminate\\Routing\\CallableDispatcher::resolveParameters","p":"Illuminate/Routing/CallableDispatcher.html#method_resolveParameters","d":"<p>Resolve the parameters for the callable.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::__construct","p":"Illuminate/Routing/CompiledRouteCollection.html#method___construct","d":"<p>Create a new CompiledRouteCollection instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::add","p":"Illuminate/Routing/CompiledRouteCollection.html#method_add","d":"<p>Add a Route instance to the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::refreshNameLookups","p":"Illuminate/Routing/CompiledRouteCollection.html#method_refreshNameLookups","d":"<p>Refresh the name look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::refreshActionLookups","p":"Illuminate/Routing/CompiledRouteCollection.html#method_refreshActionLookups","d":"<p>Refresh the action look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::match","p":"Illuminate/Routing/CompiledRouteCollection.html#method_match","d":"<p>Find the first route matching a given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::requestWithoutTrailingSlash","p":"Illuminate/Routing/CompiledRouteCollection.html#method_requestWithoutTrailingSlash","d":"<p>Get a cloned instance of the given request without any trailing slash on the URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::get","p":"Illuminate/Routing/CompiledRouteCollection.html#method_get","d":"<p>Get routes from the collection by method.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::hasNamedRoute","p":"Illuminate/Routing/CompiledRouteCollection.html#method_hasNamedRoute","d":"<p>Determine if the route collection contains a given named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::getByName","p":"Illuminate/Routing/CompiledRouteCollection.html#method_getByName","d":"<p>Get a route instance by its name.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::getByAction","p":"Illuminate/Routing/CompiledRouteCollection.html#method_getByAction","d":"<p>Get a route instance by its controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::getRoutes","p":"Illuminate/Routing/CompiledRouteCollection.html#method_getRoutes","d":"<p>Get all of the routes in the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::getRoutesByMethod","p":"Illuminate/Routing/CompiledRouteCollection.html#method_getRoutesByMethod","d":"<p>Get all of the routes keyed by their HTTP verb / method.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::getRoutesByName","p":"Illuminate/Routing/CompiledRouteCollection.html#method_getRoutesByName","d":"<p>Get all of the routes keyed by their name.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::newRoute","p":"Illuminate/Routing/CompiledRouteCollection.html#method_newRoute","d":"<p>Resolve an array of attributes to a Route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::setRouter","p":"Illuminate/Routing/CompiledRouteCollection.html#method_setRouter","d":"<p>Set the router instance on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\CompiledRouteCollection::setContainer","p":"Illuminate/Routing/CompiledRouteCollection.html#method_setContainer","d":"<p>Set the container instance on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::getStub","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::resolveStubPath","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::getDefaultNamespace","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::buildClass","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_buildClass","d":"<p>Build the class with the given name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::buildParentReplacements","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_buildParentReplacements","d":"<p>Build the replacements for a parent controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::buildModelReplacements","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_buildModelReplacements","d":"<p>Build the model replacement values.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::parseModel","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_parseModel","d":"<p>Get the fully-qualified model class name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::buildFormRequestReplacements","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_buildFormRequestReplacements","d":"<p>Build the model replacement values.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::generateFormRequests","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_generateFormRequests","d":"<p>Generate the form requests for the given model and classes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::getOptions","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_getOptions","d":"<p>Get the console command options.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\ControllerMakeCommand::afterPromptingForMissingArguments","p":"Illuminate/Routing/Console/ControllerMakeCommand.html#method_afterPromptingForMissingArguments","d":"<p>Interact further with the user if they were prompted for missing arguments.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\MiddlewareMakeCommand::getStub","p":"Illuminate/Routing/Console/MiddlewareMakeCommand.html#method_getStub","d":"<p>Get the stub file for the generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\MiddlewareMakeCommand::resolveStubPath","p":"Illuminate/Routing/Console/MiddlewareMakeCommand.html#method_resolveStubPath","d":"<p>Resolve the fully-qualified path to the stub.</p>"},{"t":"M","n":"Illuminate\\Routing\\Console\\MiddlewareMakeCommand::getDefaultNamespace","p":"Illuminate/Routing/Console/MiddlewareMakeCommand.html#method_getDefaultNamespace","d":"<p>Get the default namespace for the class.</p>"},{"t":"M","n":"Illuminate\\Routing\\Contracts\\CallableDispatcher::dispatch","p":"Illuminate/Routing/Contracts/CallableDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given callable.</p>"},{"t":"M","n":"Illuminate\\Routing\\Contracts\\ControllerDispatcher::dispatch","p":"Illuminate/Routing/Contracts/ControllerDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given controller and method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Contracts\\ControllerDispatcher::getMiddleware","p":"Illuminate/Routing/Contracts/ControllerDispatcher.html#method_getMiddleware","d":"<p>Get the middleware for the controller instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::middleware","p":"Illuminate/Routing/Controller.html#method_middleware","d":"<p>Register middleware on the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::getMiddleware","p":"Illuminate/Routing/Controller.html#method_getMiddleware","d":"<p>Get the middleware assigned to the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::callAction","p":"Illuminate/Routing/Controller.html#method_callAction","d":"<p>Execute an action on the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controller::__call","p":"Illuminate/Routing/Controller.html#method___call","d":"<p>Handle calls to missing methods on the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::__construct","p":"Illuminate/Routing/ControllerDispatcher.html#method___construct","d":"<p>Create a new controller dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::dispatch","p":"Illuminate/Routing/ControllerDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given controller and method.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::resolveParameters","p":"Illuminate/Routing/ControllerDispatcher.html#method_resolveParameters","d":"<p>Resolve the parameters for the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::getMiddleware","p":"Illuminate/Routing/ControllerDispatcher.html#method_getMiddleware","d":"<p>Get the middleware for the controller instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerDispatcher::methodExcludedByOptions","p":"Illuminate/Routing/ControllerDispatcher.html#method_methodExcludedByOptions","d":"<p>Determine if the given options exclude a particular method.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerMiddlewareOptions::__construct","p":"Illuminate/Routing/ControllerMiddlewareOptions.html#method___construct","d":"<p>Create a new middleware option instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerMiddlewareOptions::only","p":"Illuminate/Routing/ControllerMiddlewareOptions.html#method_only","d":"<p>Set the controller methods the middleware should apply to.</p>"},{"t":"M","n":"Illuminate\\Routing\\ControllerMiddlewareOptions::except","p":"Illuminate/Routing/ControllerMiddlewareOptions.html#method_except","d":"<p>Set the controller methods the middleware should exclude.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controllers\\HasMiddleware::middleware","p":"Illuminate/Routing/Controllers/HasMiddleware.html#method_middleware","d":"<p>Get the middleware that should be assigned to the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controllers\\Middleware::__construct","p":"Illuminate/Routing/Controllers/Middleware.html#method___construct","d":"<p>Create a new controller middleware definition.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controllers\\Middleware::only","p":"Illuminate/Routing/Controllers/Middleware.html#method_only","d":"<p>Specify the only controller methods the middleware should apply to.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controllers\\Middleware::except","p":"Illuminate/Routing/Controllers/Middleware.html#method_except","d":"<p>Specify the controller methods the middleware should not apply to.</p>"},{"t":"M","n":"Illuminate\\Routing\\CreatesRegularExpressionRouteConstraints::whereAlpha","p":"Illuminate/Routing/CreatesRegularExpressionRouteConstraints.html#method_whereAlpha","d":"<p>Specify that the given route parameters must be alphabetic.</p>"},{"t":"M","n":"Illuminate\\Routing\\CreatesRegularExpressionRouteConstraints::whereAlphaNumeric","p":"Illuminate/Routing/CreatesRegularExpressionRouteConstraints.html#method_whereAlphaNumeric","d":"<p>Specify that the given route parameters must be alphanumeric.</p>"},{"t":"M","n":"Illuminate\\Routing\\CreatesRegularExpressionRouteConstraints::whereNumber","p":"Illuminate/Routing/CreatesRegularExpressionRouteConstraints.html#method_whereNumber","d":"<p>Specify that the given route parameters must be numeric.</p>"},{"t":"M","n":"Illuminate\\Routing\\CreatesRegularExpressionRouteConstraints::whereUlid","p":"Illuminate/Routing/CreatesRegularExpressionRouteConstraints.html#method_whereUlid","d":"<p>Specify that the given route parameters must be ULIDs.</p>"},{"t":"M","n":"Illuminate\\Routing\\CreatesRegularExpressionRouteConstraints::whereUuid","p":"Illuminate/Routing/CreatesRegularExpressionRouteConstraints.html#method_whereUuid","d":"<p>Specify that the given route parameters must be UUIDs.</p>"},{"t":"M","n":"Illuminate\\Routing\\CreatesRegularExpressionRouteConstraints::whereIn","p":"Illuminate/Routing/CreatesRegularExpressionRouteConstraints.html#method_whereIn","d":"<p>Specify that the given route parameters must be one of the given values.</p>"},{"t":"M","n":"Illuminate\\Routing\\CreatesRegularExpressionRouteConstraints::assignExpressionToParameters","p":"Illuminate/Routing/CreatesRegularExpressionRouteConstraints.html#method_assignExpressionToParameters","d":"<p>Apply the given regular expression to the given parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\Events\\RouteMatched::__construct","p":"Illuminate/Routing/Events/RouteMatched.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Events\\Routing::__construct","p":"Illuminate/Routing/Events/Routing.html#method___construct","d":"<p>Create a new event instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Exceptions\\BackedEnumCaseNotFoundException::__construct","p":"Illuminate/Routing/Exceptions/BackedEnumCaseNotFoundException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Exceptions\\InvalidSignatureException::__construct","p":"Illuminate/Routing/Exceptions/InvalidSignatureException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Exceptions\\StreamedResponseException::__construct","p":"Illuminate/Routing/Exceptions/StreamedResponseException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Exceptions\\StreamedResponseException::render","p":"Illuminate/Routing/Exceptions/StreamedResponseException.html#method_render","d":"<p>Render the exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\Exceptions\\StreamedResponseException::getInnerException","p":"Illuminate/Routing/Exceptions/StreamedResponseException.html#method_getInnerException","d":"<p>Get the actual exception thrown during the stream.</p>"},{"t":"M","n":"Illuminate\\Routing\\Exceptions\\UrlGenerationException::forMissingParameters","p":"Illuminate/Routing/Exceptions/UrlGenerationException.html#method_forMissingParameters","d":"<p>Create a new exception for missing route parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\ImplicitRouteBinding::resolveForRoute","p":"Illuminate/Routing/ImplicitRouteBinding.html#method_resolveForRoute","d":"<p>Resolve the implicit route bindings for the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ImplicitRouteBinding::resolveBackedEnumsForRoute","p":"Illuminate/Routing/ImplicitRouteBinding.html#method_resolveBackedEnumsForRoute","d":"<p>Resolve the Backed Enums route bindings for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ImplicitRouteBinding::getParameterName","p":"Illuminate/Routing/ImplicitRouteBinding.html#method_getParameterName","d":"<p>Return the parameter name if it exists in the given parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\HostValidator::matches","p":"Illuminate/Routing/Matching/HostValidator.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\MethodValidator::matches","p":"Illuminate/Routing/Matching/MethodValidator.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\SchemeValidator::matches","p":"Illuminate/Routing/Matching/SchemeValidator.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\UriValidator::matches","p":"Illuminate/Routing/Matching/UriValidator.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\ValidatorInterface::matches","p":"Illuminate/Routing/Matching/ValidatorInterface.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\MiddlewareNameResolver::resolve","p":"Illuminate/Routing/MiddlewareNameResolver.html#method_resolve","d":"<p>Resolve the middleware name to a class name(s) preserving passed parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\MiddlewareNameResolver::parseMiddlewareGroup","p":"Illuminate/Routing/MiddlewareNameResolver.html#method_parseMiddlewareGroup","d":"<p>Parse the middleware group and format it for usage.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\SubstituteBindings::__construct","p":"Illuminate/Routing/Middleware/SubstituteBindings.html#method___construct","d":"<p>Create a new bindings substitutor.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\SubstituteBindings::handle","p":"Illuminate/Routing/Middleware/SubstituteBindings.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::__construct","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method___construct","d":"<p>Create a new request throttler.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::handle","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::handleRequestUsingNamedLimiter","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_handleRequestUsingNamedLimiter","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::handleRequest","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_handleRequest","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::resolveMaxAttempts","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_resolveMaxAttempts","d":"<p>Resolve the number of attempts if the user is authenticated or not.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::resolveRequestSignature","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_resolveRequestSignature","d":"<p>Resolve request signature.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::buildException","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_buildException","d":"<p>Create a 'too many attempts' exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::getTimeUntilNextRetry","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_getTimeUntilNextRetry","d":"<p>Get the number of seconds until the next retry.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::addHeaders","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_addHeaders","d":"<p>Add the limit header information to the given response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::getHeaders","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_getHeaders","d":"<p>Get the limit headers information.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequests::calculateRemainingAttempts","p":"Illuminate/Routing/Middleware/ThrottleRequests.html#method_calculateRemainingAttempts","d":"<p>Calculate the number of remaining attempts.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::__construct","p":"Illuminate/Routing/Middleware/ThrottleRequestsWithRedis.html#method___construct","d":"<p>Create a new request throttler.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::handleRequest","p":"Illuminate/Routing/Middleware/ThrottleRequestsWithRedis.html#method_handleRequest","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::tooManyAttempts","p":"Illuminate/Routing/Middleware/ThrottleRequestsWithRedis.html#method_tooManyAttempts","d":"<p>Determine if the given key has been &quot;accessed&quot; too many times.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::calculateRemainingAttempts","p":"Illuminate/Routing/Middleware/ThrottleRequestsWithRedis.html#method_calculateRemainingAttempts","d":"<p>Calculate the number of remaining attempts.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ThrottleRequestsWithRedis::getTimeUntilNextRetry","p":"Illuminate/Routing/Middleware/ThrottleRequestsWithRedis.html#method_getTimeUntilNextRetry","d":"<p>Get the number of seconds until the lock is released.</p>"},{"t":"M","n":"Illuminate\\Routing\\Middleware\\ValidateSignature::handle","p":"Illuminate/Routing/Middleware/ValidateSignature.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::__construct","p":"Illuminate/Routing/PendingResourceRegistration.html#method___construct","d":"<p>Create a new pending resource registration instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::only","p":"Illuminate/Routing/PendingResourceRegistration.html#method_only","d":"<p>Set the methods the controller should apply to.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::except","p":"Illuminate/Routing/PendingResourceRegistration.html#method_except","d":"<p>Set the methods the controller should exclude.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::names","p":"Illuminate/Routing/PendingResourceRegistration.html#method_names","d":"<p>Set the route names for controller actions.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::name","p":"Illuminate/Routing/PendingResourceRegistration.html#method_name","d":"<p>Set the route name for a controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::parameters","p":"Illuminate/Routing/PendingResourceRegistration.html#method_parameters","d":"<p>Override the route parameter names.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::parameter","p":"Illuminate/Routing/PendingResourceRegistration.html#method_parameter","d":"<p>Override a route parameter's name.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::middleware","p":"Illuminate/Routing/PendingResourceRegistration.html#method_middleware","d":"<p>Add middleware to the resource routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::withoutMiddleware","p":"Illuminate/Routing/PendingResourceRegistration.html#method_withoutMiddleware","d":"<p>Specify middleware that should be removed from the resource routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::where","p":"Illuminate/Routing/PendingResourceRegistration.html#method_where","d":"<p>Add &quot;where&quot; constraints to the resource routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::shallow","p":"Illuminate/Routing/PendingResourceRegistration.html#method_shallow","d":"<p>Indicate that the resource routes should have &quot;shallow&quot; nesting.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::missing","p":"Illuminate/Routing/PendingResourceRegistration.html#method_missing","d":"<p>Define the callable that should be invoked on a missing model exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::scoped","p":"Illuminate/Routing/PendingResourceRegistration.html#method_scoped","d":"<p>Indicate that the resource routes should be scoped using the given binding fields.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::withTrashed","p":"Illuminate/Routing/PendingResourceRegistration.html#method_withTrashed","d":"<p>Define which routes should allow &quot;trashed&quot; models to be retrieved when resolving implicit model bindings.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::register","p":"Illuminate/Routing/PendingResourceRegistration.html#method_register","d":"<p>Register the resource route.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingResourceRegistration::__destruct","p":"Illuminate/Routing/PendingResourceRegistration.html#method___destruct","d":"<p>Handle the object's destruction.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::__construct","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method___construct","d":"<p>Create a new pending singleton resource registration instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::only","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_only","d":"<p>Set the methods the controller should apply to.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::except","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_except","d":"<p>Set the methods the controller should exclude.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::creatable","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_creatable","d":"<p>Indicate that the resource should have creation and storage routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::destroyable","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_destroyable","d":"<p>Indicate that the resource should have a deletion route.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::names","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_names","d":"<p>Set the route names for controller actions.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::name","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_name","d":"<p>Set the route name for a controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::parameters","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_parameters","d":"<p>Override the route parameter names.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::parameter","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_parameter","d":"<p>Override a route parameter's name.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::middleware","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_middleware","d":"<p>Add middleware to the resource routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::withoutMiddleware","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_withoutMiddleware","d":"<p>Specify middleware that should be removed from the resource routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::where","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_where","d":"<p>Add &quot;where&quot; constraints to the resource routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::register","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method_register","d":"<p>Register the singleton resource route.</p>"},{"t":"M","n":"Illuminate\\Routing\\PendingSingletonResourceRegistration::__destruct","p":"Illuminate/Routing/PendingSingletonResourceRegistration.html#method___destruct","d":"<p>Handle the object's destruction.</p>"},{"t":"M","n":"Illuminate\\Routing\\Pipeline::handleCarry","p":"Illuminate/Routing/Pipeline.html#method_handleCarry","d":"<p>Handles the value returned from each pipe before passing it to the next.</p>"},{"t":"M","n":"Illuminate\\Routing\\Pipeline::handleException","p":"Illuminate/Routing/Pipeline.html#method_handleException","d":"<p>Handle the given exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\RedirectController::__invoke","p":"Illuminate/Routing/RedirectController.html#method___invoke","d":"<p>Invoke the controller method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::__construct","p":"Illuminate/Routing/Redirector.html#method___construct","d":"<p>Create a new Redirector instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::back","p":"Illuminate/Routing/Redirector.html#method_back","d":"<p>Create a new redirect response to the previous location.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::refresh","p":"Illuminate/Routing/Redirector.html#method_refresh","d":"<p>Create a new redirect response to the current URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::guest","p":"Illuminate/Routing/Redirector.html#method_guest","d":"<p>Create a new redirect response, while putting the current URL in the session.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::intended","p":"Illuminate/Routing/Redirector.html#method_intended","d":"<p>Create a new redirect response to the previously intended location.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::to","p":"Illuminate/Routing/Redirector.html#method_to","d":"<p>Create a new redirect response to the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::away","p":"Illuminate/Routing/Redirector.html#method_away","d":"<p>Create a new redirect response to an external URL (no validation).</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::secure","p":"Illuminate/Routing/Redirector.html#method_secure","d":"<p>Create a new redirect response to the given HTTPS path.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::route","p":"Illuminate/Routing/Redirector.html#method_route","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::signedRoute","p":"Illuminate/Routing/Redirector.html#method_signedRoute","d":"<p>Create a new redirect response to a signed named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::temporarySignedRoute","p":"Illuminate/Routing/Redirector.html#method_temporarySignedRoute","d":"<p>Create a new redirect response to a signed named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::action","p":"Illuminate/Routing/Redirector.html#method_action","d":"<p>Create a new redirect response to a controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::createRedirect","p":"Illuminate/Routing/Redirector.html#method_createRedirect","d":"<p>Create a new redirect response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::getUrlGenerator","p":"Illuminate/Routing/Redirector.html#method_getUrlGenerator","d":"<p>Get the URL generator instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::setSession","p":"Illuminate/Routing/Redirector.html#method_setSession","d":"<p>Set the active session store.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::getIntendedUrl","p":"Illuminate/Routing/Redirector.html#method_getIntendedUrl","d":"<p>Get the &quot;intended&quot; URL from the session.</p>"},{"t":"M","n":"Illuminate\\Routing\\Redirector::setIntendedUrl","p":"Illuminate/Routing/Redirector.html#method_setIntendedUrl","d":"<p>Set the &quot;intended&quot; URL in the session.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::__construct","p":"Illuminate/Routing/ResourceRegistrar.html#method___construct","d":"<p>Create a new resource registrar instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::register","p":"Illuminate/Routing/ResourceRegistrar.html#method_register","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::singleton","p":"Illuminate/Routing/ResourceRegistrar.html#method_singleton","d":"<p>Route a singleton resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::prefixedResource","p":"Illuminate/Routing/ResourceRegistrar.html#method_prefixedResource","d":"<p>Build a set of prefixed resource routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::prefixedSingleton","p":"Illuminate/Routing/ResourceRegistrar.html#method_prefixedSingleton","d":"<p>Build a set of prefixed singleton routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourcePrefix","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourcePrefix","d":"<p>Extract the resource and prefix from a resource name.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceMethods","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceMethods","d":"<p>Get the applicable resource methods.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceIndex","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceIndex","d":"<p>Add the index method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceCreate","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceCreate","d":"<p>Add the create method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceStore","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceStore","d":"<p>Add the store method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceShow","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceShow","d":"<p>Add the show method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceEdit","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceEdit","d":"<p>Add the edit method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceUpdate","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceUpdate","d":"<p>Add the update method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addResourceDestroy","p":"Illuminate/Routing/ResourceRegistrar.html#method_addResourceDestroy","d":"<p>Add the destroy method for a resourceful route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addSingletonCreate","p":"Illuminate/Routing/ResourceRegistrar.html#method_addSingletonCreate","d":"<p>Add the create method for a singleton route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addSingletonStore","p":"Illuminate/Routing/ResourceRegistrar.html#method_addSingletonStore","d":"<p>Add the store method for a singleton route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addSingletonShow","p":"Illuminate/Routing/ResourceRegistrar.html#method_addSingletonShow","d":"<p>Add the show method for a singleton route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addSingletonEdit","p":"Illuminate/Routing/ResourceRegistrar.html#method_addSingletonEdit","d":"<p>Add the edit method for a singleton route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addSingletonUpdate","p":"Illuminate/Routing/ResourceRegistrar.html#method_addSingletonUpdate","d":"<p>Add the update method for a singleton route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::addSingletonDestroy","p":"Illuminate/Routing/ResourceRegistrar.html#method_addSingletonDestroy","d":"<p>Add the destroy method for a singleton route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getShallowName","p":"Illuminate/Routing/ResourceRegistrar.html#method_getShallowName","d":"<p>Get the name for a given resource with shallowness applied when applicable.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::setResourceBindingFields","p":"Illuminate/Routing/ResourceRegistrar.html#method_setResourceBindingFields","d":"<p>Set the route's binding fields if the resource is scoped.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceUri","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceUri","d":"<p>Get the base resource URI for a given resource.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getNestedResourceUri","p":"Illuminate/Routing/ResourceRegistrar.html#method_getNestedResourceUri","d":"<p>Get the URI for a nested resource segment array.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceWildcard","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceWildcard","d":"<p>Format a resource parameter for usage.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceAction","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceAction","d":"<p>Get the action array for a resource route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getResourceRouteName","p":"Illuminate/Routing/ResourceRegistrar.html#method_getResourceRouteName","d":"<p>Get the name for a given resource.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::singularParameters","p":"Illuminate/Routing/ResourceRegistrar.html#method_singularParameters","d":"<p>Set or unset the unmapped global parameters to singular.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::getParameters","p":"Illuminate/Routing/ResourceRegistrar.html#method_getParameters","d":"<p>Get the global parameter map.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::setParameters","p":"Illuminate/Routing/ResourceRegistrar.html#method_setParameters","d":"<p>Set the global parameter mapping.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResourceRegistrar::verbs","p":"Illuminate/Routing/ResourceRegistrar.html#method_verbs","d":"<p>Get or set the action verbs used in the resource URIs.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::__construct","p":"Illuminate/Routing/ResponseFactory.html#method___construct","d":"<p>Create a new response factory instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::make","p":"Illuminate/Routing/ResponseFactory.html#method_make","d":"<p>Create a new response instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::noContent","p":"Illuminate/Routing/ResponseFactory.html#method_noContent","d":"<p>Create a new &quot;no content&quot; response.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::view","p":"Illuminate/Routing/ResponseFactory.html#method_view","d":"<p>Create a new response for a given view.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::json","p":"Illuminate/Routing/ResponseFactory.html#method_json","d":"<p>Create a new JSON response instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::jsonp","p":"Illuminate/Routing/ResponseFactory.html#method_jsonp","d":"<p>Create a new JSONP response instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::stream","p":"Illuminate/Routing/ResponseFactory.html#method_stream","d":"<p>Create a new streamed response instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::streamDownload","p":"Illuminate/Routing/ResponseFactory.html#method_streamDownload","d":"<p>Create a new streamed response instance as a file download.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::download","p":"Illuminate/Routing/ResponseFactory.html#method_download","d":"<p>Create a new file download response.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::fallbackName","p":"Illuminate/Routing/ResponseFactory.html#method_fallbackName","d":"<p>Convert the string to ASCII characters that are equivalent to the given name.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::file","p":"Illuminate/Routing/ResponseFactory.html#method_file","d":"<p>Return the raw contents of a binary file.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectTo","p":"Illuminate/Routing/ResponseFactory.html#method_redirectTo","d":"<p>Create a new redirect response to the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectToRoute","p":"Illuminate/Routing/ResponseFactory.html#method_redirectToRoute","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectToAction","p":"Illuminate/Routing/ResponseFactory.html#method_redirectToAction","d":"<p>Create a new redirect response to a controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectGuest","p":"Illuminate/Routing/ResponseFactory.html#method_redirectGuest","d":"<p>Create a new redirect response, while putting the current URL in the session.</p>"},{"t":"M","n":"Illuminate\\Routing\\ResponseFactory::redirectToIntended","p":"Illuminate/Routing/ResponseFactory.html#method_redirectToIntended","d":"<p>Create a new redirect response to the previously intended location.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::__construct","p":"Illuminate/Routing/Route.html#method___construct","d":"<p>Create a new Route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parseAction","p":"Illuminate/Routing/Route.html#method_parseAction","d":"<p>Parse the route action into a standard array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::run","p":"Illuminate/Routing/Route.html#method_run","d":"<p>Run the route action and return the response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::isControllerAction","p":"Illuminate/Routing/Route.html#method_isControllerAction","d":"<p>Checks whether the route's action is a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::runCallable","p":"Illuminate/Routing/Route.html#method_runCallable","d":"<p>Run the route action and return the response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::isSerializedClosure","p":"Illuminate/Routing/Route.html#method_isSerializedClosure","d":"<p>Determine if the route action is a serialized Closure.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::runController","p":"Illuminate/Routing/Route.html#method_runController","d":"<p>Run the route action and return the response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getController","p":"Illuminate/Routing/Route.html#method_getController","d":"<p>Get the controller instance for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getControllerClass","p":"Illuminate/Routing/Route.html#method_getControllerClass","d":"<p>Get the controller class used for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getControllerMethod","p":"Illuminate/Routing/Route.html#method_getControllerMethod","d":"<p>Get the controller method used for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parseControllerCallback","p":"Illuminate/Routing/Route.html#method_parseControllerCallback","d":"<p>Parse the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::flushController","p":"Illuminate/Routing/Route.html#method_flushController","d":"<p>Flush the cached container instance on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::matches","p":"Illuminate/Routing/Route.html#method_matches","d":"<p>Determine if the route matches a given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::compileRoute","p":"Illuminate/Routing/Route.html#method_compileRoute","d":"<p>Compile the route into a Symfony CompiledRoute instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::bind","p":"Illuminate/Routing/Route.html#method_bind","d":"<p>Bind the route to a given request for execution.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::hasParameters","p":"Illuminate/Routing/Route.html#method_hasParameters","d":"<p>Determine if the route has parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::hasParameter","p":"Illuminate/Routing/Route.html#method_hasParameter","d":"<p>Determine a given parameter exists from the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parameter","p":"Illuminate/Routing/Route.html#method_parameter","d":"<p>Get a given parameter from the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::originalParameter","p":"Illuminate/Routing/Route.html#method_originalParameter","d":"<p>Get original value of a given parameter from the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setParameter","p":"Illuminate/Routing/Route.html#method_setParameter","d":"<p>Set a parameter to the given value.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::forgetParameter","p":"Illuminate/Routing/Route.html#method_forgetParameter","d":"<p>Unset a parameter on the route if it is set.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parameters","p":"Illuminate/Routing/Route.html#method_parameters","d":"<p>Get the key / value list of parameters for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::originalParameters","p":"Illuminate/Routing/Route.html#method_originalParameters","d":"<p>Get the key / value list of original parameters for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parametersWithoutNulls","p":"Illuminate/Routing/Route.html#method_parametersWithoutNulls","d":"<p>Get the key / value list of parameters without null values.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parameterNames","p":"Illuminate/Routing/Route.html#method_parameterNames","d":"<p>Get all of the parameter names for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::compileParameterNames","p":"Illuminate/Routing/Route.html#method_compileParameterNames","d":"<p>Get the parameter names for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::signatureParameters","p":"Illuminate/Routing/Route.html#method_signatureParameters","d":"<p>Get the parameters that are listed in the route / controller signature.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::bindingFieldFor","p":"Illuminate/Routing/Route.html#method_bindingFieldFor","d":"<p>Get the binding field for the given parameter.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::bindingFields","p":"Illuminate/Routing/Route.html#method_bindingFields","d":"<p>Get the binding fields for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setBindingFields","p":"Illuminate/Routing/Route.html#method_setBindingFields","d":"<p>Set the binding fields for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parentOfParameter","p":"Illuminate/Routing/Route.html#method_parentOfParameter","d":"<p>Get the parent parameter of the given parameter.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::withTrashed","p":"Illuminate/Routing/Route.html#method_withTrashed","d":"<p>Allow &quot;trashed&quot; models to be retrieved when resolving implicit model bindings for this route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::allowsTrashedBindings","p":"Illuminate/Routing/Route.html#method_allowsTrashedBindings","d":"<p>Determines if the route allows &quot;trashed&quot; models to be retrieved when resolving implicit model bindings.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::defaults","p":"Illuminate/Routing/Route.html#method_defaults","d":"<p>Set a default value for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setDefaults","p":"Illuminate/Routing/Route.html#method_setDefaults","d":"<p>Set the default values for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::where","p":"Illuminate/Routing/Route.html#method_where","d":"<p>Set a regular expression requirement on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parseWhere","p":"Illuminate/Routing/Route.html#method_parseWhere","d":"<p>Parse arguments to the where method into an array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setWheres","p":"Illuminate/Routing/Route.html#method_setWheres","d":"<p>Set a list of regular expression requirements on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::fallback","p":"Illuminate/Routing/Route.html#method_fallback","d":"<p>Mark this route as a fallback route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setFallback","p":"Illuminate/Routing/Route.html#method_setFallback","d":"<p>Set the fallback value.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::methods","p":"Illuminate/Routing/Route.html#method_methods","d":"<p>Get the HTTP verbs the route responds to.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::httpOnly","p":"Illuminate/Routing/Route.html#method_httpOnly","d":"<p>Determine if the route only responds to HTTP requests.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::httpsOnly","p":"Illuminate/Routing/Route.html#method_httpsOnly","d":"<p>Determine if the route only responds to HTTPS requests.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::secure","p":"Illuminate/Routing/Route.html#method_secure","d":"<p>Determine if the route only responds to HTTPS requests.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::domain","p":"Illuminate/Routing/Route.html#method_domain","d":"<p>Get or set the domain for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getDomain","p":"Illuminate/Routing/Route.html#method_getDomain","d":"<p>Get the domain defined for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getPrefix","p":"Illuminate/Routing/Route.html#method_getPrefix","d":"<p>Get the prefix of the route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::prefix","p":"Illuminate/Routing/Route.html#method_prefix","d":"<p>Add a prefix to the route URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::updatePrefixOnAction","p":"Illuminate/Routing/Route.html#method_updatePrefixOnAction","d":"<p>Update the &quot;prefix&quot; attribute on the action array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::uri","p":"Illuminate/Routing/Route.html#method_uri","d":"<p>Get the URI associated with the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setUri","p":"Illuminate/Routing/Route.html#method_setUri","d":"<p>Set the URI that the route responds to.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::parseUri","p":"Illuminate/Routing/Route.html#method_parseUri","d":"<p>Parse the route URI and normalize / store any implicit binding fields.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getName","p":"Illuminate/Routing/Route.html#method_getName","d":"<p>Get the name of the route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::name","p":"Illuminate/Routing/Route.html#method_name","d":"<p>Add or change the route name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::named","p":"Illuminate/Routing/Route.html#method_named","d":"<p>Determine whether the route's name matches the given patterns.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::uses","p":"Illuminate/Routing/Route.html#method_uses","d":"<p>Set the handler for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::addGroupNamespaceToStringUses","p":"Illuminate/Routing/Route.html#method_addGroupNamespaceToStringUses","d":"<p>Parse a string based action for the &quot;uses&quot; fluent method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getActionName","p":"Illuminate/Routing/Route.html#method_getActionName","d":"<p>Get the action name for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getActionMethod","p":"Illuminate/Routing/Route.html#method_getActionMethod","d":"<p>Get the method name of the route action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getAction","p":"Illuminate/Routing/Route.html#method_getAction","d":"<p>Get the action array or one of its properties for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setAction","p":"Illuminate/Routing/Route.html#method_setAction","d":"<p>Set the action array for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getMissing","p":"Illuminate/Routing/Route.html#method_getMissing","d":"<p>Get the value of the action that should be taken on a missing model exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::missing","p":"Illuminate/Routing/Route.html#method_missing","d":"<p>Define the callable that should be invoked on a missing model exception.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::gatherMiddleware","p":"Illuminate/Routing/Route.html#method_gatherMiddleware","d":"<p>Get all middleware, including the ones from the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::middleware","p":"Illuminate/Routing/Route.html#method_middleware","d":"<p>Get or set the middlewares attached to the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::can","p":"Illuminate/Routing/Route.html#method_can","d":"<p>Specify that the &quot;Authorize&quot; / &quot;can&quot; middleware should be applied to the route with the given options.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::controllerMiddleware","p":"Illuminate/Routing/Route.html#method_controllerMiddleware","d":"<p>Get the middleware for the route's controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::staticallyProvidedControllerMiddleware","p":"Illuminate/Routing/Route.html#method_staticallyProvidedControllerMiddleware","d":"<p>Get the statically provided controller middleware for the given class and method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::withoutMiddleware","p":"Illuminate/Routing/Route.html#method_withoutMiddleware","d":"<p>Specify middleware that should be removed from the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::excludedMiddleware","p":"Illuminate/Routing/Route.html#method_excludedMiddleware","d":"<p>Get the middleware should be removed from the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::scopeBindings","p":"Illuminate/Routing/Route.html#method_scopeBindings","d":"<p>Indicate that the route should enforce scoping of multiple implicit Eloquent bindings.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::withoutScopedBindings","p":"Illuminate/Routing/Route.html#method_withoutScopedBindings","d":"<p>Indicate that the route should not enforce scoping of multiple implicit Eloquent bindings.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::enforcesScopedBindings","p":"Illuminate/Routing/Route.html#method_enforcesScopedBindings","d":"<p>Determine if the route should enforce scoping of multiple implicit Eloquent bindings.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::preventsScopedBindings","p":"Illuminate/Routing/Route.html#method_preventsScopedBindings","d":"<p>Determine if the route should prevent scoping of multiple implicit Eloquent bindings.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::block","p":"Illuminate/Routing/Route.html#method_block","d":"<p>Specify that the route should not allow concurrent requests from the same session.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::withoutBlocking","p":"Illuminate/Routing/Route.html#method_withoutBlocking","d":"<p>Specify that the route should allow concurrent requests from the same session.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::locksFor","p":"Illuminate/Routing/Route.html#method_locksFor","d":"<p>Get the maximum number of seconds the route's session lock should be held for.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::waitsFor","p":"Illuminate/Routing/Route.html#method_waitsFor","d":"<p>Get the maximum number of seconds to wait while attempting to acquire a session lock.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::controllerDispatcher","p":"Illuminate/Routing/Route.html#method_controllerDispatcher","d":"<p>Get the dispatcher for the route's controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getValidators","p":"Illuminate/Routing/Route.html#method_getValidators","d":"<p>Get the route validators for the instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::toSymfonyRoute","p":"Illuminate/Routing/Route.html#method_toSymfonyRoute","d":"<p>Convert the route to a Symfony route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getOptionalParameterNames","p":"Illuminate/Routing/Route.html#method_getOptionalParameterNames","d":"<p>Get the optional parameter names for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::getCompiled","p":"Illuminate/Routing/Route.html#method_getCompiled","d":"<p>Get the compiled version of the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setRouter","p":"Illuminate/Routing/Route.html#method_setRouter","d":"<p>Set the router instance on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::setContainer","p":"Illuminate/Routing/Route.html#method_setContainer","d":"<p>Set the container instance on the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::prepareForSerialization","p":"Illuminate/Routing/Route.html#method_prepareForSerialization","d":"<p>Prepare the route instance for serialization.</p>"},{"t":"M","n":"Illuminate\\Routing\\Route::__get","p":"Illuminate/Routing/Route.html#method___get","d":"<p>Dynamically access route parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::parse","p":"Illuminate/Routing/RouteAction.html#method_parse","d":"<p>Parse the given action into an array.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::missingAction","p":"Illuminate/Routing/RouteAction.html#method_missingAction","d":"<p>Get an action for a route that has no action.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::findCallable","p":"Illuminate/Routing/RouteAction.html#method_findCallable","d":"<p>Find the callable in an action array.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::makeInvokable","p":"Illuminate/Routing/RouteAction.html#method_makeInvokable","d":"<p>Make an action for an invokable controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteAction::containsSerializedClosure","p":"Illuminate/Routing/RouteAction.html#method_containsSerializedClosure","d":"<p>Determine if the given array actions contain a serialized Closure.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteBinding::forCallback","p":"Illuminate/Routing/RouteBinding.html#method_forCallback","d":"<p>Create a Route model binding for a given callback.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteBinding::createClassBinding","p":"Illuminate/Routing/RouteBinding.html#method_createClassBinding","d":"<p>Create a class based binding using the IoC container.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteBinding::forModel","p":"Illuminate/Routing/RouteBinding.html#method_forModel","d":"<p>Create a Route model binding for a model.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::add","p":"Illuminate/Routing/RouteCollection.html#method_add","d":"<p>Add a Route instance to the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::addToCollections","p":"Illuminate/Routing/RouteCollection.html#method_addToCollections","d":"<p>Add the given route to the arrays of routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::addLookups","p":"Illuminate/Routing/RouteCollection.html#method_addLookups","d":"<p>Add the route to any look-up tables if necessary.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::addToActionList","p":"Illuminate/Routing/RouteCollection.html#method_addToActionList","d":"<p>Add a route to the controller action dictionary.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::refreshNameLookups","p":"Illuminate/Routing/RouteCollection.html#method_refreshNameLookups","d":"<p>Refresh the name look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::refreshActionLookups","p":"Illuminate/Routing/RouteCollection.html#method_refreshActionLookups","d":"<p>Refresh the action look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::match","p":"Illuminate/Routing/RouteCollection.html#method_match","d":"<p>Find the first route matching a given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::get","p":"Illuminate/Routing/RouteCollection.html#method_get","d":"<p>Get routes from the collection by method.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::hasNamedRoute","p":"Illuminate/Routing/RouteCollection.html#method_hasNamedRoute","d":"<p>Determine if the route collection contains a given named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getByName","p":"Illuminate/Routing/RouteCollection.html#method_getByName","d":"<p>Get a route instance by its name.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getByAction","p":"Illuminate/Routing/RouteCollection.html#method_getByAction","d":"<p>Get a route instance by its controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getRoutes","p":"Illuminate/Routing/RouteCollection.html#method_getRoutes","d":"<p>Get all of the routes in the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getRoutesByMethod","p":"Illuminate/Routing/RouteCollection.html#method_getRoutesByMethod","d":"<p>Get all of the routes keyed by their HTTP verb / method.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::getRoutesByName","p":"Illuminate/Routing/RouteCollection.html#method_getRoutesByName","d":"<p>Get all of the routes keyed by their name.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::toSymfonyRouteCollection","p":"Illuminate/Routing/RouteCollection.html#method_toSymfonyRouteCollection","d":"<p>Convert the collection to a Symfony RouteCollection instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollection::toCompiledRouteCollection","p":"Illuminate/Routing/RouteCollection.html#method_toCompiledRouteCollection","d":"<p>Convert the collection to a CompiledRouteCollection instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::add","p":"Illuminate/Routing/RouteCollectionInterface.html#method_add","d":"<p>Add a Route instance to the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::refreshNameLookups","p":"Illuminate/Routing/RouteCollectionInterface.html#method_refreshNameLookups","d":"<p>Refresh the name look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::refreshActionLookups","p":"Illuminate/Routing/RouteCollectionInterface.html#method_refreshActionLookups","d":"<p>Refresh the action look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::match","p":"Illuminate/Routing/RouteCollectionInterface.html#method_match","d":"<p>Find the first route matching a given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::get","p":"Illuminate/Routing/RouteCollectionInterface.html#method_get","d":"<p>Get routes from the collection by method.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::hasNamedRoute","p":"Illuminate/Routing/RouteCollectionInterface.html#method_hasNamedRoute","d":"<p>Determine if the route collection contains a given named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getByName","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getByName","d":"<p>Get a route instance by its name.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getByAction","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getByAction","d":"<p>Get a route instance by its controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getRoutes","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getRoutes","d":"<p>Get all of the routes in the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getRoutesByMethod","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getRoutesByMethod","d":"<p>Get all of the routes keyed by their HTTP verb / method.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getRoutesByName","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getRoutesByName","d":"<p>Get all of the routes keyed by their name.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::resolveClassMethodDependencies","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_resolveClassMethodDependencies","d":"<p>Resolve the object method's type-hinted dependencies.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::resolveMethodDependencies","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_resolveMethodDependencies","d":"<p>Resolve the given method's type-hinted dependencies.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::transformDependency","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_transformDependency","d":"<p>Attempt to transform the given parameter into a class instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::alreadyInParameters","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_alreadyInParameters","d":"<p>Determine if an object of the given class is in a list of parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteDependencyResolverTrait::spliceIntoParameters","p":"Illuminate/Routing/RouteDependencyResolverTrait.html#method_spliceIntoParameters","d":"<p>Splice the given value into the parameter list.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteFileRegistrar::__construct","p":"Illuminate/Routing/RouteFileRegistrar.html#method___construct","d":"<p>Create a new route file registrar instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteFileRegistrar::register","p":"Illuminate/Routing/RouteFileRegistrar.html#method_register","d":"<p>Require the given routes file.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::merge","p":"Illuminate/Routing/RouteGroup.html#method_merge","d":"<p>Merge route groups into a new array.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::formatNamespace","p":"Illuminate/Routing/RouteGroup.html#method_formatNamespace","d":"<p>Format the namespace for the new group attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::formatPrefix","p":"Illuminate/Routing/RouteGroup.html#method_formatPrefix","d":"<p>Format the prefix for the new group attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::formatWhere","p":"Illuminate/Routing/RouteGroup.html#method_formatWhere","d":"<p>Format the &quot;wheres&quot; for the new group attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteGroup::formatAs","p":"Illuminate/Routing/RouteGroup.html#method_formatAs","d":"<p>Format the &quot;as&quot; clause of the new group attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::__construct","p":"Illuminate/Routing/RouteParameterBinder.html#method___construct","d":"<p>Create a new Route parameter binder instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::parameters","p":"Illuminate/Routing/RouteParameterBinder.html#method_parameters","d":"<p>Get the parameters for the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::bindPathParameters","p":"Illuminate/Routing/RouteParameterBinder.html#method_bindPathParameters","d":"<p>Get the parameter matches for the path portion of the URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::bindHostParameters","p":"Illuminate/Routing/RouteParameterBinder.html#method_bindHostParameters","d":"<p>Extract the parameter list from the host part of the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::matchToKeys","p":"Illuminate/Routing/RouteParameterBinder.html#method_matchToKeys","d":"<p>Combine a set of parameter matches with the route's keys.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteParameterBinder::replaceDefaults","p":"Illuminate/Routing/RouteParameterBinder.html#method_replaceDefaults","d":"<p>Replace null parameters with their defaults.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::__construct","p":"Illuminate/Routing/RouteRegistrar.html#method___construct","d":"<p>Create a new route registrar instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::attribute","p":"Illuminate/Routing/RouteRegistrar.html#method_attribute","d":"<p>Set the value for a given attribute.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::resource","p":"Illuminate/Routing/RouteRegistrar.html#method_resource","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::apiResource","p":"Illuminate/Routing/RouteRegistrar.html#method_apiResource","d":"<p>Route an API resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::singleton","p":"Illuminate/Routing/RouteRegistrar.html#method_singleton","d":"<p>Route a singleton resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::apiSingleton","p":"Illuminate/Routing/RouteRegistrar.html#method_apiSingleton","d":"<p>Route an API singleton resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::group","p":"Illuminate/Routing/RouteRegistrar.html#method_group","d":"<p>Create a route group with shared attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::match","p":"Illuminate/Routing/RouteRegistrar.html#method_match","d":"<p>Register a new route with the given verbs.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::registerRoute","p":"Illuminate/Routing/RouteRegistrar.html#method_registerRoute","d":"<p>Register a new route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::compileAction","p":"Illuminate/Routing/RouteRegistrar.html#method_compileAction","d":"<p>Compile the action into an array including the attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::__call","p":"Illuminate/Routing/RouteRegistrar.html#method___call","d":"<p>Dynamically handle calls into the route registrar.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::any","p":"Illuminate/Routing/RouteRegistrar.html#method_any","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::delete","p":"Illuminate/Routing/RouteRegistrar.html#method_delete","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::get","p":"Illuminate/Routing/RouteRegistrar.html#method_get","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::options","p":"Illuminate/Routing/RouteRegistrar.html#method_options","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::patch","p":"Illuminate/Routing/RouteRegistrar.html#method_patch","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::post","p":"Illuminate/Routing/RouteRegistrar.html#method_post","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::put","p":"Illuminate/Routing/RouteRegistrar.html#method_put","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::as","p":"Illuminate/Routing/RouteRegistrar.html#method_as","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::controller","p":"Illuminate/Routing/RouteRegistrar.html#method_controller","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::domain","p":"Illuminate/Routing/RouteRegistrar.html#method_domain","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::middleware","p":"Illuminate/Routing/RouteRegistrar.html#method_middleware","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::name","p":"Illuminate/Routing/RouteRegistrar.html#method_name","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::namespace","p":"Illuminate/Routing/RouteRegistrar.html#method_namespace","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::prefix","p":"Illuminate/Routing/RouteRegistrar.html#method_prefix","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::scopeBindings","p":"Illuminate/Routing/RouteRegistrar.html#method_scopeBindings","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::where","p":"Illuminate/Routing/RouteRegistrar.html#method_where","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::withoutMiddleware","p":"Illuminate/Routing/RouteRegistrar.html#method_withoutMiddleware","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteRegistrar::withoutScopedBindings","p":"Illuminate/Routing/RouteRegistrar.html#method_withoutScopedBindings","d":""},{"t":"M","n":"Illuminate\\Routing\\RouteSignatureParameters::fromAction","p":"Illuminate/Routing/RouteSignatureParameters.html#method_fromAction","d":"<p>Extract the route action's signature parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteSignatureParameters::fromClassMethodString","p":"Illuminate/Routing/RouteSignatureParameters.html#method_fromClassMethodString","d":"<p>Get the parameters for the given class / method by string.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUri::__construct","p":"Illuminate/Routing/RouteUri.html#method___construct","d":"<p>Create a new route URI instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUri::parse","p":"Illuminate/Routing/RouteUri.html#method_parse","d":"<p>Parse the given URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::__construct","p":"Illuminate/Routing/RouteUrlGenerator.html#method___construct","d":"<p>Create a new Route URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::to","p":"Illuminate/Routing/RouteUrlGenerator.html#method_to","d":"<p>Generate a URL for the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getRouteDomain","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getRouteDomain","d":"<p>Get the formatted domain for a given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::formatDomain","p":"Illuminate/Routing/RouteUrlGenerator.html#method_formatDomain","d":"<p>Format the domain and port for the route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getRouteScheme","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getRouteScheme","d":"<p>Get the scheme for the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::addPortToDomain","p":"Illuminate/Routing/RouteUrlGenerator.html#method_addPortToDomain","d":"<p>Add the port to the domain if necessary.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::replaceRootParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_replaceRootParameters","d":"<p>Replace the parameters on the root path.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::replaceRouteParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_replaceRouteParameters","d":"<p>Replace all of the wildcard parameters for a route path.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::replaceNamedParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_replaceNamedParameters","d":"<p>Replace all of the named parameters in the path.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::addQueryString","p":"Illuminate/Routing/RouteUrlGenerator.html#method_addQueryString","d":"<p>Add a query string to the URI.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getRouteQueryString","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getRouteQueryString","d":"<p>Get the query string for a given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getStringParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getStringParameters","d":"<p>Get the string parameters from a given list.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::getNumericParameters","p":"Illuminate/Routing/RouteUrlGenerator.html#method_getNumericParameters","d":"<p>Get the numeric parameters from a given list.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteUrlGenerator::defaults","p":"Illuminate/Routing/RouteUrlGenerator.html#method_defaults","d":"<p>Set the default named parameters used by the URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::__construct","p":"Illuminate/Routing/Router.html#method___construct","d":"<p>Create a new Router instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::get","p":"Illuminate/Routing/Router.html#method_get","d":"<p>Register a new GET route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::post","p":"Illuminate/Routing/Router.html#method_post","d":"<p>Register a new POST route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::put","p":"Illuminate/Routing/Router.html#method_put","d":"<p>Register a new PUT route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::patch","p":"Illuminate/Routing/Router.html#method_patch","d":"<p>Register a new PATCH route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::delete","p":"Illuminate/Routing/Router.html#method_delete","d":"<p>Register a new DELETE route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::options","p":"Illuminate/Routing/Router.html#method_options","d":"<p>Register a new OPTIONS route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::any","p":"Illuminate/Routing/Router.html#method_any","d":"<p>Register a new route responding to all verbs.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::fallback","p":"Illuminate/Routing/Router.html#method_fallback","d":"<p>Register a new Fallback route with the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::redirect","p":"Illuminate/Routing/Router.html#method_redirect","d":"<p>Create a redirect from one URI to another.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::permanentRedirect","p":"Illuminate/Routing/Router.html#method_permanentRedirect","d":"<p>Create a permanent redirect from one URI to another.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::view","p":"Illuminate/Routing/Router.html#method_view","d":"<p>Register a new route that returns a view.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::match","p":"Illuminate/Routing/Router.html#method_match","d":"<p>Register a new route with the given verbs.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resources","p":"Illuminate/Routing/Router.html#method_resources","d":"<p>Register an array of resource controllers.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resource","p":"Illuminate/Routing/Router.html#method_resource","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::apiResources","p":"Illuminate/Routing/Router.html#method_apiResources","d":"<p>Register an array of API resource controllers.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::apiResource","p":"Illuminate/Routing/Router.html#method_apiResource","d":"<p>Route an API resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::singletons","p":"Illuminate/Routing/Router.html#method_singletons","d":"<p>Register an array of singleton resource controllers.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::singleton","p":"Illuminate/Routing/Router.html#method_singleton","d":"<p>Route a singleton resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::apiSingletons","p":"Illuminate/Routing/Router.html#method_apiSingletons","d":"<p>Register an array of API singleton resource controllers.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::apiSingleton","p":"Illuminate/Routing/Router.html#method_apiSingleton","d":"<p>Route an API singleton resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::group","p":"Illuminate/Routing/Router.html#method_group","d":"<p>Create a route group with shared attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::updateGroupStack","p":"Illuminate/Routing/Router.html#method_updateGroupStack","d":"<p>Update the group stack with the given attributes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::mergeWithLastGroup","p":"Illuminate/Routing/Router.html#method_mergeWithLastGroup","d":"<p>Merge the given array with the last group stack.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::loadRoutes","p":"Illuminate/Routing/Router.html#method_loadRoutes","d":"<p>Load the provided routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getLastGroupPrefix","p":"Illuminate/Routing/Router.html#method_getLastGroupPrefix","d":"<p>Get the prefix from the last group on the stack.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::addRoute","p":"Illuminate/Routing/Router.html#method_addRoute","d":"<p>Add a route to the underlying route collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::createRoute","p":"Illuminate/Routing/Router.html#method_createRoute","d":"<p>Create a new route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::actionReferencesController","p":"Illuminate/Routing/Router.html#method_actionReferencesController","d":"<p>Determine if the action is routing to a controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::convertToControllerAction","p":"Illuminate/Routing/Router.html#method_convertToControllerAction","d":"<p>Add a controller based route action to the action array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prependGroupNamespace","p":"Illuminate/Routing/Router.html#method_prependGroupNamespace","d":"<p>Prepend the last group namespace onto the use clause.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prependGroupController","p":"Illuminate/Routing/Router.html#method_prependGroupController","d":"<p>Prepend the last group controller onto the use clause.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::newRoute","p":"Illuminate/Routing/Router.html#method_newRoute","d":"<p>Create a new Route object.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prefix","p":"Illuminate/Routing/Router.html#method_prefix","d":"<p>Prefix the given URI with the last prefix.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::addWhereClausesToRoute","p":"Illuminate/Routing/Router.html#method_addWhereClausesToRoute","d":"<p>Add the necessary where clauses to the route based on its initial registration.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::mergeGroupAttributesIntoRoute","p":"Illuminate/Routing/Router.html#method_mergeGroupAttributesIntoRoute","d":"<p>Merge the group stack with the controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::respondWithRoute","p":"Illuminate/Routing/Router.html#method_respondWithRoute","d":"<p>Return the response returned by the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::dispatch","p":"Illuminate/Routing/Router.html#method_dispatch","d":"<p>Dispatch the request to the application.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::dispatchToRoute","p":"Illuminate/Routing/Router.html#method_dispatchToRoute","d":"<p>Dispatch the request to a route and return the response.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::findRoute","p":"Illuminate/Routing/Router.html#method_findRoute","d":"<p>Find the route matching a given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::runRoute","p":"Illuminate/Routing/Router.html#method_runRoute","d":"<p>Return the response for the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::runRouteWithinStack","p":"Illuminate/Routing/Router.html#method_runRouteWithinStack","d":"<p>Run the given route within a Stack &quot;onion&quot; instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::gatherRouteMiddleware","p":"Illuminate/Routing/Router.html#method_gatherRouteMiddleware","d":"<p>Gather the middleware for the given route with resolved class names.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resolveMiddleware","p":"Illuminate/Routing/Router.html#method_resolveMiddleware","d":"<p>Resolve a flat array of middleware classes from the provided array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::sortMiddleware","p":"Illuminate/Routing/Router.html#method_sortMiddleware","d":"<p>Sort the given middleware by priority.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prepareResponse","p":"Illuminate/Routing/Router.html#method_prepareResponse","d":"<p>Create a response instance from the given value.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::toResponse","p":"Illuminate/Routing/Router.html#method_toResponse","d":"<p>Static version of prepareResponse.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::substituteBindings","p":"Illuminate/Routing/Router.html#method_substituteBindings","d":"<p>Substitute the route bindings onto the route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::substituteImplicitBindings","p":"Illuminate/Routing/Router.html#method_substituteImplicitBindings","d":"<p>Substitute the implicit route bindings for the given route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::performBinding","p":"Illuminate/Routing/Router.html#method_performBinding","d":"<p>Call the binding callback for the given key.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::matched","p":"Illuminate/Routing/Router.html#method_matched","d":"<p>Register a route matched event listener.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getMiddleware","p":"Illuminate/Routing/Router.html#method_getMiddleware","d":"<p>Get all of the defined middleware short-hand names.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::aliasMiddleware","p":"Illuminate/Routing/Router.html#method_aliasMiddleware","d":"<p>Register a short-hand name for a middleware.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::hasMiddlewareGroup","p":"Illuminate/Routing/Router.html#method_hasMiddlewareGroup","d":"<p>Check if a middlewareGroup with the given name exists.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getMiddlewareGroups","p":"Illuminate/Routing/Router.html#method_getMiddlewareGroups","d":"<p>Get all of the defined middleware groups.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::middlewareGroup","p":"Illuminate/Routing/Router.html#method_middlewareGroup","d":"<p>Register a group of middleware.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::prependMiddlewareToGroup","p":"Illuminate/Routing/Router.html#method_prependMiddlewareToGroup","d":"<p>Add a middleware to the beginning of a middleware group.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::pushMiddlewareToGroup","p":"Illuminate/Routing/Router.html#method_pushMiddlewareToGroup","d":"<p>Add a middleware to the end of a middleware group.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::removeMiddlewareFromGroup","p":"Illuminate/Routing/Router.html#method_removeMiddlewareFromGroup","d":"<p>Remove the given middleware from the specified group.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::flushMiddlewareGroups","p":"Illuminate/Routing/Router.html#method_flushMiddlewareGroups","d":"<p>Flush the router's middleware groups.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::bind","p":"Illuminate/Routing/Router.html#method_bind","d":"<p>Add a new route parameter binder.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::model","p":"Illuminate/Routing/Router.html#method_model","d":"<p>Register a model binder for a wildcard.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getBindingCallback","p":"Illuminate/Routing/Router.html#method_getBindingCallback","d":"<p>Get the binding callback for a given binding.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getPatterns","p":"Illuminate/Routing/Router.html#method_getPatterns","d":"<p>Get the global &quot;where&quot; patterns.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::pattern","p":"Illuminate/Routing/Router.html#method_pattern","d":"<p>Set a global where pattern on all routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::patterns","p":"Illuminate/Routing/Router.html#method_patterns","d":"<p>Set a group of global where patterns on all routes.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::hasGroupStack","p":"Illuminate/Routing/Router.html#method_hasGroupStack","d":"<p>Determine if the router currently has a group stack.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getGroupStack","p":"Illuminate/Routing/Router.html#method_getGroupStack","d":"<p>Get the current group stack for the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::input","p":"Illuminate/Routing/Router.html#method_input","d":"<p>Get a route parameter for the current route.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getCurrentRequest","p":"Illuminate/Routing/Router.html#method_getCurrentRequest","d":"<p>Get the request currently being dispatched.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getCurrentRoute","p":"Illuminate/Routing/Router.html#method_getCurrentRoute","d":"<p>Get the currently dispatched route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::current","p":"Illuminate/Routing/Router.html#method_current","d":"<p>Get the currently dispatched route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::has","p":"Illuminate/Routing/Router.html#method_has","d":"<p>Check if a route with the given name exists.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::currentRouteName","p":"Illuminate/Routing/Router.html#method_currentRouteName","d":"<p>Get the current route name.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::is","p":"Illuminate/Routing/Router.html#method_is","d":"<p>Alias for the &quot;currentRouteNamed&quot; method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::currentRouteNamed","p":"Illuminate/Routing/Router.html#method_currentRouteNamed","d":"<p>Determine if the current route matches a pattern.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::currentRouteAction","p":"Illuminate/Routing/Router.html#method_currentRouteAction","d":"<p>Get the current route action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::uses","p":"Illuminate/Routing/Router.html#method_uses","d":"<p>Alias for the &quot;currentRouteUses&quot; method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::currentRouteUses","p":"Illuminate/Routing/Router.html#method_currentRouteUses","d":"<p>Determine if the current route action matches a given action.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::singularResourceParameters","p":"Illuminate/Routing/Router.html#method_singularResourceParameters","d":"<p>Set the unmapped global resource parameters to singular.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resourceParameters","p":"Illuminate/Routing/Router.html#method_resourceParameters","d":"<p>Set the global resource parameter mapping.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::resourceVerbs","p":"Illuminate/Routing/Router.html#method_resourceVerbs","d":"<p>Get or set the verbs used in the resource URIs.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::getRoutes","p":"Illuminate/Routing/Router.html#method_getRoutes","d":"<p>Get the underlying route collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::setRoutes","p":"Illuminate/Routing/Router.html#method_setRoutes","d":"<p>Set the route collection instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::setCompiledRoutes","p":"Illuminate/Routing/Router.html#method_setCompiledRoutes","d":"<p>Set the compiled route collection instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::uniqueMiddleware","p":"Illuminate/Routing/Router.html#method_uniqueMiddleware","d":"<p>Remove any duplicate middleware from the given array.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::setContainer","p":"Illuminate/Routing/Router.html#method_setContainer","d":"<p>Set the container instance used by the router.</p>"},{"t":"M","n":"Illuminate\\Routing\\Router::__call","p":"Illuminate/Routing/Router.html#method___call","d":"<p>Dynamically handle calls into the router instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::register","p":"Illuminate/Routing/RoutingServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerRouter","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerRouter","d":"<p>Register the router instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerUrlGenerator","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerUrlGenerator","d":"<p>Register the URL generator service.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::requestRebinder","p":"Illuminate/Routing/RoutingServiceProvider.html#method_requestRebinder","d":"<p>Get the URL generator request rebinder.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerRedirector","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerRedirector","d":"<p>Register the Redirector service.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerPsrRequest","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerPsrRequest","d":"<p>Register a binding for the PSR-7 request implementation.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerPsrResponse","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerPsrResponse","d":"<p>Register a binding for the PSR-7 response implementation.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerResponseFactory","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerResponseFactory","d":"<p>Register the response factory implementation.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerCallableDispatcher","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerCallableDispatcher","d":"<p>Register the callable dispatcher.</p>"},{"t":"M","n":"Illuminate\\Routing\\RoutingServiceProvider::registerControllerDispatcher","p":"Illuminate/Routing/RoutingServiceProvider.html#method_registerControllerDispatcher","d":"<p>Register the controller dispatcher.</p>"},{"t":"M","n":"Illuminate\\Routing\\SortedMiddleware::__construct","p":"Illuminate/Routing/SortedMiddleware.html#method___construct","d":"<p>Create a new Sorted Middleware container.</p>"},{"t":"M","n":"Illuminate\\Routing\\SortedMiddleware::sortMiddleware","p":"Illuminate/Routing/SortedMiddleware.html#method_sortMiddleware","d":"<p>Sort the middlewares by the given priority map.</p>"},{"t":"M","n":"Illuminate\\Routing\\SortedMiddleware::priorityMapIndex","p":"Illuminate/Routing/SortedMiddleware.html#method_priorityMapIndex","d":"<p>Calculate the priority map index of the middleware.</p>"},{"t":"M","n":"Illuminate\\Routing\\SortedMiddleware::middlewareNames","p":"Illuminate/Routing/SortedMiddleware.html#method_middlewareNames","d":"<p>Resolve the middleware names to look for in the priority array.</p>"},{"t":"M","n":"Illuminate\\Routing\\SortedMiddleware::moveMiddleware","p":"Illuminate/Routing/SortedMiddleware.html#method_moveMiddleware","d":"<p>Splice a middleware into a new position and remove the old entry.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::__construct","p":"Illuminate/Routing/UrlGenerator.html#method___construct","d":"<p>Create a new URL Generator instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::full","p":"Illuminate/Routing/UrlGenerator.html#method_full","d":"<p>Get the full URL for the current request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::current","p":"Illuminate/Routing/UrlGenerator.html#method_current","d":"<p>Get the current URL for the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::previous","p":"Illuminate/Routing/UrlGenerator.html#method_previous","d":"<p>Get the URL for the previous request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::previousPath","p":"Illuminate/Routing/UrlGenerator.html#method_previousPath","d":"<p>Get the previous path info for the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::getPreviousUrlFromSession","p":"Illuminate/Routing/UrlGenerator.html#method_getPreviousUrlFromSession","d":"<p>Get the previous URL from the session if possible.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::to","p":"Illuminate/Routing/UrlGenerator.html#method_to","d":"<p>Generate an absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::secure","p":"Illuminate/Routing/UrlGenerator.html#method_secure","d":"<p>Generate a secure, absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::asset","p":"Illuminate/Routing/UrlGenerator.html#method_asset","d":"<p>Generate the URL to an application asset.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::secureAsset","p":"Illuminate/Routing/UrlGenerator.html#method_secureAsset","d":"<p>Generate the URL to a secure asset.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::assetFrom","p":"Illuminate/Routing/UrlGenerator.html#method_assetFrom","d":"<p>Generate the URL to an asset from a custom root domain such as CDN, etc.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::removeIndex","p":"Illuminate/Routing/UrlGenerator.html#method_removeIndex","d":"<p>Remove the index.php file from a path.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatScheme","p":"Illuminate/Routing/UrlGenerator.html#method_formatScheme","d":"<p>Get the default scheme for a raw URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::signedRoute","p":"Illuminate/Routing/UrlGenerator.html#method_signedRoute","d":"<p>Create a signed route URL for a named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::ensureSignedRouteParametersAreNotReserved","p":"Illuminate/Routing/UrlGenerator.html#method_ensureSignedRouteParametersAreNotReserved","d":"<p>Ensure the given signed route parameters are not reserved.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::temporarySignedRoute","p":"Illuminate/Routing/UrlGenerator.html#method_temporarySignedRoute","d":"<p>Create a temporary signed route URL for a named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::hasValidSignature","p":"Illuminate/Routing/UrlGenerator.html#method_hasValidSignature","d":"<p>Determine if the given request has a valid signature.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::hasValidRelativeSignature","p":"Illuminate/Routing/UrlGenerator.html#method_hasValidRelativeSignature","d":"<p>Determine if the given request has a valid signature for a relative URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::hasCorrectSignature","p":"Illuminate/Routing/UrlGenerator.html#method_hasCorrectSignature","d":"<p>Determine if the signature from the given request matches the URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::signatureHasNotExpired","p":"Illuminate/Routing/UrlGenerator.html#method_signatureHasNotExpired","d":"<p>Determine if the expires timestamp from the given request is not from the past.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::route","p":"Illuminate/Routing/UrlGenerator.html#method_route","d":"<p>Get the URL to a named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::toRoute","p":"Illuminate/Routing/UrlGenerator.html#method_toRoute","d":"<p>Get the URL for a given route instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::action","p":"Illuminate/Routing/UrlGenerator.html#method_action","d":"<p>Get the URL to a controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatAction","p":"Illuminate/Routing/UrlGenerator.html#method_formatAction","d":"<p>Format the given controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatParameters","p":"Illuminate/Routing/UrlGenerator.html#method_formatParameters","d":"<p>Format the array of URL parameters.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::extractQueryString","p":"Illuminate/Routing/UrlGenerator.html#method_extractQueryString","d":"<p>Extract the query string from the given path.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatRoot","p":"Illuminate/Routing/UrlGenerator.html#method_formatRoot","d":"<p>Get the base URL for the request.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::format","p":"Illuminate/Routing/UrlGenerator.html#method_format","d":"<p>Format the given URL segments into a single URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::isValidUrl","p":"Illuminate/Routing/UrlGenerator.html#method_isValidUrl","d":"<p>Determine if the given path is a valid URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::routeUrl","p":"Illuminate/Routing/UrlGenerator.html#method_routeUrl","d":"<p>Get the Route URL generator instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::defaults","p":"Illuminate/Routing/UrlGenerator.html#method_defaults","d":"<p>Set the default named parameters used by the URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::getDefaultParameters","p":"Illuminate/Routing/UrlGenerator.html#method_getDefaultParameters","d":"<p>Get the default named parameters used by the URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::forceScheme","p":"Illuminate/Routing/UrlGenerator.html#method_forceScheme","d":"<p>Force the scheme for URLs.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::forceRootUrl","p":"Illuminate/Routing/UrlGenerator.html#method_forceRootUrl","d":"<p>Set the forced root URL.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatHostUsing","p":"Illuminate/Routing/UrlGenerator.html#method_formatHostUsing","d":"<p>Set a callback to be used to format the host of generated URLs.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::formatPathUsing","p":"Illuminate/Routing/UrlGenerator.html#method_formatPathUsing","d":"<p>Set a callback to be used to format the path of generated URLs.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::pathFormatter","p":"Illuminate/Routing/UrlGenerator.html#method_pathFormatter","d":"<p>Get the path formatter being used by the URL generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::getRequest","p":"Illuminate/Routing/UrlGenerator.html#method_getRequest","d":"<p>Get the request instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setRequest","p":"Illuminate/Routing/UrlGenerator.html#method_setRequest","d":"<p>Set the current request instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setRoutes","p":"Illuminate/Routing/UrlGenerator.html#method_setRoutes","d":"<p>Set the route collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::getSession","p":"Illuminate/Routing/UrlGenerator.html#method_getSession","d":"<p>Get the session implementation from the resolver.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setSessionResolver","p":"Illuminate/Routing/UrlGenerator.html#method_setSessionResolver","d":"<p>Set the session resolver for the generator.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setKeyResolver","p":"Illuminate/Routing/UrlGenerator.html#method_setKeyResolver","d":"<p>Set the encryption key resolver.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::withKeyResolver","p":"Illuminate/Routing/UrlGenerator.html#method_withKeyResolver","d":"<p>Clone a new instance of the URL generator with a different encryption key resolver.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::getRootControllerNamespace","p":"Illuminate/Routing/UrlGenerator.html#method_getRootControllerNamespace","d":"<p>Get the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Routing\\UrlGenerator::setRootControllerNamespace","p":"Illuminate/Routing/UrlGenerator.html#method_setRootControllerNamespace","d":"<p>Set the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Routing\\ViewController::__construct","p":"Illuminate/Routing/ViewController.html#method___construct","d":"<p>Create a new controller instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\ViewController::__invoke","p":"Illuminate/Routing/ViewController.html#method___invoke","d":"<p>Invoke the controller method.</p>"},{"t":"M","n":"Illuminate\\Routing\\ViewController::callAction","p":"Illuminate/Routing/ViewController.html#method_callAction","d":"<p>Execute an action on the controller.</p>"},{"t":"M","n":"Illuminate\\Session\\ArraySessionHandler::__construct","p":"Illuminate/Session/ArraySessionHandler.html#method___construct","d":"<p>Create a new array driven handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\ArraySessionHandler::open","p":"Illuminate/Session/ArraySessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\ArraySessionHandler::close","p":"Illuminate/Session/ArraySessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\ArraySessionHandler::read","p":"Illuminate/Session/ArraySessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\ArraySessionHandler::write","p":"Illuminate/Session/ArraySessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\ArraySessionHandler::destroy","p":"Illuminate/Session/ArraySessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\ArraySessionHandler::gc","p":"Illuminate/Session/ArraySessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\ArraySessionHandler::calculateExpiration","p":"Illuminate/Session/ArraySessionHandler.html#method_calculateExpiration","d":"<p>Get the expiration time of the session.</p>"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::__construct","p":"Illuminate/Session/CacheBasedSessionHandler.html#method___construct","d":"<p>Create a new cache driven handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::open","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::close","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::read","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::write","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::destroy","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::gc","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CacheBasedSessionHandler::getCache","p":"Illuminate/Session/CacheBasedSessionHandler.html#method_getCache","d":"<p>Get the underlying cache repository.</p>"},{"t":"M","n":"Illuminate\\Session\\Console\\SessionTableCommand::__construct","p":"Illuminate/Session/Console/SessionTableCommand.html#method___construct","d":"<p>Create a new session table command instance.</p>"},{"t":"M","n":"Illuminate\\Session\\Console\\SessionTableCommand::handle","p":"Illuminate/Session/Console/SessionTableCommand.html#method_handle","d":"<p>Execute the console command.</p>"},{"t":"M","n":"Illuminate\\Session\\Console\\SessionTableCommand::createBaseMigration","p":"Illuminate/Session/Console/SessionTableCommand.html#method_createBaseMigration","d":"<p>Create a base migration file for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::__construct","p":"Illuminate/Session/CookieSessionHandler.html#method___construct","d":"<p>Create a new cookie driven handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::open","p":"Illuminate/Session/CookieSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::close","p":"Illuminate/Session/CookieSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::read","p":"Illuminate/Session/CookieSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::write","p":"Illuminate/Session/CookieSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::destroy","p":"Illuminate/Session/CookieSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::gc","p":"Illuminate/Session/CookieSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\CookieSessionHandler::setRequest","p":"Illuminate/Session/CookieSessionHandler.html#method_setRequest","d":"<p>Set the request instance.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::__construct","p":"Illuminate/Session/DatabaseSessionHandler.html#method___construct","d":"<p>Create a new database session handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::open","p":"Illuminate/Session/DatabaseSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::close","p":"Illuminate/Session/DatabaseSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::read","p":"Illuminate/Session/DatabaseSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::expired","p":"Illuminate/Session/DatabaseSessionHandler.html#method_expired","d":"<p>Determine if the session is expired.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::write","p":"Illuminate/Session/DatabaseSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::performInsert","p":"Illuminate/Session/DatabaseSessionHandler.html#method_performInsert","d":"<p>Perform an insert operation on the session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::performUpdate","p":"Illuminate/Session/DatabaseSessionHandler.html#method_performUpdate","d":"<p>Perform an update operation on the session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::getDefaultPayload","p":"Illuminate/Session/DatabaseSessionHandler.html#method_getDefaultPayload","d":"<p>Get the default payload for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::addUserInformation","p":"Illuminate/Session/DatabaseSessionHandler.html#method_addUserInformation","d":"<p>Add the user information to the session payload.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::userId","p":"Illuminate/Session/DatabaseSessionHandler.html#method_userId","d":"<p>Get the currently authenticated user's ID.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::addRequestInformation","p":"Illuminate/Session/DatabaseSessionHandler.html#method_addRequestInformation","d":"<p>Add the request information to the session payload.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::ipAddress","p":"Illuminate/Session/DatabaseSessionHandler.html#method_ipAddress","d":"<p>Get the IP address for the current request.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::userAgent","p":"Illuminate/Session/DatabaseSessionHandler.html#method_userAgent","d":"<p>Get the user agent for the current request.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::destroy","p":"Illuminate/Session/DatabaseSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::gc","p":"Illuminate/Session/DatabaseSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::getQuery","p":"Illuminate/Session/DatabaseSessionHandler.html#method_getQuery","d":"<p>Get a fresh query builder instance for the table.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::setContainer","p":"Illuminate/Session/DatabaseSessionHandler.html#method_setContainer","d":"<p>Set the application instance used by the handler.</p>"},{"t":"M","n":"Illuminate\\Session\\DatabaseSessionHandler::setExists","p":"Illuminate/Session/DatabaseSessionHandler.html#method_setExists","d":"<p>Set the existence state for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\EncryptedStore::__construct","p":"Illuminate/Session/EncryptedStore.html#method___construct","d":"<p>Create a new session instance.</p>"},{"t":"M","n":"Illuminate\\Session\\EncryptedStore::prepareForUnserialize","p":"Illuminate/Session/EncryptedStore.html#method_prepareForUnserialize","d":"<p>Prepare the raw string data from the session for unserialization.</p>"},{"t":"M","n":"Illuminate\\Session\\EncryptedStore::prepareForStorage","p":"Illuminate/Session/EncryptedStore.html#method_prepareForStorage","d":"<p>Prepare the serialized session data for storage.</p>"},{"t":"M","n":"Illuminate\\Session\\EncryptedStore::getEncrypter","p":"Illuminate/Session/EncryptedStore.html#method_getEncrypter","d":"<p>Get the encrypter instance.</p>"},{"t":"M","n":"Illuminate\\Session\\ExistenceAwareInterface::setExists","p":"Illuminate/Session/ExistenceAwareInterface.html#method_setExists","d":"<p>Set the existence state for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::__construct","p":"Illuminate/Session/FileSessionHandler.html#method___construct","d":"<p>Create a new file driven handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::open","p":"Illuminate/Session/FileSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::close","p":"Illuminate/Session/FileSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::read","p":"Illuminate/Session/FileSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::write","p":"Illuminate/Session/FileSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::destroy","p":"Illuminate/Session/FileSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\FileSessionHandler::gc","p":"Illuminate/Session/FileSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::__construct","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method___construct","d":"<p>Create a new middleware instance.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::handle","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::storePasswordHashInSession","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method_storePasswordHashInSession","d":"<p>Store the user's current password hash in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::logout","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\AuthenticateSession::guard","p":"Illuminate/Session/Middleware/AuthenticateSession.html#method_guard","d":"<p>Get the guard instance that should be used by the middleware.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::__construct","p":"Illuminate/Session/Middleware/StartSession.html#method___construct","d":"<p>Create a new session middleware.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::handle","p":"Illuminate/Session/Middleware/StartSession.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::handleRequestWhileBlocking","p":"Illuminate/Session/Middleware/StartSession.html#method_handleRequestWhileBlocking","d":"<p>Handle the given request within session state.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::handleStatefulRequest","p":"Illuminate/Session/Middleware/StartSession.html#method_handleStatefulRequest","d":"<p>Handle the given request within session state.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::startSession","p":"Illuminate/Session/Middleware/StartSession.html#method_startSession","d":"<p>Start the session for the given request.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::getSession","p":"Illuminate/Session/Middleware/StartSession.html#method_getSession","d":"<p>Get the session implementation from the manager.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::collectGarbage","p":"Illuminate/Session/Middleware/StartSession.html#method_collectGarbage","d":"<p>Remove the garbage from the session if necessary.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::configHitsLottery","p":"Illuminate/Session/Middleware/StartSession.html#method_configHitsLottery","d":"<p>Determine if the configuration odds hit the lottery.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::storeCurrentUrl","p":"Illuminate/Session/Middleware/StartSession.html#method_storeCurrentUrl","d":"<p>Store the current URL for the request if necessary.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::addCookieToResponse","p":"Illuminate/Session/Middleware/StartSession.html#method_addCookieToResponse","d":"<p>Add the session cookie to the application response.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::saveSession","p":"Illuminate/Session/Middleware/StartSession.html#method_saveSession","d":"<p>Save the session data to storage.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::getSessionLifetimeInSeconds","p":"Illuminate/Session/Middleware/StartSession.html#method_getSessionLifetimeInSeconds","d":"<p>Get the session lifetime in seconds.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::getCookieExpirationDate","p":"Illuminate/Session/Middleware/StartSession.html#method_getCookieExpirationDate","d":"<p>Get the cookie lifetime in seconds.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::sessionConfigured","p":"Illuminate/Session/Middleware/StartSession.html#method_sessionConfigured","d":"<p>Determine if a session driver has been configured.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::sessionIsPersistent","p":"Illuminate/Session/Middleware/StartSession.html#method_sessionIsPersistent","d":"<p>Determine if the configured session driver is persistent.</p>"},{"t":"M","n":"Illuminate\\Session\\Middleware\\StartSession::cache","p":"Illuminate/Session/Middleware/StartSession.html#method_cache","d":"<p>Resolve the given cache driver.</p>"},{"t":"M","n":"Illuminate\\Session\\NullSessionHandler::open","p":"Illuminate/Session/NullSessionHandler.html#method_open","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\NullSessionHandler::close","p":"Illuminate/Session/NullSessionHandler.html#method_close","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\NullSessionHandler::read","p":"Illuminate/Session/NullSessionHandler.html#method_read","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\NullSessionHandler::write","p":"Illuminate/Session/NullSessionHandler.html#method_write","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\NullSessionHandler::destroy","p":"Illuminate/Session/NullSessionHandler.html#method_destroy","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\NullSessionHandler::gc","p":"Illuminate/Session/NullSessionHandler.html#method_gc","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SessionManager::callCustomCreator","p":"Illuminate/Session/SessionManager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createNullDriver","p":"Illuminate/Session/SessionManager.html#method_createNullDriver","d":"<p>Create an instance of the &quot;null&quot; session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createArrayDriver","p":"Illuminate/Session/SessionManager.html#method_createArrayDriver","d":"<p>Create an instance of the &quot;array&quot; session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createCookieDriver","p":"Illuminate/Session/SessionManager.html#method_createCookieDriver","d":"<p>Create an instance of the &quot;cookie&quot; session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createFileDriver","p":"Illuminate/Session/SessionManager.html#method_createFileDriver","d":"<p>Create an instance of the file session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createNativeDriver","p":"Illuminate/Session/SessionManager.html#method_createNativeDriver","d":"<p>Create an instance of the file session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createDatabaseDriver","p":"Illuminate/Session/SessionManager.html#method_createDatabaseDriver","d":"<p>Create an instance of the database session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::getDatabaseConnection","p":"Illuminate/Session/SessionManager.html#method_getDatabaseConnection","d":"<p>Get the database connection for the database driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createApcDriver","p":"Illuminate/Session/SessionManager.html#method_createApcDriver","d":"<p>Create an instance of the APC session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createMemcachedDriver","p":"Illuminate/Session/SessionManager.html#method_createMemcachedDriver","d":"<p>Create an instance of the Memcached session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createRedisDriver","p":"Illuminate/Session/SessionManager.html#method_createRedisDriver","d":"<p>Create an instance of the Redis session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createDynamodbDriver","p":"Illuminate/Session/SessionManager.html#method_createDynamodbDriver","d":"<p>Create an instance of the DynamoDB session driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createCacheBased","p":"Illuminate/Session/SessionManager.html#method_createCacheBased","d":"<p>Create an instance of a cache driven driver.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::createCacheHandler","p":"Illuminate/Session/SessionManager.html#method_createCacheHandler","d":"<p>Create the cache based session handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::buildSession","p":"Illuminate/Session/SessionManager.html#method_buildSession","d":"<p>Build the session instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::buildEncryptedSession","p":"Illuminate/Session/SessionManager.html#method_buildEncryptedSession","d":"<p>Build the encrypted session instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::shouldBlock","p":"Illuminate/Session/SessionManager.html#method_shouldBlock","d":"<p>Determine if requests for the same session should wait for each to finish before executing.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::blockDriver","p":"Illuminate/Session/SessionManager.html#method_blockDriver","d":"<p>Get the name of the cache store / driver that should be used to acquire session locks.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::getSessionConfig","p":"Illuminate/Session/SessionManager.html#method_getSessionConfig","d":"<p>Get the session configuration.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::getDefaultDriver","p":"Illuminate/Session/SessionManager.html#method_getDefaultDriver","d":"<p>Get the default session driver name.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionManager::setDefaultDriver","p":"Illuminate/Session/SessionManager.html#method_setDefaultDriver","d":"<p>Set the default session driver name.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionServiceProvider::register","p":"Illuminate/Session/SessionServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionServiceProvider::registerSessionManager","p":"Illuminate/Session/SessionServiceProvider.html#method_registerSessionManager","d":"<p>Register the session manager instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SessionServiceProvider::registerSessionDriver","p":"Illuminate/Session/SessionServiceProvider.html#method_registerSessionDriver","d":"<p>Register the session driver instance.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::__construct","p":"Illuminate/Session/Store.html#method___construct","d":"<p>Create a new session instance.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::start","p":"Illuminate/Session/Store.html#method_start","d":"<p>Start the session, reading the data from a handler.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::loadSession","p":"Illuminate/Session/Store.html#method_loadSession","d":"<p>Load the session data from the handler.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::readFromHandler","p":"Illuminate/Session/Store.html#method_readFromHandler","d":"<p>Read the session data from the handler.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::prepareForUnserialize","p":"Illuminate/Session/Store.html#method_prepareForUnserialize","d":"<p>Prepare the raw string data from the session for unserialization.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::marshalErrorBag","p":"Illuminate/Session/Store.html#method_marshalErrorBag","d":"<p>Marshal the ViewErrorBag when using JSON serialization for sessions.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::save","p":"Illuminate/Session/Store.html#method_save","d":"<p>Save the session data to storage.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::prepareErrorBagForSerialization","p":"Illuminate/Session/Store.html#method_prepareErrorBagForSerialization","d":"<p>Prepare the ViewErrorBag instance for JSON serialization.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::prepareForStorage","p":"Illuminate/Session/Store.html#method_prepareForStorage","d":"<p>Prepare the serialized session data for storage.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::ageFlashData","p":"Illuminate/Session/Store.html#method_ageFlashData","d":"<p>Age the flash data for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::all","p":"Illuminate/Session/Store.html#method_all","d":"<p>Get all of the session data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::only","p":"Illuminate/Session/Store.html#method_only","d":"<p>Get a subset of the session data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::exists","p":"Illuminate/Session/Store.html#method_exists","d":"<p>Checks if a key exists.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::missing","p":"Illuminate/Session/Store.html#method_missing","d":"<p>Determine if the given key is missing from the session data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::has","p":"Illuminate/Session/Store.html#method_has","d":"<p>Checks if a key is present and not null.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::get","p":"Illuminate/Session/Store.html#method_get","d":"<p>Get an item from the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::pull","p":"Illuminate/Session/Store.html#method_pull","d":"<p>Get the value of a given key and then forget it.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::hasOldInput","p":"Illuminate/Session/Store.html#method_hasOldInput","d":"<p>Determine if the session contains old input.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::getOldInput","p":"Illuminate/Session/Store.html#method_getOldInput","d":"<p>Get the requested item from the flashed input array.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::replace","p":"Illuminate/Session/Store.html#method_replace","d":"<p>Replace the given session attributes entirely.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::put","p":"Illuminate/Session/Store.html#method_put","d":"<p>Put a key / value pair or array of key / value pairs in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::remember","p":"Illuminate/Session/Store.html#method_remember","d":"<p>Get an item from the session, or store the default value.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::push","p":"Illuminate/Session/Store.html#method_push","d":"<p>Push a value onto a session array.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::increment","p":"Illuminate/Session/Store.html#method_increment","d":"<p>Increment the value of an item in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::decrement","p":"Illuminate/Session/Store.html#method_decrement","d":"<p>Decrement the value of an item in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::flash","p":"Illuminate/Session/Store.html#method_flash","d":"<p>Flash a key / value pair to the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::now","p":"Illuminate/Session/Store.html#method_now","d":"<p>Flash a key / value pair to the session for immediate use.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::reflash","p":"Illuminate/Session/Store.html#method_reflash","d":"<p>Reflash all of the session flash data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::keep","p":"Illuminate/Session/Store.html#method_keep","d":"<p>Reflash a subset of the current flash data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::mergeNewFlashes","p":"Illuminate/Session/Store.html#method_mergeNewFlashes","d":"<p>Merge new flash keys into the new flash array.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::removeFromOldFlashData","p":"Illuminate/Session/Store.html#method_removeFromOldFlashData","d":"<p>Remove the given keys from the old flash data.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::flashInput","p":"Illuminate/Session/Store.html#method_flashInput","d":"<p>Flash an input array to the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::remove","p":"Illuminate/Session/Store.html#method_remove","d":"<p>Remove an item from the session, returning its value.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::forget","p":"Illuminate/Session/Store.html#method_forget","d":"<p>Remove one or many items from the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::flush","p":"Illuminate/Session/Store.html#method_flush","d":"<p>Remove all of the items from the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::invalidate","p":"Illuminate/Session/Store.html#method_invalidate","d":"<p>Flush the session data and regenerate the ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::regenerate","p":"Illuminate/Session/Store.html#method_regenerate","d":"<p>Generate a new session identifier.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::migrate","p":"Illuminate/Session/Store.html#method_migrate","d":"<p>Generate a new session ID for the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::isStarted","p":"Illuminate/Session/Store.html#method_isStarted","d":"<p>Determine if the session has been started.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::getName","p":"Illuminate/Session/Store.html#method_getName","d":"<p>Get the name of the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setName","p":"Illuminate/Session/Store.html#method_setName","d":"<p>Set the name of the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::getId","p":"Illuminate/Session/Store.html#method_getId","d":"<p>Get the current session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setId","p":"Illuminate/Session/Store.html#method_setId","d":"<p>Set the session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::isValidId","p":"Illuminate/Session/Store.html#method_isValidId","d":"<p>Determine if this is a valid session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::generateSessionId","p":"Illuminate/Session/Store.html#method_generateSessionId","d":"<p>Get a new, random session ID.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setExists","p":"Illuminate/Session/Store.html#method_setExists","d":"<p>Set the existence of the session on the handler if applicable.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::token","p":"Illuminate/Session/Store.html#method_token","d":"<p>Get the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::regenerateToken","p":"Illuminate/Session/Store.html#method_regenerateToken","d":"<p>Regenerate the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::previousUrl","p":"Illuminate/Session/Store.html#method_previousUrl","d":"<p>Get the previous URL from the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setPreviousUrl","p":"Illuminate/Session/Store.html#method_setPreviousUrl","d":"<p>Set the &quot;previous&quot; URL in the session.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::passwordConfirmed","p":"Illuminate/Session/Store.html#method_passwordConfirmed","d":"<p>Specify that the user has confirmed their password.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::getHandler","p":"Illuminate/Session/Store.html#method_getHandler","d":"<p>Get the underlying session handler implementation.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setHandler","p":"Illuminate/Session/Store.html#method_setHandler","d":"<p>Set the underlying session handler implementation.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::handlerNeedsRequest","p":"Illuminate/Session/Store.html#method_handlerNeedsRequest","d":"<p>Determine if the session handler needs a request.</p>"},{"t":"M","n":"Illuminate\\Session\\Store::setRequestOnHandler","p":"Illuminate/Session/Store.html#method_setRequestOnHandler","d":"<p>Set the request on the handler instance.</p>"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::__construct","p":"Illuminate/Session/SymfonySessionDecorator.html#method___construct","d":"<p>Create a new session decorator.</p>"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::start","p":"Illuminate/Session/SymfonySessionDecorator.html#method_start","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::getId","p":"Illuminate/Session/SymfonySessionDecorator.html#method_getId","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::setId","p":"Illuminate/Session/SymfonySessionDecorator.html#method_setId","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::getName","p":"Illuminate/Session/SymfonySessionDecorator.html#method_getName","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::setName","p":"Illuminate/Session/SymfonySessionDecorator.html#method_setName","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::invalidate","p":"Illuminate/Session/SymfonySessionDecorator.html#method_invalidate","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::migrate","p":"Illuminate/Session/SymfonySessionDecorator.html#method_migrate","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::save","p":"Illuminate/Session/SymfonySessionDecorator.html#method_save","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::has","p":"Illuminate/Session/SymfonySessionDecorator.html#method_has","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::get","p":"Illuminate/Session/SymfonySessionDecorator.html#method_get","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::set","p":"Illuminate/Session/SymfonySessionDecorator.html#method_set","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::all","p":"Illuminate/Session/SymfonySessionDecorator.html#method_all","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::replace","p":"Illuminate/Session/SymfonySessionDecorator.html#method_replace","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::remove","p":"Illuminate/Session/SymfonySessionDecorator.html#method_remove","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::clear","p":"Illuminate/Session/SymfonySessionDecorator.html#method_clear","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::isStarted","p":"Illuminate/Session/SymfonySessionDecorator.html#method_isStarted","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::registerBag","p":"Illuminate/Session/SymfonySessionDecorator.html#method_registerBag","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::getBag","p":"Illuminate/Session/SymfonySessionDecorator.html#method_getBag","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Session\\SymfonySessionDecorator::getMetadataBag","p":"Illuminate/Session/SymfonySessionDecorator.html#method_getMetadataBag","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Support\\AggregateServiceProvider::register","p":"Illuminate/Support/AggregateServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Support\\AggregateServiceProvider::provides","p":"Illuminate/Support/AggregateServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::accessible","p":"Illuminate/Support/Arr.html#method_accessible","d":"<p>Determine whether the given value is array accessible.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::add","p":"Illuminate/Support/Arr.html#method_add","d":"<p>Add an element to an array using &quot;dot&quot; notation if it doesn't exist.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::collapse","p":"Illuminate/Support/Arr.html#method_collapse","d":"<p>Collapse an array of arrays into a single array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::crossJoin","p":"Illuminate/Support/Arr.html#method_crossJoin","d":"<p>Cross join the given arrays, returning all possible permutations.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::divide","p":"Illuminate/Support/Arr.html#method_divide","d":"<p>Divide an array into two arrays. One with keys and the other with values.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::dot","p":"Illuminate/Support/Arr.html#method_dot","d":"<p>Flatten a multi-dimensional associative array with dots.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::undot","p":"Illuminate/Support/Arr.html#method_undot","d":"<p>Convert a flatten &quot;dot&quot; notation array into an expanded array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::except","p":"Illuminate/Support/Arr.html#method_except","d":"<p>Get all of the given array except for a specified array of keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::exists","p":"Illuminate/Support/Arr.html#method_exists","d":"<p>Determine if the given key exists in the provided array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::first","p":"Illuminate/Support/Arr.html#method_first","d":"<p>Return the first element in an array passing a given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::last","p":"Illuminate/Support/Arr.html#method_last","d":"<p>Return the last element in an array passing a given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::flatten","p":"Illuminate/Support/Arr.html#method_flatten","d":"<p>Flatten a multi-dimensional array into a single level.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::forget","p":"Illuminate/Support/Arr.html#method_forget","d":"<p>Remove one or many array items from a given array using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::get","p":"Illuminate/Support/Arr.html#method_get","d":"<p>Get an item from an array using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::has","p":"Illuminate/Support/Arr.html#method_has","d":"<p>Check if an item or items exist in an array using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::hasAny","p":"Illuminate/Support/Arr.html#method_hasAny","d":"<p>Determine if any of the keys exist in an array using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::isAssoc","p":"Illuminate/Support/Arr.html#method_isAssoc","d":"<p>Determines if an array is associative.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::isList","p":"Illuminate/Support/Arr.html#method_isList","d":"<p>Determines if an array is a list.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::join","p":"Illuminate/Support/Arr.html#method_join","d":"<p>Join all items using a string. The final items can use a separate glue string.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::keyBy","p":"Illuminate/Support/Arr.html#method_keyBy","d":"<p>Key an associative array by a field or using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::prependKeysWith","p":"Illuminate/Support/Arr.html#method_prependKeysWith","d":"<p>Prepend the key names of an associative array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::only","p":"Illuminate/Support/Arr.html#method_only","d":"<p>Get a subset of the items from the given array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::pluck","p":"Illuminate/Support/Arr.html#method_pluck","d":"<p>Pluck an array of values from an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::explodePluckParameters","p":"Illuminate/Support/Arr.html#method_explodePluckParameters","d":"<p>Explode the &quot;value&quot; and &quot;key&quot; arguments passed to &quot;pluck&quot;.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::map","p":"Illuminate/Support/Arr.html#method_map","d":"<p>Run a map over each of the items in the array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::prepend","p":"Illuminate/Support/Arr.html#method_prepend","d":"<p>Push an item onto the beginning of an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::pull","p":"Illuminate/Support/Arr.html#method_pull","d":"<p>Get a value from the array, and remove it.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::query","p":"Illuminate/Support/Arr.html#method_query","d":"<p>Convert the array into a query string.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::random","p":"Illuminate/Support/Arr.html#method_random","d":"<p>Get one or a specified number of random values from an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::set","p":"Illuminate/Support/Arr.html#method_set","d":"<p>Set an array item to a given value using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::shuffle","p":"Illuminate/Support/Arr.html#method_shuffle","d":"<p>Shuffle the given array and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::sort","p":"Illuminate/Support/Arr.html#method_sort","d":"<p>Sort the array using the given callback or &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::sortDesc","p":"Illuminate/Support/Arr.html#method_sortDesc","d":"<p>Sort the array in descending order using the given callback or &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::sortRecursive","p":"Illuminate/Support/Arr.html#method_sortRecursive","d":"<p>Recursively sort an array by keys and values.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::toCssClasses","p":"Illuminate/Support/Arr.html#method_toCssClasses","d":"<p>Conditionally compile classes from an array into a CSS class list.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::toCssStyles","p":"Illuminate/Support/Arr.html#method_toCssStyles","d":"<p>Conditionally compile styles from an array into a style list.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::where","p":"Illuminate/Support/Arr.html#method_where","d":"<p>Filter the array using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::whereNotNull","p":"Illuminate/Support/Arr.html#method_whereNotNull","d":"<p>Filter items where the value is not null.</p>"},{"t":"M","n":"Illuminate\\Support\\Arr::wrap","p":"Illuminate/Support/Arr.html#method_wrap","d":"<p>If the given value is not an array and not null, wrap it in one.</p>"},{"t":"M","n":"Illuminate\\Support\\Benchmark::measure","p":"Illuminate/Support/Benchmark.html#method_measure","d":"<p>Measure a callable or array of callables over the given number of iterations.</p>"},{"t":"M","n":"Illuminate\\Support\\Benchmark::dd","p":"Illuminate/Support/Benchmark.html#method_dd","d":"<p>Measure a callable or array of callables over the given number of iterations, then dump and die.</p>"},{"t":"M","n":"Illuminate\\Support\\Carbon::setTestNow","p":"Illuminate/Support/Carbon.html#method_setTestNow","d":"{@inheritdoc}"},{"t":"M","n":"Illuminate\\Support\\Collection::__construct","p":"Illuminate/Support/Collection.html#method___construct","d":"<p>Create a new collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::range","p":"Illuminate/Support/Collection.html#method_range","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::all","p":"Illuminate/Support/Collection.html#method_all","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::lazy","p":"Illuminate/Support/Collection.html#method_lazy","d":"<p>Get a lazy collection for the items in this collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::avg","p":"Illuminate/Support/Collection.html#method_avg","d":"<p>Get the average value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::median","p":"Illuminate/Support/Collection.html#method_median","d":"<p>Get the median of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::mode","p":"Illuminate/Support/Collection.html#method_mode","d":"<p>Get the mode of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::collapse","p":"Illuminate/Support/Collection.html#method_collapse","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::contains","p":"Illuminate/Support/Collection.html#method_contains","d":"<p>Determine if an item exists in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::containsStrict","p":"Illuminate/Support/Collection.html#method_containsStrict","d":"<p>Determine if an item exists, using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::doesntContain","p":"Illuminate/Support/Collection.html#method_doesntContain","d":"<p>Determine if an item is not contained in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::crossJoin","p":"Illuminate/Support/Collection.html#method_crossJoin","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::diff","p":"Illuminate/Support/Collection.html#method_diff","d":"<p>Get the items in the collection that are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::diffUsing","p":"Illuminate/Support/Collection.html#method_diffUsing","d":"<p>Get the items in the collection that are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::diffAssoc","p":"Illuminate/Support/Collection.html#method_diffAssoc","d":"<p>Get the items in the collection whose keys and values are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::diffAssocUsing","p":"Illuminate/Support/Collection.html#method_diffAssocUsing","d":"<p>Get the items in the collection whose keys and values are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::diffKeys","p":"Illuminate/Support/Collection.html#method_diffKeys","d":"<p>Get the items in the collection whose keys are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::diffKeysUsing","p":"Illuminate/Support/Collection.html#method_diffKeysUsing","d":"<p>Get the items in the collection whose keys are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::duplicates","p":"Illuminate/Support/Collection.html#method_duplicates","d":"<p>Retrieve duplicate items from the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::duplicatesStrict","p":"Illuminate/Support/Collection.html#method_duplicatesStrict","d":"<p>Retrieve duplicate items from the collection using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::duplicateComparator","p":"Illuminate/Support/Collection.html#method_duplicateComparator","d":"<p>Get the comparison function to detect duplicates.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::except","p":"Illuminate/Support/Collection.html#method_except","d":"<p>Get all items except for those with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::filter","p":"Illuminate/Support/Collection.html#method_filter","d":"<p>Run a filter over each of the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::first","p":"Illuminate/Support/Collection.html#method_first","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::flatten","p":"Illuminate/Support/Collection.html#method_flatten","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::flip","p":"Illuminate/Support/Collection.html#method_flip","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::forget","p":"Illuminate/Support/Collection.html#method_forget","d":"<p>Remove an item from the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::get","p":"Illuminate/Support/Collection.html#method_get","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::getOrPut","p":"Illuminate/Support/Collection.html#method_getOrPut","d":"<p>Get an item from the collection by key or add it to collection if it does not exist.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::groupBy","p":"Illuminate/Support/Collection.html#method_groupBy","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::keyBy","p":"Illuminate/Support/Collection.html#method_keyBy","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::has","p":"Illuminate/Support/Collection.html#method_has","d":"<p>Determine if an item exists in the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::hasAny","p":"Illuminate/Support/Collection.html#method_hasAny","d":"<p>Determine if any of the keys exist in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::implode","p":"Illuminate/Support/Collection.html#method_implode","d":"<p>Concatenate values of a given key as a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::intersect","p":"Illuminate/Support/Collection.html#method_intersect","d":"<p>Intersect the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::intersectUsing","p":"Illuminate/Support/Collection.html#method_intersectUsing","d":"<p>Intersect the collection with the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::intersectAssoc","p":"Illuminate/Support/Collection.html#method_intersectAssoc","d":"<p>Intersect the collection with the given items with additional index check.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::intersectAssocUsing","p":"Illuminate/Support/Collection.html#method_intersectAssocUsing","d":"<p>Intersect the collection with the given items with additional index check, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::intersectByKeys","p":"Illuminate/Support/Collection.html#method_intersectByKeys","d":"<p>Intersect the collection with the given items by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::isEmpty","p":"Illuminate/Support/Collection.html#method_isEmpty","d":"<p>Determine if the collection is empty or not.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::containsOneItem","p":"Illuminate/Support/Collection.html#method_containsOneItem","d":"<p>Determine if the collection contains a single item.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::join","p":"Illuminate/Support/Collection.html#method_join","d":"<p>Join all items from the collection using a string. The final items can use a separate glue string.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::keys","p":"Illuminate/Support/Collection.html#method_keys","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::last","p":"Illuminate/Support/Collection.html#method_last","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::pluck","p":"Illuminate/Support/Collection.html#method_pluck","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::map","p":"Illuminate/Support/Collection.html#method_map","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::mapToDictionary","p":"Illuminate/Support/Collection.html#method_mapToDictionary","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::mapWithKeys","p":"Illuminate/Support/Collection.html#method_mapWithKeys","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::merge","p":"Illuminate/Support/Collection.html#method_merge","d":"<p>Merge the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::mergeRecursive","p":"Illuminate/Support/Collection.html#method_mergeRecursive","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::combine","p":"Illuminate/Support/Collection.html#method_combine","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::union","p":"Illuminate/Support/Collection.html#method_union","d":"<p>Union the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::nth","p":"Illuminate/Support/Collection.html#method_nth","d":"<p>Create a new collection consisting of every n-th element.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::only","p":"Illuminate/Support/Collection.html#method_only","d":"<p>Get the items with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::pop","p":"Illuminate/Support/Collection.html#method_pop","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::prepend","p":"Illuminate/Support/Collection.html#method_prepend","d":"<p>Push an item onto the beginning of the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::push","p":"Illuminate/Support/Collection.html#method_push","d":"<p>Push one or more items onto the end of the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::concat","p":"Illuminate/Support/Collection.html#method_concat","d":"<p>Push all of the given items onto the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::pull","p":"Illuminate/Support/Collection.html#method_pull","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::put","p":"Illuminate/Support/Collection.html#method_put","d":"<p>Put an item in the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::random","p":"Illuminate/Support/Collection.html#method_random","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::replace","p":"Illuminate/Support/Collection.html#method_replace","d":"<p>Replace the collection items with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::replaceRecursive","p":"Illuminate/Support/Collection.html#method_replaceRecursive","d":"<p>Recursively replace the collection items with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::reverse","p":"Illuminate/Support/Collection.html#method_reverse","d":"<p>Reverse items order.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::search","p":"Illuminate/Support/Collection.html#method_search","d":"<p>Search the collection for a given value and return the corresponding key if successful.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::shift","p":"Illuminate/Support/Collection.html#method_shift","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::shuffle","p":"Illuminate/Support/Collection.html#method_shuffle","d":"<p>Shuffle the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sliding","p":"Illuminate/Support/Collection.html#method_sliding","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::skip","p":"Illuminate/Support/Collection.html#method_skip","d":"<p>Skip the first {$count} items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::skipUntil","p":"Illuminate/Support/Collection.html#method_skipUntil","d":"<p>Skip items in the collection until the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::skipWhile","p":"Illuminate/Support/Collection.html#method_skipWhile","d":"<p>Skip items in the collection while the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::slice","p":"Illuminate/Support/Collection.html#method_slice","d":"<p>Slice the underlying collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::split","p":"Illuminate/Support/Collection.html#method_split","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::splitIn","p":"Illuminate/Support/Collection.html#method_splitIn","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::sole","p":"Illuminate/Support/Collection.html#method_sole","d":"<p>Get the first item in the collection, but only if exactly one item exists. Otherwise, throw an exception.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::firstOrFail","p":"Illuminate/Support/Collection.html#method_firstOrFail","d":"<p>Get the first item in the collection but throw an exception if no matching items exist.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::chunk","p":"Illuminate/Support/Collection.html#method_chunk","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::chunkWhile","p":"Illuminate/Support/Collection.html#method_chunkWhile","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::sort","p":"Illuminate/Support/Collection.html#method_sort","d":"<p>Sort through each item with a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortDesc","p":"Illuminate/Support/Collection.html#method_sortDesc","d":"<p>Sort items in descending order.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortBy","p":"Illuminate/Support/Collection.html#method_sortBy","d":"<p>Sort the collection using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortByMany","p":"Illuminate/Support/Collection.html#method_sortByMany","d":"<p>Sort the collection using multiple comparisons.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortByDesc","p":"Illuminate/Support/Collection.html#method_sortByDesc","d":"<p>Sort the collection in descending order using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortKeys","p":"Illuminate/Support/Collection.html#method_sortKeys","d":"<p>Sort the collection keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortKeysDesc","p":"Illuminate/Support/Collection.html#method_sortKeysDesc","d":"<p>Sort the collection keys in descending order.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::sortKeysUsing","p":"Illuminate/Support/Collection.html#method_sortKeysUsing","d":"<p>Sort the collection keys using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::splice","p":"Illuminate/Support/Collection.html#method_splice","d":"<p>Splice a portion of the underlying collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::take","p":"Illuminate/Support/Collection.html#method_take","d":"<p>Take the first or last {$limit} items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::takeUntil","p":"Illuminate/Support/Collection.html#method_takeUntil","d":"<p>Take items in the collection until the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::takeWhile","p":"Illuminate/Support/Collection.html#method_takeWhile","d":"<p>Take items in the collection while the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::transform","p":"Illuminate/Support/Collection.html#method_transform","d":"<p>Transform each item in the collection using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::undot","p":"Illuminate/Support/Collection.html#method_undot","d":"<p>Convert a flatten &quot;dot&quot; notation array into an expanded array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::unique","p":"Illuminate/Support/Collection.html#method_unique","d":"<p>Return only unique items from the collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::values","p":"Illuminate/Support/Collection.html#method_values","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::zip","p":"Illuminate/Support/Collection.html#method_zip","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::pad","p":"Illuminate/Support/Collection.html#method_pad","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::getIterator","p":"Illuminate/Support/Collection.html#method_getIterator","d":"<p>Get an iterator for the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::count","p":"Illuminate/Support/Collection.html#method_count","d":"<p>Count the number of items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::countBy","p":"Illuminate/Support/Collection.html#method_countBy","d":null},{"t":"M","n":"Illuminate\\Support\\Collection::add","p":"Illuminate/Support/Collection.html#method_add","d":"<p>Add an item to the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::toBase","p":"Illuminate/Support/Collection.html#method_toBase","d":"<p>Get a base Support collection instance from this collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::offsetExists","p":"Illuminate/Support/Collection.html#method_offsetExists","d":"<p>Determine if an item exists at an offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::offsetGet","p":"Illuminate/Support/Collection.html#method_offsetGet","d":"<p>Get an item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::offsetSet","p":"Illuminate/Support/Collection.html#method_offsetSet","d":"<p>Set the item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Collection::offsetUnset","p":"Illuminate/Support/Collection.html#method_offsetUnset","d":"<p>Unset the item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::__construct","p":"Illuminate/Support/Composer.html#method___construct","d":"<p>Create a new Composer manager instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::dumpAutoloads","p":"Illuminate/Support/Composer.html#method_dumpAutoloads","d":"<p>Regenerate the Composer autoloader files.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::dumpOptimized","p":"Illuminate/Support/Composer.html#method_dumpOptimized","d":"<p>Regenerate the optimized Composer autoloader files.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::findComposer","p":"Illuminate/Support/Composer.html#method_findComposer","d":"<p>Get the composer command for the environment.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::phpBinary","p":"Illuminate/Support/Composer.html#method_phpBinary","d":"<p>Get the PHP binary.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::getProcess","p":"Illuminate/Support/Composer.html#method_getProcess","d":"<p>Get a new Symfony process instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::setWorkingPath","p":"Illuminate/Support/Composer.html#method_setWorkingPath","d":"<p>Set the working path used by the class.</p>"},{"t":"M","n":"Illuminate\\Support\\Composer::getVersion","p":"Illuminate/Support/Composer.html#method_getVersion","d":"<p>Get the version of Composer.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::parseConfiguration","p":"Illuminate/Support/ConfigurationUrlParser.html#method_parseConfiguration","d":"<p>Parse the database configuration, hydrating options using a database configuration URL if possible.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::getPrimaryOptions","p":"Illuminate/Support/ConfigurationUrlParser.html#method_getPrimaryOptions","d":"<p>Get the primary database connection options.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::getDriver","p":"Illuminate/Support/ConfigurationUrlParser.html#method_getDriver","d":"<p>Get the database driver from the URL.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::getDatabase","p":"Illuminate/Support/ConfigurationUrlParser.html#method_getDatabase","d":"<p>Get the database name from the URL.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::getQueryOptions","p":"Illuminate/Support/ConfigurationUrlParser.html#method_getQueryOptions","d":"<p>Get all of the additional database options from the query string.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::parseUrl","p":"Illuminate/Support/ConfigurationUrlParser.html#method_parseUrl","d":"<p>Parse the string URL to an array of components.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::parseStringsToNativeTypes","p":"Illuminate/Support/ConfigurationUrlParser.html#method_parseStringsToNativeTypes","d":"<p>Convert string casted values to their native types.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::getDriverAliases","p":"Illuminate/Support/ConfigurationUrlParser.html#method_getDriverAliases","d":"<p>Get all of the current drivers' aliases.</p>"},{"t":"M","n":"Illuminate\\Support\\ConfigurationUrlParser::addDriverAlias","p":"Illuminate/Support/ConfigurationUrlParser.html#method_addDriverAlias","d":"<p>Add the given driver alias to the driver aliases array.</p>"},{"t":"M","n":"Illuminate\\Support\\DateFactory::use","p":"Illuminate/Support/DateFactory.html#method_use","d":"<p>Use the given handler when generating dates (class name, callable, or factory).</p>"},{"t":"M","n":"Illuminate\\Support\\DateFactory::useDefault","p":"Illuminate/Support/DateFactory.html#method_useDefault","d":"<p>Use the default date class when generating dates.</p>"},{"t":"M","n":"Illuminate\\Support\\DateFactory::useCallable","p":"Illuminate/Support/DateFactory.html#method_useCallable","d":"<p>Execute the given callable on each date creation.</p>"},{"t":"M","n":"Illuminate\\Support\\DateFactory::useClass","p":"Illuminate/Support/DateFactory.html#method_useClass","d":"<p>Use the given date type (class) when generating dates.</p>"},{"t":"M","n":"Illuminate\\Support\\DateFactory::useFactory","p":"Illuminate/Support/DateFactory.html#method_useFactory","d":"<p>Use the given Carbon factory when generating dates.</p>"},{"t":"M","n":"Illuminate\\Support\\DateFactory::__call","p":"Illuminate/Support/DateFactory.html#method___call","d":"<p>Handle dynamic calls to generate dates.</p>"},{"t":"M","n":"Illuminate\\Support\\DateFactory::create","p":"Illuminate/Support/DateFactory.html#method_create","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createFromDate","p":"Illuminate/Support/DateFactory.html#method_createFromDate","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createFromFormat","p":"Illuminate/Support/DateFactory.html#method_createFromFormat","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createFromTime","p":"Illuminate/Support/DateFactory.html#method_createFromTime","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createFromTimeString","p":"Illuminate/Support/DateFactory.html#method_createFromTimeString","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createFromTimestamp","p":"Illuminate/Support/DateFactory.html#method_createFromTimestamp","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createFromTimestampMs","p":"Illuminate/Support/DateFactory.html#method_createFromTimestampMs","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createFromTimestampUTC","p":"Illuminate/Support/DateFactory.html#method_createFromTimestampUTC","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createMidnightDate","p":"Illuminate/Support/DateFactory.html#method_createMidnightDate","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::createSafe","p":"Illuminate/Support/DateFactory.html#method_createSafe","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::disableHumanDiffOption","p":"Illuminate/Support/DateFactory.html#method_disableHumanDiffOption","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::enableHumanDiffOption","p":"Illuminate/Support/DateFactory.html#method_enableHumanDiffOption","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::executeWithLocale","p":"Illuminate/Support/DateFactory.html#method_executeWithLocale","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::fromSerialized","p":"Illuminate/Support/DateFactory.html#method_fromSerialized","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getAvailableLocales","p":"Illuminate/Support/DateFactory.html#method_getAvailableLocales","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getDays","p":"Illuminate/Support/DateFactory.html#method_getDays","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getHumanDiffOptions","p":"Illuminate/Support/DateFactory.html#method_getHumanDiffOptions","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getIsoUnits","p":"Illuminate/Support/DateFactory.html#method_getIsoUnits","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getLastErrors","p":"Illuminate/Support/DateFactory.html#method_getLastErrors","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getLocale","p":"Illuminate/Support/DateFactory.html#method_getLocale","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getMidDayAt","p":"Illuminate/Support/DateFactory.html#method_getMidDayAt","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getTestNow","p":"Illuminate/Support/DateFactory.html#method_getTestNow","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getTranslator","p":"Illuminate/Support/DateFactory.html#method_getTranslator","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getWeekEndsAt","p":"Illuminate/Support/DateFactory.html#method_getWeekEndsAt","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getWeekStartsAt","p":"Illuminate/Support/DateFactory.html#method_getWeekStartsAt","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::getWeekendDays","p":"Illuminate/Support/DateFactory.html#method_getWeekendDays","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::hasFormat","p":"Illuminate/Support/DateFactory.html#method_hasFormat","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::hasMacro","p":"Illuminate/Support/DateFactory.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::hasRelativeKeywords","p":"Illuminate/Support/DateFactory.html#method_hasRelativeKeywords","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::hasTestNow","p":"Illuminate/Support/DateFactory.html#method_hasTestNow","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::instance","p":"Illuminate/Support/DateFactory.html#method_instance","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::isImmutable","p":"Illuminate/Support/DateFactory.html#method_isImmutable","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::isModifiableUnit","p":"Illuminate/Support/DateFactory.html#method_isModifiableUnit","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::isMutable","p":"Illuminate/Support/DateFactory.html#method_isMutable","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::isStrictModeEnabled","p":"Illuminate/Support/DateFactory.html#method_isStrictModeEnabled","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::localeHasDiffOneDayWords","p":"Illuminate/Support/DateFactory.html#method_localeHasDiffOneDayWords","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::localeHasDiffSyntax","p":"Illuminate/Support/DateFactory.html#method_localeHasDiffSyntax","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::localeHasDiffTwoDayWords","p":"Illuminate/Support/DateFactory.html#method_localeHasDiffTwoDayWords","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::localeHasPeriodSyntax","p":"Illuminate/Support/DateFactory.html#method_localeHasPeriodSyntax","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::localeHasShortUnits","p":"Illuminate/Support/DateFactory.html#method_localeHasShortUnits","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::macro","p":"Illuminate/Support/DateFactory.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::make","p":"Illuminate/Support/DateFactory.html#method_make","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::maxValue","p":"Illuminate/Support/DateFactory.html#method_maxValue","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::minValue","p":"Illuminate/Support/DateFactory.html#method_minValue","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::mixin","p":"Illuminate/Support/DateFactory.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::now","p":"Illuminate/Support/DateFactory.html#method_now","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::parse","p":"Illuminate/Support/DateFactory.html#method_parse","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::pluralUnit","p":"Illuminate/Support/DateFactory.html#method_pluralUnit","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::resetMonthsOverflow","p":"Illuminate/Support/DateFactory.html#method_resetMonthsOverflow","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::resetToStringFormat","p":"Illuminate/Support/DateFactory.html#method_resetToStringFormat","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::resetYearsOverflow","p":"Illuminate/Support/DateFactory.html#method_resetYearsOverflow","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::serializeUsing","p":"Illuminate/Support/DateFactory.html#method_serializeUsing","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setHumanDiffOptions","p":"Illuminate/Support/DateFactory.html#method_setHumanDiffOptions","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setLocale","p":"Illuminate/Support/DateFactory.html#method_setLocale","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setMidDayAt","p":"Illuminate/Support/DateFactory.html#method_setMidDayAt","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setTestNow","p":"Illuminate/Support/DateFactory.html#method_setTestNow","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setToStringFormat","p":"Illuminate/Support/DateFactory.html#method_setToStringFormat","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setTranslator","p":"Illuminate/Support/DateFactory.html#method_setTranslator","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setUtf8","p":"Illuminate/Support/DateFactory.html#method_setUtf8","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setWeekEndsAt","p":"Illuminate/Support/DateFactory.html#method_setWeekEndsAt","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setWeekStartsAt","p":"Illuminate/Support/DateFactory.html#method_setWeekStartsAt","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::setWeekendDays","p":"Illuminate/Support/DateFactory.html#method_setWeekendDays","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::shouldOverflowMonths","p":"Illuminate/Support/DateFactory.html#method_shouldOverflowMonths","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::shouldOverflowYears","p":"Illuminate/Support/DateFactory.html#method_shouldOverflowYears","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::singularUnit","p":"Illuminate/Support/DateFactory.html#method_singularUnit","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::today","p":"Illuminate/Support/DateFactory.html#method_today","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::tomorrow","p":"Illuminate/Support/DateFactory.html#method_tomorrow","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::useMonthsOverflow","p":"Illuminate/Support/DateFactory.html#method_useMonthsOverflow","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::useStrictMode","p":"Illuminate/Support/DateFactory.html#method_useStrictMode","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::useYearsOverflow","p":"Illuminate/Support/DateFactory.html#method_useYearsOverflow","d":""},{"t":"M","n":"Illuminate\\Support\\DateFactory::yesterday","p":"Illuminate/Support/DateFactory.html#method_yesterday","d":""},{"t":"M","n":"Illuminate\\Support\\Enumerable::make","p":"Illuminate/Support/Enumerable.html#method_make","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::times","p":"Illuminate/Support/Enumerable.html#method_times","d":"<p>Create a new instance by invoking the callback a given amount of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::range","p":"Illuminate/Support/Enumerable.html#method_range","d":"<p>Create a collection with the given range.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::wrap","p":"Illuminate/Support/Enumerable.html#method_wrap","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::unwrap","p":"Illuminate/Support/Enumerable.html#method_unwrap","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::empty","p":"Illuminate/Support/Enumerable.html#method_empty","d":"<p>Create a new instance with no items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::all","p":"Illuminate/Support/Enumerable.html#method_all","d":"<p>Get all items in the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::average","p":"Illuminate/Support/Enumerable.html#method_average","d":"<p>Alias for the &quot;avg&quot; method.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::median","p":"Illuminate/Support/Enumerable.html#method_median","d":"<p>Get the median of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::mode","p":"Illuminate/Support/Enumerable.html#method_mode","d":"<p>Get the mode of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::collapse","p":"Illuminate/Support/Enumerable.html#method_collapse","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::some","p":"Illuminate/Support/Enumerable.html#method_some","d":"<p>Alias for the &quot;contains&quot; method.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::containsStrict","p":"Illuminate/Support/Enumerable.html#method_containsStrict","d":"<p>Determine if an item exists, using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::avg","p":"Illuminate/Support/Enumerable.html#method_avg","d":"<p>Get the average value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::contains","p":"Illuminate/Support/Enumerable.html#method_contains","d":"<p>Determine if an item exists in the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::doesntContain","p":"Illuminate/Support/Enumerable.html#method_doesntContain","d":"<p>Determine if an item is not contained in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::crossJoin","p":"Illuminate/Support/Enumerable.html#method_crossJoin","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::dd","p":"Illuminate/Support/Enumerable.html#method_dd","d":"<p>Dump the collection and end the script.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::dump","p":"Illuminate/Support/Enumerable.html#method_dump","d":"<p>Dump the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diff","p":"Illuminate/Support/Enumerable.html#method_diff","d":"<p>Get the items that are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffUsing","p":"Illuminate/Support/Enumerable.html#method_diffUsing","d":"<p>Get the items that are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffAssoc","p":"Illuminate/Support/Enumerable.html#method_diffAssoc","d":"<p>Get the items whose keys and values are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffAssocUsing","p":"Illuminate/Support/Enumerable.html#method_diffAssocUsing","d":"<p>Get the items whose keys and values are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffKeys","p":"Illuminate/Support/Enumerable.html#method_diffKeys","d":"<p>Get the items whose keys are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffKeysUsing","p":"Illuminate/Support/Enumerable.html#method_diffKeysUsing","d":"<p>Get the items whose keys are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::duplicates","p":"Illuminate/Support/Enumerable.html#method_duplicates","d":"<p>Retrieve duplicate items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::duplicatesStrict","p":"Illuminate/Support/Enumerable.html#method_duplicatesStrict","d":"<p>Retrieve duplicate items using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::each","p":"Illuminate/Support/Enumerable.html#method_each","d":"<p>Execute a callback over each item.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::eachSpread","p":"Illuminate/Support/Enumerable.html#method_eachSpread","d":"<p>Execute a callback over each nested chunk of items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::every","p":"Illuminate/Support/Enumerable.html#method_every","d":"<p>Determine if all items pass the given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::except","p":"Illuminate/Support/Enumerable.html#method_except","d":"<p>Get all items except for those with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::filter","p":"Illuminate/Support/Enumerable.html#method_filter","d":"<p>Run a filter over each of the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::when","p":"Illuminate/Support/Enumerable.html#method_when","d":"<p>Apply the callback if the given &quot;value&quot; is (or resolves to) truthy.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whenEmpty","p":"Illuminate/Support/Enumerable.html#method_whenEmpty","d":"<p>Apply the callback if the collection is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whenNotEmpty","p":"Illuminate/Support/Enumerable.html#method_whenNotEmpty","d":"<p>Apply the callback if the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::unless","p":"Illuminate/Support/Enumerable.html#method_unless","d":"<p>Apply the callback if the given &quot;value&quot; is (or resolves to) truthy.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::unlessEmpty","p":"Illuminate/Support/Enumerable.html#method_unlessEmpty","d":"<p>Apply the callback unless the collection is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::unlessNotEmpty","p":"Illuminate/Support/Enumerable.html#method_unlessNotEmpty","d":"<p>Apply the callback unless the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::where","p":"Illuminate/Support/Enumerable.html#method_where","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNull","p":"Illuminate/Support/Enumerable.html#method_whereNull","d":"<p>Filter items where the value for the given key is null.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNotNull","p":"Illuminate/Support/Enumerable.html#method_whereNotNull","d":"<p>Filter items where the value for the given key is not null.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereStrict","p":"Illuminate/Support/Enumerable.html#method_whereStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereIn","p":"Illuminate/Support/Enumerable.html#method_whereIn","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereInStrict","p":"Illuminate/Support/Enumerable.html#method_whereInStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereBetween","p":"Illuminate/Support/Enumerable.html#method_whereBetween","d":"<p>Filter items such that the value of the given key is between the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNotBetween","p":"Illuminate/Support/Enumerable.html#method_whereNotBetween","d":"<p>Filter items such that the value of the given key is not between the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNotIn","p":"Illuminate/Support/Enumerable.html#method_whereNotIn","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNotInStrict","p":"Illuminate/Support/Enumerable.html#method_whereNotInStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereInstanceOf","p":"Illuminate/Support/Enumerable.html#method_whereInstanceOf","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::first","p":"Illuminate/Support/Enumerable.html#method_first","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::firstWhere","p":"Illuminate/Support/Enumerable.html#method_firstWhere","d":"<p>Get the first item by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::flatten","p":"Illuminate/Support/Enumerable.html#method_flatten","d":"<p>Get a flattened array of the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::flip","p":"Illuminate/Support/Enumerable.html#method_flip","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::get","p":"Illuminate/Support/Enumerable.html#method_get","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::groupBy","p":"Illuminate/Support/Enumerable.html#method_groupBy","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::keyBy","p":"Illuminate/Support/Enumerable.html#method_keyBy","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::has","p":"Illuminate/Support/Enumerable.html#method_has","d":"<p>Determine if an item exists in the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::hasAny","p":"Illuminate/Support/Enumerable.html#method_hasAny","d":"<p>Determine if any of the keys exist in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::implode","p":"Illuminate/Support/Enumerable.html#method_implode","d":"<p>Concatenate values of a given key as a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::intersect","p":"Illuminate/Support/Enumerable.html#method_intersect","d":"<p>Intersect the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::intersectByKeys","p":"Illuminate/Support/Enumerable.html#method_intersectByKeys","d":"<p>Intersect the collection with the given items by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::isEmpty","p":"Illuminate/Support/Enumerable.html#method_isEmpty","d":"<p>Determine if the collection is empty or not.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::isNotEmpty","p":"Illuminate/Support/Enumerable.html#method_isNotEmpty","d":"<p>Determine if the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::containsOneItem","p":"Illuminate/Support/Enumerable.html#method_containsOneItem","d":"<p>Determine if the collection contains a single item.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::join","p":"Illuminate/Support/Enumerable.html#method_join","d":"<p>Join all items from the collection using a string. The final items can use a separate glue string.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::keys","p":"Illuminate/Support/Enumerable.html#method_keys","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::last","p":"Illuminate/Support/Enumerable.html#method_last","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::map","p":"Illuminate/Support/Enumerable.html#method_map","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapSpread","p":"Illuminate/Support/Enumerable.html#method_mapSpread","d":"<p>Run a map over each nested chunk of items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapToDictionary","p":"Illuminate/Support/Enumerable.html#method_mapToDictionary","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapToGroups","p":"Illuminate/Support/Enumerable.html#method_mapToGroups","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapWithKeys","p":"Illuminate/Support/Enumerable.html#method_mapWithKeys","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::flatMap","p":"Illuminate/Support/Enumerable.html#method_flatMap","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapInto","p":"Illuminate/Support/Enumerable.html#method_mapInto","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::merge","p":"Illuminate/Support/Enumerable.html#method_merge","d":"<p>Merge the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::mergeRecursive","p":"Illuminate/Support/Enumerable.html#method_mergeRecursive","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::combine","p":"Illuminate/Support/Enumerable.html#method_combine","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::union","p":"Illuminate/Support/Enumerable.html#method_union","d":"<p>Union the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::min","p":"Illuminate/Support/Enumerable.html#method_min","d":"<p>Get the min value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::max","p":"Illuminate/Support/Enumerable.html#method_max","d":"<p>Get the max value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::nth","p":"Illuminate/Support/Enumerable.html#method_nth","d":"<p>Create a new collection consisting of every n-th element.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::only","p":"Illuminate/Support/Enumerable.html#method_only","d":"<p>Get the items with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::forPage","p":"Illuminate/Support/Enumerable.html#method_forPage","d":"<p>&quot;Paginate&quot; the collection by slicing it into a smaller collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::partition","p":"Illuminate/Support/Enumerable.html#method_partition","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::concat","p":"Illuminate/Support/Enumerable.html#method_concat","d":"<p>Push all of the given items onto the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::random","p":"Illuminate/Support/Enumerable.html#method_random","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::reduce","p":"Illuminate/Support/Enumerable.html#method_reduce","d":"<p>Reduce the collection to a single value.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::reduceSpread","p":"Illuminate/Support/Enumerable.html#method_reduceSpread","d":"<p>Reduce the collection to multiple aggregate values.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::replace","p":"Illuminate/Support/Enumerable.html#method_replace","d":"<p>Replace the collection items with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::replaceRecursive","p":"Illuminate/Support/Enumerable.html#method_replaceRecursive","d":"<p>Recursively replace the collection items with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::reverse","p":"Illuminate/Support/Enumerable.html#method_reverse","d":"<p>Reverse items order.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::search","p":"Illuminate/Support/Enumerable.html#method_search","d":"<p>Search the collection for a given value and return the corresponding key if successful.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::shuffle","p":"Illuminate/Support/Enumerable.html#method_shuffle","d":"<p>Shuffle the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sliding","p":"Illuminate/Support/Enumerable.html#method_sliding","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::skip","p":"Illuminate/Support/Enumerable.html#method_skip","d":"<p>Skip the first {$count} items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::skipUntil","p":"Illuminate/Support/Enumerable.html#method_skipUntil","d":"<p>Skip items in the collection until the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::skipWhile","p":"Illuminate/Support/Enumerable.html#method_skipWhile","d":"<p>Skip items in the collection while the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::slice","p":"Illuminate/Support/Enumerable.html#method_slice","d":"<p>Get a slice of items from the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::split","p":"Illuminate/Support/Enumerable.html#method_split","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::sole","p":"Illuminate/Support/Enumerable.html#method_sole","d":"<p>Get the first item in the collection, but only if exactly one item exists. Otherwise, throw an exception.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::firstOrFail","p":"Illuminate/Support/Enumerable.html#method_firstOrFail","d":"<p>Get the first item in the collection but throw an exception if no matching items exist.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::chunk","p":"Illuminate/Support/Enumerable.html#method_chunk","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::chunkWhile","p":"Illuminate/Support/Enumerable.html#method_chunkWhile","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::splitIn","p":"Illuminate/Support/Enumerable.html#method_splitIn","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::sort","p":"Illuminate/Support/Enumerable.html#method_sort","d":"<p>Sort through each item with a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortDesc","p":"Illuminate/Support/Enumerable.html#method_sortDesc","d":"<p>Sort items in descending order.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortBy","p":"Illuminate/Support/Enumerable.html#method_sortBy","d":"<p>Sort the collection using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortByDesc","p":"Illuminate/Support/Enumerable.html#method_sortByDesc","d":"<p>Sort the collection in descending order using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortKeys","p":"Illuminate/Support/Enumerable.html#method_sortKeys","d":"<p>Sort the collection keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortKeysDesc","p":"Illuminate/Support/Enumerable.html#method_sortKeysDesc","d":"<p>Sort the collection keys in descending order.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortKeysUsing","p":"Illuminate/Support/Enumerable.html#method_sortKeysUsing","d":"<p>Sort the collection keys using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sum","p":"Illuminate/Support/Enumerable.html#method_sum","d":"<p>Get the sum of the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::take","p":"Illuminate/Support/Enumerable.html#method_take","d":"<p>Take the first or last {$limit} items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::takeUntil","p":"Illuminate/Support/Enumerable.html#method_takeUntil","d":"<p>Take items in the collection until the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::takeWhile","p":"Illuminate/Support/Enumerable.html#method_takeWhile","d":"<p>Take items in the collection while the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::tap","p":"Illuminate/Support/Enumerable.html#method_tap","d":"<p>Pass the collection to the given callback and then return it.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::pipe","p":"Illuminate/Support/Enumerable.html#method_pipe","d":"<p>Pass the enumerable to the given callback and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::pipeInto","p":"Illuminate/Support/Enumerable.html#method_pipeInto","d":"<p>Pass the collection into a new class.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::pipeThrough","p":"Illuminate/Support/Enumerable.html#method_pipeThrough","d":"<p>Pass the collection through a series of callable pipes and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::pluck","p":"Illuminate/Support/Enumerable.html#method_pluck","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::reject","p":"Illuminate/Support/Enumerable.html#method_reject","d":"<p>Create a collection of all elements that do not pass a given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::undot","p":"Illuminate/Support/Enumerable.html#method_undot","d":"<p>Convert a flatten &quot;dot&quot; notation array into an expanded array.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::unique","p":"Illuminate/Support/Enumerable.html#method_unique","d":"<p>Return only unique items from the collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::uniqueStrict","p":"Illuminate/Support/Enumerable.html#method_uniqueStrict","d":"<p>Return only unique items from the collection array using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::values","p":"Illuminate/Support/Enumerable.html#method_values","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::pad","p":"Illuminate/Support/Enumerable.html#method_pad","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::getIterator","p":"Illuminate/Support/Enumerable.html#method_getIterator","d":"<p>Get the values iterator.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::count","p":"Illuminate/Support/Enumerable.html#method_count","d":"<p>Count the number of items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::countBy","p":"Illuminate/Support/Enumerable.html#method_countBy","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::zip","p":"Illuminate/Support/Enumerable.html#method_zip","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::collect","p":"Illuminate/Support/Enumerable.html#method_collect","d":"<p>Collect the values into a collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::toArray","p":"Illuminate/Support/Enumerable.html#method_toArray","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::jsonSerialize","p":"Illuminate/Support/Enumerable.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::toJson","p":"Illuminate/Support/Enumerable.html#method_toJson","d":"<p>Get the collection of items as JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::getCachingIterator","p":"Illuminate/Support/Enumerable.html#method_getCachingIterator","d":"<p>Get a CachingIterator instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::__toString","p":"Illuminate/Support/Enumerable.html#method___toString","d":"<p>Convert the collection to its string representation.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::escapeWhenCastingToString","p":"Illuminate/Support/Enumerable.html#method_escapeWhenCastingToString","d":"<p>Indicate that the model's string representation should be escaped when __toString is invoked.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::proxy","p":"Illuminate/Support/Enumerable.html#method_proxy","d":"<p>Add a method to the list of proxied methods.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::__get","p":"Illuminate/Support/Enumerable.html#method___get","d":"<p>Dynamically access collection proxies.</p>"},{"t":"M","n":"Illuminate\\Support\\Env::enablePutenv","p":"Illuminate/Support/Env.html#method_enablePutenv","d":"<p>Enable the putenv adapter.</p>"},{"t":"M","n":"Illuminate\\Support\\Env::disablePutenv","p":"Illuminate/Support/Env.html#method_disablePutenv","d":"<p>Disable the putenv adapter.</p>"},{"t":"M","n":"Illuminate\\Support\\Env::getRepository","p":"Illuminate/Support/Env.html#method_getRepository","d":"<p>Get the environment repository instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Env::get","p":"Illuminate/Support/Env.html#method_get","d":"<p>Gets the value of an environment variable.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getFacadeAccessor","p":"Illuminate/Support/Facades/App.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\App::version","p":"Illuminate/Support/Facades/App.html#method_version","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::bootstrapWith","p":"Illuminate/Support/Facades/App.html#method_bootstrapWith","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::afterLoadingEnvironment","p":"Illuminate/Support/Facades/App.html#method_afterLoadingEnvironment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::beforeBootstrapping","p":"Illuminate/Support/Facades/App.html#method_beforeBootstrapping","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::afterBootstrapping","p":"Illuminate/Support/Facades/App.html#method_afterBootstrapping","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::hasBeenBootstrapped","p":"Illuminate/Support/Facades/App.html#method_hasBeenBootstrapped","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::setBasePath","p":"Illuminate/Support/Facades/App.html#method_setBasePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::path","p":"Illuminate/Support/Facades/App.html#method_path","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::useAppPath","p":"Illuminate/Support/Facades/App.html#method_useAppPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::basePath","p":"Illuminate/Support/Facades/App.html#method_basePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::bootstrapPath","p":"Illuminate/Support/Facades/App.html#method_bootstrapPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::useBootstrapPath","p":"Illuminate/Support/Facades/App.html#method_useBootstrapPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::configPath","p":"Illuminate/Support/Facades/App.html#method_configPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::useConfigPath","p":"Illuminate/Support/Facades/App.html#method_useConfigPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::databasePath","p":"Illuminate/Support/Facades/App.html#method_databasePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::useDatabasePath","p":"Illuminate/Support/Facades/App.html#method_useDatabasePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::langPath","p":"Illuminate/Support/Facades/App.html#method_langPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::useLangPath","p":"Illuminate/Support/Facades/App.html#method_useLangPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::publicPath","p":"Illuminate/Support/Facades/App.html#method_publicPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::usePublicPath","p":"Illuminate/Support/Facades/App.html#method_usePublicPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::storagePath","p":"Illuminate/Support/Facades/App.html#method_storagePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::useStoragePath","p":"Illuminate/Support/Facades/App.html#method_useStoragePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::resourcePath","p":"Illuminate/Support/Facades/App.html#method_resourcePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::viewPath","p":"Illuminate/Support/Facades/App.html#method_viewPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::joinPaths","p":"Illuminate/Support/Facades/App.html#method_joinPaths","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::environmentPath","p":"Illuminate/Support/Facades/App.html#method_environmentPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::useEnvironmentPath","p":"Illuminate/Support/Facades/App.html#method_useEnvironmentPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::loadEnvironmentFrom","p":"Illuminate/Support/Facades/App.html#method_loadEnvironmentFrom","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::environmentFile","p":"Illuminate/Support/Facades/App.html#method_environmentFile","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::environmentFilePath","p":"Illuminate/Support/Facades/App.html#method_environmentFilePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::environment","p":"Illuminate/Support/Facades/App.html#method_environment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isLocal","p":"Illuminate/Support/Facades/App.html#method_isLocal","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isProduction","p":"Illuminate/Support/Facades/App.html#method_isProduction","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::detectEnvironment","p":"Illuminate/Support/Facades/App.html#method_detectEnvironment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::runningInConsole","p":"Illuminate/Support/Facades/App.html#method_runningInConsole","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::runningUnitTests","p":"Illuminate/Support/Facades/App.html#method_runningUnitTests","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::hasDebugModeEnabled","p":"Illuminate/Support/Facades/App.html#method_hasDebugModeEnabled","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::registerConfiguredProviders","p":"Illuminate/Support/Facades/App.html#method_registerConfiguredProviders","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::register","p":"Illuminate/Support/Facades/App.html#method_register","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getProvider","p":"Illuminate/Support/Facades/App.html#method_getProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getProviders","p":"Illuminate/Support/Facades/App.html#method_getProviders","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::resolveProvider","p":"Illuminate/Support/Facades/App.html#method_resolveProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::loadDeferredProviders","p":"Illuminate/Support/Facades/App.html#method_loadDeferredProviders","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::loadDeferredProvider","p":"Illuminate/Support/Facades/App.html#method_loadDeferredProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::registerDeferredProvider","p":"Illuminate/Support/Facades/App.html#method_registerDeferredProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::make","p":"Illuminate/Support/Facades/App.html#method_make","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::bound","p":"Illuminate/Support/Facades/App.html#method_bound","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isBooted","p":"Illuminate/Support/Facades/App.html#method_isBooted","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::boot","p":"Illuminate/Support/Facades/App.html#method_boot","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::booting","p":"Illuminate/Support/Facades/App.html#method_booting","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::booted","p":"Illuminate/Support/Facades/App.html#method_booted","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::handle","p":"Illuminate/Support/Facades/App.html#method_handle","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::shouldSkipMiddleware","p":"Illuminate/Support/Facades/App.html#method_shouldSkipMiddleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getCachedServicesPath","p":"Illuminate/Support/Facades/App.html#method_getCachedServicesPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getCachedPackagesPath","p":"Illuminate/Support/Facades/App.html#method_getCachedPackagesPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::configurationIsCached","p":"Illuminate/Support/Facades/App.html#method_configurationIsCached","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getCachedConfigPath","p":"Illuminate/Support/Facades/App.html#method_getCachedConfigPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::routesAreCached","p":"Illuminate/Support/Facades/App.html#method_routesAreCached","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getCachedRoutesPath","p":"Illuminate/Support/Facades/App.html#method_getCachedRoutesPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::eventsAreCached","p":"Illuminate/Support/Facades/App.html#method_eventsAreCached","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getCachedEventsPath","p":"Illuminate/Support/Facades/App.html#method_getCachedEventsPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::addAbsoluteCachePathPrefix","p":"Illuminate/Support/Facades/App.html#method_addAbsoluteCachePathPrefix","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::maintenanceMode","p":"Illuminate/Support/Facades/App.html#method_maintenanceMode","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isDownForMaintenance","p":"Illuminate/Support/Facades/App.html#method_isDownForMaintenance","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::abort","p":"Illuminate/Support/Facades/App.html#method_abort","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::terminating","p":"Illuminate/Support/Facades/App.html#method_terminating","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::terminate","p":"Illuminate/Support/Facades/App.html#method_terminate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getLoadedProviders","p":"Illuminate/Support/Facades/App.html#method_getLoadedProviders","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::providerIsLoaded","p":"Illuminate/Support/Facades/App.html#method_providerIsLoaded","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getDeferredServices","p":"Illuminate/Support/Facades/App.html#method_getDeferredServices","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::setDeferredServices","p":"Illuminate/Support/Facades/App.html#method_setDeferredServices","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::addDeferredServices","p":"Illuminate/Support/Facades/App.html#method_addDeferredServices","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isDeferredService","p":"Illuminate/Support/Facades/App.html#method_isDeferredService","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::provideFacades","p":"Illuminate/Support/Facades/App.html#method_provideFacades","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getLocale","p":"Illuminate/Support/Facades/App.html#method_getLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::currentLocale","p":"Illuminate/Support/Facades/App.html#method_currentLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getFallbackLocale","p":"Illuminate/Support/Facades/App.html#method_getFallbackLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::setLocale","p":"Illuminate/Support/Facades/App.html#method_setLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::setFallbackLocale","p":"Illuminate/Support/Facades/App.html#method_setFallbackLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isLocale","p":"Illuminate/Support/Facades/App.html#method_isLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::registerCoreContainerAliases","p":"Illuminate/Support/Facades/App.html#method_registerCoreContainerAliases","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::flush","p":"Illuminate/Support/Facades/App.html#method_flush","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getNamespace","p":"Illuminate/Support/Facades/App.html#method_getNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::when","p":"Illuminate/Support/Facades/App.html#method_when","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::has","p":"Illuminate/Support/Facades/App.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isShared","p":"Illuminate/Support/Facades/App.html#method_isShared","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::isAlias","p":"Illuminate/Support/Facades/App.html#method_isAlias","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::bind","p":"Illuminate/Support/Facades/App.html#method_bind","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::hasMethodBinding","p":"Illuminate/Support/Facades/App.html#method_hasMethodBinding","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::bindMethod","p":"Illuminate/Support/Facades/App.html#method_bindMethod","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::callMethodBinding","p":"Illuminate/Support/Facades/App.html#method_callMethodBinding","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::addContextualBinding","p":"Illuminate/Support/Facades/App.html#method_addContextualBinding","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::bindIf","p":"Illuminate/Support/Facades/App.html#method_bindIf","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::singleton","p":"Illuminate/Support/Facades/App.html#method_singleton","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::singletonIf","p":"Illuminate/Support/Facades/App.html#method_singletonIf","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::scoped","p":"Illuminate/Support/Facades/App.html#method_scoped","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::scopedIf","p":"Illuminate/Support/Facades/App.html#method_scopedIf","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::extend","p":"Illuminate/Support/Facades/App.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::instance","p":"Illuminate/Support/Facades/App.html#method_instance","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::tag","p":"Illuminate/Support/Facades/App.html#method_tag","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::tagged","p":"Illuminate/Support/Facades/App.html#method_tagged","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::alias","p":"Illuminate/Support/Facades/App.html#method_alias","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::rebinding","p":"Illuminate/Support/Facades/App.html#method_rebinding","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::refresh","p":"Illuminate/Support/Facades/App.html#method_refresh","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::wrap","p":"Illuminate/Support/Facades/App.html#method_wrap","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::call","p":"Illuminate/Support/Facades/App.html#method_call","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::factory","p":"Illuminate/Support/Facades/App.html#method_factory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::makeWith","p":"Illuminate/Support/Facades/App.html#method_makeWith","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::get","p":"Illuminate/Support/Facades/App.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::build","p":"Illuminate/Support/Facades/App.html#method_build","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::beforeResolving","p":"Illuminate/Support/Facades/App.html#method_beforeResolving","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::resolving","p":"Illuminate/Support/Facades/App.html#method_resolving","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::afterResolving","p":"Illuminate/Support/Facades/App.html#method_afterResolving","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getBindings","p":"Illuminate/Support/Facades/App.html#method_getBindings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getAlias","p":"Illuminate/Support/Facades/App.html#method_getAlias","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::forgetExtenders","p":"Illuminate/Support/Facades/App.html#method_forgetExtenders","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::forgetInstance","p":"Illuminate/Support/Facades/App.html#method_forgetInstance","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::forgetInstances","p":"Illuminate/Support/Facades/App.html#method_forgetInstances","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::forgetScopedInstances","p":"Illuminate/Support/Facades/App.html#method_forgetScopedInstances","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::getInstance","p":"Illuminate/Support/Facades/App.html#method_getInstance","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::setInstance","p":"Illuminate/Support/Facades/App.html#method_setInstance","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::macro","p":"Illuminate/Support/Facades/App.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::mixin","p":"Illuminate/Support/Facades/App.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::hasMacro","p":"Illuminate/Support/Facades/App.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\App::flushMacros","p":"Illuminate/Support/Facades/App.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::getFacadeAccessor","p":"Illuminate/Support/Facades/Artisan.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::handle","p":"Illuminate/Support/Facades/Artisan.html#method_handle","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::terminate","p":"Illuminate/Support/Facades/Artisan.html#method_terminate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::whenCommandLifecycleIsLongerThan","p":"Illuminate/Support/Facades/Artisan.html#method_whenCommandLifecycleIsLongerThan","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::commandStartedAt","p":"Illuminate/Support/Facades/Artisan.html#method_commandStartedAt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::command","p":"Illuminate/Support/Facades/Artisan.html#method_command","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::registerCommand","p":"Illuminate/Support/Facades/Artisan.html#method_registerCommand","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::call","p":"Illuminate/Support/Facades/Artisan.html#method_call","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::queue","p":"Illuminate/Support/Facades/Artisan.html#method_queue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::all","p":"Illuminate/Support/Facades/Artisan.html#method_all","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::output","p":"Illuminate/Support/Facades/Artisan.html#method_output","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::bootstrap","p":"Illuminate/Support/Facades/Artisan.html#method_bootstrap","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::bootstrapWithoutBootingProviders","p":"Illuminate/Support/Facades/Artisan.html#method_bootstrapWithoutBootingProviders","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Artisan::setArtisan","p":"Illuminate/Support/Facades/Artisan.html#method_setArtisan","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getFacadeAccessor","p":"Illuminate/Support/Facades/Auth.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::routes","p":"Illuminate/Support/Facades/Auth.html#method_routes","d":"<p>Register the typical authentication routes for an application.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::guard","p":"Illuminate/Support/Facades/Auth.html#method_guard","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::createSessionDriver","p":"Illuminate/Support/Facades/Auth.html#method_createSessionDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::createTokenDriver","p":"Illuminate/Support/Facades/Auth.html#method_createTokenDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getDefaultDriver","p":"Illuminate/Support/Facades/Auth.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::shouldUse","p":"Illuminate/Support/Facades/Auth.html#method_shouldUse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setDefaultDriver","p":"Illuminate/Support/Facades/Auth.html#method_setDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::viaRequest","p":"Illuminate/Support/Facades/Auth.html#method_viaRequest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::userResolver","p":"Illuminate/Support/Facades/Auth.html#method_userResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::resolveUsersUsing","p":"Illuminate/Support/Facades/Auth.html#method_resolveUsersUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::extend","p":"Illuminate/Support/Facades/Auth.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::provider","p":"Illuminate/Support/Facades/Auth.html#method_provider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::hasResolvedGuards","p":"Illuminate/Support/Facades/Auth.html#method_hasResolvedGuards","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::forgetGuards","p":"Illuminate/Support/Facades/Auth.html#method_forgetGuards","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setApplication","p":"Illuminate/Support/Facades/Auth.html#method_setApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::createUserProvider","p":"Illuminate/Support/Facades/Auth.html#method_createUserProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getDefaultUserProvider","p":"Illuminate/Support/Facades/Auth.html#method_getDefaultUserProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::check","p":"Illuminate/Support/Facades/Auth.html#method_check","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::guest","p":"Illuminate/Support/Facades/Auth.html#method_guest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::user","p":"Illuminate/Support/Facades/Auth.html#method_user","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::id","p":"Illuminate/Support/Facades/Auth.html#method_id","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::validate","p":"Illuminate/Support/Facades/Auth.html#method_validate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::hasUser","p":"Illuminate/Support/Facades/Auth.html#method_hasUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setUser","p":"Illuminate/Support/Facades/Auth.html#method_setUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::attempt","p":"Illuminate/Support/Facades/Auth.html#method_attempt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::once","p":"Illuminate/Support/Facades/Auth.html#method_once","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::login","p":"Illuminate/Support/Facades/Auth.html#method_login","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::loginUsingId","p":"Illuminate/Support/Facades/Auth.html#method_loginUsingId","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::onceUsingId","p":"Illuminate/Support/Facades/Auth.html#method_onceUsingId","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::viaRemember","p":"Illuminate/Support/Facades/Auth.html#method_viaRemember","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::logout","p":"Illuminate/Support/Facades/Auth.html#method_logout","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::basic","p":"Illuminate/Support/Facades/Auth.html#method_basic","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::onceBasic","p":"Illuminate/Support/Facades/Auth.html#method_onceBasic","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::attemptWhen","p":"Illuminate/Support/Facades/Auth.html#method_attemptWhen","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::logoutCurrentDevice","p":"Illuminate/Support/Facades/Auth.html#method_logoutCurrentDevice","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::logoutOtherDevices","p":"Illuminate/Support/Facades/Auth.html#method_logoutOtherDevices","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::attempting","p":"Illuminate/Support/Facades/Auth.html#method_attempting","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getLastAttempted","p":"Illuminate/Support/Facades/Auth.html#method_getLastAttempted","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getName","p":"Illuminate/Support/Facades/Auth.html#method_getName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getRecallerName","p":"Illuminate/Support/Facades/Auth.html#method_getRecallerName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setRememberDuration","p":"Illuminate/Support/Facades/Auth.html#method_setRememberDuration","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getCookieJar","p":"Illuminate/Support/Facades/Auth.html#method_getCookieJar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setCookieJar","p":"Illuminate/Support/Facades/Auth.html#method_setCookieJar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getDispatcher","p":"Illuminate/Support/Facades/Auth.html#method_getDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setDispatcher","p":"Illuminate/Support/Facades/Auth.html#method_setDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getSession","p":"Illuminate/Support/Facades/Auth.html#method_getSession","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getUser","p":"Illuminate/Support/Facades/Auth.html#method_getUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getRequest","p":"Illuminate/Support/Facades/Auth.html#method_getRequest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setRequest","p":"Illuminate/Support/Facades/Auth.html#method_setRequest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getTimebox","p":"Illuminate/Support/Facades/Auth.html#method_getTimebox","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::authenticate","p":"Illuminate/Support/Facades/Auth.html#method_authenticate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::forgetUser","p":"Illuminate/Support/Facades/Auth.html#method_forgetUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::getProvider","p":"Illuminate/Support/Facades/Auth.html#method_getProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::setProvider","p":"Illuminate/Support/Facades/Auth.html#method_setProvider","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::macro","p":"Illuminate/Support/Facades/Auth.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::mixin","p":"Illuminate/Support/Facades/Auth.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::hasMacro","p":"Illuminate/Support/Facades/Auth.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Auth::flushMacros","p":"Illuminate/Support/Facades/Auth.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getFacadeAccessor","p":"Illuminate/Support/Facades/Blade.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::compile","p":"Illuminate/Support/Facades/Blade.html#method_compile","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getPath","p":"Illuminate/Support/Facades/Blade.html#method_getPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::setPath","p":"Illuminate/Support/Facades/Blade.html#method_setPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::compileString","p":"Illuminate/Support/Facades/Blade.html#method_compileString","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::render","p":"Illuminate/Support/Facades/Blade.html#method_render","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::renderComponent","p":"Illuminate/Support/Facades/Blade.html#method_renderComponent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::stripParentheses","p":"Illuminate/Support/Facades/Blade.html#method_stripParentheses","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::extend","p":"Illuminate/Support/Facades/Blade.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getExtensions","p":"Illuminate/Support/Facades/Blade.html#method_getExtensions","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::if","p":"Illuminate/Support/Facades/Blade.html#method_if","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::check","p":"Illuminate/Support/Facades/Blade.html#method_check","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::component","p":"Illuminate/Support/Facades/Blade.html#method_component","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::components","p":"Illuminate/Support/Facades/Blade.html#method_components","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getClassComponentAliases","p":"Illuminate/Support/Facades/Blade.html#method_getClassComponentAliases","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::anonymousComponentPath","p":"Illuminate/Support/Facades/Blade.html#method_anonymousComponentPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::anonymousComponentNamespace","p":"Illuminate/Support/Facades/Blade.html#method_anonymousComponentNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::componentNamespace","p":"Illuminate/Support/Facades/Blade.html#method_componentNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getAnonymousComponentPaths","p":"Illuminate/Support/Facades/Blade.html#method_getAnonymousComponentPaths","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getAnonymousComponentNamespaces","p":"Illuminate/Support/Facades/Blade.html#method_getAnonymousComponentNamespaces","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getClassComponentNamespaces","p":"Illuminate/Support/Facades/Blade.html#method_getClassComponentNamespaces","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::aliasComponent","p":"Illuminate/Support/Facades/Blade.html#method_aliasComponent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::include","p":"Illuminate/Support/Facades/Blade.html#method_include","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::aliasInclude","p":"Illuminate/Support/Facades/Blade.html#method_aliasInclude","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::directive","p":"Illuminate/Support/Facades/Blade.html#method_directive","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getCustomDirectives","p":"Illuminate/Support/Facades/Blade.html#method_getCustomDirectives","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::precompiler","p":"Illuminate/Support/Facades/Blade.html#method_precompiler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::setEchoFormat","p":"Illuminate/Support/Facades/Blade.html#method_setEchoFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::withDoubleEncoding","p":"Illuminate/Support/Facades/Blade.html#method_withDoubleEncoding","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::withoutDoubleEncoding","p":"Illuminate/Support/Facades/Blade.html#method_withoutDoubleEncoding","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::withoutComponentTags","p":"Illuminate/Support/Facades/Blade.html#method_withoutComponentTags","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::getCompiledPath","p":"Illuminate/Support/Facades/Blade.html#method_getCompiledPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::isExpired","p":"Illuminate/Support/Facades/Blade.html#method_isExpired","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::newComponentHash","p":"Illuminate/Support/Facades/Blade.html#method_newComponentHash","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::compileClassComponentOpening","p":"Illuminate/Support/Facades/Blade.html#method_compileClassComponentOpening","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::compileEndComponentClass","p":"Illuminate/Support/Facades/Blade.html#method_compileEndComponentClass","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::sanitizeComponentAttribute","p":"Illuminate/Support/Facades/Blade.html#method_sanitizeComponentAttribute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::compileEndOnce","p":"Illuminate/Support/Facades/Blade.html#method_compileEndOnce","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::stringable","p":"Illuminate/Support/Facades/Blade.html#method_stringable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::compileEchos","p":"Illuminate/Support/Facades/Blade.html#method_compileEchos","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Blade::applyEchoHandler","p":"Illuminate/Support/Facades/Blade.html#method_applyEchoHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::getFacadeAccessor","p":"Illuminate/Support/Facades/Broadcast.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::routes","p":"Illuminate/Support/Facades/Broadcast.html#method_routes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::userRoutes","p":"Illuminate/Support/Facades/Broadcast.html#method_userRoutes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::channelRoutes","p":"Illuminate/Support/Facades/Broadcast.html#method_channelRoutes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::socket","p":"Illuminate/Support/Facades/Broadcast.html#method_socket","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::event","p":"Illuminate/Support/Facades/Broadcast.html#method_event","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::queue","p":"Illuminate/Support/Facades/Broadcast.html#method_queue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::connection","p":"Illuminate/Support/Facades/Broadcast.html#method_connection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::driver","p":"Illuminate/Support/Facades/Broadcast.html#method_driver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::pusher","p":"Illuminate/Support/Facades/Broadcast.html#method_pusher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::ably","p":"Illuminate/Support/Facades/Broadcast.html#method_ably","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::getDefaultDriver","p":"Illuminate/Support/Facades/Broadcast.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::setDefaultDriver","p":"Illuminate/Support/Facades/Broadcast.html#method_setDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::purge","p":"Illuminate/Support/Facades/Broadcast.html#method_purge","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::extend","p":"Illuminate/Support/Facades/Broadcast.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::getApplication","p":"Illuminate/Support/Facades/Broadcast.html#method_getApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::setApplication","p":"Illuminate/Support/Facades/Broadcast.html#method_setApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::forgetDrivers","p":"Illuminate/Support/Facades/Broadcast.html#method_forgetDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::auth","p":"Illuminate/Support/Facades/Broadcast.html#method_auth","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::validAuthenticationResponse","p":"Illuminate/Support/Facades/Broadcast.html#method_validAuthenticationResponse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::broadcast","p":"Illuminate/Support/Facades/Broadcast.html#method_broadcast","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::resolveAuthenticatedUser","p":"Illuminate/Support/Facades/Broadcast.html#method_resolveAuthenticatedUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::resolveAuthenticatedUserUsing","p":"Illuminate/Support/Facades/Broadcast.html#method_resolveAuthenticatedUserUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Broadcast::channel","p":"Illuminate/Support/Facades/Broadcast.html#method_channel","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::fake","p":"Illuminate/Support/Facades/Bus.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatchChain","p":"Illuminate/Support/Facades/Bus.html#method_dispatchChain","d":"<p>Dispatch the given chain of jobs.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::getFacadeAccessor","p":"Illuminate/Support/Facades/Bus.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatch","p":"Illuminate/Support/Facades/Bus.html#method_dispatch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatchSync","p":"Illuminate/Support/Facades/Bus.html#method_dispatchSync","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatchNow","p":"Illuminate/Support/Facades/Bus.html#method_dispatchNow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::findBatch","p":"Illuminate/Support/Facades/Bus.html#method_findBatch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::batch","p":"Illuminate/Support/Facades/Bus.html#method_batch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::chain","p":"Illuminate/Support/Facades/Bus.html#method_chain","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::hasCommandHandler","p":"Illuminate/Support/Facades/Bus.html#method_hasCommandHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::getCommandHandler","p":"Illuminate/Support/Facades/Bus.html#method_getCommandHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatchToQueue","p":"Illuminate/Support/Facades/Bus.html#method_dispatchToQueue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatchAfterResponse","p":"Illuminate/Support/Facades/Bus.html#method_dispatchAfterResponse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::pipeThrough","p":"Illuminate/Support/Facades/Bus.html#method_pipeThrough","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::map","p":"Illuminate/Support/Facades/Bus.html#method_map","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::except","p":"Illuminate/Support/Facades/Bus.html#method_except","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertDispatched","p":"Illuminate/Support/Facades/Bus.html#method_assertDispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertDispatchedTimes","p":"Illuminate/Support/Facades/Bus.html#method_assertDispatchedTimes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertNotDispatched","p":"Illuminate/Support/Facades/Bus.html#method_assertNotDispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertNothingDispatched","p":"Illuminate/Support/Facades/Bus.html#method_assertNothingDispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertDispatchedSync","p":"Illuminate/Support/Facades/Bus.html#method_assertDispatchedSync","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertDispatchedSyncTimes","p":"Illuminate/Support/Facades/Bus.html#method_assertDispatchedSyncTimes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertNotDispatchedSync","p":"Illuminate/Support/Facades/Bus.html#method_assertNotDispatchedSync","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertDispatchedAfterResponse","p":"Illuminate/Support/Facades/Bus.html#method_assertDispatchedAfterResponse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertDispatchedAfterResponseTimes","p":"Illuminate/Support/Facades/Bus.html#method_assertDispatchedAfterResponseTimes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertNotDispatchedAfterResponse","p":"Illuminate/Support/Facades/Bus.html#method_assertNotDispatchedAfterResponse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertChained","p":"Illuminate/Support/Facades/Bus.html#method_assertChained","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertDispatchedWithoutChain","p":"Illuminate/Support/Facades/Bus.html#method_assertDispatchedWithoutChain","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertBatched","p":"Illuminate/Support/Facades/Bus.html#method_assertBatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertBatchCount","p":"Illuminate/Support/Facades/Bus.html#method_assertBatchCount","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::assertNothingBatched","p":"Illuminate/Support/Facades/Bus.html#method_assertNothingBatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatched","p":"Illuminate/Support/Facades/Bus.html#method_dispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatchedSync","p":"Illuminate/Support/Facades/Bus.html#method_dispatchedSync","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatchedAfterResponse","p":"Illuminate/Support/Facades/Bus.html#method_dispatchedAfterResponse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::batched","p":"Illuminate/Support/Facades/Bus.html#method_batched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::hasDispatched","p":"Illuminate/Support/Facades/Bus.html#method_hasDispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::hasDispatchedSync","p":"Illuminate/Support/Facades/Bus.html#method_hasDispatchedSync","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::hasDispatchedAfterResponse","p":"Illuminate/Support/Facades/Bus.html#method_hasDispatchedAfterResponse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::dispatchFakeBatch","p":"Illuminate/Support/Facades/Bus.html#method_dispatchFakeBatch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Bus::recordPendingBatch","p":"Illuminate/Support/Facades/Bus.html#method_recordPendingBatch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::getFacadeAccessor","p":"Illuminate/Support/Facades/Cache.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::store","p":"Illuminate/Support/Facades/Cache.html#method_store","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::driver","p":"Illuminate/Support/Facades/Cache.html#method_driver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::resolve","p":"Illuminate/Support/Facades/Cache.html#method_resolve","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::repository","p":"Illuminate/Support/Facades/Cache.html#method_repository","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::refreshEventDispatcher","p":"Illuminate/Support/Facades/Cache.html#method_refreshEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::getDefaultDriver","p":"Illuminate/Support/Facades/Cache.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::setDefaultDriver","p":"Illuminate/Support/Facades/Cache.html#method_setDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::forgetDriver","p":"Illuminate/Support/Facades/Cache.html#method_forgetDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::purge","p":"Illuminate/Support/Facades/Cache.html#method_purge","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::extend","p":"Illuminate/Support/Facades/Cache.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::has","p":"Illuminate/Support/Facades/Cache.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::missing","p":"Illuminate/Support/Facades/Cache.html#method_missing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::get","p":"Illuminate/Support/Facades/Cache.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::many","p":"Illuminate/Support/Facades/Cache.html#method_many","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::getMultiple","p":"Illuminate/Support/Facades/Cache.html#method_getMultiple","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::pull","p":"Illuminate/Support/Facades/Cache.html#method_pull","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::put","p":"Illuminate/Support/Facades/Cache.html#method_put","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::set","p":"Illuminate/Support/Facades/Cache.html#method_set","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::putMany","p":"Illuminate/Support/Facades/Cache.html#method_putMany","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::setMultiple","p":"Illuminate/Support/Facades/Cache.html#method_setMultiple","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::add","p":"Illuminate/Support/Facades/Cache.html#method_add","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::increment","p":"Illuminate/Support/Facades/Cache.html#method_increment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::decrement","p":"Illuminate/Support/Facades/Cache.html#method_decrement","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::forever","p":"Illuminate/Support/Facades/Cache.html#method_forever","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::remember","p":"Illuminate/Support/Facades/Cache.html#method_remember","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::sear","p":"Illuminate/Support/Facades/Cache.html#method_sear","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::rememberForever","p":"Illuminate/Support/Facades/Cache.html#method_rememberForever","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::forget","p":"Illuminate/Support/Facades/Cache.html#method_forget","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::delete","p":"Illuminate/Support/Facades/Cache.html#method_delete","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::deleteMultiple","p":"Illuminate/Support/Facades/Cache.html#method_deleteMultiple","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::clear","p":"Illuminate/Support/Facades/Cache.html#method_clear","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::tags","p":"Illuminate/Support/Facades/Cache.html#method_tags","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::supportsTags","p":"Illuminate/Support/Facades/Cache.html#method_supportsTags","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::getDefaultCacheTime","p":"Illuminate/Support/Facades/Cache.html#method_getDefaultCacheTime","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::setDefaultCacheTime","p":"Illuminate/Support/Facades/Cache.html#method_setDefaultCacheTime","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::getStore","p":"Illuminate/Support/Facades/Cache.html#method_getStore","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::setStore","p":"Illuminate/Support/Facades/Cache.html#method_setStore","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::getEventDispatcher","p":"Illuminate/Support/Facades/Cache.html#method_getEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::setEventDispatcher","p":"Illuminate/Support/Facades/Cache.html#method_setEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::macro","p":"Illuminate/Support/Facades/Cache.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::mixin","p":"Illuminate/Support/Facades/Cache.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::hasMacro","p":"Illuminate/Support/Facades/Cache.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::flushMacros","p":"Illuminate/Support/Facades/Cache.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::macroCall","p":"Illuminate/Support/Facades/Cache.html#method_macroCall","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::flush","p":"Illuminate/Support/Facades/Cache.html#method_flush","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::getPrefix","p":"Illuminate/Support/Facades/Cache.html#method_getPrefix","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::lock","p":"Illuminate/Support/Facades/Cache.html#method_lock","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cache::restoreLock","p":"Illuminate/Support/Facades/Cache.html#method_restoreLock","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::getFacadeAccessor","p":"Illuminate/Support/Facades/Config.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::has","p":"Illuminate/Support/Facades/Config.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::get","p":"Illuminate/Support/Facades/Config.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::getMany","p":"Illuminate/Support/Facades/Config.html#method_getMany","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::set","p":"Illuminate/Support/Facades/Config.html#method_set","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::prepend","p":"Illuminate/Support/Facades/Config.html#method_prepend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::push","p":"Illuminate/Support/Facades/Config.html#method_push","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::all","p":"Illuminate/Support/Facades/Config.html#method_all","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::macro","p":"Illuminate/Support/Facades/Config.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::mixin","p":"Illuminate/Support/Facades/Config.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::hasMacro","p":"Illuminate/Support/Facades/Config.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Config::flushMacros","p":"Illuminate/Support/Facades/Config.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::has","p":"Illuminate/Support/Facades/Cookie.html#method_has","d":"<p>Determine if a cookie exists on the request.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::get","p":"Illuminate/Support/Facades/Cookie.html#method_get","d":"<p>Retrieve a cookie from the request.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::getFacadeAccessor","p":"Illuminate/Support/Facades/Cookie.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::make","p":"Illuminate/Support/Facades/Cookie.html#method_make","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::forever","p":"Illuminate/Support/Facades/Cookie.html#method_forever","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::forget","p":"Illuminate/Support/Facades/Cookie.html#method_forget","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::hasQueued","p":"Illuminate/Support/Facades/Cookie.html#method_hasQueued","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::queued","p":"Illuminate/Support/Facades/Cookie.html#method_queued","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::queue","p":"Illuminate/Support/Facades/Cookie.html#method_queue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::expire","p":"Illuminate/Support/Facades/Cookie.html#method_expire","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::unqueue","p":"Illuminate/Support/Facades/Cookie.html#method_unqueue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::setDefaultPathAndDomain","p":"Illuminate/Support/Facades/Cookie.html#method_setDefaultPathAndDomain","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::getQueuedCookies","p":"Illuminate/Support/Facades/Cookie.html#method_getQueuedCookies","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::flushQueuedCookies","p":"Illuminate/Support/Facades/Cookie.html#method_flushQueuedCookies","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::macro","p":"Illuminate/Support/Facades/Cookie.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::mixin","p":"Illuminate/Support/Facades/Cookie.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::hasMacro","p":"Illuminate/Support/Facades/Cookie.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Cookie::flushMacros","p":"Illuminate/Support/Facades/Cookie.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::getFacadeAccessor","p":"Illuminate/Support/Facades/Crypt.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::supported","p":"Illuminate/Support/Facades/Crypt.html#method_supported","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::generateKey","p":"Illuminate/Support/Facades/Crypt.html#method_generateKey","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::encrypt","p":"Illuminate/Support/Facades/Crypt.html#method_encrypt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::encryptString","p":"Illuminate/Support/Facades/Crypt.html#method_encryptString","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::decrypt","p":"Illuminate/Support/Facades/Crypt.html#method_decrypt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::decryptString","p":"Illuminate/Support/Facades/Crypt.html#method_decryptString","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Crypt::getKey","p":"Illuminate/Support/Facades/Crypt.html#method_getKey","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getFacadeAccessor","p":"Illuminate/Support/Facades/DB.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::connection","p":"Illuminate/Support/Facades/DB.html#method_connection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::registerDoctrineType","p":"Illuminate/Support/Facades/DB.html#method_registerDoctrineType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::purge","p":"Illuminate/Support/Facades/DB.html#method_purge","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::disconnect","p":"Illuminate/Support/Facades/DB.html#method_disconnect","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::reconnect","p":"Illuminate/Support/Facades/DB.html#method_reconnect","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::usingConnection","p":"Illuminate/Support/Facades/DB.html#method_usingConnection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getDefaultConnection","p":"Illuminate/Support/Facades/DB.html#method_getDefaultConnection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setDefaultConnection","p":"Illuminate/Support/Facades/DB.html#method_setDefaultConnection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::supportedDrivers","p":"Illuminate/Support/Facades/DB.html#method_supportedDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::availableDrivers","p":"Illuminate/Support/Facades/DB.html#method_availableDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::extend","p":"Illuminate/Support/Facades/DB.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::forgetExtension","p":"Illuminate/Support/Facades/DB.html#method_forgetExtension","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getConnections","p":"Illuminate/Support/Facades/DB.html#method_getConnections","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setReconnector","p":"Illuminate/Support/Facades/DB.html#method_setReconnector","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setApplication","p":"Illuminate/Support/Facades/DB.html#method_setApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::macro","p":"Illuminate/Support/Facades/DB.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::mixin","p":"Illuminate/Support/Facades/DB.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::hasMacro","p":"Illuminate/Support/Facades/DB.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::flushMacros","p":"Illuminate/Support/Facades/DB.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::macroCall","p":"Illuminate/Support/Facades/DB.html#method_macroCall","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::useDefaultQueryGrammar","p":"Illuminate/Support/Facades/DB.html#method_useDefaultQueryGrammar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::useDefaultSchemaGrammar","p":"Illuminate/Support/Facades/DB.html#method_useDefaultSchemaGrammar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::useDefaultPostProcessor","p":"Illuminate/Support/Facades/DB.html#method_useDefaultPostProcessor","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getSchemaBuilder","p":"Illuminate/Support/Facades/DB.html#method_getSchemaBuilder","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::table","p":"Illuminate/Support/Facades/DB.html#method_table","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::query","p":"Illuminate/Support/Facades/DB.html#method_query","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::selectOne","p":"Illuminate/Support/Facades/DB.html#method_selectOne","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::scalar","p":"Illuminate/Support/Facades/DB.html#method_scalar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::selectFromWriteConnection","p":"Illuminate/Support/Facades/DB.html#method_selectFromWriteConnection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::select","p":"Illuminate/Support/Facades/DB.html#method_select","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::cursor","p":"Illuminate/Support/Facades/DB.html#method_cursor","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::insert","p":"Illuminate/Support/Facades/DB.html#method_insert","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::update","p":"Illuminate/Support/Facades/DB.html#method_update","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::delete","p":"Illuminate/Support/Facades/DB.html#method_delete","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::statement","p":"Illuminate/Support/Facades/DB.html#method_statement","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::affectingStatement","p":"Illuminate/Support/Facades/DB.html#method_affectingStatement","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::unprepared","p":"Illuminate/Support/Facades/DB.html#method_unprepared","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::pretend","p":"Illuminate/Support/Facades/DB.html#method_pretend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::bindValues","p":"Illuminate/Support/Facades/DB.html#method_bindValues","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::prepareBindings","p":"Illuminate/Support/Facades/DB.html#method_prepareBindings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::logQuery","p":"Illuminate/Support/Facades/DB.html#method_logQuery","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::whenQueryingForLongerThan","p":"Illuminate/Support/Facades/DB.html#method_whenQueryingForLongerThan","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::allowQueryDurationHandlersToRunAgain","p":"Illuminate/Support/Facades/DB.html#method_allowQueryDurationHandlersToRunAgain","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::totalQueryDuration","p":"Illuminate/Support/Facades/DB.html#method_totalQueryDuration","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::resetTotalQueryDuration","p":"Illuminate/Support/Facades/DB.html#method_resetTotalQueryDuration","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::reconnectIfMissingConnection","p":"Illuminate/Support/Facades/DB.html#method_reconnectIfMissingConnection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::beforeExecuting","p":"Illuminate/Support/Facades/DB.html#method_beforeExecuting","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::listen","p":"Illuminate/Support/Facades/DB.html#method_listen","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::raw","p":"Illuminate/Support/Facades/DB.html#method_raw","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::hasModifiedRecords","p":"Illuminate/Support/Facades/DB.html#method_hasModifiedRecords","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::recordsHaveBeenModified","p":"Illuminate/Support/Facades/DB.html#method_recordsHaveBeenModified","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setRecordModificationState","p":"Illuminate/Support/Facades/DB.html#method_setRecordModificationState","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::forgetRecordModificationState","p":"Illuminate/Support/Facades/DB.html#method_forgetRecordModificationState","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::useWriteConnectionWhenReading","p":"Illuminate/Support/Facades/DB.html#method_useWriteConnectionWhenReading","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::isDoctrineAvailable","p":"Illuminate/Support/Facades/DB.html#method_isDoctrineAvailable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::usingNativeSchemaOperations","p":"Illuminate/Support/Facades/DB.html#method_usingNativeSchemaOperations","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getDoctrineColumn","p":"Illuminate/Support/Facades/DB.html#method_getDoctrineColumn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getDoctrineSchemaManager","p":"Illuminate/Support/Facades/DB.html#method_getDoctrineSchemaManager","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getDoctrineConnection","p":"Illuminate/Support/Facades/DB.html#method_getDoctrineConnection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getPdo","p":"Illuminate/Support/Facades/DB.html#method_getPdo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getRawPdo","p":"Illuminate/Support/Facades/DB.html#method_getRawPdo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getReadPdo","p":"Illuminate/Support/Facades/DB.html#method_getReadPdo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getRawReadPdo","p":"Illuminate/Support/Facades/DB.html#method_getRawReadPdo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setPdo","p":"Illuminate/Support/Facades/DB.html#method_setPdo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setReadPdo","p":"Illuminate/Support/Facades/DB.html#method_setReadPdo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getName","p":"Illuminate/Support/Facades/DB.html#method_getName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getNameWithReadWriteType","p":"Illuminate/Support/Facades/DB.html#method_getNameWithReadWriteType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getConfig","p":"Illuminate/Support/Facades/DB.html#method_getConfig","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getDriverName","p":"Illuminate/Support/Facades/DB.html#method_getDriverName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getQueryGrammar","p":"Illuminate/Support/Facades/DB.html#method_getQueryGrammar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setQueryGrammar","p":"Illuminate/Support/Facades/DB.html#method_setQueryGrammar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getSchemaGrammar","p":"Illuminate/Support/Facades/DB.html#method_getSchemaGrammar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setSchemaGrammar","p":"Illuminate/Support/Facades/DB.html#method_setSchemaGrammar","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getPostProcessor","p":"Illuminate/Support/Facades/DB.html#method_getPostProcessor","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setPostProcessor","p":"Illuminate/Support/Facades/DB.html#method_setPostProcessor","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getEventDispatcher","p":"Illuminate/Support/Facades/DB.html#method_getEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setEventDispatcher","p":"Illuminate/Support/Facades/DB.html#method_setEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::unsetEventDispatcher","p":"Illuminate/Support/Facades/DB.html#method_unsetEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setTransactionManager","p":"Illuminate/Support/Facades/DB.html#method_setTransactionManager","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::unsetTransactionManager","p":"Illuminate/Support/Facades/DB.html#method_unsetTransactionManager","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::pretending","p":"Illuminate/Support/Facades/DB.html#method_pretending","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getQueryLog","p":"Illuminate/Support/Facades/DB.html#method_getQueryLog","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::flushQueryLog","p":"Illuminate/Support/Facades/DB.html#method_flushQueryLog","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::enableQueryLog","p":"Illuminate/Support/Facades/DB.html#method_enableQueryLog","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::disableQueryLog","p":"Illuminate/Support/Facades/DB.html#method_disableQueryLog","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::logging","p":"Illuminate/Support/Facades/DB.html#method_logging","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getDatabaseName","p":"Illuminate/Support/Facades/DB.html#method_getDatabaseName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setDatabaseName","p":"Illuminate/Support/Facades/DB.html#method_setDatabaseName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setReadWriteType","p":"Illuminate/Support/Facades/DB.html#method_setReadWriteType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getTablePrefix","p":"Illuminate/Support/Facades/DB.html#method_getTablePrefix","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::setTablePrefix","p":"Illuminate/Support/Facades/DB.html#method_setTablePrefix","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::withTablePrefix","p":"Illuminate/Support/Facades/DB.html#method_withTablePrefix","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::resolverFor","p":"Illuminate/Support/Facades/DB.html#method_resolverFor","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::getResolver","p":"Illuminate/Support/Facades/DB.html#method_getResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::transaction","p":"Illuminate/Support/Facades/DB.html#method_transaction","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::beginTransaction","p":"Illuminate/Support/Facades/DB.html#method_beginTransaction","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::commit","p":"Illuminate/Support/Facades/DB.html#method_commit","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::rollBack","p":"Illuminate/Support/Facades/DB.html#method_rollBack","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::transactionLevel","p":"Illuminate/Support/Facades/DB.html#method_transactionLevel","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\DB::afterCommit","p":"Illuminate/Support/Facades/DB.html#method_afterCommit","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getFacadeAccessor","p":"Illuminate/Support/Facades/Date.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::resolveFacadeInstance","p":"Illuminate/Support/Facades/Date.html#method_resolveFacadeInstance","d":"<p>Resolve the facade root instance from the container.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::use","p":"Illuminate/Support/Facades/Date.html#method_use","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::useDefault","p":"Illuminate/Support/Facades/Date.html#method_useDefault","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::useCallable","p":"Illuminate/Support/Facades/Date.html#method_useCallable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::useClass","p":"Illuminate/Support/Facades/Date.html#method_useClass","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::useFactory","p":"Illuminate/Support/Facades/Date.html#method_useFactory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::create","p":"Illuminate/Support/Facades/Date.html#method_create","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createFromDate","p":"Illuminate/Support/Facades/Date.html#method_createFromDate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createFromFormat","p":"Illuminate/Support/Facades/Date.html#method_createFromFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createFromTime","p":"Illuminate/Support/Facades/Date.html#method_createFromTime","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createFromTimeString","p":"Illuminate/Support/Facades/Date.html#method_createFromTimeString","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createFromTimestamp","p":"Illuminate/Support/Facades/Date.html#method_createFromTimestamp","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createFromTimestampMs","p":"Illuminate/Support/Facades/Date.html#method_createFromTimestampMs","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createFromTimestampUTC","p":"Illuminate/Support/Facades/Date.html#method_createFromTimestampUTC","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createMidnightDate","p":"Illuminate/Support/Facades/Date.html#method_createMidnightDate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::createSafe","p":"Illuminate/Support/Facades/Date.html#method_createSafe","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::disableHumanDiffOption","p":"Illuminate/Support/Facades/Date.html#method_disableHumanDiffOption","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::enableHumanDiffOption","p":"Illuminate/Support/Facades/Date.html#method_enableHumanDiffOption","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::executeWithLocale","p":"Illuminate/Support/Facades/Date.html#method_executeWithLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::fromSerialized","p":"Illuminate/Support/Facades/Date.html#method_fromSerialized","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getAvailableLocales","p":"Illuminate/Support/Facades/Date.html#method_getAvailableLocales","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getDays","p":"Illuminate/Support/Facades/Date.html#method_getDays","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getHumanDiffOptions","p":"Illuminate/Support/Facades/Date.html#method_getHumanDiffOptions","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getIsoUnits","p":"Illuminate/Support/Facades/Date.html#method_getIsoUnits","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getLastErrors","p":"Illuminate/Support/Facades/Date.html#method_getLastErrors","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getLocale","p":"Illuminate/Support/Facades/Date.html#method_getLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getMidDayAt","p":"Illuminate/Support/Facades/Date.html#method_getMidDayAt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getTestNow","p":"Illuminate/Support/Facades/Date.html#method_getTestNow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getTranslator","p":"Illuminate/Support/Facades/Date.html#method_getTranslator","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getWeekEndsAt","p":"Illuminate/Support/Facades/Date.html#method_getWeekEndsAt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getWeekStartsAt","p":"Illuminate/Support/Facades/Date.html#method_getWeekStartsAt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::getWeekendDays","p":"Illuminate/Support/Facades/Date.html#method_getWeekendDays","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::hasFormat","p":"Illuminate/Support/Facades/Date.html#method_hasFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::hasMacro","p":"Illuminate/Support/Facades/Date.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::hasRelativeKeywords","p":"Illuminate/Support/Facades/Date.html#method_hasRelativeKeywords","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::hasTestNow","p":"Illuminate/Support/Facades/Date.html#method_hasTestNow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::instance","p":"Illuminate/Support/Facades/Date.html#method_instance","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::isImmutable","p":"Illuminate/Support/Facades/Date.html#method_isImmutable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::isModifiableUnit","p":"Illuminate/Support/Facades/Date.html#method_isModifiableUnit","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::isMutable","p":"Illuminate/Support/Facades/Date.html#method_isMutable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::isStrictModeEnabled","p":"Illuminate/Support/Facades/Date.html#method_isStrictModeEnabled","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::localeHasDiffOneDayWords","p":"Illuminate/Support/Facades/Date.html#method_localeHasDiffOneDayWords","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::localeHasDiffSyntax","p":"Illuminate/Support/Facades/Date.html#method_localeHasDiffSyntax","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::localeHasDiffTwoDayWords","p":"Illuminate/Support/Facades/Date.html#method_localeHasDiffTwoDayWords","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::localeHasPeriodSyntax","p":"Illuminate/Support/Facades/Date.html#method_localeHasPeriodSyntax","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::localeHasShortUnits","p":"Illuminate/Support/Facades/Date.html#method_localeHasShortUnits","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::macro","p":"Illuminate/Support/Facades/Date.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::make","p":"Illuminate/Support/Facades/Date.html#method_make","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::maxValue","p":"Illuminate/Support/Facades/Date.html#method_maxValue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::minValue","p":"Illuminate/Support/Facades/Date.html#method_minValue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::mixin","p":"Illuminate/Support/Facades/Date.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::now","p":"Illuminate/Support/Facades/Date.html#method_now","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::parse","p":"Illuminate/Support/Facades/Date.html#method_parse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::pluralUnit","p":"Illuminate/Support/Facades/Date.html#method_pluralUnit","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::resetMonthsOverflow","p":"Illuminate/Support/Facades/Date.html#method_resetMonthsOverflow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::resetToStringFormat","p":"Illuminate/Support/Facades/Date.html#method_resetToStringFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::resetYearsOverflow","p":"Illuminate/Support/Facades/Date.html#method_resetYearsOverflow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::serializeUsing","p":"Illuminate/Support/Facades/Date.html#method_serializeUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setHumanDiffOptions","p":"Illuminate/Support/Facades/Date.html#method_setHumanDiffOptions","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setLocale","p":"Illuminate/Support/Facades/Date.html#method_setLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setMidDayAt","p":"Illuminate/Support/Facades/Date.html#method_setMidDayAt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setTestNow","p":"Illuminate/Support/Facades/Date.html#method_setTestNow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setToStringFormat","p":"Illuminate/Support/Facades/Date.html#method_setToStringFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setTranslator","p":"Illuminate/Support/Facades/Date.html#method_setTranslator","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setUtf8","p":"Illuminate/Support/Facades/Date.html#method_setUtf8","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setWeekEndsAt","p":"Illuminate/Support/Facades/Date.html#method_setWeekEndsAt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setWeekStartsAt","p":"Illuminate/Support/Facades/Date.html#method_setWeekStartsAt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::setWeekendDays","p":"Illuminate/Support/Facades/Date.html#method_setWeekendDays","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::shouldOverflowMonths","p":"Illuminate/Support/Facades/Date.html#method_shouldOverflowMonths","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::shouldOverflowYears","p":"Illuminate/Support/Facades/Date.html#method_shouldOverflowYears","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::singularUnit","p":"Illuminate/Support/Facades/Date.html#method_singularUnit","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::today","p":"Illuminate/Support/Facades/Date.html#method_today","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::tomorrow","p":"Illuminate/Support/Facades/Date.html#method_tomorrow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::useMonthsOverflow","p":"Illuminate/Support/Facades/Date.html#method_useMonthsOverflow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::useStrictMode","p":"Illuminate/Support/Facades/Date.html#method_useStrictMode","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::useYearsOverflow","p":"Illuminate/Support/Facades/Date.html#method_useYearsOverflow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Date::yesterday","p":"Illuminate/Support/Facades/Date.html#method_yesterday","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::fake","p":"Illuminate/Support/Facades/Event.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::fakeExcept","p":"Illuminate/Support/Facades/Event.html#method_fakeExcept","d":"<p>Replace the bound instance with a fake that fakes all events except the given events.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::fakeFor","p":"Illuminate/Support/Facades/Event.html#method_fakeFor","d":"<p>Replace the bound instance with a fake during the given callable's execution.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::fakeExceptFor","p":"Illuminate/Support/Facades/Event.html#method_fakeExceptFor","d":"<p>Replace the bound instance with a fake during the given callable's execution.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::getFacadeAccessor","p":"Illuminate/Support/Facades/Event.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::listen","p":"Illuminate/Support/Facades/Event.html#method_listen","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::hasListeners","p":"Illuminate/Support/Facades/Event.html#method_hasListeners","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::hasWildcardListeners","p":"Illuminate/Support/Facades/Event.html#method_hasWildcardListeners","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::push","p":"Illuminate/Support/Facades/Event.html#method_push","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::flush","p":"Illuminate/Support/Facades/Event.html#method_flush","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::subscribe","p":"Illuminate/Support/Facades/Event.html#method_subscribe","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::until","p":"Illuminate/Support/Facades/Event.html#method_until","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::dispatch","p":"Illuminate/Support/Facades/Event.html#method_dispatch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::getListeners","p":"Illuminate/Support/Facades/Event.html#method_getListeners","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::makeListener","p":"Illuminate/Support/Facades/Event.html#method_makeListener","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::createClassListener","p":"Illuminate/Support/Facades/Event.html#method_createClassListener","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::forget","p":"Illuminate/Support/Facades/Event.html#method_forget","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::forgetPushed","p":"Illuminate/Support/Facades/Event.html#method_forgetPushed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::setQueueResolver","p":"Illuminate/Support/Facades/Event.html#method_setQueueResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::getRawListeners","p":"Illuminate/Support/Facades/Event.html#method_getRawListeners","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::macro","p":"Illuminate/Support/Facades/Event.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::mixin","p":"Illuminate/Support/Facades/Event.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::hasMacro","p":"Illuminate/Support/Facades/Event.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::flushMacros","p":"Illuminate/Support/Facades/Event.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::except","p":"Illuminate/Support/Facades/Event.html#method_except","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::assertListening","p":"Illuminate/Support/Facades/Event.html#method_assertListening","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::assertDispatched","p":"Illuminate/Support/Facades/Event.html#method_assertDispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::assertDispatchedTimes","p":"Illuminate/Support/Facades/Event.html#method_assertDispatchedTimes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::assertNotDispatched","p":"Illuminate/Support/Facades/Event.html#method_assertNotDispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::assertNothingDispatched","p":"Illuminate/Support/Facades/Event.html#method_assertNothingDispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::dispatched","p":"Illuminate/Support/Facades/Event.html#method_dispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Event::hasDispatched","p":"Illuminate/Support/Facades/Event.html#method_hasDispatched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::resolved","p":"Illuminate/Support/Facades/Facade.html#method_resolved","d":"<p>Run a Closure when the facade has been resolved.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::spy","p":"Illuminate/Support/Facades/Facade.html#method_spy","d":"<p>Convert the facade into a Mockery spy.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::partialMock","p":"Illuminate/Support/Facades/Facade.html#method_partialMock","d":"<p>Initiate a partial mock on the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::shouldReceive","p":"Illuminate/Support/Facades/Facade.html#method_shouldReceive","d":"<p>Initiate a mock expectation on the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::expects","p":"Illuminate/Support/Facades/Facade.html#method_expects","d":"<p>Initiate a mock expectation on the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::createFreshMockInstance","p":"Illuminate/Support/Facades/Facade.html#method_createFreshMockInstance","d":"<p>Create a fresh mock instance for the given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::createMock","p":"Illuminate/Support/Facades/Facade.html#method_createMock","d":"<p>Create a fresh mock instance for the given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::isMock","p":"Illuminate/Support/Facades/Facade.html#method_isMock","d":"<p>Determines whether a mock is set as the instance of the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::getMockableClass","p":"Illuminate/Support/Facades/Facade.html#method_getMockableClass","d":"<p>Get the mockable class for the bound instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::swap","p":"Illuminate/Support/Facades/Facade.html#method_swap","d":"<p>Hotswap the underlying instance behind the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::isFake","p":"Illuminate/Support/Facades/Facade.html#method_isFake","d":"<p>Determines whether a &quot;fake&quot; has been set as the facade instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::getFacadeRoot","p":"Illuminate/Support/Facades/Facade.html#method_getFacadeRoot","d":"<p>Get the root object behind the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::getFacadeAccessor","p":"Illuminate/Support/Facades/Facade.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::resolveFacadeInstance","p":"Illuminate/Support/Facades/Facade.html#method_resolveFacadeInstance","d":"<p>Resolve the facade root instance from the container.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::clearResolvedInstance","p":"Illuminate/Support/Facades/Facade.html#method_clearResolvedInstance","d":"<p>Clear a resolved facade instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::clearResolvedInstances","p":"Illuminate/Support/Facades/Facade.html#method_clearResolvedInstances","d":"<p>Clear all of the resolved instances.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::defaultAliases","p":"Illuminate/Support/Facades/Facade.html#method_defaultAliases","d":"<p>Get the application default aliases.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::getFacadeApplication","p":"Illuminate/Support/Facades/Facade.html#method_getFacadeApplication","d":"<p>Get the application instance behind the facade.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::setFacadeApplication","p":"Illuminate/Support/Facades/Facade.html#method_setFacadeApplication","d":"<p>Set the application instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Facade::__callStatic","p":"Illuminate/Support/Facades/Facade.html#method___callStatic","d":"<p>Handle dynamic, static calls to the object.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\File::getFacadeAccessor","p":"Illuminate/Support/Facades/File.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\File::exists","p":"Illuminate/Support/Facades/File.html#method_exists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::missing","p":"Illuminate/Support/Facades/File.html#method_missing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::get","p":"Illuminate/Support/Facades/File.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::sharedGet","p":"Illuminate/Support/Facades/File.html#method_sharedGet","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::getRequire","p":"Illuminate/Support/Facades/File.html#method_getRequire","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::requireOnce","p":"Illuminate/Support/Facades/File.html#method_requireOnce","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::lines","p":"Illuminate/Support/Facades/File.html#method_lines","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::hash","p":"Illuminate/Support/Facades/File.html#method_hash","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::put","p":"Illuminate/Support/Facades/File.html#method_put","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::replace","p":"Illuminate/Support/Facades/File.html#method_replace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::replaceInFile","p":"Illuminate/Support/Facades/File.html#method_replaceInFile","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::prepend","p":"Illuminate/Support/Facades/File.html#method_prepend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::append","p":"Illuminate/Support/Facades/File.html#method_append","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::chmod","p":"Illuminate/Support/Facades/File.html#method_chmod","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::delete","p":"Illuminate/Support/Facades/File.html#method_delete","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::move","p":"Illuminate/Support/Facades/File.html#method_move","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::copy","p":"Illuminate/Support/Facades/File.html#method_copy","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::link","p":"Illuminate/Support/Facades/File.html#method_link","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::relativeLink","p":"Illuminate/Support/Facades/File.html#method_relativeLink","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::name","p":"Illuminate/Support/Facades/File.html#method_name","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::basename","p":"Illuminate/Support/Facades/File.html#method_basename","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::dirname","p":"Illuminate/Support/Facades/File.html#method_dirname","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::extension","p":"Illuminate/Support/Facades/File.html#method_extension","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::guessExtension","p":"Illuminate/Support/Facades/File.html#method_guessExtension","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::type","p":"Illuminate/Support/Facades/File.html#method_type","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::mimeType","p":"Illuminate/Support/Facades/File.html#method_mimeType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::size","p":"Illuminate/Support/Facades/File.html#method_size","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::lastModified","p":"Illuminate/Support/Facades/File.html#method_lastModified","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::isDirectory","p":"Illuminate/Support/Facades/File.html#method_isDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::isEmptyDirectory","p":"Illuminate/Support/Facades/File.html#method_isEmptyDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::isReadable","p":"Illuminate/Support/Facades/File.html#method_isReadable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::isWritable","p":"Illuminate/Support/Facades/File.html#method_isWritable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::hasSameHash","p":"Illuminate/Support/Facades/File.html#method_hasSameHash","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::isFile","p":"Illuminate/Support/Facades/File.html#method_isFile","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::glob","p":"Illuminate/Support/Facades/File.html#method_glob","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::files","p":"Illuminate/Support/Facades/File.html#method_files","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::allFiles","p":"Illuminate/Support/Facades/File.html#method_allFiles","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::directories","p":"Illuminate/Support/Facades/File.html#method_directories","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::ensureDirectoryExists","p":"Illuminate/Support/Facades/File.html#method_ensureDirectoryExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::makeDirectory","p":"Illuminate/Support/Facades/File.html#method_makeDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::moveDirectory","p":"Illuminate/Support/Facades/File.html#method_moveDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::copyDirectory","p":"Illuminate/Support/Facades/File.html#method_copyDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::deleteDirectory","p":"Illuminate/Support/Facades/File.html#method_deleteDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::deleteDirectories","p":"Illuminate/Support/Facades/File.html#method_deleteDirectories","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::cleanDirectory","p":"Illuminate/Support/Facades/File.html#method_cleanDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::when","p":"Illuminate/Support/Facades/File.html#method_when","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::unless","p":"Illuminate/Support/Facades/File.html#method_unless","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::macro","p":"Illuminate/Support/Facades/File.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::mixin","p":"Illuminate/Support/Facades/File.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::hasMacro","p":"Illuminate/Support/Facades/File.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\File::flushMacros","p":"Illuminate/Support/Facades/File.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::getFacadeAccessor","p":"Illuminate/Support/Facades/Gate.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::has","p":"Illuminate/Support/Facades/Gate.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::allowIf","p":"Illuminate/Support/Facades/Gate.html#method_allowIf","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::denyIf","p":"Illuminate/Support/Facades/Gate.html#method_denyIf","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::define","p":"Illuminate/Support/Facades/Gate.html#method_define","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::resource","p":"Illuminate/Support/Facades/Gate.html#method_resource","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::policy","p":"Illuminate/Support/Facades/Gate.html#method_policy","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::before","p":"Illuminate/Support/Facades/Gate.html#method_before","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::after","p":"Illuminate/Support/Facades/Gate.html#method_after","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::allows","p":"Illuminate/Support/Facades/Gate.html#method_allows","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::denies","p":"Illuminate/Support/Facades/Gate.html#method_denies","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::check","p":"Illuminate/Support/Facades/Gate.html#method_check","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::any","p":"Illuminate/Support/Facades/Gate.html#method_any","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::none","p":"Illuminate/Support/Facades/Gate.html#method_none","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::authorize","p":"Illuminate/Support/Facades/Gate.html#method_authorize","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::inspect","p":"Illuminate/Support/Facades/Gate.html#method_inspect","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::raw","p":"Illuminate/Support/Facades/Gate.html#method_raw","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::getPolicyFor","p":"Illuminate/Support/Facades/Gate.html#method_getPolicyFor","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::guessPolicyNamesUsing","p":"Illuminate/Support/Facades/Gate.html#method_guessPolicyNamesUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::resolvePolicy","p":"Illuminate/Support/Facades/Gate.html#method_resolvePolicy","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::forUser","p":"Illuminate/Support/Facades/Gate.html#method_forUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::abilities","p":"Illuminate/Support/Facades/Gate.html#method_abilities","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::policies","p":"Illuminate/Support/Facades/Gate.html#method_policies","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::setContainer","p":"Illuminate/Support/Facades/Gate.html#method_setContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::denyWithStatus","p":"Illuminate/Support/Facades/Gate.html#method_denyWithStatus","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Gate::denyAsNotFound","p":"Illuminate/Support/Facades/Gate.html#method_denyAsNotFound","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::getFacadeAccessor","p":"Illuminate/Support/Facades/Hash.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::createBcryptDriver","p":"Illuminate/Support/Facades/Hash.html#method_createBcryptDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::createArgonDriver","p":"Illuminate/Support/Facades/Hash.html#method_createArgonDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::createArgon2idDriver","p":"Illuminate/Support/Facades/Hash.html#method_createArgon2idDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::info","p":"Illuminate/Support/Facades/Hash.html#method_info","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::make","p":"Illuminate/Support/Facades/Hash.html#method_make","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::check","p":"Illuminate/Support/Facades/Hash.html#method_check","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::needsRehash","p":"Illuminate/Support/Facades/Hash.html#method_needsRehash","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::getDefaultDriver","p":"Illuminate/Support/Facades/Hash.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::driver","p":"Illuminate/Support/Facades/Hash.html#method_driver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::extend","p":"Illuminate/Support/Facades/Hash.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::getDrivers","p":"Illuminate/Support/Facades/Hash.html#method_getDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::getContainer","p":"Illuminate/Support/Facades/Hash.html#method_getContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::setContainer","p":"Illuminate/Support/Facades/Hash.html#method_setContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Hash::forgetDrivers","p":"Illuminate/Support/Facades/Hash.html#method_forgetDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::getFacadeAccessor","p":"Illuminate/Support/Facades/Http.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::fake","p":"Illuminate/Support/Facades/Http.html#method_fake","d":"<p>Register a stub callable that will intercept requests and be able to return stub responses.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::fakeSequence","p":"Illuminate/Support/Facades/Http.html#method_fakeSequence","d":"<p>Register a response sequence for the given URL pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::preventStrayRequests","p":"Illuminate/Support/Facades/Http.html#method_preventStrayRequests","d":"<p>Indicate that an exception should be thrown if any request is not faked.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::stubUrl","p":"Illuminate/Support/Facades/Http.html#method_stubUrl","d":"<p>Stub the given URL using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::response","p":"Illuminate/Support/Facades/Http.html#method_response","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::sequence","p":"Illuminate/Support/Facades/Http.html#method_sequence","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::allowStrayRequests","p":"Illuminate/Support/Facades/Http.html#method_allowStrayRequests","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::recordRequestResponsePair","p":"Illuminate/Support/Facades/Http.html#method_recordRequestResponsePair","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::assertSent","p":"Illuminate/Support/Facades/Http.html#method_assertSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::assertSentInOrder","p":"Illuminate/Support/Facades/Http.html#method_assertSentInOrder","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::assertNotSent","p":"Illuminate/Support/Facades/Http.html#method_assertNotSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::assertNothingSent","p":"Illuminate/Support/Facades/Http.html#method_assertNothingSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::assertSentCount","p":"Illuminate/Support/Facades/Http.html#method_assertSentCount","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::assertSequencesAreEmpty","p":"Illuminate/Support/Facades/Http.html#method_assertSequencesAreEmpty","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::recorded","p":"Illuminate/Support/Facades/Http.html#method_recorded","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::getDispatcher","p":"Illuminate/Support/Facades/Http.html#method_getDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::macro","p":"Illuminate/Support/Facades/Http.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::mixin","p":"Illuminate/Support/Facades/Http.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::hasMacro","p":"Illuminate/Support/Facades/Http.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::flushMacros","p":"Illuminate/Support/Facades/Http.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::macroCall","p":"Illuminate/Support/Facades/Http.html#method_macroCall","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::baseUrl","p":"Illuminate/Support/Facades/Http.html#method_baseUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withBody","p":"Illuminate/Support/Facades/Http.html#method_withBody","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::asJson","p":"Illuminate/Support/Facades/Http.html#method_asJson","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::asForm","p":"Illuminate/Support/Facades/Http.html#method_asForm","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::attach","p":"Illuminate/Support/Facades/Http.html#method_attach","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::asMultipart","p":"Illuminate/Support/Facades/Http.html#method_asMultipart","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::bodyFormat","p":"Illuminate/Support/Facades/Http.html#method_bodyFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::contentType","p":"Illuminate/Support/Facades/Http.html#method_contentType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::acceptJson","p":"Illuminate/Support/Facades/Http.html#method_acceptJson","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::accept","p":"Illuminate/Support/Facades/Http.html#method_accept","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withHeaders","p":"Illuminate/Support/Facades/Http.html#method_withHeaders","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withBasicAuth","p":"Illuminate/Support/Facades/Http.html#method_withBasicAuth","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withDigestAuth","p":"Illuminate/Support/Facades/Http.html#method_withDigestAuth","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withToken","p":"Illuminate/Support/Facades/Http.html#method_withToken","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withUserAgent","p":"Illuminate/Support/Facades/Http.html#method_withUserAgent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withUrlParameters","p":"Illuminate/Support/Facades/Http.html#method_withUrlParameters","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withCookies","p":"Illuminate/Support/Facades/Http.html#method_withCookies","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::maxRedirects","p":"Illuminate/Support/Facades/Http.html#method_maxRedirects","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withoutRedirecting","p":"Illuminate/Support/Facades/Http.html#method_withoutRedirecting","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withoutVerifying","p":"Illuminate/Support/Facades/Http.html#method_withoutVerifying","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::sink","p":"Illuminate/Support/Facades/Http.html#method_sink","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::timeout","p":"Illuminate/Support/Facades/Http.html#method_timeout","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::connectTimeout","p":"Illuminate/Support/Facades/Http.html#method_connectTimeout","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::retry","p":"Illuminate/Support/Facades/Http.html#method_retry","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withOptions","p":"Illuminate/Support/Facades/Http.html#method_withOptions","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::withMiddleware","p":"Illuminate/Support/Facades/Http.html#method_withMiddleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::beforeSending","p":"Illuminate/Support/Facades/Http.html#method_beforeSending","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::throw","p":"Illuminate/Support/Facades/Http.html#method_throw","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::throwIf","p":"Illuminate/Support/Facades/Http.html#method_throwIf","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::throwUnless","p":"Illuminate/Support/Facades/Http.html#method_throwUnless","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::dump","p":"Illuminate/Support/Facades/Http.html#method_dump","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::dd","p":"Illuminate/Support/Facades/Http.html#method_dd","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::get","p":"Illuminate/Support/Facades/Http.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::head","p":"Illuminate/Support/Facades/Http.html#method_head","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::post","p":"Illuminate/Support/Facades/Http.html#method_post","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::patch","p":"Illuminate/Support/Facades/Http.html#method_patch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::put","p":"Illuminate/Support/Facades/Http.html#method_put","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::delete","p":"Illuminate/Support/Facades/Http.html#method_delete","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::pool","p":"Illuminate/Support/Facades/Http.html#method_pool","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::send","p":"Illuminate/Support/Facades/Http.html#method_send","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::buildClient","p":"Illuminate/Support/Facades/Http.html#method_buildClient","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::createClient","p":"Illuminate/Support/Facades/Http.html#method_createClient","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::buildHandlerStack","p":"Illuminate/Support/Facades/Http.html#method_buildHandlerStack","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::pushHandlers","p":"Illuminate/Support/Facades/Http.html#method_pushHandlers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::buildBeforeSendingHandler","p":"Illuminate/Support/Facades/Http.html#method_buildBeforeSendingHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::buildRecorderHandler","p":"Illuminate/Support/Facades/Http.html#method_buildRecorderHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::buildStubHandler","p":"Illuminate/Support/Facades/Http.html#method_buildStubHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::runBeforeSendingCallbacks","p":"Illuminate/Support/Facades/Http.html#method_runBeforeSendingCallbacks","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::mergeOptions","p":"Illuminate/Support/Facades/Http.html#method_mergeOptions","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::stub","p":"Illuminate/Support/Facades/Http.html#method_stub","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::async","p":"Illuminate/Support/Facades/Http.html#method_async","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::getPromise","p":"Illuminate/Support/Facades/Http.html#method_getPromise","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::setClient","p":"Illuminate/Support/Facades/Http.html#method_setClient","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::setHandler","p":"Illuminate/Support/Facades/Http.html#method_setHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::getOptions","p":"Illuminate/Support/Facades/Http.html#method_getOptions","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::when","p":"Illuminate/Support/Facades/Http.html#method_when","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Http::unless","p":"Illuminate/Support/Facades/Http.html#method_unless","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::getFacadeAccessor","p":"Illuminate/Support/Facades/Lang.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::hasForLocale","p":"Illuminate/Support/Facades/Lang.html#method_hasForLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::has","p":"Illuminate/Support/Facades/Lang.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::get","p":"Illuminate/Support/Facades/Lang.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::choice","p":"Illuminate/Support/Facades/Lang.html#method_choice","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::addLines","p":"Illuminate/Support/Facades/Lang.html#method_addLines","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::load","p":"Illuminate/Support/Facades/Lang.html#method_load","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::addNamespace","p":"Illuminate/Support/Facades/Lang.html#method_addNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::addJsonPath","p":"Illuminate/Support/Facades/Lang.html#method_addJsonPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::parseKey","p":"Illuminate/Support/Facades/Lang.html#method_parseKey","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::determineLocalesUsing","p":"Illuminate/Support/Facades/Lang.html#method_determineLocalesUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::getSelector","p":"Illuminate/Support/Facades/Lang.html#method_getSelector","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::setSelector","p":"Illuminate/Support/Facades/Lang.html#method_setSelector","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::getLoader","p":"Illuminate/Support/Facades/Lang.html#method_getLoader","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::locale","p":"Illuminate/Support/Facades/Lang.html#method_locale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::getLocale","p":"Illuminate/Support/Facades/Lang.html#method_getLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::setLocale","p":"Illuminate/Support/Facades/Lang.html#method_setLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::getFallback","p":"Illuminate/Support/Facades/Lang.html#method_getFallback","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::setFallback","p":"Illuminate/Support/Facades/Lang.html#method_setFallback","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::setLoaded","p":"Illuminate/Support/Facades/Lang.html#method_setLoaded","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::stringable","p":"Illuminate/Support/Facades/Lang.html#method_stringable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::setParsedKey","p":"Illuminate/Support/Facades/Lang.html#method_setParsedKey","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::flushParsedKeys","p":"Illuminate/Support/Facades/Lang.html#method_flushParsedKeys","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::macro","p":"Illuminate/Support/Facades/Lang.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::mixin","p":"Illuminate/Support/Facades/Lang.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::hasMacro","p":"Illuminate/Support/Facades/Lang.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Lang::flushMacros","p":"Illuminate/Support/Facades/Lang.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::getFacadeAccessor","p":"Illuminate/Support/Facades/Log.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::build","p":"Illuminate/Support/Facades/Log.html#method_build","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::stack","p":"Illuminate/Support/Facades/Log.html#method_stack","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::channel","p":"Illuminate/Support/Facades/Log.html#method_channel","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::driver","p":"Illuminate/Support/Facades/Log.html#method_driver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::shareContext","p":"Illuminate/Support/Facades/Log.html#method_shareContext","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::sharedContext","p":"Illuminate/Support/Facades/Log.html#method_sharedContext","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::flushSharedContext","p":"Illuminate/Support/Facades/Log.html#method_flushSharedContext","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::getDefaultDriver","p":"Illuminate/Support/Facades/Log.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::setDefaultDriver","p":"Illuminate/Support/Facades/Log.html#method_setDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::extend","p":"Illuminate/Support/Facades/Log.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::forgetChannel","p":"Illuminate/Support/Facades/Log.html#method_forgetChannel","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::getChannels","p":"Illuminate/Support/Facades/Log.html#method_getChannels","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::emergency","p":"Illuminate/Support/Facades/Log.html#method_emergency","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::alert","p":"Illuminate/Support/Facades/Log.html#method_alert","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::critical","p":"Illuminate/Support/Facades/Log.html#method_critical","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::error","p":"Illuminate/Support/Facades/Log.html#method_error","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::warning","p":"Illuminate/Support/Facades/Log.html#method_warning","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::notice","p":"Illuminate/Support/Facades/Log.html#method_notice","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::info","p":"Illuminate/Support/Facades/Log.html#method_info","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::debug","p":"Illuminate/Support/Facades/Log.html#method_debug","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::log","p":"Illuminate/Support/Facades/Log.html#method_log","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::write","p":"Illuminate/Support/Facades/Log.html#method_write","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::withContext","p":"Illuminate/Support/Facades/Log.html#method_withContext","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::withoutContext","p":"Illuminate/Support/Facades/Log.html#method_withoutContext","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::listen","p":"Illuminate/Support/Facades/Log.html#method_listen","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::getLogger","p":"Illuminate/Support/Facades/Log.html#method_getLogger","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::getEventDispatcher","p":"Illuminate/Support/Facades/Log.html#method_getEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Log::setEventDispatcher","p":"Illuminate/Support/Facades/Log.html#method_setEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::fake","p":"Illuminate/Support/Facades/Mail.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::getFacadeAccessor","p":"Illuminate/Support/Facades/Mail.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::mailer","p":"Illuminate/Support/Facades/Mail.html#method_mailer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::driver","p":"Illuminate/Support/Facades/Mail.html#method_driver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::createSymfonyTransport","p":"Illuminate/Support/Facades/Mail.html#method_createSymfonyTransport","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::getDefaultDriver","p":"Illuminate/Support/Facades/Mail.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::setDefaultDriver","p":"Illuminate/Support/Facades/Mail.html#method_setDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::purge","p":"Illuminate/Support/Facades/Mail.html#method_purge","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::extend","p":"Illuminate/Support/Facades/Mail.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::getApplication","p":"Illuminate/Support/Facades/Mail.html#method_getApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::setApplication","p":"Illuminate/Support/Facades/Mail.html#method_setApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::forgetMailers","p":"Illuminate/Support/Facades/Mail.html#method_forgetMailers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::alwaysFrom","p":"Illuminate/Support/Facades/Mail.html#method_alwaysFrom","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::alwaysReplyTo","p":"Illuminate/Support/Facades/Mail.html#method_alwaysReplyTo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::alwaysReturnPath","p":"Illuminate/Support/Facades/Mail.html#method_alwaysReturnPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::alwaysTo","p":"Illuminate/Support/Facades/Mail.html#method_alwaysTo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::to","p":"Illuminate/Support/Facades/Mail.html#method_to","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::cc","p":"Illuminate/Support/Facades/Mail.html#method_cc","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::bcc","p":"Illuminate/Support/Facades/Mail.html#method_bcc","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::html","p":"Illuminate/Support/Facades/Mail.html#method_html","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::raw","p":"Illuminate/Support/Facades/Mail.html#method_raw","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::plain","p":"Illuminate/Support/Facades/Mail.html#method_plain","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::render","p":"Illuminate/Support/Facades/Mail.html#method_render","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::send","p":"Illuminate/Support/Facades/Mail.html#method_send","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::queue","p":"Illuminate/Support/Facades/Mail.html#method_queue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::onQueue","p":"Illuminate/Support/Facades/Mail.html#method_onQueue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::queueOn","p":"Illuminate/Support/Facades/Mail.html#method_queueOn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::later","p":"Illuminate/Support/Facades/Mail.html#method_later","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::laterOn","p":"Illuminate/Support/Facades/Mail.html#method_laterOn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::getSymfonyTransport","p":"Illuminate/Support/Facades/Mail.html#method_getSymfonyTransport","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::getViewFactory","p":"Illuminate/Support/Facades/Mail.html#method_getViewFactory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::setSymfonyTransport","p":"Illuminate/Support/Facades/Mail.html#method_setSymfonyTransport","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::setQueue","p":"Illuminate/Support/Facades/Mail.html#method_setQueue","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::macro","p":"Illuminate/Support/Facades/Mail.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::mixin","p":"Illuminate/Support/Facades/Mail.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::hasMacro","p":"Illuminate/Support/Facades/Mail.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::flushMacros","p":"Illuminate/Support/Facades/Mail.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::assertSent","p":"Illuminate/Support/Facades/Mail.html#method_assertSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::assertNotOutgoing","p":"Illuminate/Support/Facades/Mail.html#method_assertNotOutgoing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::assertNotSent","p":"Illuminate/Support/Facades/Mail.html#method_assertNotSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::assertNothingOutgoing","p":"Illuminate/Support/Facades/Mail.html#method_assertNothingOutgoing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::assertNothingSent","p":"Illuminate/Support/Facades/Mail.html#method_assertNothingSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::assertQueued","p":"Illuminate/Support/Facades/Mail.html#method_assertQueued","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::assertNotQueued","p":"Illuminate/Support/Facades/Mail.html#method_assertNotQueued","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::assertNothingQueued","p":"Illuminate/Support/Facades/Mail.html#method_assertNothingQueued","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::sent","p":"Illuminate/Support/Facades/Mail.html#method_sent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::hasSent","p":"Illuminate/Support/Facades/Mail.html#method_hasSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::queued","p":"Illuminate/Support/Facades/Mail.html#method_queued","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Mail::hasQueued","p":"Illuminate/Support/Facades/Mail.html#method_hasQueued","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::fake","p":"Illuminate/Support/Facades/Notification.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::route","p":"Illuminate/Support/Facades/Notification.html#method_route","d":"<p>Begin sending a notification to an anonymous notifiable.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::getFacadeAccessor","p":"Illuminate/Support/Facades/Notification.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::send","p":"Illuminate/Support/Facades/Notification.html#method_send","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::sendNow","p":"Illuminate/Support/Facades/Notification.html#method_sendNow","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::channel","p":"Illuminate/Support/Facades/Notification.html#method_channel","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::getDefaultDriver","p":"Illuminate/Support/Facades/Notification.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::deliversVia","p":"Illuminate/Support/Facades/Notification.html#method_deliversVia","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::deliverVia","p":"Illuminate/Support/Facades/Notification.html#method_deliverVia","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::locale","p":"Illuminate/Support/Facades/Notification.html#method_locale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::driver","p":"Illuminate/Support/Facades/Notification.html#method_driver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::extend","p":"Illuminate/Support/Facades/Notification.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::getDrivers","p":"Illuminate/Support/Facades/Notification.html#method_getDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::getContainer","p":"Illuminate/Support/Facades/Notification.html#method_getContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::setContainer","p":"Illuminate/Support/Facades/Notification.html#method_setContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::forgetDrivers","p":"Illuminate/Support/Facades/Notification.html#method_forgetDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertSentOnDemand","p":"Illuminate/Support/Facades/Notification.html#method_assertSentOnDemand","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertSentTo","p":"Illuminate/Support/Facades/Notification.html#method_assertSentTo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertSentOnDemandTimes","p":"Illuminate/Support/Facades/Notification.html#method_assertSentOnDemandTimes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertSentToTimes","p":"Illuminate/Support/Facades/Notification.html#method_assertSentToTimes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertNotSentTo","p":"Illuminate/Support/Facades/Notification.html#method_assertNotSentTo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertNothingSent","p":"Illuminate/Support/Facades/Notification.html#method_assertNothingSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertNothingSentTo","p":"Illuminate/Support/Facades/Notification.html#method_assertNothingSentTo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertSentTimes","p":"Illuminate/Support/Facades/Notification.html#method_assertSentTimes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::assertCount","p":"Illuminate/Support/Facades/Notification.html#method_assertCount","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::sent","p":"Illuminate/Support/Facades/Notification.html#method_sent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::hasSent","p":"Illuminate/Support/Facades/Notification.html#method_hasSent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::sentNotifications","p":"Illuminate/Support/Facades/Notification.html#method_sentNotifications","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::macro","p":"Illuminate/Support/Facades/Notification.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::mixin","p":"Illuminate/Support/Facades/Notification.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::hasMacro","p":"Illuminate/Support/Facades/Notification.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Notification::flushMacros","p":"Illuminate/Support/Facades/Notification.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::getFacadeAccessor","p":"Illuminate/Support/Facades/ParallelTesting.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::resolveOptionsUsing","p":"Illuminate/Support/Facades/ParallelTesting.html#method_resolveOptionsUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::resolveTokenUsing","p":"Illuminate/Support/Facades/ParallelTesting.html#method_resolveTokenUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::setUpProcess","p":"Illuminate/Support/Facades/ParallelTesting.html#method_setUpProcess","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::setUpTestCase","p":"Illuminate/Support/Facades/ParallelTesting.html#method_setUpTestCase","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::setUpTestDatabase","p":"Illuminate/Support/Facades/ParallelTesting.html#method_setUpTestDatabase","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::tearDownProcess","p":"Illuminate/Support/Facades/ParallelTesting.html#method_tearDownProcess","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::tearDownTestCase","p":"Illuminate/Support/Facades/ParallelTesting.html#method_tearDownTestCase","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::callSetUpProcessCallbacks","p":"Illuminate/Support/Facades/ParallelTesting.html#method_callSetUpProcessCallbacks","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::callSetUpTestCaseCallbacks","p":"Illuminate/Support/Facades/ParallelTesting.html#method_callSetUpTestCaseCallbacks","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::callSetUpTestDatabaseCallbacks","p":"Illuminate/Support/Facades/ParallelTesting.html#method_callSetUpTestDatabaseCallbacks","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::callTearDownProcessCallbacks","p":"Illuminate/Support/Facades/ParallelTesting.html#method_callTearDownProcessCallbacks","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::callTearDownTestCaseCallbacks","p":"Illuminate/Support/Facades/ParallelTesting.html#method_callTearDownTestCaseCallbacks","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::option","p":"Illuminate/Support/Facades/ParallelTesting.html#method_option","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\ParallelTesting::token","p":"Illuminate/Support/Facades/ParallelTesting.html#method_token","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::getFacadeAccessor","p":"Illuminate/Support/Facades/Password.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::broker","p":"Illuminate/Support/Facades/Password.html#method_broker","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::getDefaultDriver","p":"Illuminate/Support/Facades/Password.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::setDefaultDriver","p":"Illuminate/Support/Facades/Password.html#method_setDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::sendResetLink","p":"Illuminate/Support/Facades/Password.html#method_sendResetLink","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::reset","p":"Illuminate/Support/Facades/Password.html#method_reset","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::getUser","p":"Illuminate/Support/Facades/Password.html#method_getUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::createToken","p":"Illuminate/Support/Facades/Password.html#method_createToken","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::deleteToken","p":"Illuminate/Support/Facades/Password.html#method_deleteToken","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::tokenExists","p":"Illuminate/Support/Facades/Password.html#method_tokenExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Password::getRepository","p":"Illuminate/Support/Facades/Password.html#method_getRepository","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::getFacadeAccessor","p":"Illuminate/Support/Facades/Process.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::fake","p":"Illuminate/Support/Facades/Process.html#method_fake","d":"<p>Indicate that the process factory should fake processes.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::command","p":"Illuminate/Support/Facades/Process.html#method_command","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::path","p":"Illuminate/Support/Facades/Process.html#method_path","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::timeout","p":"Illuminate/Support/Facades/Process.html#method_timeout","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::idleTimeout","p":"Illuminate/Support/Facades/Process.html#method_idleTimeout","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::forever","p":"Illuminate/Support/Facades/Process.html#method_forever","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::env","p":"Illuminate/Support/Facades/Process.html#method_env","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::input","p":"Illuminate/Support/Facades/Process.html#method_input","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::quietly","p":"Illuminate/Support/Facades/Process.html#method_quietly","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::tty","p":"Illuminate/Support/Facades/Process.html#method_tty","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::options","p":"Illuminate/Support/Facades/Process.html#method_options","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::run","p":"Illuminate/Support/Facades/Process.html#method_run","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::start","p":"Illuminate/Support/Facades/Process.html#method_start","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::withFakeHandlers","p":"Illuminate/Support/Facades/Process.html#method_withFakeHandlers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::result","p":"Illuminate/Support/Facades/Process.html#method_result","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::describe","p":"Illuminate/Support/Facades/Process.html#method_describe","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::sequence","p":"Illuminate/Support/Facades/Process.html#method_sequence","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::isRecording","p":"Illuminate/Support/Facades/Process.html#method_isRecording","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::recordIfRecording","p":"Illuminate/Support/Facades/Process.html#method_recordIfRecording","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::record","p":"Illuminate/Support/Facades/Process.html#method_record","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::preventStrayProcesses","p":"Illuminate/Support/Facades/Process.html#method_preventStrayProcesses","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::preventingStrayProcesses","p":"Illuminate/Support/Facades/Process.html#method_preventingStrayProcesses","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::assertRan","p":"Illuminate/Support/Facades/Process.html#method_assertRan","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::assertRanTimes","p":"Illuminate/Support/Facades/Process.html#method_assertRanTimes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::assertNotRan","p":"Illuminate/Support/Facades/Process.html#method_assertNotRan","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::assertDidntRun","p":"Illuminate/Support/Facades/Process.html#method_assertDidntRun","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::assertNothingRan","p":"Illuminate/Support/Facades/Process.html#method_assertNothingRan","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::pool","p":"Illuminate/Support/Facades/Process.html#method_pool","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::concurrently","p":"Illuminate/Support/Facades/Process.html#method_concurrently","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::newPendingProcess","p":"Illuminate/Support/Facades/Process.html#method_newPendingProcess","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::macro","p":"Illuminate/Support/Facades/Process.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::mixin","p":"Illuminate/Support/Facades/Process.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::hasMacro","p":"Illuminate/Support/Facades/Process.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::flushMacros","p":"Illuminate/Support/Facades/Process.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Process::macroCall","p":"Illuminate/Support/Facades/Process.html#method_macroCall","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::popUsing","p":"Illuminate/Support/Facades/Queue.html#method_popUsing","d":"<p>Register a callback to be executed to pick jobs.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::fake","p":"Illuminate/Support/Facades/Queue.html#method_fake","d":"<p>Replace the bound instance with a fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getFacadeAccessor","p":"Illuminate/Support/Facades/Queue.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::before","p":"Illuminate/Support/Facades/Queue.html#method_before","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::after","p":"Illuminate/Support/Facades/Queue.html#method_after","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::exceptionOccurred","p":"Illuminate/Support/Facades/Queue.html#method_exceptionOccurred","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::looping","p":"Illuminate/Support/Facades/Queue.html#method_looping","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::failing","p":"Illuminate/Support/Facades/Queue.html#method_failing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::stopping","p":"Illuminate/Support/Facades/Queue.html#method_stopping","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::connected","p":"Illuminate/Support/Facades/Queue.html#method_connected","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::connection","p":"Illuminate/Support/Facades/Queue.html#method_connection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::extend","p":"Illuminate/Support/Facades/Queue.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::addConnector","p":"Illuminate/Support/Facades/Queue.html#method_addConnector","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getDefaultDriver","p":"Illuminate/Support/Facades/Queue.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::setDefaultDriver","p":"Illuminate/Support/Facades/Queue.html#method_setDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getName","p":"Illuminate/Support/Facades/Queue.html#method_getName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getApplication","p":"Illuminate/Support/Facades/Queue.html#method_getApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::setApplication","p":"Illuminate/Support/Facades/Queue.html#method_setApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::size","p":"Illuminate/Support/Facades/Queue.html#method_size","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::push","p":"Illuminate/Support/Facades/Queue.html#method_push","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::pushOn","p":"Illuminate/Support/Facades/Queue.html#method_pushOn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::pushRaw","p":"Illuminate/Support/Facades/Queue.html#method_pushRaw","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::later","p":"Illuminate/Support/Facades/Queue.html#method_later","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::laterOn","p":"Illuminate/Support/Facades/Queue.html#method_laterOn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::bulk","p":"Illuminate/Support/Facades/Queue.html#method_bulk","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::pop","p":"Illuminate/Support/Facades/Queue.html#method_pop","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getConnectionName","p":"Illuminate/Support/Facades/Queue.html#method_getConnectionName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::setConnectionName","p":"Illuminate/Support/Facades/Queue.html#method_setConnectionName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getJobBackoff","p":"Illuminate/Support/Facades/Queue.html#method_getJobBackoff","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getJobExpiration","p":"Illuminate/Support/Facades/Queue.html#method_getJobExpiration","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::createPayloadUsing","p":"Illuminate/Support/Facades/Queue.html#method_createPayloadUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::getContainer","p":"Illuminate/Support/Facades/Queue.html#method_getContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::setContainer","p":"Illuminate/Support/Facades/Queue.html#method_setContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::except","p":"Illuminate/Support/Facades/Queue.html#method_except","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::assertPushed","p":"Illuminate/Support/Facades/Queue.html#method_assertPushed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::assertPushedOn","p":"Illuminate/Support/Facades/Queue.html#method_assertPushedOn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::assertPushedWithChain","p":"Illuminate/Support/Facades/Queue.html#method_assertPushedWithChain","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::assertPushedWithoutChain","p":"Illuminate/Support/Facades/Queue.html#method_assertPushedWithoutChain","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::assertClosurePushed","p":"Illuminate/Support/Facades/Queue.html#method_assertClosurePushed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::assertClosureNotPushed","p":"Illuminate/Support/Facades/Queue.html#method_assertClosureNotPushed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::assertNotPushed","p":"Illuminate/Support/Facades/Queue.html#method_assertNotPushed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::assertNothingPushed","p":"Illuminate/Support/Facades/Queue.html#method_assertNothingPushed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::pushed","p":"Illuminate/Support/Facades/Queue.html#method_pushed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::hasPushed","p":"Illuminate/Support/Facades/Queue.html#method_hasPushed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::shouldFakeJob","p":"Illuminate/Support/Facades/Queue.html#method_shouldFakeJob","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Queue::pushedJobs","p":"Illuminate/Support/Facades/Queue.html#method_pushedJobs","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::getFacadeAccessor","p":"Illuminate/Support/Facades/RateLimiter.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::for","p":"Illuminate/Support/Facades/RateLimiter.html#method_for","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::limiter","p":"Illuminate/Support/Facades/RateLimiter.html#method_limiter","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::attempt","p":"Illuminate/Support/Facades/RateLimiter.html#method_attempt","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::tooManyAttempts","p":"Illuminate/Support/Facades/RateLimiter.html#method_tooManyAttempts","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::hit","p":"Illuminate/Support/Facades/RateLimiter.html#method_hit","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::attempts","p":"Illuminate/Support/Facades/RateLimiter.html#method_attempts","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::resetAttempts","p":"Illuminate/Support/Facades/RateLimiter.html#method_resetAttempts","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::remaining","p":"Illuminate/Support/Facades/RateLimiter.html#method_remaining","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::retriesLeft","p":"Illuminate/Support/Facades/RateLimiter.html#method_retriesLeft","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::clear","p":"Illuminate/Support/Facades/RateLimiter.html#method_clear","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::availableIn","p":"Illuminate/Support/Facades/RateLimiter.html#method_availableIn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\RateLimiter::cleanRateLimiterKey","p":"Illuminate/Support/Facades/RateLimiter.html#method_cleanRateLimiterKey","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::getFacadeAccessor","p":"Illuminate/Support/Facades/Redirect.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::back","p":"Illuminate/Support/Facades/Redirect.html#method_back","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::refresh","p":"Illuminate/Support/Facades/Redirect.html#method_refresh","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::guest","p":"Illuminate/Support/Facades/Redirect.html#method_guest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::intended","p":"Illuminate/Support/Facades/Redirect.html#method_intended","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::to","p":"Illuminate/Support/Facades/Redirect.html#method_to","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::away","p":"Illuminate/Support/Facades/Redirect.html#method_away","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::secure","p":"Illuminate/Support/Facades/Redirect.html#method_secure","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::route","p":"Illuminate/Support/Facades/Redirect.html#method_route","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::signedRoute","p":"Illuminate/Support/Facades/Redirect.html#method_signedRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::temporarySignedRoute","p":"Illuminate/Support/Facades/Redirect.html#method_temporarySignedRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::action","p":"Illuminate/Support/Facades/Redirect.html#method_action","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::getUrlGenerator","p":"Illuminate/Support/Facades/Redirect.html#method_getUrlGenerator","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::setSession","p":"Illuminate/Support/Facades/Redirect.html#method_setSession","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::getIntendedUrl","p":"Illuminate/Support/Facades/Redirect.html#method_getIntendedUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::setIntendedUrl","p":"Illuminate/Support/Facades/Redirect.html#method_setIntendedUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::macro","p":"Illuminate/Support/Facades/Redirect.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::mixin","p":"Illuminate/Support/Facades/Redirect.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::hasMacro","p":"Illuminate/Support/Facades/Redirect.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redirect::flushMacros","p":"Illuminate/Support/Facades/Redirect.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::getFacadeAccessor","p":"Illuminate/Support/Facades/Redis.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::connection","p":"Illuminate/Support/Facades/Redis.html#method_connection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::resolve","p":"Illuminate/Support/Facades/Redis.html#method_resolve","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::connections","p":"Illuminate/Support/Facades/Redis.html#method_connections","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::enableEvents","p":"Illuminate/Support/Facades/Redis.html#method_enableEvents","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::disableEvents","p":"Illuminate/Support/Facades/Redis.html#method_disableEvents","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::setDriver","p":"Illuminate/Support/Facades/Redis.html#method_setDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::purge","p":"Illuminate/Support/Facades/Redis.html#method_purge","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::extend","p":"Illuminate/Support/Facades/Redis.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::createSubscription","p":"Illuminate/Support/Facades/Redis.html#method_createSubscription","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::funnel","p":"Illuminate/Support/Facades/Redis.html#method_funnel","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::throttle","p":"Illuminate/Support/Facades/Redis.html#method_throttle","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::client","p":"Illuminate/Support/Facades/Redis.html#method_client","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::subscribe","p":"Illuminate/Support/Facades/Redis.html#method_subscribe","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::psubscribe","p":"Illuminate/Support/Facades/Redis.html#method_psubscribe","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::command","p":"Illuminate/Support/Facades/Redis.html#method_command","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::listen","p":"Illuminate/Support/Facades/Redis.html#method_listen","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::getName","p":"Illuminate/Support/Facades/Redis.html#method_getName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::setName","p":"Illuminate/Support/Facades/Redis.html#method_setName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::getEventDispatcher","p":"Illuminate/Support/Facades/Redis.html#method_getEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::setEventDispatcher","p":"Illuminate/Support/Facades/Redis.html#method_setEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::unsetEventDispatcher","p":"Illuminate/Support/Facades/Redis.html#method_unsetEventDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::macro","p":"Illuminate/Support/Facades/Redis.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::mixin","p":"Illuminate/Support/Facades/Redis.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::hasMacro","p":"Illuminate/Support/Facades/Redis.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::flushMacros","p":"Illuminate/Support/Facades/Redis.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Redis::macroCall","p":"Illuminate/Support/Facades/Redis.html#method_macroCall","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getFacadeAccessor","p":"Illuminate/Support/Facades/Request.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::capture","p":"Illuminate/Support/Facades/Request.html#method_capture","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::instance","p":"Illuminate/Support/Facades/Request.html#method_instance","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::method","p":"Illuminate/Support/Facades/Request.html#method_method","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::root","p":"Illuminate/Support/Facades/Request.html#method_root","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::url","p":"Illuminate/Support/Facades/Request.html#method_url","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::fullUrl","p":"Illuminate/Support/Facades/Request.html#method_fullUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::fullUrlWithQuery","p":"Illuminate/Support/Facades/Request.html#method_fullUrlWithQuery","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::fullUrlWithoutQuery","p":"Illuminate/Support/Facades/Request.html#method_fullUrlWithoutQuery","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::path","p":"Illuminate/Support/Facades/Request.html#method_path","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::decodedPath","p":"Illuminate/Support/Facades/Request.html#method_decodedPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::segment","p":"Illuminate/Support/Facades/Request.html#method_segment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::segments","p":"Illuminate/Support/Facades/Request.html#method_segments","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::is","p":"Illuminate/Support/Facades/Request.html#method_is","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::routeIs","p":"Illuminate/Support/Facades/Request.html#method_routeIs","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::fullUrlIs","p":"Illuminate/Support/Facades/Request.html#method_fullUrlIs","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::host","p":"Illuminate/Support/Facades/Request.html#method_host","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::httpHost","p":"Illuminate/Support/Facades/Request.html#method_httpHost","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::schemeAndHttpHost","p":"Illuminate/Support/Facades/Request.html#method_schemeAndHttpHost","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::ajax","p":"Illuminate/Support/Facades/Request.html#method_ajax","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::pjax","p":"Illuminate/Support/Facades/Request.html#method_pjax","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::prefetch","p":"Illuminate/Support/Facades/Request.html#method_prefetch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::secure","p":"Illuminate/Support/Facades/Request.html#method_secure","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::ip","p":"Illuminate/Support/Facades/Request.html#method_ip","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::ips","p":"Illuminate/Support/Facades/Request.html#method_ips","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::userAgent","p":"Illuminate/Support/Facades/Request.html#method_userAgent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::merge","p":"Illuminate/Support/Facades/Request.html#method_merge","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::mergeIfMissing","p":"Illuminate/Support/Facades/Request.html#method_mergeIfMissing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::replace","p":"Illuminate/Support/Facades/Request.html#method_replace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::get","p":"Illuminate/Support/Facades/Request.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::json","p":"Illuminate/Support/Facades/Request.html#method_json","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::createFrom","p":"Illuminate/Support/Facades/Request.html#method_createFrom","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::createFromBase","p":"Illuminate/Support/Facades/Request.html#method_createFromBase","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::duplicate","p":"Illuminate/Support/Facades/Request.html#method_duplicate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::hasSession","p":"Illuminate/Support/Facades/Request.html#method_hasSession","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getSession","p":"Illuminate/Support/Facades/Request.html#method_getSession","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::session","p":"Illuminate/Support/Facades/Request.html#method_session","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setLaravelSession","p":"Illuminate/Support/Facades/Request.html#method_setLaravelSession","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setRequestLocale","p":"Illuminate/Support/Facades/Request.html#method_setRequestLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setDefaultRequestLocale","p":"Illuminate/Support/Facades/Request.html#method_setDefaultRequestLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::user","p":"Illuminate/Support/Facades/Request.html#method_user","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::route","p":"Illuminate/Support/Facades/Request.html#method_route","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::fingerprint","p":"Illuminate/Support/Facades/Request.html#method_fingerprint","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setJson","p":"Illuminate/Support/Facades/Request.html#method_setJson","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getUserResolver","p":"Illuminate/Support/Facades/Request.html#method_getUserResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setUserResolver","p":"Illuminate/Support/Facades/Request.html#method_setUserResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getRouteResolver","p":"Illuminate/Support/Facades/Request.html#method_getRouteResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setRouteResolver","p":"Illuminate/Support/Facades/Request.html#method_setRouteResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::toArray","p":"Illuminate/Support/Facades/Request.html#method_toArray","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::initialize","p":"Illuminate/Support/Facades/Request.html#method_initialize","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::createFromGlobals","p":"Illuminate/Support/Facades/Request.html#method_createFromGlobals","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::create","p":"Illuminate/Support/Facades/Request.html#method_create","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setFactory","p":"Illuminate/Support/Facades/Request.html#method_setFactory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::overrideGlobals","p":"Illuminate/Support/Facades/Request.html#method_overrideGlobals","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setTrustedProxies","p":"Illuminate/Support/Facades/Request.html#method_setTrustedProxies","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getTrustedProxies","p":"Illuminate/Support/Facades/Request.html#method_getTrustedProxies","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getTrustedHeaderSet","p":"Illuminate/Support/Facades/Request.html#method_getTrustedHeaderSet","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setTrustedHosts","p":"Illuminate/Support/Facades/Request.html#method_setTrustedHosts","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getTrustedHosts","p":"Illuminate/Support/Facades/Request.html#method_getTrustedHosts","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::normalizeQueryString","p":"Illuminate/Support/Facades/Request.html#method_normalizeQueryString","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::enableHttpMethodParameterOverride","p":"Illuminate/Support/Facades/Request.html#method_enableHttpMethodParameterOverride","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getHttpMethodParameterOverride","p":"Illuminate/Support/Facades/Request.html#method_getHttpMethodParameterOverride","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::hasPreviousSession","p":"Illuminate/Support/Facades/Request.html#method_hasPreviousSession","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setSession","p":"Illuminate/Support/Facades/Request.html#method_setSession","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getClientIps","p":"Illuminate/Support/Facades/Request.html#method_getClientIps","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getClientIp","p":"Illuminate/Support/Facades/Request.html#method_getClientIp","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getScriptName","p":"Illuminate/Support/Facades/Request.html#method_getScriptName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getPathInfo","p":"Illuminate/Support/Facades/Request.html#method_getPathInfo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getBasePath","p":"Illuminate/Support/Facades/Request.html#method_getBasePath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getBaseUrl","p":"Illuminate/Support/Facades/Request.html#method_getBaseUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getScheme","p":"Illuminate/Support/Facades/Request.html#method_getScheme","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getPort","p":"Illuminate/Support/Facades/Request.html#method_getPort","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getUser","p":"Illuminate/Support/Facades/Request.html#method_getUser","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getPassword","p":"Illuminate/Support/Facades/Request.html#method_getPassword","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getUserInfo","p":"Illuminate/Support/Facades/Request.html#method_getUserInfo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getHttpHost","p":"Illuminate/Support/Facades/Request.html#method_getHttpHost","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getRequestUri","p":"Illuminate/Support/Facades/Request.html#method_getRequestUri","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getSchemeAndHttpHost","p":"Illuminate/Support/Facades/Request.html#method_getSchemeAndHttpHost","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getUri","p":"Illuminate/Support/Facades/Request.html#method_getUri","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getUriForPath","p":"Illuminate/Support/Facades/Request.html#method_getUriForPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getRelativeUriForPath","p":"Illuminate/Support/Facades/Request.html#method_getRelativeUriForPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getQueryString","p":"Illuminate/Support/Facades/Request.html#method_getQueryString","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isSecure","p":"Illuminate/Support/Facades/Request.html#method_isSecure","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getHost","p":"Illuminate/Support/Facades/Request.html#method_getHost","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setMethod","p":"Illuminate/Support/Facades/Request.html#method_setMethod","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getMethod","p":"Illuminate/Support/Facades/Request.html#method_getMethod","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getRealMethod","p":"Illuminate/Support/Facades/Request.html#method_getRealMethod","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getMimeType","p":"Illuminate/Support/Facades/Request.html#method_getMimeType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getMimeTypes","p":"Illuminate/Support/Facades/Request.html#method_getMimeTypes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getFormat","p":"Illuminate/Support/Facades/Request.html#method_getFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setFormat","p":"Illuminate/Support/Facades/Request.html#method_setFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getRequestFormat","p":"Illuminate/Support/Facades/Request.html#method_getRequestFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setRequestFormat","p":"Illuminate/Support/Facades/Request.html#method_setRequestFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getContentTypeFormat","p":"Illuminate/Support/Facades/Request.html#method_getContentTypeFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setDefaultLocale","p":"Illuminate/Support/Facades/Request.html#method_setDefaultLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getDefaultLocale","p":"Illuminate/Support/Facades/Request.html#method_getDefaultLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::setLocale","p":"Illuminate/Support/Facades/Request.html#method_setLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getLocale","p":"Illuminate/Support/Facades/Request.html#method_getLocale","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isMethod","p":"Illuminate/Support/Facades/Request.html#method_isMethod","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isMethodSafe","p":"Illuminate/Support/Facades/Request.html#method_isMethodSafe","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isMethodIdempotent","p":"Illuminate/Support/Facades/Request.html#method_isMethodIdempotent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isMethodCacheable","p":"Illuminate/Support/Facades/Request.html#method_isMethodCacheable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getProtocolVersion","p":"Illuminate/Support/Facades/Request.html#method_getProtocolVersion","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getContent","p":"Illuminate/Support/Facades/Request.html#method_getContent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getETags","p":"Illuminate/Support/Facades/Request.html#method_getETags","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isNoCache","p":"Illuminate/Support/Facades/Request.html#method_isNoCache","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getPreferredFormat","p":"Illuminate/Support/Facades/Request.html#method_getPreferredFormat","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getPreferredLanguage","p":"Illuminate/Support/Facades/Request.html#method_getPreferredLanguage","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getLanguages","p":"Illuminate/Support/Facades/Request.html#method_getLanguages","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getCharsets","p":"Illuminate/Support/Facades/Request.html#method_getCharsets","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getEncodings","p":"Illuminate/Support/Facades/Request.html#method_getEncodings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::getAcceptableContentTypes","p":"Illuminate/Support/Facades/Request.html#method_getAcceptableContentTypes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isXmlHttpRequest","p":"Illuminate/Support/Facades/Request.html#method_isXmlHttpRequest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::preferSafeContent","p":"Illuminate/Support/Facades/Request.html#method_preferSafeContent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isFromTrustedProxy","p":"Illuminate/Support/Facades/Request.html#method_isFromTrustedProxy","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::filterPrecognitiveRules","p":"Illuminate/Support/Facades/Request.html#method_filterPrecognitiveRules","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isAttemptingPrecognition","p":"Illuminate/Support/Facades/Request.html#method_isAttemptingPrecognition","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isPrecognitive","p":"Illuminate/Support/Facades/Request.html#method_isPrecognitive","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isJson","p":"Illuminate/Support/Facades/Request.html#method_isJson","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::expectsJson","p":"Illuminate/Support/Facades/Request.html#method_expectsJson","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::wantsJson","p":"Illuminate/Support/Facades/Request.html#method_wantsJson","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::accepts","p":"Illuminate/Support/Facades/Request.html#method_accepts","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::prefers","p":"Illuminate/Support/Facades/Request.html#method_prefers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::acceptsAnyContentType","p":"Illuminate/Support/Facades/Request.html#method_acceptsAnyContentType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::acceptsJson","p":"Illuminate/Support/Facades/Request.html#method_acceptsJson","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::acceptsHtml","p":"Illuminate/Support/Facades/Request.html#method_acceptsHtml","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::matchesType","p":"Illuminate/Support/Facades/Request.html#method_matchesType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::format","p":"Illuminate/Support/Facades/Request.html#method_format","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::old","p":"Illuminate/Support/Facades/Request.html#method_old","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::flash","p":"Illuminate/Support/Facades/Request.html#method_flash","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::flashOnly","p":"Illuminate/Support/Facades/Request.html#method_flashOnly","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::flashExcept","p":"Illuminate/Support/Facades/Request.html#method_flashExcept","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::flush","p":"Illuminate/Support/Facades/Request.html#method_flush","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::server","p":"Illuminate/Support/Facades/Request.html#method_server","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::hasHeader","p":"Illuminate/Support/Facades/Request.html#method_hasHeader","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::header","p":"Illuminate/Support/Facades/Request.html#method_header","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::bearerToken","p":"Illuminate/Support/Facades/Request.html#method_bearerToken","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::exists","p":"Illuminate/Support/Facades/Request.html#method_exists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::has","p":"Illuminate/Support/Facades/Request.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::hasAny","p":"Illuminate/Support/Facades/Request.html#method_hasAny","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::whenHas","p":"Illuminate/Support/Facades/Request.html#method_whenHas","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::filled","p":"Illuminate/Support/Facades/Request.html#method_filled","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::isNotFilled","p":"Illuminate/Support/Facades/Request.html#method_isNotFilled","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::anyFilled","p":"Illuminate/Support/Facades/Request.html#method_anyFilled","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::whenFilled","p":"Illuminate/Support/Facades/Request.html#method_whenFilled","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::missing","p":"Illuminate/Support/Facades/Request.html#method_missing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::whenMissing","p":"Illuminate/Support/Facades/Request.html#method_whenMissing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::keys","p":"Illuminate/Support/Facades/Request.html#method_keys","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::all","p":"Illuminate/Support/Facades/Request.html#method_all","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::input","p":"Illuminate/Support/Facades/Request.html#method_input","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::str","p":"Illuminate/Support/Facades/Request.html#method_str","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::string","p":"Illuminate/Support/Facades/Request.html#method_string","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::boolean","p":"Illuminate/Support/Facades/Request.html#method_boolean","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::integer","p":"Illuminate/Support/Facades/Request.html#method_integer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::float","p":"Illuminate/Support/Facades/Request.html#method_float","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::date","p":"Illuminate/Support/Facades/Request.html#method_date","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::enum","p":"Illuminate/Support/Facades/Request.html#method_enum","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::collect","p":"Illuminate/Support/Facades/Request.html#method_collect","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::only","p":"Illuminate/Support/Facades/Request.html#method_only","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::except","p":"Illuminate/Support/Facades/Request.html#method_except","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::query","p":"Illuminate/Support/Facades/Request.html#method_query","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::post","p":"Illuminate/Support/Facades/Request.html#method_post","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::hasCookie","p":"Illuminate/Support/Facades/Request.html#method_hasCookie","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::cookie","p":"Illuminate/Support/Facades/Request.html#method_cookie","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::allFiles","p":"Illuminate/Support/Facades/Request.html#method_allFiles","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::hasFile","p":"Illuminate/Support/Facades/Request.html#method_hasFile","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::file","p":"Illuminate/Support/Facades/Request.html#method_file","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::dd","p":"Illuminate/Support/Facades/Request.html#method_dd","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::dump","p":"Illuminate/Support/Facades/Request.html#method_dump","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::macro","p":"Illuminate/Support/Facades/Request.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::mixin","p":"Illuminate/Support/Facades/Request.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::hasMacro","p":"Illuminate/Support/Facades/Request.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::flushMacros","p":"Illuminate/Support/Facades/Request.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::validate","p":"Illuminate/Support/Facades/Request.html#method_validate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::validateWithBag","p":"Illuminate/Support/Facades/Request.html#method_validateWithBag","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Request::hasValidSignature","p":"Illuminate/Support/Facades/Request.html#method_hasValidSignature","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::getFacadeAccessor","p":"Illuminate/Support/Facades/Response.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::make","p":"Illuminate/Support/Facades/Response.html#method_make","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::noContent","p":"Illuminate/Support/Facades/Response.html#method_noContent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::view","p":"Illuminate/Support/Facades/Response.html#method_view","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::json","p":"Illuminate/Support/Facades/Response.html#method_json","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::jsonp","p":"Illuminate/Support/Facades/Response.html#method_jsonp","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::stream","p":"Illuminate/Support/Facades/Response.html#method_stream","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::streamDownload","p":"Illuminate/Support/Facades/Response.html#method_streamDownload","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::download","p":"Illuminate/Support/Facades/Response.html#method_download","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::file","p":"Illuminate/Support/Facades/Response.html#method_file","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::redirectTo","p":"Illuminate/Support/Facades/Response.html#method_redirectTo","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::redirectToRoute","p":"Illuminate/Support/Facades/Response.html#method_redirectToRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::redirectToAction","p":"Illuminate/Support/Facades/Response.html#method_redirectToAction","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::redirectGuest","p":"Illuminate/Support/Facades/Response.html#method_redirectGuest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::redirectToIntended","p":"Illuminate/Support/Facades/Response.html#method_redirectToIntended","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::macro","p":"Illuminate/Support/Facades/Response.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::mixin","p":"Illuminate/Support/Facades/Response.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::hasMacro","p":"Illuminate/Support/Facades/Response.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Response::flushMacros","p":"Illuminate/Support/Facades/Response.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getFacadeAccessor","p":"Illuminate/Support/Facades/Route.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::get","p":"Illuminate/Support/Facades/Route.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::post","p":"Illuminate/Support/Facades/Route.html#method_post","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::put","p":"Illuminate/Support/Facades/Route.html#method_put","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::patch","p":"Illuminate/Support/Facades/Route.html#method_patch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::delete","p":"Illuminate/Support/Facades/Route.html#method_delete","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::options","p":"Illuminate/Support/Facades/Route.html#method_options","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::any","p":"Illuminate/Support/Facades/Route.html#method_any","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::fallback","p":"Illuminate/Support/Facades/Route.html#method_fallback","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::redirect","p":"Illuminate/Support/Facades/Route.html#method_redirect","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::permanentRedirect","p":"Illuminate/Support/Facades/Route.html#method_permanentRedirect","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::view","p":"Illuminate/Support/Facades/Route.html#method_view","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::match","p":"Illuminate/Support/Facades/Route.html#method_match","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::resources","p":"Illuminate/Support/Facades/Route.html#method_resources","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::resource","p":"Illuminate/Support/Facades/Route.html#method_resource","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::apiResources","p":"Illuminate/Support/Facades/Route.html#method_apiResources","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::apiResource","p":"Illuminate/Support/Facades/Route.html#method_apiResource","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::singletons","p":"Illuminate/Support/Facades/Route.html#method_singletons","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::singleton","p":"Illuminate/Support/Facades/Route.html#method_singleton","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::apiSingletons","p":"Illuminate/Support/Facades/Route.html#method_apiSingletons","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::apiSingleton","p":"Illuminate/Support/Facades/Route.html#method_apiSingleton","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::group","p":"Illuminate/Support/Facades/Route.html#method_group","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::mergeWithLastGroup","p":"Illuminate/Support/Facades/Route.html#method_mergeWithLastGroup","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getLastGroupPrefix","p":"Illuminate/Support/Facades/Route.html#method_getLastGroupPrefix","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::addRoute","p":"Illuminate/Support/Facades/Route.html#method_addRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::newRoute","p":"Illuminate/Support/Facades/Route.html#method_newRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::respondWithRoute","p":"Illuminate/Support/Facades/Route.html#method_respondWithRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::dispatch","p":"Illuminate/Support/Facades/Route.html#method_dispatch","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::dispatchToRoute","p":"Illuminate/Support/Facades/Route.html#method_dispatchToRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::gatherRouteMiddleware","p":"Illuminate/Support/Facades/Route.html#method_gatherRouteMiddleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::resolveMiddleware","p":"Illuminate/Support/Facades/Route.html#method_resolveMiddleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::prepareResponse","p":"Illuminate/Support/Facades/Route.html#method_prepareResponse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::toResponse","p":"Illuminate/Support/Facades/Route.html#method_toResponse","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::substituteBindings","p":"Illuminate/Support/Facades/Route.html#method_substituteBindings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::substituteImplicitBindings","p":"Illuminate/Support/Facades/Route.html#method_substituteImplicitBindings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::matched","p":"Illuminate/Support/Facades/Route.html#method_matched","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getMiddleware","p":"Illuminate/Support/Facades/Route.html#method_getMiddleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::aliasMiddleware","p":"Illuminate/Support/Facades/Route.html#method_aliasMiddleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::hasMiddlewareGroup","p":"Illuminate/Support/Facades/Route.html#method_hasMiddlewareGroup","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getMiddlewareGroups","p":"Illuminate/Support/Facades/Route.html#method_getMiddlewareGroups","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::middlewareGroup","p":"Illuminate/Support/Facades/Route.html#method_middlewareGroup","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::prependMiddlewareToGroup","p":"Illuminate/Support/Facades/Route.html#method_prependMiddlewareToGroup","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::pushMiddlewareToGroup","p":"Illuminate/Support/Facades/Route.html#method_pushMiddlewareToGroup","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::removeMiddlewareFromGroup","p":"Illuminate/Support/Facades/Route.html#method_removeMiddlewareFromGroup","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::flushMiddlewareGroups","p":"Illuminate/Support/Facades/Route.html#method_flushMiddlewareGroups","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::bind","p":"Illuminate/Support/Facades/Route.html#method_bind","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::model","p":"Illuminate/Support/Facades/Route.html#method_model","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getBindingCallback","p":"Illuminate/Support/Facades/Route.html#method_getBindingCallback","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getPatterns","p":"Illuminate/Support/Facades/Route.html#method_getPatterns","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::pattern","p":"Illuminate/Support/Facades/Route.html#method_pattern","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::patterns","p":"Illuminate/Support/Facades/Route.html#method_patterns","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::hasGroupStack","p":"Illuminate/Support/Facades/Route.html#method_hasGroupStack","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getGroupStack","p":"Illuminate/Support/Facades/Route.html#method_getGroupStack","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::input","p":"Illuminate/Support/Facades/Route.html#method_input","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getCurrentRequest","p":"Illuminate/Support/Facades/Route.html#method_getCurrentRequest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getCurrentRoute","p":"Illuminate/Support/Facades/Route.html#method_getCurrentRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::current","p":"Illuminate/Support/Facades/Route.html#method_current","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::has","p":"Illuminate/Support/Facades/Route.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::currentRouteName","p":"Illuminate/Support/Facades/Route.html#method_currentRouteName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::is","p":"Illuminate/Support/Facades/Route.html#method_is","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::currentRouteNamed","p":"Illuminate/Support/Facades/Route.html#method_currentRouteNamed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::currentRouteAction","p":"Illuminate/Support/Facades/Route.html#method_currentRouteAction","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::uses","p":"Illuminate/Support/Facades/Route.html#method_uses","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::currentRouteUses","p":"Illuminate/Support/Facades/Route.html#method_currentRouteUses","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::singularResourceParameters","p":"Illuminate/Support/Facades/Route.html#method_singularResourceParameters","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::resourceParameters","p":"Illuminate/Support/Facades/Route.html#method_resourceParameters","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::resourceVerbs","p":"Illuminate/Support/Facades/Route.html#method_resourceVerbs","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::getRoutes","p":"Illuminate/Support/Facades/Route.html#method_getRoutes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::setRoutes","p":"Illuminate/Support/Facades/Route.html#method_setRoutes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::setCompiledRoutes","p":"Illuminate/Support/Facades/Route.html#method_setCompiledRoutes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::uniqueMiddleware","p":"Illuminate/Support/Facades/Route.html#method_uniqueMiddleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::setContainer","p":"Illuminate/Support/Facades/Route.html#method_setContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::macro","p":"Illuminate/Support/Facades/Route.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::mixin","p":"Illuminate/Support/Facades/Route.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::hasMacro","p":"Illuminate/Support/Facades/Route.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::flushMacros","p":"Illuminate/Support/Facades/Route.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::macroCall","p":"Illuminate/Support/Facades/Route.html#method_macroCall","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::attribute","p":"Illuminate/Support/Facades/Route.html#method_attribute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::whereAlpha","p":"Illuminate/Support/Facades/Route.html#method_whereAlpha","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::whereAlphaNumeric","p":"Illuminate/Support/Facades/Route.html#method_whereAlphaNumeric","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::whereNumber","p":"Illuminate/Support/Facades/Route.html#method_whereNumber","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::whereUlid","p":"Illuminate/Support/Facades/Route.html#method_whereUlid","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::whereUuid","p":"Illuminate/Support/Facades/Route.html#method_whereUuid","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::whereIn","p":"Illuminate/Support/Facades/Route.html#method_whereIn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::as","p":"Illuminate/Support/Facades/Route.html#method_as","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::controller","p":"Illuminate/Support/Facades/Route.html#method_controller","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::domain","p":"Illuminate/Support/Facades/Route.html#method_domain","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::middleware","p":"Illuminate/Support/Facades/Route.html#method_middleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::name","p":"Illuminate/Support/Facades/Route.html#method_name","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::namespace","p":"Illuminate/Support/Facades/Route.html#method_namespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::prefix","p":"Illuminate/Support/Facades/Route.html#method_prefix","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::scopeBindings","p":"Illuminate/Support/Facades/Route.html#method_scopeBindings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::where","p":"Illuminate/Support/Facades/Route.html#method_where","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::withoutMiddleware","p":"Illuminate/Support/Facades/Route.html#method_withoutMiddleware","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Route::withoutScopedBindings","p":"Illuminate/Support/Facades/Route.html#method_withoutScopedBindings","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::connection","p":"Illuminate/Support/Facades/Schema.html#method_connection","d":"<p>Get a schema builder instance for a connection.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::getFacadeAccessor","p":"Illuminate/Support/Facades/Schema.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::defaultStringLength","p":"Illuminate/Support/Facades/Schema.html#method_defaultStringLength","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::defaultMorphKeyType","p":"Illuminate/Support/Facades/Schema.html#method_defaultMorphKeyType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::morphUsingUuids","p":"Illuminate/Support/Facades/Schema.html#method_morphUsingUuids","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::morphUsingUlids","p":"Illuminate/Support/Facades/Schema.html#method_morphUsingUlids","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::useNativeSchemaOperationsIfPossible","p":"Illuminate/Support/Facades/Schema.html#method_useNativeSchemaOperationsIfPossible","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::createDatabase","p":"Illuminate/Support/Facades/Schema.html#method_createDatabase","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::dropDatabaseIfExists","p":"Illuminate/Support/Facades/Schema.html#method_dropDatabaseIfExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::hasTable","p":"Illuminate/Support/Facades/Schema.html#method_hasTable","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::hasColumn","p":"Illuminate/Support/Facades/Schema.html#method_hasColumn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::hasColumns","p":"Illuminate/Support/Facades/Schema.html#method_hasColumns","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::whenTableHasColumn","p":"Illuminate/Support/Facades/Schema.html#method_whenTableHasColumn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::whenTableDoesntHaveColumn","p":"Illuminate/Support/Facades/Schema.html#method_whenTableDoesntHaveColumn","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::getColumnType","p":"Illuminate/Support/Facades/Schema.html#method_getColumnType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::getColumnListing","p":"Illuminate/Support/Facades/Schema.html#method_getColumnListing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::table","p":"Illuminate/Support/Facades/Schema.html#method_table","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::create","p":"Illuminate/Support/Facades/Schema.html#method_create","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::drop","p":"Illuminate/Support/Facades/Schema.html#method_drop","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::dropIfExists","p":"Illuminate/Support/Facades/Schema.html#method_dropIfExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::dropColumns","p":"Illuminate/Support/Facades/Schema.html#method_dropColumns","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::dropAllTables","p":"Illuminate/Support/Facades/Schema.html#method_dropAllTables","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::dropAllViews","p":"Illuminate/Support/Facades/Schema.html#method_dropAllViews","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::dropAllTypes","p":"Illuminate/Support/Facades/Schema.html#method_dropAllTypes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::getAllTables","p":"Illuminate/Support/Facades/Schema.html#method_getAllTables","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::rename","p":"Illuminate/Support/Facades/Schema.html#method_rename","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::enableForeignKeyConstraints","p":"Illuminate/Support/Facades/Schema.html#method_enableForeignKeyConstraints","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::disableForeignKeyConstraints","p":"Illuminate/Support/Facades/Schema.html#method_disableForeignKeyConstraints","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::withoutForeignKeyConstraints","p":"Illuminate/Support/Facades/Schema.html#method_withoutForeignKeyConstraints","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::getConnection","p":"Illuminate/Support/Facades/Schema.html#method_getConnection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::setConnection","p":"Illuminate/Support/Facades/Schema.html#method_setConnection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Schema::blueprintResolver","p":"Illuminate/Support/Facades/Schema.html#method_blueprintResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getFacadeAccessor","p":"Illuminate/Support/Facades/Session.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::shouldBlock","p":"Illuminate/Support/Facades/Session.html#method_shouldBlock","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::blockDriver","p":"Illuminate/Support/Facades/Session.html#method_blockDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getSessionConfig","p":"Illuminate/Support/Facades/Session.html#method_getSessionConfig","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getDefaultDriver","p":"Illuminate/Support/Facades/Session.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::setDefaultDriver","p":"Illuminate/Support/Facades/Session.html#method_setDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::driver","p":"Illuminate/Support/Facades/Session.html#method_driver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::extend","p":"Illuminate/Support/Facades/Session.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getDrivers","p":"Illuminate/Support/Facades/Session.html#method_getDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getContainer","p":"Illuminate/Support/Facades/Session.html#method_getContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::setContainer","p":"Illuminate/Support/Facades/Session.html#method_setContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::forgetDrivers","p":"Illuminate/Support/Facades/Session.html#method_forgetDrivers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::start","p":"Illuminate/Support/Facades/Session.html#method_start","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::save","p":"Illuminate/Support/Facades/Session.html#method_save","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::ageFlashData","p":"Illuminate/Support/Facades/Session.html#method_ageFlashData","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::all","p":"Illuminate/Support/Facades/Session.html#method_all","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::only","p":"Illuminate/Support/Facades/Session.html#method_only","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::exists","p":"Illuminate/Support/Facades/Session.html#method_exists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::missing","p":"Illuminate/Support/Facades/Session.html#method_missing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::has","p":"Illuminate/Support/Facades/Session.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::get","p":"Illuminate/Support/Facades/Session.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::pull","p":"Illuminate/Support/Facades/Session.html#method_pull","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::hasOldInput","p":"Illuminate/Support/Facades/Session.html#method_hasOldInput","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getOldInput","p":"Illuminate/Support/Facades/Session.html#method_getOldInput","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::replace","p":"Illuminate/Support/Facades/Session.html#method_replace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::put","p":"Illuminate/Support/Facades/Session.html#method_put","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::remember","p":"Illuminate/Support/Facades/Session.html#method_remember","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::push","p":"Illuminate/Support/Facades/Session.html#method_push","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::increment","p":"Illuminate/Support/Facades/Session.html#method_increment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::decrement","p":"Illuminate/Support/Facades/Session.html#method_decrement","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::flash","p":"Illuminate/Support/Facades/Session.html#method_flash","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::now","p":"Illuminate/Support/Facades/Session.html#method_now","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::reflash","p":"Illuminate/Support/Facades/Session.html#method_reflash","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::keep","p":"Illuminate/Support/Facades/Session.html#method_keep","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::flashInput","p":"Illuminate/Support/Facades/Session.html#method_flashInput","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::remove","p":"Illuminate/Support/Facades/Session.html#method_remove","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::forget","p":"Illuminate/Support/Facades/Session.html#method_forget","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::flush","p":"Illuminate/Support/Facades/Session.html#method_flush","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::invalidate","p":"Illuminate/Support/Facades/Session.html#method_invalidate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::regenerate","p":"Illuminate/Support/Facades/Session.html#method_regenerate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::migrate","p":"Illuminate/Support/Facades/Session.html#method_migrate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::isStarted","p":"Illuminate/Support/Facades/Session.html#method_isStarted","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getName","p":"Illuminate/Support/Facades/Session.html#method_getName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::setName","p":"Illuminate/Support/Facades/Session.html#method_setName","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getId","p":"Illuminate/Support/Facades/Session.html#method_getId","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::setId","p":"Illuminate/Support/Facades/Session.html#method_setId","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::isValidId","p":"Illuminate/Support/Facades/Session.html#method_isValidId","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::setExists","p":"Illuminate/Support/Facades/Session.html#method_setExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::token","p":"Illuminate/Support/Facades/Session.html#method_token","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::regenerateToken","p":"Illuminate/Support/Facades/Session.html#method_regenerateToken","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::previousUrl","p":"Illuminate/Support/Facades/Session.html#method_previousUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::setPreviousUrl","p":"Illuminate/Support/Facades/Session.html#method_setPreviousUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::passwordConfirmed","p":"Illuminate/Support/Facades/Session.html#method_passwordConfirmed","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::getHandler","p":"Illuminate/Support/Facades/Session.html#method_getHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::setHandler","p":"Illuminate/Support/Facades/Session.html#method_setHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::handlerNeedsRequest","p":"Illuminate/Support/Facades/Session.html#method_handlerNeedsRequest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::setRequestOnHandler","p":"Illuminate/Support/Facades/Session.html#method_setRequestOnHandler","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::macro","p":"Illuminate/Support/Facades/Session.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::mixin","p":"Illuminate/Support/Facades/Session.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::hasMacro","p":"Illuminate/Support/Facades/Session.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Session::flushMacros","p":"Illuminate/Support/Facades/Session.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::fake","p":"Illuminate/Support/Facades/Storage.html#method_fake","d":"<p>Replace the given disk with a local testing disk.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::persistentFake","p":"Illuminate/Support/Facades/Storage.html#method_persistentFake","d":"<p>Replace the given disk with a persistent local testing disk.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::getFacadeAccessor","p":"Illuminate/Support/Facades/Storage.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::drive","p":"Illuminate/Support/Facades/Storage.html#method_drive","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::disk","p":"Illuminate/Support/Facades/Storage.html#method_disk","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::cloud","p":"Illuminate/Support/Facades/Storage.html#method_cloud","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::build","p":"Illuminate/Support/Facades/Storage.html#method_build","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::createLocalDriver","p":"Illuminate/Support/Facades/Storage.html#method_createLocalDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::createFtpDriver","p":"Illuminate/Support/Facades/Storage.html#method_createFtpDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::createSftpDriver","p":"Illuminate/Support/Facades/Storage.html#method_createSftpDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::createS3Driver","p":"Illuminate/Support/Facades/Storage.html#method_createS3Driver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::createScopedDriver","p":"Illuminate/Support/Facades/Storage.html#method_createScopedDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::set","p":"Illuminate/Support/Facades/Storage.html#method_set","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::getDefaultDriver","p":"Illuminate/Support/Facades/Storage.html#method_getDefaultDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::getDefaultCloudDriver","p":"Illuminate/Support/Facades/Storage.html#method_getDefaultCloudDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::forgetDisk","p":"Illuminate/Support/Facades/Storage.html#method_forgetDisk","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::purge","p":"Illuminate/Support/Facades/Storage.html#method_purge","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::extend","p":"Illuminate/Support/Facades/Storage.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::setApplication","p":"Illuminate/Support/Facades/Storage.html#method_setApplication","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::exists","p":"Illuminate/Support/Facades/Storage.html#method_exists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::get","p":"Illuminate/Support/Facades/Storage.html#method_get","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::readStream","p":"Illuminate/Support/Facades/Storage.html#method_readStream","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::put","p":"Illuminate/Support/Facades/Storage.html#method_put","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::writeStream","p":"Illuminate/Support/Facades/Storage.html#method_writeStream","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::getVisibility","p":"Illuminate/Support/Facades/Storage.html#method_getVisibility","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::setVisibility","p":"Illuminate/Support/Facades/Storage.html#method_setVisibility","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::prepend","p":"Illuminate/Support/Facades/Storage.html#method_prepend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::append","p":"Illuminate/Support/Facades/Storage.html#method_append","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::delete","p":"Illuminate/Support/Facades/Storage.html#method_delete","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::copy","p":"Illuminate/Support/Facades/Storage.html#method_copy","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::move","p":"Illuminate/Support/Facades/Storage.html#method_move","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::size","p":"Illuminate/Support/Facades/Storage.html#method_size","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::lastModified","p":"Illuminate/Support/Facades/Storage.html#method_lastModified","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::files","p":"Illuminate/Support/Facades/Storage.html#method_files","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::allFiles","p":"Illuminate/Support/Facades/Storage.html#method_allFiles","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::directories","p":"Illuminate/Support/Facades/Storage.html#method_directories","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::allDirectories","p":"Illuminate/Support/Facades/Storage.html#method_allDirectories","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::makeDirectory","p":"Illuminate/Support/Facades/Storage.html#method_makeDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::deleteDirectory","p":"Illuminate/Support/Facades/Storage.html#method_deleteDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::assertExists","p":"Illuminate/Support/Facades/Storage.html#method_assertExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::assertMissing","p":"Illuminate/Support/Facades/Storage.html#method_assertMissing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::assertDirectoryEmpty","p":"Illuminate/Support/Facades/Storage.html#method_assertDirectoryEmpty","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::missing","p":"Illuminate/Support/Facades/Storage.html#method_missing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::fileExists","p":"Illuminate/Support/Facades/Storage.html#method_fileExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::fileMissing","p":"Illuminate/Support/Facades/Storage.html#method_fileMissing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::directoryExists","p":"Illuminate/Support/Facades/Storage.html#method_directoryExists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::directoryMissing","p":"Illuminate/Support/Facades/Storage.html#method_directoryMissing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::path","p":"Illuminate/Support/Facades/Storage.html#method_path","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::response","p":"Illuminate/Support/Facades/Storage.html#method_response","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::download","p":"Illuminate/Support/Facades/Storage.html#method_download","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::putFile","p":"Illuminate/Support/Facades/Storage.html#method_putFile","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::putFileAs","p":"Illuminate/Support/Facades/Storage.html#method_putFileAs","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::checksum","p":"Illuminate/Support/Facades/Storage.html#method_checksum","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::mimeType","p":"Illuminate/Support/Facades/Storage.html#method_mimeType","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::url","p":"Illuminate/Support/Facades/Storage.html#method_url","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::providesTemporaryUrls","p":"Illuminate/Support/Facades/Storage.html#method_providesTemporaryUrls","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::temporaryUrl","p":"Illuminate/Support/Facades/Storage.html#method_temporaryUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::temporaryUploadUrl","p":"Illuminate/Support/Facades/Storage.html#method_temporaryUploadUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::getDriver","p":"Illuminate/Support/Facades/Storage.html#method_getDriver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::getAdapter","p":"Illuminate/Support/Facades/Storage.html#method_getAdapter","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::getConfig","p":"Illuminate/Support/Facades/Storage.html#method_getConfig","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::buildTemporaryUrlsUsing","p":"Illuminate/Support/Facades/Storage.html#method_buildTemporaryUrlsUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::when","p":"Illuminate/Support/Facades/Storage.html#method_when","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::unless","p":"Illuminate/Support/Facades/Storage.html#method_unless","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::macro","p":"Illuminate/Support/Facades/Storage.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::mixin","p":"Illuminate/Support/Facades/Storage.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::hasMacro","p":"Illuminate/Support/Facades/Storage.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::flushMacros","p":"Illuminate/Support/Facades/Storage.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::macroCall","p":"Illuminate/Support/Facades/Storage.html#method_macroCall","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::has","p":"Illuminate/Support/Facades/Storage.html#method_has","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::read","p":"Illuminate/Support/Facades/Storage.html#method_read","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::listContents","p":"Illuminate/Support/Facades/Storage.html#method_listContents","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::fileSize","p":"Illuminate/Support/Facades/Storage.html#method_fileSize","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::visibility","p":"Illuminate/Support/Facades/Storage.html#method_visibility","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::write","p":"Illuminate/Support/Facades/Storage.html#method_write","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Storage::createDirectory","p":"Illuminate/Support/Facades/Storage.html#method_createDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::getFacadeAccessor","p":"Illuminate/Support/Facades/URL.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::full","p":"Illuminate/Support/Facades/URL.html#method_full","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::current","p":"Illuminate/Support/Facades/URL.html#method_current","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::previous","p":"Illuminate/Support/Facades/URL.html#method_previous","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::previousPath","p":"Illuminate/Support/Facades/URL.html#method_previousPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::to","p":"Illuminate/Support/Facades/URL.html#method_to","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::secure","p":"Illuminate/Support/Facades/URL.html#method_secure","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::asset","p":"Illuminate/Support/Facades/URL.html#method_asset","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::secureAsset","p":"Illuminate/Support/Facades/URL.html#method_secureAsset","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::assetFrom","p":"Illuminate/Support/Facades/URL.html#method_assetFrom","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::formatScheme","p":"Illuminate/Support/Facades/URL.html#method_formatScheme","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::signedRoute","p":"Illuminate/Support/Facades/URL.html#method_signedRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::temporarySignedRoute","p":"Illuminate/Support/Facades/URL.html#method_temporarySignedRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::hasValidSignature","p":"Illuminate/Support/Facades/URL.html#method_hasValidSignature","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::hasValidRelativeSignature","p":"Illuminate/Support/Facades/URL.html#method_hasValidRelativeSignature","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::hasCorrectSignature","p":"Illuminate/Support/Facades/URL.html#method_hasCorrectSignature","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::signatureHasNotExpired","p":"Illuminate/Support/Facades/URL.html#method_signatureHasNotExpired","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::route","p":"Illuminate/Support/Facades/URL.html#method_route","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::toRoute","p":"Illuminate/Support/Facades/URL.html#method_toRoute","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::action","p":"Illuminate/Support/Facades/URL.html#method_action","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::formatParameters","p":"Illuminate/Support/Facades/URL.html#method_formatParameters","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::formatRoot","p":"Illuminate/Support/Facades/URL.html#method_formatRoot","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::format","p":"Illuminate/Support/Facades/URL.html#method_format","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::isValidUrl","p":"Illuminate/Support/Facades/URL.html#method_isValidUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::defaults","p":"Illuminate/Support/Facades/URL.html#method_defaults","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::getDefaultParameters","p":"Illuminate/Support/Facades/URL.html#method_getDefaultParameters","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::forceScheme","p":"Illuminate/Support/Facades/URL.html#method_forceScheme","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::forceRootUrl","p":"Illuminate/Support/Facades/URL.html#method_forceRootUrl","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::formatHostUsing","p":"Illuminate/Support/Facades/URL.html#method_formatHostUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::formatPathUsing","p":"Illuminate/Support/Facades/URL.html#method_formatPathUsing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::pathFormatter","p":"Illuminate/Support/Facades/URL.html#method_pathFormatter","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::getRequest","p":"Illuminate/Support/Facades/URL.html#method_getRequest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::setRequest","p":"Illuminate/Support/Facades/URL.html#method_setRequest","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::setRoutes","p":"Illuminate/Support/Facades/URL.html#method_setRoutes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::setSessionResolver","p":"Illuminate/Support/Facades/URL.html#method_setSessionResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::setKeyResolver","p":"Illuminate/Support/Facades/URL.html#method_setKeyResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::withKeyResolver","p":"Illuminate/Support/Facades/URL.html#method_withKeyResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::getRootControllerNamespace","p":"Illuminate/Support/Facades/URL.html#method_getRootControllerNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::setRootControllerNamespace","p":"Illuminate/Support/Facades/URL.html#method_setRootControllerNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::macro","p":"Illuminate/Support/Facades/URL.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::mixin","p":"Illuminate/Support/Facades/URL.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::hasMacro","p":"Illuminate/Support/Facades/URL.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\URL::flushMacros","p":"Illuminate/Support/Facades/URL.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::getFacadeAccessor","p":"Illuminate/Support/Facades/Validator.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::make","p":"Illuminate/Support/Facades/Validator.html#method_make","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::validate","p":"Illuminate/Support/Facades/Validator.html#method_validate","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::extend","p":"Illuminate/Support/Facades/Validator.html#method_extend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::extendImplicit","p":"Illuminate/Support/Facades/Validator.html#method_extendImplicit","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::extendDependent","p":"Illuminate/Support/Facades/Validator.html#method_extendDependent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::replacer","p":"Illuminate/Support/Facades/Validator.html#method_replacer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::includeUnvalidatedArrayKeys","p":"Illuminate/Support/Facades/Validator.html#method_includeUnvalidatedArrayKeys","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::excludeUnvalidatedArrayKeys","p":"Illuminate/Support/Facades/Validator.html#method_excludeUnvalidatedArrayKeys","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::resolver","p":"Illuminate/Support/Facades/Validator.html#method_resolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::getTranslator","p":"Illuminate/Support/Facades/Validator.html#method_getTranslator","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::getPresenceVerifier","p":"Illuminate/Support/Facades/Validator.html#method_getPresenceVerifier","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::setPresenceVerifier","p":"Illuminate/Support/Facades/Validator.html#method_setPresenceVerifier","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::getContainer","p":"Illuminate/Support/Facades/Validator.html#method_getContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Validator::setContainer","p":"Illuminate/Support/Facades/Validator.html#method_setContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getFacadeAccessor","p":"Illuminate/Support/Facades/View.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\View::file","p":"Illuminate/Support/Facades/View.html#method_file","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::make","p":"Illuminate/Support/Facades/View.html#method_make","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::first","p":"Illuminate/Support/Facades/View.html#method_first","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::renderWhen","p":"Illuminate/Support/Facades/View.html#method_renderWhen","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::renderUnless","p":"Illuminate/Support/Facades/View.html#method_renderUnless","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::renderEach","p":"Illuminate/Support/Facades/View.html#method_renderEach","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::exists","p":"Illuminate/Support/Facades/View.html#method_exists","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getEngineFromPath","p":"Illuminate/Support/Facades/View.html#method_getEngineFromPath","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::share","p":"Illuminate/Support/Facades/View.html#method_share","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::incrementRender","p":"Illuminate/Support/Facades/View.html#method_incrementRender","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::decrementRender","p":"Illuminate/Support/Facades/View.html#method_decrementRender","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::doneRendering","p":"Illuminate/Support/Facades/View.html#method_doneRendering","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::hasRenderedOnce","p":"Illuminate/Support/Facades/View.html#method_hasRenderedOnce","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::markAsRenderedOnce","p":"Illuminate/Support/Facades/View.html#method_markAsRenderedOnce","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::addLocation","p":"Illuminate/Support/Facades/View.html#method_addLocation","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::addNamespace","p":"Illuminate/Support/Facades/View.html#method_addNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::prependNamespace","p":"Illuminate/Support/Facades/View.html#method_prependNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::replaceNamespace","p":"Illuminate/Support/Facades/View.html#method_replaceNamespace","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::addExtension","p":"Illuminate/Support/Facades/View.html#method_addExtension","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::flushState","p":"Illuminate/Support/Facades/View.html#method_flushState","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::flushStateIfDoneRendering","p":"Illuminate/Support/Facades/View.html#method_flushStateIfDoneRendering","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getExtensions","p":"Illuminate/Support/Facades/View.html#method_getExtensions","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getEngineResolver","p":"Illuminate/Support/Facades/View.html#method_getEngineResolver","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getFinder","p":"Illuminate/Support/Facades/View.html#method_getFinder","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::setFinder","p":"Illuminate/Support/Facades/View.html#method_setFinder","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::flushFinderCache","p":"Illuminate/Support/Facades/View.html#method_flushFinderCache","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getDispatcher","p":"Illuminate/Support/Facades/View.html#method_getDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::setDispatcher","p":"Illuminate/Support/Facades/View.html#method_setDispatcher","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getContainer","p":"Illuminate/Support/Facades/View.html#method_getContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::setContainer","p":"Illuminate/Support/Facades/View.html#method_setContainer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::shared","p":"Illuminate/Support/Facades/View.html#method_shared","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getShared","p":"Illuminate/Support/Facades/View.html#method_getShared","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::macro","p":"Illuminate/Support/Facades/View.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::mixin","p":"Illuminate/Support/Facades/View.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::hasMacro","p":"Illuminate/Support/Facades/View.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::flushMacros","p":"Illuminate/Support/Facades/View.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::startComponent","p":"Illuminate/Support/Facades/View.html#method_startComponent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::startComponentFirst","p":"Illuminate/Support/Facades/View.html#method_startComponentFirst","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::renderComponent","p":"Illuminate/Support/Facades/View.html#method_renderComponent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getConsumableComponentData","p":"Illuminate/Support/Facades/View.html#method_getConsumableComponentData","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::slot","p":"Illuminate/Support/Facades/View.html#method_slot","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::endSlot","p":"Illuminate/Support/Facades/View.html#method_endSlot","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::creator","p":"Illuminate/Support/Facades/View.html#method_creator","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::composers","p":"Illuminate/Support/Facades/View.html#method_composers","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::composer","p":"Illuminate/Support/Facades/View.html#method_composer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::callComposer","p":"Illuminate/Support/Facades/View.html#method_callComposer","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::callCreator","p":"Illuminate/Support/Facades/View.html#method_callCreator","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::startFragment","p":"Illuminate/Support/Facades/View.html#method_startFragment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::stopFragment","p":"Illuminate/Support/Facades/View.html#method_stopFragment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getFragment","p":"Illuminate/Support/Facades/View.html#method_getFragment","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getFragments","p":"Illuminate/Support/Facades/View.html#method_getFragments","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::flushFragments","p":"Illuminate/Support/Facades/View.html#method_flushFragments","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::startSection","p":"Illuminate/Support/Facades/View.html#method_startSection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::inject","p":"Illuminate/Support/Facades/View.html#method_inject","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::yieldSection","p":"Illuminate/Support/Facades/View.html#method_yieldSection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::stopSection","p":"Illuminate/Support/Facades/View.html#method_stopSection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::appendSection","p":"Illuminate/Support/Facades/View.html#method_appendSection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::yieldContent","p":"Illuminate/Support/Facades/View.html#method_yieldContent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::parentPlaceholder","p":"Illuminate/Support/Facades/View.html#method_parentPlaceholder","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::hasSection","p":"Illuminate/Support/Facades/View.html#method_hasSection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::sectionMissing","p":"Illuminate/Support/Facades/View.html#method_sectionMissing","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getSection","p":"Illuminate/Support/Facades/View.html#method_getSection","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getSections","p":"Illuminate/Support/Facades/View.html#method_getSections","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::flushSections","p":"Illuminate/Support/Facades/View.html#method_flushSections","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::addLoop","p":"Illuminate/Support/Facades/View.html#method_addLoop","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::incrementLoopIndices","p":"Illuminate/Support/Facades/View.html#method_incrementLoopIndices","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::popLoop","p":"Illuminate/Support/Facades/View.html#method_popLoop","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getLastLoop","p":"Illuminate/Support/Facades/View.html#method_getLastLoop","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::getLoopStack","p":"Illuminate/Support/Facades/View.html#method_getLoopStack","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::startPush","p":"Illuminate/Support/Facades/View.html#method_startPush","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::stopPush","p":"Illuminate/Support/Facades/View.html#method_stopPush","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::startPrepend","p":"Illuminate/Support/Facades/View.html#method_startPrepend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::stopPrepend","p":"Illuminate/Support/Facades/View.html#method_stopPrepend","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::yieldPushContent","p":"Illuminate/Support/Facades/View.html#method_yieldPushContent","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::flushStacks","p":"Illuminate/Support/Facades/View.html#method_flushStacks","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::startTranslation","p":"Illuminate/Support/Facades/View.html#method_startTranslation","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\View::renderTranslation","p":"Illuminate/Support/Facades/View.html#method_renderTranslation","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::getFacadeAccessor","p":"Illuminate/Support/Facades/Vite.html#method_getFacadeAccessor","d":"<p>Get the registered name of the component.</p>"},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::preloadedAssets","p":"Illuminate/Support/Facades/Vite.html#method_preloadedAssets","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::cspNonce","p":"Illuminate/Support/Facades/Vite.html#method_cspNonce","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::useCspNonce","p":"Illuminate/Support/Facades/Vite.html#method_useCspNonce","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::useIntegrityKey","p":"Illuminate/Support/Facades/Vite.html#method_useIntegrityKey","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::withEntryPoints","p":"Illuminate/Support/Facades/Vite.html#method_withEntryPoints","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::useManifestFilename","p":"Illuminate/Support/Facades/Vite.html#method_useManifestFilename","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::hotFile","p":"Illuminate/Support/Facades/Vite.html#method_hotFile","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::useHotFile","p":"Illuminate/Support/Facades/Vite.html#method_useHotFile","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::useBuildDirectory","p":"Illuminate/Support/Facades/Vite.html#method_useBuildDirectory","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::useScriptTagAttributes","p":"Illuminate/Support/Facades/Vite.html#method_useScriptTagAttributes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::useStyleTagAttributes","p":"Illuminate/Support/Facades/Vite.html#method_useStyleTagAttributes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::usePreloadTagAttributes","p":"Illuminate/Support/Facades/Vite.html#method_usePreloadTagAttributes","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::reactRefresh","p":"Illuminate/Support/Facades/Vite.html#method_reactRefresh","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::asset","p":"Illuminate/Support/Facades/Vite.html#method_asset","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::manifestHash","p":"Illuminate/Support/Facades/Vite.html#method_manifestHash","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::isRunningHot","p":"Illuminate/Support/Facades/Vite.html#method_isRunningHot","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::toHtml","p":"Illuminate/Support/Facades/Vite.html#method_toHtml","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::macro","p":"Illuminate/Support/Facades/Vite.html#method_macro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::mixin","p":"Illuminate/Support/Facades/Vite.html#method_mixin","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::hasMacro","p":"Illuminate/Support/Facades/Vite.html#method_hasMacro","d":""},{"t":"M","n":"Illuminate\\Support\\Facades\\Vite::flushMacros","p":"Illuminate/Support/Facades/Vite.html#method_flushMacros","d":""},{"t":"M","n":"Illuminate\\Support\\Fluent::__construct","p":"Illuminate/Support/Fluent.html#method___construct","d":"<p>Create a new fluent instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::get","p":"Illuminate/Support/Fluent.html#method_get","d":null},{"t":"M","n":"Illuminate\\Support\\Fluent::getAttributes","p":"Illuminate/Support/Fluent.html#method_getAttributes","d":null},{"t":"M","n":"Illuminate\\Support\\Fluent::toArray","p":"Illuminate/Support/Fluent.html#method_toArray","d":null},{"t":"M","n":"Illuminate\\Support\\Fluent::jsonSerialize","p":"Illuminate/Support/Fluent.html#method_jsonSerialize","d":null},{"t":"M","n":"Illuminate\\Support\\Fluent::toJson","p":"Illuminate/Support/Fluent.html#method_toJson","d":"<p>Convert the fluent instance to JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::offsetExists","p":"Illuminate/Support/Fluent.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::offsetGet","p":"Illuminate/Support/Fluent.html#method_offsetGet","d":"<p>Get the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::offsetSet","p":"Illuminate/Support/Fluent.html#method_offsetSet","d":"<p>Set the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::offsetUnset","p":"Illuminate/Support/Fluent.html#method_offsetUnset","d":"<p>Unset the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__call","p":"Illuminate/Support/Fluent.html#method___call","d":"<p>Handle dynamic calls to the fluent instance to set attributes.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__get","p":"Illuminate/Support/Fluent.html#method___get","d":"<p>Dynamically retrieve the value of an attribute.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__set","p":"Illuminate/Support/Fluent.html#method___set","d":"<p>Dynamically set the value of an attribute.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__isset","p":"Illuminate/Support/Fluent.html#method___isset","d":"<p>Dynamically check if an attribute is set.</p>"},{"t":"M","n":"Illuminate\\Support\\Fluent::__unset","p":"Illuminate/Support/Fluent.html#method___unset","d":"<p>Dynamically unset an attribute.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderCollectionProxy::__construct","p":"Illuminate/Support/HigherOrderCollectionProxy.html#method___construct","d":"<p>Create a new proxy instance.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderCollectionProxy::__get","p":"Illuminate/Support/HigherOrderCollectionProxy.html#method___get","d":"<p>Proxy accessing an attribute onto the collection items.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderCollectionProxy::__call","p":"Illuminate/Support/HigherOrderCollectionProxy.html#method___call","d":"<p>Proxy a method call onto the collection items.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderTapProxy::__construct","p":"Illuminate/Support/HigherOrderTapProxy.html#method___construct","d":"<p>Create a new tap proxy instance.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderTapProxy::__call","p":"Illuminate/Support/HigherOrderTapProxy.html#method___call","d":"<p>Dynamically pass method calls to the target.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderWhenProxy::__construct","p":"Illuminate/Support/HigherOrderWhenProxy.html#method___construct","d":"<p>Create a new proxy instance.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderWhenProxy::condition","p":"Illuminate/Support/HigherOrderWhenProxy.html#method_condition","d":"<p>Set the condition on the proxy.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderWhenProxy::negateConditionOnCapture","p":"Illuminate/Support/HigherOrderWhenProxy.html#method_negateConditionOnCapture","d":"<p>Indicate that the condition should be negated.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderWhenProxy::__get","p":"Illuminate/Support/HigherOrderWhenProxy.html#method___get","d":"<p>Proxy accessing an attribute onto the target.</p>"},{"t":"M","n":"Illuminate\\Support\\HigherOrderWhenProxy::__call","p":"Illuminate/Support/HigherOrderWhenProxy.html#method___call","d":"<p>Proxy a method call on the target.</p>"},{"t":"M","n":"Illuminate\\Support\\HtmlString::__construct","p":"Illuminate/Support/HtmlString.html#method___construct","d":"<p>Create a new HTML string instance.</p>"},{"t":"M","n":"Illuminate\\Support\\HtmlString::toHtml","p":"Illuminate/Support/HtmlString.html#method_toHtml","d":"<p>Get the HTML string.</p>"},{"t":"M","n":"Illuminate\\Support\\HtmlString::isEmpty","p":"Illuminate/Support/HtmlString.html#method_isEmpty","d":"<p>Determine if the given HTML string is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\HtmlString::isNotEmpty","p":"Illuminate/Support/HtmlString.html#method_isNotEmpty","d":"<p>Determine if the given HTML string is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\HtmlString::__toString","p":"Illuminate/Support/HtmlString.html#method___toString","d":"<p>Get the HTML string.</p>"},{"t":"M","n":"Illuminate\\Support\\InteractsWithTime::secondsUntil","p":"Illuminate/Support/InteractsWithTime.html#method_secondsUntil","d":"<p>Get the number of seconds until the given DateTime.</p>"},{"t":"M","n":"Illuminate\\Support\\InteractsWithTime::availableAt","p":"Illuminate/Support/InteractsWithTime.html#method_availableAt","d":"<p>Get the &quot;available at&quot; UNIX timestamp.</p>"},{"t":"M","n":"Illuminate\\Support\\InteractsWithTime::parseDateInterval","p":"Illuminate/Support/InteractsWithTime.html#method_parseDateInterval","d":"<p>If the given value is an interval, convert it to a DateTime instance.</p>"},{"t":"M","n":"Illuminate\\Support\\InteractsWithTime::currentTime","p":"Illuminate/Support/InteractsWithTime.html#method_currentTime","d":"<p>Get the current system time as a UNIX timestamp.</p>"},{"t":"M","n":"Illuminate\\Support\\Js::__construct","p":"Illuminate/Support/Js.html#method___construct","d":"<p>Create a new class instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Js::from","p":"Illuminate/Support/Js.html#method_from","d":"<p>Create a new JavaScript string from the given data.</p>"},{"t":"M","n":"Illuminate\\Support\\Js::convertDataToJavaScriptExpression","p":"Illuminate/Support/Js.html#method_convertDataToJavaScriptExpression","d":"<p>Convert the given data to a JavaScript expression.</p>"},{"t":"M","n":"Illuminate\\Support\\Js::jsonEncode","p":"Illuminate/Support/Js.html#method_jsonEncode","d":"<p>Encode the given data as JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Js::convertJsonToJavaScriptExpression","p":"Illuminate/Support/Js.html#method_convertJsonToJavaScriptExpression","d":"<p>Convert the given JSON to a JavaScript expression.</p>"},{"t":"M","n":"Illuminate\\Support\\Js::toHtml","p":"Illuminate/Support/Js.html#method_toHtml","d":"<p>Get the string representation of the data for use in HTML.</p>"},{"t":"M","n":"Illuminate\\Support\\Js::__toString","p":"Illuminate/Support/Js.html#method___toString","d":"<p>Get the string representation of the data for use in HTML.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::__construct","p":"Illuminate/Support/LazyCollection.html#method___construct","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::make","p":"Illuminate/Support/LazyCollection.html#method_make","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::range","p":"Illuminate/Support/LazyCollection.html#method_range","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::all","p":"Illuminate/Support/LazyCollection.html#method_all","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::eager","p":"Illuminate/Support/LazyCollection.html#method_eager","d":"<p>Eager load all items into a new lazy collection backed by an array.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::remember","p":"Illuminate/Support/LazyCollection.html#method_remember","d":"<p>Cache values as they're enumerated.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::avg","p":"Illuminate/Support/LazyCollection.html#method_avg","d":"<p>Get the average value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::median","p":"Illuminate/Support/LazyCollection.html#method_median","d":"<p>Get the median of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::mode","p":"Illuminate/Support/LazyCollection.html#method_mode","d":"<p>Get the mode of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::collapse","p":"Illuminate/Support/LazyCollection.html#method_collapse","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::contains","p":"Illuminate/Support/LazyCollection.html#method_contains","d":"<p>Determine if an item exists in the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::containsStrict","p":"Illuminate/Support/LazyCollection.html#method_containsStrict","d":"<p>Determine if an item exists, using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::doesntContain","p":"Illuminate/Support/LazyCollection.html#method_doesntContain","d":"<p>Determine if an item is not contained in the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::crossJoin","p":"Illuminate/Support/LazyCollection.html#method_crossJoin","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::countBy","p":"Illuminate/Support/LazyCollection.html#method_countBy","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::diff","p":"Illuminate/Support/LazyCollection.html#method_diff","d":"<p>Get the items that are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::diffUsing","p":"Illuminate/Support/LazyCollection.html#method_diffUsing","d":"<p>Get the items that are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::diffAssoc","p":"Illuminate/Support/LazyCollection.html#method_diffAssoc","d":"<p>Get the items whose keys and values are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::diffAssocUsing","p":"Illuminate/Support/LazyCollection.html#method_diffAssocUsing","d":"<p>Get the items whose keys and values are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::diffKeys","p":"Illuminate/Support/LazyCollection.html#method_diffKeys","d":"<p>Get the items whose keys are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::diffKeysUsing","p":"Illuminate/Support/LazyCollection.html#method_diffKeysUsing","d":"<p>Get the items whose keys are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::duplicates","p":"Illuminate/Support/LazyCollection.html#method_duplicates","d":"<p>Retrieve duplicate items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::duplicatesStrict","p":"Illuminate/Support/LazyCollection.html#method_duplicatesStrict","d":"<p>Retrieve duplicate items using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::except","p":"Illuminate/Support/LazyCollection.html#method_except","d":"<p>Get all items except for those with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::filter","p":"Illuminate/Support/LazyCollection.html#method_filter","d":"<p>Run a filter over each of the items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::first","p":"Illuminate/Support/LazyCollection.html#method_first","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::flatten","p":"Illuminate/Support/LazyCollection.html#method_flatten","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::flip","p":"Illuminate/Support/LazyCollection.html#method_flip","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::get","p":"Illuminate/Support/LazyCollection.html#method_get","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::groupBy","p":"Illuminate/Support/LazyCollection.html#method_groupBy","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::keyBy","p":"Illuminate/Support/LazyCollection.html#method_keyBy","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::has","p":"Illuminate/Support/LazyCollection.html#method_has","d":"<p>Determine if an item exists in the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::hasAny","p":"Illuminate/Support/LazyCollection.html#method_hasAny","d":"<p>Determine if any of the keys exist in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::implode","p":"Illuminate/Support/LazyCollection.html#method_implode","d":"<p>Concatenate values of a given key as a string.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::intersect","p":"Illuminate/Support/LazyCollection.html#method_intersect","d":"<p>Intersect the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::intersectUsing","p":"Illuminate/Support/LazyCollection.html#method_intersectUsing","d":"<p>Intersect the collection with the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::intersectAssoc","p":"Illuminate/Support/LazyCollection.html#method_intersectAssoc","d":"<p>Intersect the collection with the given items with additional index check.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::intersectAssocUsing","p":"Illuminate/Support/LazyCollection.html#method_intersectAssocUsing","d":"<p>Intersect the collection with the given items with additional index check, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::intersectByKeys","p":"Illuminate/Support/LazyCollection.html#method_intersectByKeys","d":"<p>Intersect the collection with the given items by key.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::isEmpty","p":"Illuminate/Support/LazyCollection.html#method_isEmpty","d":"<p>Determine if the items are empty or not.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::containsOneItem","p":"Illuminate/Support/LazyCollection.html#method_containsOneItem","d":"<p>Determine if the collection contains a single item.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::join","p":"Illuminate/Support/LazyCollection.html#method_join","d":"<p>Join all items from the collection using a string. The final items can use a separate glue string.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::keys","p":"Illuminate/Support/LazyCollection.html#method_keys","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::last","p":"Illuminate/Support/LazyCollection.html#method_last","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::pluck","p":"Illuminate/Support/LazyCollection.html#method_pluck","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::map","p":"Illuminate/Support/LazyCollection.html#method_map","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::mapToDictionary","p":"Illuminate/Support/LazyCollection.html#method_mapToDictionary","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::mapWithKeys","p":"Illuminate/Support/LazyCollection.html#method_mapWithKeys","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::merge","p":"Illuminate/Support/LazyCollection.html#method_merge","d":"<p>Merge the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::mergeRecursive","p":"Illuminate/Support/LazyCollection.html#method_mergeRecursive","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::combine","p":"Illuminate/Support/LazyCollection.html#method_combine","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::union","p":"Illuminate/Support/LazyCollection.html#method_union","d":"<p>Union the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::nth","p":"Illuminate/Support/LazyCollection.html#method_nth","d":"<p>Create a new collection consisting of every n-th element.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::only","p":"Illuminate/Support/LazyCollection.html#method_only","d":"<p>Get the items with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::concat","p":"Illuminate/Support/LazyCollection.html#method_concat","d":"<p>Push all of the given items onto the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::random","p":"Illuminate/Support/LazyCollection.html#method_random","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::replace","p":"Illuminate/Support/LazyCollection.html#method_replace","d":"<p>Replace the collection items with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::replaceRecursive","p":"Illuminate/Support/LazyCollection.html#method_replaceRecursive","d":"<p>Recursively replace the collection items with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::reverse","p":"Illuminate/Support/LazyCollection.html#method_reverse","d":"<p>Reverse items order.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::search","p":"Illuminate/Support/LazyCollection.html#method_search","d":"<p>Search the collection for a given value and return the corresponding key if successful.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::shuffle","p":"Illuminate/Support/LazyCollection.html#method_shuffle","d":"<p>Shuffle the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sliding","p":"Illuminate/Support/LazyCollection.html#method_sliding","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::skip","p":"Illuminate/Support/LazyCollection.html#method_skip","d":"<p>Skip the first {$count} items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::skipUntil","p":"Illuminate/Support/LazyCollection.html#method_skipUntil","d":"<p>Skip items in the collection until the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::skipWhile","p":"Illuminate/Support/LazyCollection.html#method_skipWhile","d":"<p>Skip items in the collection while the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::slice","p":"Illuminate/Support/LazyCollection.html#method_slice","d":"<p>Get a slice of items from the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::split","p":"Illuminate/Support/LazyCollection.html#method_split","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sole","p":"Illuminate/Support/LazyCollection.html#method_sole","d":"<p>Get the first item in the collection, but only if exactly one item exists. Otherwise, throw an exception.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::firstOrFail","p":"Illuminate/Support/LazyCollection.html#method_firstOrFail","d":"<p>Get the first item in the collection but throw an exception if no matching items exist.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::chunk","p":"Illuminate/Support/LazyCollection.html#method_chunk","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::splitIn","p":"Illuminate/Support/LazyCollection.html#method_splitIn","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::chunkWhile","p":"Illuminate/Support/LazyCollection.html#method_chunkWhile","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sort","p":"Illuminate/Support/LazyCollection.html#method_sort","d":"<p>Sort through each item with a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sortDesc","p":"Illuminate/Support/LazyCollection.html#method_sortDesc","d":"<p>Sort items in descending order.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sortBy","p":"Illuminate/Support/LazyCollection.html#method_sortBy","d":"<p>Sort the collection using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sortByDesc","p":"Illuminate/Support/LazyCollection.html#method_sortByDesc","d":"<p>Sort the collection in descending order using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sortKeys","p":"Illuminate/Support/LazyCollection.html#method_sortKeys","d":"<p>Sort the collection keys.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sortKeysDesc","p":"Illuminate/Support/LazyCollection.html#method_sortKeysDesc","d":"<p>Sort the collection keys in descending order.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::sortKeysUsing","p":"Illuminate/Support/LazyCollection.html#method_sortKeysUsing","d":"<p>Sort the collection keys using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::take","p":"Illuminate/Support/LazyCollection.html#method_take","d":"<p>Take the first or last {$limit} items.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::takeUntil","p":"Illuminate/Support/LazyCollection.html#method_takeUntil","d":"<p>Take items in the collection until the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::takeUntilTimeout","p":"Illuminate/Support/LazyCollection.html#method_takeUntilTimeout","d":"<p>Take items in the collection until a given point in time.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::takeWhile","p":"Illuminate/Support/LazyCollection.html#method_takeWhile","d":"<p>Take items in the collection while the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::tapEach","p":"Illuminate/Support/LazyCollection.html#method_tapEach","d":"<p>Pass each item in the collection to the given callback, lazily.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::undot","p":"Illuminate/Support/LazyCollection.html#method_undot","d":"<p>Convert a flatten &quot;dot&quot; notation array into an expanded array.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::unique","p":"Illuminate/Support/LazyCollection.html#method_unique","d":"<p>Return only unique items from the collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::values","p":"Illuminate/Support/LazyCollection.html#method_values","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::zip","p":"Illuminate/Support/LazyCollection.html#method_zip","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::pad","p":"Illuminate/Support/LazyCollection.html#method_pad","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::getIterator","p":"Illuminate/Support/LazyCollection.html#method_getIterator","d":"<p>Get the values iterator.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::count","p":"Illuminate/Support/LazyCollection.html#method_count","d":"<p>Count the number of items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::makeIterator","p":"Illuminate/Support/LazyCollection.html#method_makeIterator","d":null},{"t":"M","n":"Illuminate\\Support\\LazyCollection::explodePluckParameters","p":"Illuminate/Support/LazyCollection.html#method_explodePluckParameters","d":"<p>Explode the &quot;value&quot; and &quot;key&quot; arguments passed to &quot;pluck&quot;.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::passthru","p":"Illuminate/Support/LazyCollection.html#method_passthru","d":"<p>Pass this lazy collection through a method on the collection class.</p>"},{"t":"M","n":"Illuminate\\Support\\LazyCollection::now","p":"Illuminate/Support/LazyCollection.html#method_now","d":"<p>Get the current time.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::__construct","p":"Illuminate/Support/Lottery.html#method___construct","d":"<p>Create a new Lottery instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::odds","p":"Illuminate/Support/Lottery.html#method_odds","d":"<p>Create a new Lottery instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::winner","p":"Illuminate/Support/Lottery.html#method_winner","d":"<p>Set the winner callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::loser","p":"Illuminate/Support/Lottery.html#method_loser","d":"<p>Set the loser callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::__invoke","p":"Illuminate/Support/Lottery.html#method___invoke","d":"<p>Run the lottery.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::choose","p":"Illuminate/Support/Lottery.html#method_choose","d":"<p>Run the lottery.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::runCallback","p":"Illuminate/Support/Lottery.html#method_runCallback","d":"<p>Run the winner or loser callback, randomly.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::wins","p":"Illuminate/Support/Lottery.html#method_wins","d":"<p>Determine if the lottery &quot;wins&quot; or &quot;loses&quot;.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::resultFactory","p":"Illuminate/Support/Lottery.html#method_resultFactory","d":"<p>The factory that determines the lottery result.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::alwaysWin","p":"Illuminate/Support/Lottery.html#method_alwaysWin","d":"<p>Force the lottery to always result in a win.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::alwaysLose","p":"Illuminate/Support/Lottery.html#method_alwaysLose","d":"<p>Force the lottery to always result in a lose.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::fix","p":"Illuminate/Support/Lottery.html#method_fix","d":"<p>Set the sequence that will be used to determine lottery results.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::forceResultWithSequence","p":"Illuminate/Support/Lottery.html#method_forceResultWithSequence","d":"<p>Set the sequence that will be used to determine lottery results.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::determineResultNormally","p":"Illuminate/Support/Lottery.html#method_determineResultNormally","d":"<p>Indicate that the lottery results should be determined normally.</p>"},{"t":"M","n":"Illuminate\\Support\\Lottery::setResultFactory","p":"Illuminate/Support/Lottery.html#method_setResultFactory","d":"<p>Set the factory that should be used to determine the lottery results.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::__construct","p":"Illuminate/Support/Manager.html#method___construct","d":"<p>Create a new manager instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::getDefaultDriver","p":"Illuminate/Support/Manager.html#method_getDefaultDriver","d":"<p>Get the default driver name.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::driver","p":"Illuminate/Support/Manager.html#method_driver","d":"<p>Get a driver instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::createDriver","p":"Illuminate/Support/Manager.html#method_createDriver","d":"<p>Create a new driver instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::callCustomCreator","p":"Illuminate/Support/Manager.html#method_callCustomCreator","d":"<p>Call a custom driver creator.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::extend","p":"Illuminate/Support/Manager.html#method_extend","d":"<p>Register a custom driver creator Closure.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::getDrivers","p":"Illuminate/Support/Manager.html#method_getDrivers","d":"<p>Get all of the created &quot;drivers&quot;.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::getContainer","p":"Illuminate/Support/Manager.html#method_getContainer","d":"<p>Get the container instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::setContainer","p":"Illuminate/Support/Manager.html#method_setContainer","d":"<p>Set the container instance used by the manager.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::forgetDrivers","p":"Illuminate/Support/Manager.html#method_forgetDrivers","d":"<p>Forget all of the resolved driver instances.</p>"},{"t":"M","n":"Illuminate\\Support\\Manager::__call","p":"Illuminate/Support/Manager.html#method___call","d":"<p>Dynamically call the default driver instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::__construct","p":"Illuminate/Support/MessageBag.html#method___construct","d":"<p>Create a new message bag instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::keys","p":"Illuminate/Support/MessageBag.html#method_keys","d":"<p>Get the keys present in the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::add","p":"Illuminate/Support/MessageBag.html#method_add","d":"<p>Add a message to the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::addIf","p":"Illuminate/Support/MessageBag.html#method_addIf","d":"<p>Add a message to the message bag if the given conditional is &quot;true&quot;.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::isUnique","p":"Illuminate/Support/MessageBag.html#method_isUnique","d":"<p>Determine if a key and message combination already exists.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::merge","p":"Illuminate/Support/MessageBag.html#method_merge","d":"<p>Merge a new array of messages into the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::has","p":"Illuminate/Support/MessageBag.html#method_has","d":"<p>Determine if messages exist for all of the given keys.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::hasAny","p":"Illuminate/Support/MessageBag.html#method_hasAny","d":"<p>Determine if messages exist for any of the given keys.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::first","p":"Illuminate/Support/MessageBag.html#method_first","d":"<p>Get the first message from the message bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::get","p":"Illuminate/Support/MessageBag.html#method_get","d":"<p>Get all of the messages from the message bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::getMessagesForWildcardKey","p":"Illuminate/Support/MessageBag.html#method_getMessagesForWildcardKey","d":"<p>Get the messages for a wildcard key.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::all","p":"Illuminate/Support/MessageBag.html#method_all","d":"<p>Get all of the messages for every key in the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::unique","p":"Illuminate/Support/MessageBag.html#method_unique","d":"<p>Get all of the unique messages for every key in the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::forget","p":"Illuminate/Support/MessageBag.html#method_forget","d":"<p>Remove a message from the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::transform","p":"Illuminate/Support/MessageBag.html#method_transform","d":"<p>Format an array of messages.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::checkFormat","p":"Illuminate/Support/MessageBag.html#method_checkFormat","d":"<p>Get the appropriate format based on the given format.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::messages","p":"Illuminate/Support/MessageBag.html#method_messages","d":"<p>Get the raw messages in the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::getMessages","p":"Illuminate/Support/MessageBag.html#method_getMessages","d":"<p>Get the raw messages in the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::getMessageBag","p":"Illuminate/Support/MessageBag.html#method_getMessageBag","d":"<p>Get the messages for the instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::getFormat","p":"Illuminate/Support/MessageBag.html#method_getFormat","d":"<p>Get the default message format.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::setFormat","p":"Illuminate/Support/MessageBag.html#method_setFormat","d":"<p>Set the default message format.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::isEmpty","p":"Illuminate/Support/MessageBag.html#method_isEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::isNotEmpty","p":"Illuminate/Support/MessageBag.html#method_isNotEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::any","p":"Illuminate/Support/MessageBag.html#method_any","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::count","p":"Illuminate/Support/MessageBag.html#method_count","d":"<p>Get the number of messages in the message bag.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::toArray","p":"Illuminate/Support/MessageBag.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::jsonSerialize","p":"Illuminate/Support/MessageBag.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::toJson","p":"Illuminate/Support/MessageBag.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Support\\MessageBag::__toString","p":"Illuminate/Support/MessageBag.html#method___toString","d":"<p>Convert the message bag to its string representation.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::__construct","p":"Illuminate/Support/MultipleInstanceManager.html#method___construct","d":"<p>Create a new manager instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::getDefaultInstance","p":"Illuminate/Support/MultipleInstanceManager.html#method_getDefaultInstance","d":"<p>Get the default instance name.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::setDefaultInstance","p":"Illuminate/Support/MultipleInstanceManager.html#method_setDefaultInstance","d":"<p>Set the default instance name.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::getInstanceConfig","p":"Illuminate/Support/MultipleInstanceManager.html#method_getInstanceConfig","d":"<p>Get the instance specific configuration.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::instance","p":"Illuminate/Support/MultipleInstanceManager.html#method_instance","d":"<p>Get an instance instance by name.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::get","p":"Illuminate/Support/MultipleInstanceManager.html#method_get","d":"<p>Attempt to get an instance from the local cache.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::resolve","p":"Illuminate/Support/MultipleInstanceManager.html#method_resolve","d":"<p>Resolve the given instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::callCustomCreator","p":"Illuminate/Support/MultipleInstanceManager.html#method_callCustomCreator","d":"<p>Call a custom instance creator.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::forgetInstance","p":"Illuminate/Support/MultipleInstanceManager.html#method_forgetInstance","d":"<p>Unset the given instances.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::purge","p":"Illuminate/Support/MultipleInstanceManager.html#method_purge","d":"<p>Disconnect the given instance and remove from local cache.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::extend","p":"Illuminate/Support/MultipleInstanceManager.html#method_extend","d":"<p>Register a custom instance creator Closure.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleInstanceManager::__call","p":"Illuminate/Support/MultipleInstanceManager.html#method___call","d":"<p>Dynamically call the default instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleItemsFoundException::__construct","p":"Illuminate/Support/MultipleItemsFoundException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Support\\MultipleItemsFoundException::getCount","p":"Illuminate/Support/MultipleItemsFoundException.html#method_getCount","d":"<p>Get the number of items found.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::parseKey","p":"Illuminate/Support/NamespacedItemResolver.html#method_parseKey","d":"<p>Parse a key into namespace, group, and item.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::parseBasicSegments","p":"Illuminate/Support/NamespacedItemResolver.html#method_parseBasicSegments","d":"<p>Parse an array of basic segments.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::parseNamespacedSegments","p":"Illuminate/Support/NamespacedItemResolver.html#method_parseNamespacedSegments","d":"<p>Parse an array of namespaced segments.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::setParsedKey","p":"Illuminate/Support/NamespacedItemResolver.html#method_setParsedKey","d":"<p>Set the parsed value of a key.</p>"},{"t":"M","n":"Illuminate\\Support\\NamespacedItemResolver::flushParsedKeys","p":"Illuminate/Support/NamespacedItemResolver.html#method_flushParsedKeys","d":"<p>Flush the cache of parsed keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Optional::__construct","p":"Illuminate/Support/Optional.html#method___construct","d":"<p>Create a new optional instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Optional::__get","p":"Illuminate/Support/Optional.html#method___get","d":"<p>Dynamically access a property on the underlying object.</p>"},{"t":"M","n":"Illuminate\\Support\\Optional::__isset","p":"Illuminate/Support/Optional.html#method___isset","d":"<p>Dynamically check a property exists on the underlying object.</p>"},{"t":"M","n":"Illuminate\\Support\\Optional::offsetExists","p":"Illuminate/Support/Optional.html#method_offsetExists","d":"<p>Determine if an item exists at an offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Optional::offsetGet","p":"Illuminate/Support/Optional.html#method_offsetGet","d":"<p>Get an item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Optional::offsetSet","p":"Illuminate/Support/Optional.html#method_offsetSet","d":"<p>Set the item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Optional::offsetUnset","p":"Illuminate/Support/Optional.html#method_offsetUnset","d":"<p>Unset the item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\Optional::__call","p":"Illuminate/Support/Optional.html#method___call","d":"<p>Dynamically pass a method to the underlying object.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::plural","p":"Illuminate/Support/Pluralizer.html#method_plural","d":"<p>Get the plural form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::singular","p":"Illuminate/Support/Pluralizer.html#method_singular","d":"<p>Get the singular form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::uncountable","p":"Illuminate/Support/Pluralizer.html#method_uncountable","d":"<p>Determine if the given value is uncountable.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::matchCase","p":"Illuminate/Support/Pluralizer.html#method_matchCase","d":"<p>Attempt to match the case on two strings.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::inflector","p":"Illuminate/Support/Pluralizer.html#method_inflector","d":"<p>Get the inflector instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Pluralizer::useLanguage","p":"Illuminate/Support/Pluralizer.html#method_useLanguage","d":"<p>Specify the language that should be used by the inflector.</p>"},{"t":"M","n":"Illuminate\\Support\\ProcessUtils::escapeArgument","p":"Illuminate/Support/ProcessUtils.html#method_escapeArgument","d":"<p>Escapes a string to be used as a shell argument.</p>"},{"t":"M","n":"Illuminate\\Support\\ProcessUtils::isSurroundedBy","p":"Illuminate/Support/ProcessUtils.html#method_isSurroundedBy","d":"<p>Is the given string surrounded by the given character?</p>"},{"t":"M","n":"Illuminate\\Support\\Reflector::isCallable","p":"Illuminate/Support/Reflector.html#method_isCallable","d":"<p>This is a PHP 7.4 compatible implementation of is_callable.</p>"},{"t":"M","n":"Illuminate\\Support\\Reflector::getParameterClassName","p":"Illuminate/Support/Reflector.html#method_getParameterClassName","d":"<p>Get the class name of the given parameter's type, if possible.</p>"},{"t":"M","n":"Illuminate\\Support\\Reflector::getParameterClassNames","p":"Illuminate/Support/Reflector.html#method_getParameterClassNames","d":"<p>Get the class names of the given parameter's type, including union types.</p>"},{"t":"M","n":"Illuminate\\Support\\Reflector::getTypeName","p":"Illuminate/Support/Reflector.html#method_getTypeName","d":"<p>Get the given type's class name.</p>"},{"t":"M","n":"Illuminate\\Support\\Reflector::isParameterSubclassOf","p":"Illuminate/Support/Reflector.html#method_isParameterSubclassOf","d":"<p>Determine if the parameter's type is a subclass of the given type.</p>"},{"t":"M","n":"Illuminate\\Support\\Reflector::isParameterBackedEnumWithStringBackingType","p":"Illuminate/Support/Reflector.html#method_isParameterBackedEnumWithStringBackingType","d":"<p>Determine if the parameter's type is a Backed Enum with a string backing type.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::__construct","p":"Illuminate/Support/ServiceProvider.html#method___construct","d":"<p>Create a new service provider instance.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::register","p":"Illuminate/Support/ServiceProvider.html#method_register","d":"<p>Register any application services.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::booting","p":"Illuminate/Support/ServiceProvider.html#method_booting","d":"<p>Register a booting callback to be run before the &quot;boot&quot; method is called.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::booted","p":"Illuminate/Support/ServiceProvider.html#method_booted","d":"<p>Register a booted callback to be run after the &quot;boot&quot; method is called.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::callBootingCallbacks","p":"Illuminate/Support/ServiceProvider.html#method_callBootingCallbacks","d":"<p>Call the registered booting callbacks.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::callBootedCallbacks","p":"Illuminate/Support/ServiceProvider.html#method_callBootedCallbacks","d":"<p>Call the registered booted callbacks.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::mergeConfigFrom","p":"Illuminate/Support/ServiceProvider.html#method_mergeConfigFrom","d":"<p>Merge the given configuration with the existing configuration.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadRoutesFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadRoutesFrom","d":"<p>Load the given routes file if routes are not already cached.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadViewsFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadViewsFrom","d":"<p>Register a view file namespace.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadViewComponentsAs","p":"Illuminate/Support/ServiceProvider.html#method_loadViewComponentsAs","d":"<p>Register the given view components with a custom prefix.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadTranslationsFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadTranslationsFrom","d":"<p>Register a translation file namespace.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadJsonTranslationsFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadJsonTranslationsFrom","d":"<p>Register a JSON translation file path.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadMigrationsFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadMigrationsFrom","d":"<p>Register database migration paths.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::loadFactoriesFrom","p":"Illuminate/Support/ServiceProvider.html#method_loadFactoriesFrom","d":"<p>Register Eloquent model factory paths.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::callAfterResolving","p":"Illuminate/Support/ServiceProvider.html#method_callAfterResolving","d":"<p>Setup an after resolving listener, or fire immediately if already resolved.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::publishes","p":"Illuminate/Support/ServiceProvider.html#method_publishes","d":"<p>Register paths to be published by the publish command.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::ensurePublishArrayInitialized","p":"Illuminate/Support/ServiceProvider.html#method_ensurePublishArrayInitialized","d":"<p>Ensure the publish array for the service provider is initialized.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::addPublishGroup","p":"Illuminate/Support/ServiceProvider.html#method_addPublishGroup","d":"<p>Add a publish group / tag to the service provider.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::pathsToPublish","p":"Illuminate/Support/ServiceProvider.html#method_pathsToPublish","d":"<p>Get the paths to publish.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::pathsForProviderOrGroup","p":"Illuminate/Support/ServiceProvider.html#method_pathsForProviderOrGroup","d":"<p>Get the paths for the provider or group (or both).</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::pathsForProviderAndGroup","p":"Illuminate/Support/ServiceProvider.html#method_pathsForProviderAndGroup","d":"<p>Get the paths for the provider and group.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::publishableProviders","p":"Illuminate/Support/ServiceProvider.html#method_publishableProviders","d":"<p>Get the service providers available for publishing.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::publishableGroups","p":"Illuminate/Support/ServiceProvider.html#method_publishableGroups","d":"<p>Get the groups available for publishing.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::commands","p":"Illuminate/Support/ServiceProvider.html#method_commands","d":"<p>Register the package's custom Artisan commands.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::provides","p":"Illuminate/Support/ServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::when","p":"Illuminate/Support/ServiceProvider.html#method_when","d":"<p>Get the events that trigger this service provider to register.</p>"},{"t":"M","n":"Illuminate\\Support\\ServiceProvider::isDeferred","p":"Illuminate/Support/ServiceProvider.html#method_isDeferred","d":"<p>Determine if the provider is deferred.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::of","p":"Illuminate/Support/Str.html#method_of","d":"<p>Get a new stringable object from the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::after","p":"Illuminate/Support/Str.html#method_after","d":"<p>Return the remainder of a string after the first occurrence of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::afterLast","p":"Illuminate/Support/Str.html#method_afterLast","d":"<p>Return the remainder of a string after the last occurrence of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::ascii","p":"Illuminate/Support/Str.html#method_ascii","d":"<p>Transliterate a UTF-8 value to ASCII.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::transliterate","p":"Illuminate/Support/Str.html#method_transliterate","d":"<p>Transliterate a string to its closest ASCII representation.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::before","p":"Illuminate/Support/Str.html#method_before","d":"<p>Get the portion of a string before the first occurrence of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::beforeLast","p":"Illuminate/Support/Str.html#method_beforeLast","d":"<p>Get the portion of a string before the last occurrence of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::between","p":"Illuminate/Support/Str.html#method_between","d":"<p>Get the portion of a string between two given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::betweenFirst","p":"Illuminate/Support/Str.html#method_betweenFirst","d":"<p>Get the smallest possible portion of a string between two given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::camel","p":"Illuminate/Support/Str.html#method_camel","d":"<p>Convert a value to camel case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::contains","p":"Illuminate/Support/Str.html#method_contains","d":"<p>Determine if a given string contains a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::containsAll","p":"Illuminate/Support/Str.html#method_containsAll","d":"<p>Determine if a given string contains all array values.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::endsWith","p":"Illuminate/Support/Str.html#method_endsWith","d":"<p>Determine if a given string ends with a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::excerpt","p":"Illuminate/Support/Str.html#method_excerpt","d":"<p>Extracts an excerpt from text that matches the first instance of a phrase.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::finish","p":"Illuminate/Support/Str.html#method_finish","d":"<p>Cap a string with a single instance of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::wrap","p":"Illuminate/Support/Str.html#method_wrap","d":"<p>Wrap the string with the given strings.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::is","p":"Illuminate/Support/Str.html#method_is","d":"<p>Determine if a given string matches a given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::isAscii","p":"Illuminate/Support/Str.html#method_isAscii","d":"<p>Determine if a given string is 7 bit ASCII.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::isJson","p":"Illuminate/Support/Str.html#method_isJson","d":"<p>Determine if a given string is valid JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::isUuid","p":"Illuminate/Support/Str.html#method_isUuid","d":"<p>Determine if a given string is a valid UUID.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::isUlid","p":"Illuminate/Support/Str.html#method_isUlid","d":"<p>Determine if a given string is a valid ULID.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::kebab","p":"Illuminate/Support/Str.html#method_kebab","d":"<p>Convert a string to kebab case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::length","p":"Illuminate/Support/Str.html#method_length","d":"<p>Return the length of the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::limit","p":"Illuminate/Support/Str.html#method_limit","d":"<p>Limit the number of characters in a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::lower","p":"Illuminate/Support/Str.html#method_lower","d":"<p>Convert the given string to lower-case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::words","p":"Illuminate/Support/Str.html#method_words","d":"<p>Limit the number of words in a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::markdown","p":"Illuminate/Support/Str.html#method_markdown","d":"<p>Converts GitHub flavored Markdown into HTML.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::inlineMarkdown","p":"Illuminate/Support/Str.html#method_inlineMarkdown","d":"<p>Converts inline Markdown into HTML.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::mask","p":"Illuminate/Support/Str.html#method_mask","d":"<p>Masks a portion of a string with a repeated character.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::match","p":"Illuminate/Support/Str.html#method_match","d":"<p>Get the string matching the given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::matchAll","p":"Illuminate/Support/Str.html#method_matchAll","d":"<p>Get the string matching the given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::padBoth","p":"Illuminate/Support/Str.html#method_padBoth","d":"<p>Pad both sides of a string with another.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::padLeft","p":"Illuminate/Support/Str.html#method_padLeft","d":"<p>Pad the left side of a string with another.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::padRight","p":"Illuminate/Support/Str.html#method_padRight","d":"<p>Pad the right side of a string with another.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::parseCallback","p":"Illuminate/Support/Str.html#method_parseCallback","d":"<p>Parse a Class[@]method style callback into class and method.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::plural","p":"Illuminate/Support/Str.html#method_plural","d":"<p>Get the plural form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::pluralStudly","p":"Illuminate/Support/Str.html#method_pluralStudly","d":"<p>Pluralize the last word of an English, studly caps case string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::password","p":"Illuminate/Support/Str.html#method_password","d":"<p>Generate a random, secure password.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::random","p":"Illuminate/Support/Str.html#method_random","d":"<p>Generate a more truly &quot;random&quot; alpha-numeric string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::createRandomStringsUsing","p":"Illuminate/Support/Str.html#method_createRandomStringsUsing","d":"<p>Set the callable that will be used to generate random strings.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::createRandomStringsUsingSequence","p":"Illuminate/Support/Str.html#method_createRandomStringsUsingSequence","d":"<p>Set the sequence that will be used to generate random strings.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::createRandomStringsNormally","p":"Illuminate/Support/Str.html#method_createRandomStringsNormally","d":"<p>Indicate that random strings should be created normally and not using a custom factory.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::repeat","p":"Illuminate/Support/Str.html#method_repeat","d":"<p>Repeat the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::replaceArray","p":"Illuminate/Support/Str.html#method_replaceArray","d":"<p>Replace a given value in the string sequentially with an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::replace","p":"Illuminate/Support/Str.html#method_replace","d":"<p>Replace the given value in the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::replaceFirst","p":"Illuminate/Support/Str.html#method_replaceFirst","d":"<p>Replace the first occurrence of a given value in the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::replaceLast","p":"Illuminate/Support/Str.html#method_replaceLast","d":"<p>Replace the last occurrence of a given value in the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::remove","p":"Illuminate/Support/Str.html#method_remove","d":"<p>Remove any occurrence of the given string in the subject.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::reverse","p":"Illuminate/Support/Str.html#method_reverse","d":"<p>Reverse the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::start","p":"Illuminate/Support/Str.html#method_start","d":"<p>Begin a string with a single instance of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::upper","p":"Illuminate/Support/Str.html#method_upper","d":"<p>Convert the given string to upper-case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::title","p":"Illuminate/Support/Str.html#method_title","d":"<p>Convert the given string to title case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::headline","p":"Illuminate/Support/Str.html#method_headline","d":"<p>Convert the given string to title case for each word.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::singular","p":"Illuminate/Support/Str.html#method_singular","d":"<p>Get the singular form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::slug","p":"Illuminate/Support/Str.html#method_slug","d":"<p>Generate a URL friendly &quot;slug&quot; from a given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::snake","p":"Illuminate/Support/Str.html#method_snake","d":"<p>Convert a string to snake case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::squish","p":"Illuminate/Support/Str.html#method_squish","d":"<p>Remove all &quot;extra&quot; blank space from the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::startsWith","p":"Illuminate/Support/Str.html#method_startsWith","d":"<p>Determine if a given string starts with a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::studly","p":"Illuminate/Support/Str.html#method_studly","d":"<p>Convert a value to studly caps case.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::substr","p":"Illuminate/Support/Str.html#method_substr","d":"<p>Returns the portion of the string specified by the start and length parameters.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::substrCount","p":"Illuminate/Support/Str.html#method_substrCount","d":"<p>Returns the number of substring occurrences.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::substrReplace","p":"Illuminate/Support/Str.html#method_substrReplace","d":"<p>Replace text within a portion of a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::swap","p":"Illuminate/Support/Str.html#method_swap","d":"<p>Swap multiple keywords in a string with other keywords.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::lcfirst","p":"Illuminate/Support/Str.html#method_lcfirst","d":"<p>Make a string's first character lowercase.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::ucfirst","p":"Illuminate/Support/Str.html#method_ucfirst","d":"<p>Make a string's first character uppercase.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::ucsplit","p":"Illuminate/Support/Str.html#method_ucsplit","d":"<p>Split a string into pieces by uppercase characters.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::wordCount","p":"Illuminate/Support/Str.html#method_wordCount","d":"<p>Get the number of words a string contains.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::uuid","p":"Illuminate/Support/Str.html#method_uuid","d":"<p>Generate a UUID (version 4).</p>"},{"t":"M","n":"Illuminate\\Support\\Str::orderedUuid","p":"Illuminate/Support/Str.html#method_orderedUuid","d":"<p>Generate a time-ordered UUID (version 4).</p>"},{"t":"M","n":"Illuminate\\Support\\Str::createUuidsUsing","p":"Illuminate/Support/Str.html#method_createUuidsUsing","d":"<p>Set the callable that will be used to generate UUIDs.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::createUuidsUsingSequence","p":"Illuminate/Support/Str.html#method_createUuidsUsingSequence","d":"<p>Set the sequence that will be used to generate UUIDs.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::freezeUuids","p":"Illuminate/Support/Str.html#method_freezeUuids","d":"<p>Always return the same UUID when generating new UUIDs.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::createUuidsNormally","p":"Illuminate/Support/Str.html#method_createUuidsNormally","d":"<p>Indicate that UUIDs should be created normally and not using a custom factory.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::ulid","p":"Illuminate/Support/Str.html#method_ulid","d":"<p>Generate a ULID.</p>"},{"t":"M","n":"Illuminate\\Support\\Str::flushCache","p":"Illuminate/Support/Str.html#method_flushCache","d":"<p>Remove all strings from the casing caches.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::__construct","p":"Illuminate/Support/Stringable.html#method___construct","d":"<p>Create a new instance of the class.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::after","p":"Illuminate/Support/Stringable.html#method_after","d":"<p>Return the remainder of a string after the first occurrence of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::afterLast","p":"Illuminate/Support/Stringable.html#method_afterLast","d":"<p>Return the remainder of a string after the last occurrence of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::append","p":"Illuminate/Support/Stringable.html#method_append","d":"<p>Append the given values to the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::newLine","p":"Illuminate/Support/Stringable.html#method_newLine","d":"<p>Append a new line to the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::ascii","p":"Illuminate/Support/Stringable.html#method_ascii","d":"<p>Transliterate a UTF-8 value to ASCII.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::basename","p":"Illuminate/Support/Stringable.html#method_basename","d":"<p>Get the trailing name component of the path.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::classBasename","p":"Illuminate/Support/Stringable.html#method_classBasename","d":"<p>Get the basename of the class path.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::before","p":"Illuminate/Support/Stringable.html#method_before","d":"<p>Get the portion of a string before the first occurrence of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::beforeLast","p":"Illuminate/Support/Stringable.html#method_beforeLast","d":"<p>Get the portion of a string before the last occurrence of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::between","p":"Illuminate/Support/Stringable.html#method_between","d":"<p>Get the portion of a string between two given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::betweenFirst","p":"Illuminate/Support/Stringable.html#method_betweenFirst","d":"<p>Get the smallest possible portion of a string between two given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::camel","p":"Illuminate/Support/Stringable.html#method_camel","d":"<p>Convert a value to camel case.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::contains","p":"Illuminate/Support/Stringable.html#method_contains","d":"<p>Determine if a given string contains a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::containsAll","p":"Illuminate/Support/Stringable.html#method_containsAll","d":"<p>Determine if a given string contains all array values.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::dirname","p":"Illuminate/Support/Stringable.html#method_dirname","d":"<p>Get the parent directory's path.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::endsWith","p":"Illuminate/Support/Stringable.html#method_endsWith","d":"<p>Determine if a given string ends with a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::exactly","p":"Illuminate/Support/Stringable.html#method_exactly","d":"<p>Determine if the string is an exact match with the given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::excerpt","p":"Illuminate/Support/Stringable.html#method_excerpt","d":"<p>Extracts an excerpt from text that matches the first instance of a phrase.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::explode","p":"Illuminate/Support/Stringable.html#method_explode","d":"<p>Explode the string into an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::split","p":"Illuminate/Support/Stringable.html#method_split","d":"<p>Split a string using a regular expression or by length.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::finish","p":"Illuminate/Support/Stringable.html#method_finish","d":"<p>Cap a string with a single instance of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::is","p":"Illuminate/Support/Stringable.html#method_is","d":"<p>Determine if a given string matches a given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::isAscii","p":"Illuminate/Support/Stringable.html#method_isAscii","d":"<p>Determine if a given string is 7 bit ASCII.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::isJson","p":"Illuminate/Support/Stringable.html#method_isJson","d":"<p>Determine if a given string is valid JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::isUuid","p":"Illuminate/Support/Stringable.html#method_isUuid","d":"<p>Determine if a given string is a valid UUID.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::isUlid","p":"Illuminate/Support/Stringable.html#method_isUlid","d":"<p>Determine if a given string is a valid ULID.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::isEmpty","p":"Illuminate/Support/Stringable.html#method_isEmpty","d":"<p>Determine if the given string is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::isNotEmpty","p":"Illuminate/Support/Stringable.html#method_isNotEmpty","d":"<p>Determine if the given string is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::kebab","p":"Illuminate/Support/Stringable.html#method_kebab","d":"<p>Convert a string to kebab case.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::length","p":"Illuminate/Support/Stringable.html#method_length","d":"<p>Return the length of the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::limit","p":"Illuminate/Support/Stringable.html#method_limit","d":"<p>Limit the number of characters in a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::lower","p":"Illuminate/Support/Stringable.html#method_lower","d":"<p>Convert the given string to lower-case.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::markdown","p":"Illuminate/Support/Stringable.html#method_markdown","d":"<p>Convert GitHub flavored Markdown into HTML.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::inlineMarkdown","p":"Illuminate/Support/Stringable.html#method_inlineMarkdown","d":"<p>Convert inline Markdown into HTML.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::mask","p":"Illuminate/Support/Stringable.html#method_mask","d":"<p>Masks a portion of a string with a repeated character.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::match","p":"Illuminate/Support/Stringable.html#method_match","d":"<p>Get the string matching the given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::matchAll","p":"Illuminate/Support/Stringable.html#method_matchAll","d":"<p>Get the string matching the given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::test","p":"Illuminate/Support/Stringable.html#method_test","d":"<p>Determine if the string matches the given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::padBoth","p":"Illuminate/Support/Stringable.html#method_padBoth","d":"<p>Pad both sides of the string with another.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::padLeft","p":"Illuminate/Support/Stringable.html#method_padLeft","d":"<p>Pad the left side of the string with another.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::padRight","p":"Illuminate/Support/Stringable.html#method_padRight","d":"<p>Pad the right side of the string with another.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::parseCallback","p":"Illuminate/Support/Stringable.html#method_parseCallback","d":"<p>Parse a Class@method style callback into class and method.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::pipe","p":"Illuminate/Support/Stringable.html#method_pipe","d":"<p>Call the given callback and return a new string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::plural","p":"Illuminate/Support/Stringable.html#method_plural","d":"<p>Get the plural form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::pluralStudly","p":"Illuminate/Support/Stringable.html#method_pluralStudly","d":"<p>Pluralize the last word of an English, studly caps case string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::prepend","p":"Illuminate/Support/Stringable.html#method_prepend","d":"<p>Prepend the given values to the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::remove","p":"Illuminate/Support/Stringable.html#method_remove","d":"<p>Remove any occurrence of the given string in the subject.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::reverse","p":"Illuminate/Support/Stringable.html#method_reverse","d":"<p>Reverse the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::repeat","p":"Illuminate/Support/Stringable.html#method_repeat","d":"<p>Repeat the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::replace","p":"Illuminate/Support/Stringable.html#method_replace","d":"<p>Replace the given value in the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::replaceArray","p":"Illuminate/Support/Stringable.html#method_replaceArray","d":"<p>Replace a given value in the string sequentially with an array.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::replaceFirst","p":"Illuminate/Support/Stringable.html#method_replaceFirst","d":"<p>Replace the first occurrence of a given value in the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::replaceLast","p":"Illuminate/Support/Stringable.html#method_replaceLast","d":"<p>Replace the last occurrence of a given value in the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::replaceMatches","p":"Illuminate/Support/Stringable.html#method_replaceMatches","d":"<p>Replace the patterns matching the given regular expression.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::scan","p":"Illuminate/Support/Stringable.html#method_scan","d":"<p>Parse input from a string to a collection, according to a format.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::squish","p":"Illuminate/Support/Stringable.html#method_squish","d":"<p>Remove all &quot;extra&quot; blank space from the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::start","p":"Illuminate/Support/Stringable.html#method_start","d":"<p>Begin a string with a single instance of a given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::stripTags","p":"Illuminate/Support/Stringable.html#method_stripTags","d":"<p>Strip HTML and PHP tags from the given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::upper","p":"Illuminate/Support/Stringable.html#method_upper","d":"<p>Convert the given string to upper-case.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::title","p":"Illuminate/Support/Stringable.html#method_title","d":"<p>Convert the given string to title case.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::headline","p":"Illuminate/Support/Stringable.html#method_headline","d":"<p>Convert the given string to title case for each word.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::singular","p":"Illuminate/Support/Stringable.html#method_singular","d":"<p>Get the singular form of an English word.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::slug","p":"Illuminate/Support/Stringable.html#method_slug","d":"<p>Generate a URL friendly &quot;slug&quot; from a given string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::snake","p":"Illuminate/Support/Stringable.html#method_snake","d":"<p>Convert a string to snake case.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::startsWith","p":"Illuminate/Support/Stringable.html#method_startsWith","d":"<p>Determine if a given string starts with a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::studly","p":"Illuminate/Support/Stringable.html#method_studly","d":"<p>Convert a value to studly caps case.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::substr","p":"Illuminate/Support/Stringable.html#method_substr","d":"<p>Returns the portion of the string specified by the start and length parameters.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::substrCount","p":"Illuminate/Support/Stringable.html#method_substrCount","d":"<p>Returns the number of substring occurrences.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::substrReplace","p":"Illuminate/Support/Stringable.html#method_substrReplace","d":"<p>Replace text within a portion of a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::swap","p":"Illuminate/Support/Stringable.html#method_swap","d":"<p>Swap multiple keywords in a string with other keywords.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::trim","p":"Illuminate/Support/Stringable.html#method_trim","d":"<p>Trim the string of the given characters.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::ltrim","p":"Illuminate/Support/Stringable.html#method_ltrim","d":"<p>Left trim the string of the given characters.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::rtrim","p":"Illuminate/Support/Stringable.html#method_rtrim","d":"<p>Right trim the string of the given characters.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::lcfirst","p":"Illuminate/Support/Stringable.html#method_lcfirst","d":"<p>Make a string's first character lowercase.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::ucfirst","p":"Illuminate/Support/Stringable.html#method_ucfirst","d":"<p>Make a string's first character uppercase.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::ucsplit","p":"Illuminate/Support/Stringable.html#method_ucsplit","d":"<p>Split a string by uppercase characters.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenContains","p":"Illuminate/Support/Stringable.html#method_whenContains","d":"<p>Execute the given callback if the string contains a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenContainsAll","p":"Illuminate/Support/Stringable.html#method_whenContainsAll","d":"<p>Execute the given callback if the string contains all array values.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenEmpty","p":"Illuminate/Support/Stringable.html#method_whenEmpty","d":"<p>Execute the given callback if the string is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenNotEmpty","p":"Illuminate/Support/Stringable.html#method_whenNotEmpty","d":"<p>Execute the given callback if the string is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenEndsWith","p":"Illuminate/Support/Stringable.html#method_whenEndsWith","d":"<p>Execute the given callback if the string ends with a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenExactly","p":"Illuminate/Support/Stringable.html#method_whenExactly","d":"<p>Execute the given callback if the string is an exact match with the given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenNotExactly","p":"Illuminate/Support/Stringable.html#method_whenNotExactly","d":"<p>Execute the given callback if the string is not an exact match with the given value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenIs","p":"Illuminate/Support/Stringable.html#method_whenIs","d":"<p>Execute the given callback if the string matches a given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenIsAscii","p":"Illuminate/Support/Stringable.html#method_whenIsAscii","d":"<p>Execute the given callback if the string is 7 bit ASCII.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenIsUuid","p":"Illuminate/Support/Stringable.html#method_whenIsUuid","d":"<p>Execute the given callback if the string is a valid UUID.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenIsUlid","p":"Illuminate/Support/Stringable.html#method_whenIsUlid","d":"<p>Execute the given callback if the string is a valid ULID.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenStartsWith","p":"Illuminate/Support/Stringable.html#method_whenStartsWith","d":"<p>Execute the given callback if the string starts with a given substring.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::whenTest","p":"Illuminate/Support/Stringable.html#method_whenTest","d":"<p>Execute the given callback if the string matches the given pattern.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::words","p":"Illuminate/Support/Stringable.html#method_words","d":"<p>Limit the number of words in a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::wordCount","p":"Illuminate/Support/Stringable.html#method_wordCount","d":"<p>Get the number of words a string contains.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::wrap","p":"Illuminate/Support/Stringable.html#method_wrap","d":"<p>Wrap the string with the given strings.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::toHtmlString","p":"Illuminate/Support/Stringable.html#method_toHtmlString","d":"<p>Convert the string into a <code>HtmlString</code> instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::dump","p":"Illuminate/Support/Stringable.html#method_dump","d":"<p>Dump the string.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::dd","p":"Illuminate/Support/Stringable.html#method_dd","d":"<p>Dump the string and end the script.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::value","p":"Illuminate/Support/Stringable.html#method_value","d":"<p>Get the underlying string value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::toString","p":"Illuminate/Support/Stringable.html#method_toString","d":"<p>Get the underlying string value.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::toInteger","p":"Illuminate/Support/Stringable.html#method_toInteger","d":"<p>Get the underlying string value as an integer.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::toFloat","p":"Illuminate/Support/Stringable.html#method_toFloat","d":"<p>Get the underlying string value as a float.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::toBoolean","p":"Illuminate/Support/Stringable.html#method_toBoolean","d":"<p>Get the underlying string value as a boolean.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::toDate","p":"Illuminate/Support/Stringable.html#method_toDate","d":"<p>Get the underlying string value as a Carbon instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::jsonSerialize","p":"Illuminate/Support/Stringable.html#method_jsonSerialize","d":"<p>Convert the object to a string when JSON encoded.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::__get","p":"Illuminate/Support/Stringable.html#method___get","d":"<p>Proxy dynamic properties onto methods.</p>"},{"t":"M","n":"Illuminate\\Support\\Stringable::__toString","p":"Illuminate/Support/Stringable.html#method___toString","d":"<p>Get the raw string value.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::__construct","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method___construct","d":"<p>Create a new batch instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::fresh","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_fresh","d":"<p>Get a fresh instance of the batch represented by this ID.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::add","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_add","d":"<p>Add additional jobs to the batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::recordSuccessfulJob","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_recordSuccessfulJob","d":"<p>Record that a job within the batch finished successfully, executing any callbacks if necessary.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::decrementPendingJobs","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_decrementPendingJobs","d":"<p>Decrement the pending jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::recordFailedJob","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_recordFailedJob","d":"<p>Record that a job within the batch failed to finish successfully, executing any callbacks if necessary.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::incrementFailedJobs","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_incrementFailedJobs","d":"<p>Increment the failed jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::cancel","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_cancel","d":"<p>Cancel the batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::delete","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_delete","d":"<p>Delete the batch from storage.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchFake::deleted","p":"Illuminate/Support/Testing/Fakes/BatchFake.html#method_deleted","d":"<p>Determine if the batch has been deleted.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::get","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_get","d":"<p>Retrieve a list of batches.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::find","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_find","d":"<p>Retrieve information about an existing batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::store","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_store","d":"<p>Store a new pending batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::incrementTotalJobs","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_incrementTotalJobs","d":"<p>Increment the total number of jobs within the batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::decrementPendingJobs","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_decrementPendingJobs","d":"<p>Decrement the total number of pending jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::incrementFailedJobs","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_incrementFailedJobs","d":"<p>Increment the total number of failed jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::markAsFinished","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_markAsFinished","d":"<p>Mark the batch that has the given ID as finished.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::cancel","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_cancel","d":"<p>Cancel the batch that has the given ID.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::delete","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_delete","d":"<p>Delete the batch that has the given ID.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BatchRepositoryFake::transaction","p":"Illuminate/Support/Testing/Fakes/BatchRepositoryFake.html#method_transaction","d":"<p>Execute the given Closure within a storage specific transaction.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::__construct","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method___construct","d":"<p>Create a new bus fake instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::except","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_except","d":"<p>Specify the jobs that should be dispatched instead of faked.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatched","d":"<p>Assert if a job was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatchedTimes","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatchedTimes","d":"<p>Assert if a job was pushed a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertNotDispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertNotDispatched","d":"<p>Determine if a job was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertNothingDispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertNothingDispatched","d":"<p>Assert that no jobs were dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatchedSync","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatchedSync","d":"<p>Assert if a job was explicitly dispatched synchronously based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatchedSyncTimes","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatchedSyncTimes","d":"<p>Assert if a job was pushed synchronously a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertNotDispatchedSync","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertNotDispatchedSync","d":"<p>Determine if a job was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatchedAfterResponse","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatchedAfterResponse","d":"<p>Assert if a job was dispatched after the response was sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatchedAfterResponseTimes","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatchedAfterResponseTimes","d":"<p>Assert if a job was pushed after the response was sent a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertNotDispatchedAfterResponse","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertNotDispatchedAfterResponse","d":"<p>Determine if a job was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertChained","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertChained","d":"<p>Assert if a chain of jobs was dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::resetChainPropertiesToDefaults","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_resetChainPropertiesToDefaults","d":"<p>Reset the chain properties to their default values on the job.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatchedWithoutChain","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatchedWithoutChain","d":"<p>Assert if a job was dispatched with an empty chain based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatchedWithChainOfObjects","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatchedWithChainOfObjects","d":"<p>Assert if a job was dispatched with chained jobs based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertDispatchedWithChainOfClasses","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertDispatchedWithChainOfClasses","d":"<p>Assert if a job was dispatched with chained jobs based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::isChainOfObjects","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_isChainOfObjects","d":"<p>Determine if the given chain is entirely composed of objects.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertBatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertBatched","d":"<p>Assert if a batch was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertBatchCount","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertBatchCount","d":"<p>Assert the number of batches that have been dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::assertNothingBatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_assertNothingBatched","d":"<p>Assert that no batched jobs were dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatched","d":"<p>Get all of the jobs matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatchedSync","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatchedSync","d":"<p>Get all of the jobs dispatched synchronously matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatchedAfterResponse","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatchedAfterResponse","d":"<p>Get all of the jobs dispatched after the response was sent matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::batched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_batched","d":"<p>Get all of the pending batches matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::hasDispatched","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_hasDispatched","d":"<p>Determine if there are any stored commands for a given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::hasDispatchedSync","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_hasDispatchedSync","d":"<p>Determine if there are any stored commands for a given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::hasDispatchedAfterResponse","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_hasDispatchedAfterResponse","d":"<p>Determine if there are any stored commands for a given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatch","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatch","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatchSync","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatchSync","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatchNow","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatchToQueue","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatchToQueue","d":"<p>Dispatch a command to its appropriate handler behind a queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatchAfterResponse","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatchAfterResponse","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::chain","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_chain","d":"<p>Create a new chain of queueable jobs.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::findBatch","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_findBatch","d":"<p>Attempt to find the batch with the given ID.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::batch","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_batch","d":"<p>Create a new batch of queueable jobs.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::dispatchFakeBatch","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_dispatchFakeBatch","d":"<p>Dispatch an empty job batch for testing.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::recordPendingBatch","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_recordPendingBatch","d":"<p>Record the fake pending batch dispatch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::shouldFakeJob","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_shouldFakeJob","d":"<p>Determine if a command should be faked or actually dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::shouldDispatchCommand","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_shouldDispatchCommand","d":"<p>Determine if a command should be dispatched or not.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::pipeThrough","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_pipeThrough","d":"<p>Set the pipes commands should be piped through before dispatching.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::hasCommandHandler","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_hasCommandHandler","d":"<p>Determine if the given command has a handler.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::getCommandHandler","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_getCommandHandler","d":"<p>Retrieve the handler for a command.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\BusFake::map","p":"Illuminate/Support/Testing/Fakes/BusFake.html#method_map","d":"<p>Map a command to a handler.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::__construct","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method___construct","d":"<p>Create a new event fake instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::except","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_except","d":"<p>Specify the events that should be dispatched instead of faked.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::assertListening","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_assertListening","d":"<p>Assert if an event has a listener attached to it.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::assertDispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_assertDispatched","d":"<p>Assert if an event was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::assertDispatchedTimes","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_assertDispatchedTimes","d":"<p>Assert if an event was dispatched a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::assertNotDispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_assertNotDispatched","d":"<p>Determine if an event was dispatched based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::assertNothingDispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_assertNothingDispatched","d":"<p>Assert that no events were dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::dispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_dispatched","d":"<p>Get all of the events matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::hasDispatched","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_hasDispatched","d":"<p>Determine if the given event has been dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::listen","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::hasListeners","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::push","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_push","d":"<p>Register an event and payload to be dispatched later.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::subscribe","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::flush","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::dispatch","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_dispatch","d":"<p>Fire an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::shouldFakeEvent","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_shouldFakeEvent","d":"<p>Determine if an event should be faked or actually dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::shouldDispatchEvent","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_shouldDispatchEvent","d":"<p>Determine whether an event should be dispatched or not.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::forget","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::forgetPushed","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_forgetPushed","d":"<p>Forget all of the queued listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::until","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method_until","d":"<p>Dispatch an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\EventFake::__call","p":"Illuminate/Support/Testing/Fakes/EventFake.html#method___call","d":"<p>Handle dynamic method calls to the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::__construct","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method___construct","d":"<p>Create a new mail fake.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertSent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertSent","d":"<p>Assert if a mailable was sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertSentTimes","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertSentTimes","d":"<p>Assert if a mailable was sent a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertNotOutgoing","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertNotOutgoing","d":"<p>Determine if a mailable was not sent or queued to be sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertNotSent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertNotSent","d":"<p>Determine if a mailable was not sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertNothingOutgoing","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertNothingOutgoing","d":"<p>Assert that no mailables were sent or queued to be sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertNothingSent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertNothingSent","d":"<p>Assert that no mailables were sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertQueued","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertQueued","d":"<p>Assert if a mailable was queued based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertQueuedTimes","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertQueuedTimes","d":"<p>Assert if a mailable was queued a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertNotQueued","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertNotQueued","d":"<p>Determine if a mailable was not queued based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::assertNothingQueued","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_assertNothingQueued","d":"<p>Assert that no mailables were queued.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::sent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_sent","d":"<p>Get all of the mailables matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::hasSent","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_hasSent","d":"<p>Determine if the given mailable has been sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::queued","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_queued","d":"<p>Get all of the queued mailables matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::hasQueued","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_hasQueued","d":"<p>Determine if the given mailable has been queued.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::mailablesOf","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_mailablesOf","d":"<p>Get all of the mailed mailables for a given type.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::queuedMailablesOf","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_queuedMailablesOf","d":"<p>Get all of the mailed mailables for a given type.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::mailer","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_mailer","d":"<p>Get a mailer instance by name.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::to","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_to","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::cc","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_cc","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::bcc","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_bcc","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::raw","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_raw","d":"<p>Send a new message with only a raw text part.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::send","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_send","d":"<p>Send a new message using a view.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::queue","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_queue","d":"<p>Queue a new e-mail message for sending.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::later","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_later","d":"<p>Queue a new e-mail message for sending after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::prepareMailableAndCallback","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_prepareMailableAndCallback","d":"<p>Infer mailable class using reflection if a typehinted closure is passed to assertion.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::forgetMailers","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method_forgetMailers","d":"<p>Forget all of the resolved mailer instances.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\MailFake::__call","p":"Illuminate/Support/Testing/Fakes/MailFake.html#method___call","d":"<p>Handle dynamic method calls to the mailer.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertSentOnDemand","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertSentOnDemand","d":"<p>Assert if a notification was sent on-demand based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertSentTo","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertSentTo","d":"<p>Assert if a notification was sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertSentOnDemandTimes","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertSentOnDemandTimes","d":"<p>Assert if a notification was sent on-demand a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertSentToTimes","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertSentToTimes","d":"<p>Assert if a notification was sent a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertNotSentTo","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertNotSentTo","d":"<p>Determine if a notification was sent based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertNothingSent","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertNothingSent","d":"<p>Assert that no notifications were sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertNothingSentTo","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertNothingSentTo","d":"<p>Assert that no notifications were sent to the given notifiable.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertSentTimes","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertSentTimes","d":"<p>Assert the total amount of times a notification was sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::assertCount","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_assertCount","d":"<p>Assert the total count of notification that were sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::sent","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_sent","d":"<p>Get all of the notifications matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::hasSent","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_hasSent","d":"<p>Determine if there are more notifications left to inspect.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::notificationsFor","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_notificationsFor","d":"<p>Get all of the notifications for a notifiable entity by type.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::send","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::sendNow","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::channel","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_channel","d":"<p>Get a channel instance by name.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::locale","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_locale","d":"<p>Set the locale of notifications.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\NotificationFake::sentNotifications","p":"Illuminate/Support/Testing/Fakes/NotificationFake.html#method_sentNotifications","d":"<p>Get the notifications that have been sent.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingBatchFake::__construct","p":"Illuminate/Support/Testing/Fakes/PendingBatchFake.html#method___construct","d":"<p>Create a new pending batch instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingBatchFake::dispatch","p":"Illuminate/Support/Testing/Fakes/PendingBatchFake.html#method_dispatch","d":"<p>Dispatch the batch.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingBatchFake::dispatchAfterResponse","p":"Illuminate/Support/Testing/Fakes/PendingBatchFake.html#method_dispatchAfterResponse","d":"<p>Dispatch the batch after the response is sent to the browser.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingChainFake::__construct","p":"Illuminate/Support/Testing/Fakes/PendingChainFake.html#method___construct","d":"<p>Create a new pending chain instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingChainFake::dispatch","p":"Illuminate/Support/Testing/Fakes/PendingChainFake.html#method_dispatch","d":"<p>Dispatch the job with the given arguments.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake::__construct","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html#method___construct","d":"<p>Create a new instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake::send","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html#method_send","d":"<p>Send a new mailable message instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\PendingMailFake::queue","p":"Illuminate/Support/Testing/Fakes/PendingMailFake.html#method_queue","d":"<p>Push the given mailable onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::__construct","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method___construct","d":"<p>Create a new fake queue instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::except","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_except","d":"<p>Specify the jobs that should be queued instead of faked.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushed","d":"<p>Assert if a job was pushed based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushedTimes","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushedTimes","d":"<p>Assert if a job was pushed a number of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushedOn","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushedOn","d":"<p>Assert if a job was pushed based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushedWithChain","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushedWithChain","d":"<p>Assert if a job was pushed with chained jobs based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushedWithoutChain","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushedWithoutChain","d":"<p>Assert if a job was pushed with an empty chain based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushedWithChainOfObjects","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushedWithChainOfObjects","d":"<p>Assert if a job was pushed with chained jobs based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertPushedWithChainOfClasses","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertPushedWithChainOfClasses","d":"<p>Assert if a job was pushed with chained jobs based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertClosurePushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertClosurePushed","d":"<p>Assert if a closure was pushed based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertClosureNotPushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertClosureNotPushed","d":"<p>Assert that a closure was not pushed based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::isChainOfObjects","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_isChainOfObjects","d":"<p>Determine if the given chain is entirely composed of objects.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertNotPushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertNotPushed","d":"<p>Determine if a job was pushed based on a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::assertNothingPushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_assertNothingPushed","d":"<p>Assert that no jobs were pushed.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pushed","d":"<p>Get all of the jobs matching a truth-test callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::hasPushed","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_hasPushed","d":"<p>Determine if there are any stored jobs for a given class.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::connection","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_connection","d":"<p>Resolve a queue connection instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::size","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::push","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::shouldFakeJob","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_shouldFakeJob","d":"<p>Determine if a job should be faked or actually dispatched.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::shouldDispatchJob","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_shouldDispatchJob","d":"<p>Determine if a job should be pushed to the queue instead of faked.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pushRaw","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::later","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pushOn","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pushOn","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::laterOn","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_laterOn","d":"<p>Push a new job onto a specific queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pop","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::bulk","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::pushedJobs","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_pushedJobs","d":"<p>Get the jobs that have been pushed.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::getConnectionName","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_getConnectionName","d":"<p>Get the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::setConnectionName","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method_setConnectionName","d":"<p>Set the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Support\\Testing\\Fakes\\QueueFake::__call","p":"Illuminate/Support/Testing/Fakes/QueueFake.html#method___call","d":"<p>Override the QueueManager to prevent circular dependency.</p>"},{"t":"M","n":"Illuminate\\Support\\Timebox::call","p":"Illuminate/Support/Timebox.html#method_call","d":"<p>Invoke the given callback within the specified timebox minimum.</p>"},{"t":"M","n":"Illuminate\\Support\\Timebox::returnEarly","p":"Illuminate/Support/Timebox.html#method_returnEarly","d":"<p>Indicate that the timebox can return early.</p>"},{"t":"M","n":"Illuminate\\Support\\Timebox::dontReturnEarly","p":"Illuminate/Support/Timebox.html#method_dontReturnEarly","d":"<p>Indicate that the timebox cannot return early.</p>"},{"t":"M","n":"Illuminate\\Support\\Timebox::usleep","p":"Illuminate/Support/Timebox.html#method_usleep","d":"<p>Sleep for the specified number of microseconds.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait::setupContainer","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setupContainer","d":"<p>Setup the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait::setAsGlobal","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setAsGlobal","d":"<p>Make this capsule instance available globally.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait::getContainer","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html#method_getContainer","d":"<p>Get the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\CapsuleManagerTrait::setContainer","p":"Illuminate/Support/Traits/CapsuleManagerTrait.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Conditionable::when","p":"Illuminate/Support/Traits/Conditionable.html#method_when","d":"<p>Apply the callback if the given &quot;value&quot; is (or resolves to) truthy.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Conditionable::unless","p":"Illuminate/Support/Traits/Conditionable.html#method_unless","d":"<p>Apply the callback if the given &quot;value&quot; is (or resolves to) falsy.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::make","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_make","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::wrap","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_wrap","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::unwrap","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_unwrap","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::empty","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_empty","d":"<p>Create a new instance with no items.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::times","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_times","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::average","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_average","d":"<p>Alias for the &quot;avg&quot; method.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::some","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_some","d":"<p>Alias for the &quot;contains&quot; method.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::dd","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_dd","d":"<p>Dump the items and end the script.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::dump","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_dump","d":"<p>Dump the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::each","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_each","d":"<p>Execute a callback over each item.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::eachSpread","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_eachSpread","d":"<p>Execute a callback over each nested chunk of items.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::every","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_every","d":"<p>Determine if all items pass the given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::firstWhere","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_firstWhere","d":"<p>Get the first item by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::value","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_value","d":"<p>Get a single key's value from the first matching item in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::isNotEmpty","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_isNotEmpty","d":"<p>Determine if the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::mapSpread","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_mapSpread","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::mapToGroups","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_mapToGroups","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::flatMap","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_flatMap","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::mapInto","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_mapInto","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::min","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_min","d":"<p>Get the min value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::max","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_max","d":"<p>Get the max value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::forPage","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_forPage","d":"<p>&quot;Paginate&quot; the collection by slicing it into a smaller collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::partition","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_partition","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::sum","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_sum","d":"<p>Get the sum of the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whenEmpty","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whenEmpty","d":"<p>Apply the callback if the collection is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whenNotEmpty","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whenNotEmpty","d":"<p>Apply the callback if the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::unlessEmpty","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_unlessEmpty","d":"<p>Apply the callback unless the collection is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::unlessNotEmpty","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_unlessNotEmpty","d":"<p>Apply the callback unless the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::where","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_where","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereNull","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereNull","d":"<p>Filter items where the value for the given key is null.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereNotNull","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereNotNull","d":"<p>Filter items where the value for the given key is not null.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereStrict","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereIn","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereIn","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereInStrict","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereInStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereBetween","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereBetween","d":"<p>Filter items such that the value of the given key is between the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereNotBetween","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereNotBetween","d":"<p>Filter items such that the value of the given key is not between the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereNotIn","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereNotIn","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereNotInStrict","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereNotInStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::whereInstanceOf","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_whereInstanceOf","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::pipe","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_pipe","d":"<p>Pass the collection to the given callback and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::pipeInto","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_pipeInto","d":"<p>Pass the collection into a new class.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::pipeThrough","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_pipeThrough","d":"<p>Pass the collection through a series of callable pipes and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::reduce","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_reduce","d":"<p>Reduce the collection to a single value.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::reduceSpread","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_reduceSpread","d":"<p>Reduce the collection to multiple aggregate values.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::reduceWithKeys","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_reduceWithKeys","d":"<p>Reduce an associative collection to a single value.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::reject","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_reject","d":"<p>Create a collection of all elements that do not pass a given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::tap","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_tap","d":"<p>Pass the collection to the given callback and then return it.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::unique","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_unique","d":"<p>Return only unique items from the collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::uniqueStrict","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_uniqueStrict","d":"<p>Return only unique items from the collection array using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::collect","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_collect","d":"<p>Collect the values into a collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::toArray","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_toArray","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::jsonSerialize","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_jsonSerialize","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::toJson","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_toJson","d":"<p>Get the collection of items as JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::getCachingIterator","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_getCachingIterator","d":"<p>Get a CachingIterator instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::__toString","p":"Illuminate/Support/Traits/EnumeratesValues.html#method___toString","d":"<p>Convert the collection to its string representation.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::escapeWhenCastingToString","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_escapeWhenCastingToString","d":"<p>Indicate that the model's string representation should be escaped when __toString is invoked.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::proxy","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_proxy","d":"<p>Add a method to the list of proxied methods.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::__get","p":"Illuminate/Support/Traits/EnumeratesValues.html#method___get","d":"<p>Dynamically access collection proxies.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::getArrayableItems","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_getArrayableItems","d":null},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::operatorForWhere","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_operatorForWhere","d":"<p>Get an operator checker callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::useAsCallable","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_useAsCallable","d":"<p>Determine if the given value is callable, but not a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::valueRetriever","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_valueRetriever","d":"<p>Get a value retrieving callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::equality","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_equality","d":"<p>Make a function to check an item's equality.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::negate","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_negate","d":"<p>Make a function using another function, by negating its result.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\EnumeratesValues::identity","p":"Illuminate/Support/Traits/EnumeratesValues.html#method_identity","d":"<p>Make a function that returns what's passed to it.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\ForwardsCalls::forwardCallTo","p":"Illuminate/Support/Traits/ForwardsCalls.html#method_forwardCallTo","d":"<p>Forward a method call to the given object.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\ForwardsCalls::forwardDecoratedCallTo","p":"Illuminate/Support/Traits/ForwardsCalls.html#method_forwardDecoratedCallTo","d":"<p>Forward a method call to the given object, returning $this if the forwarded call returned itself.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\ForwardsCalls::throwBadMethodCallException","p":"Illuminate/Support/Traits/ForwardsCalls.html#method_throwBadMethodCallException","d":"<p>Throw a bad method call exception for the given method.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Localizable::withLocale","p":"Illuminate/Support/Traits/Localizable.html#method_withLocale","d":"<p>Run the callback with the given locale.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::macro","p":"Illuminate/Support/Traits/Macroable.html#method_macro","d":"<p>Register a custom macro.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::mixin","p":"Illuminate/Support/Traits/Macroable.html#method_mixin","d":"<p>Mix another object into the class.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::hasMacro","p":"Illuminate/Support/Traits/Macroable.html#method_hasMacro","d":"<p>Checks if macro is registered.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::flushMacros","p":"Illuminate/Support/Traits/Macroable.html#method_flushMacros","d":"<p>Flush the existing macros.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::__callStatic","p":"Illuminate/Support/Traits/Macroable.html#method___callStatic","d":"<p>Dynamically handle calls to the class.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Macroable::__call","p":"Illuminate/Support/Traits/Macroable.html#method___call","d":"<p>Dynamically handle calls to the class.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\ReflectsClosures::firstClosureParameterType","p":"Illuminate/Support/Traits/ReflectsClosures.html#method_firstClosureParameterType","d":"<p>Get the class name of the first parameter of the given Closure.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\ReflectsClosures::firstClosureParameterTypes","p":"Illuminate/Support/Traits/ReflectsClosures.html#method_firstClosureParameterTypes","d":"<p>Get the class names of the first parameter of the given Closure, including union types.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\ReflectsClosures::closureParameterTypes","p":"Illuminate/Support/Traits/ReflectsClosures.html#method_closureParameterTypes","d":"<p>Get the class names / types of the parameters of the given Closure.</p>"},{"t":"M","n":"Illuminate\\Support\\Traits\\Tappable::tap","p":"Illuminate/Support/Traits/Tappable.html#method_tap","d":"<p>Call the given Closure with this instance then return the instance.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::__construct","p":"Illuminate/Support/ValidatedInput.html#method___construct","d":"<p>Create a new validated input container.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::has","p":"Illuminate/Support/ValidatedInput.html#method_has","d":"<p>Determine if the validated input has one or more keys.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::missing","p":"Illuminate/Support/ValidatedInput.html#method_missing","d":"<p>Determine if the validated input is missing one or more keys.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::only","p":"Illuminate/Support/ValidatedInput.html#method_only","d":"<p>Get a subset containing the provided keys with values from the input data.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::except","p":"Illuminate/Support/ValidatedInput.html#method_except","d":"<p>Get all of the input except for a specified array of items.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::merge","p":"Illuminate/Support/ValidatedInput.html#method_merge","d":"<p>Merge the validated input with the given array of additional data.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::collect","p":"Illuminate/Support/ValidatedInput.html#method_collect","d":"<p>Get the input as a collection.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::all","p":"Illuminate/Support/ValidatedInput.html#method_all","d":"<p>Get the raw, underlying input array.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::toArray","p":"Illuminate/Support/ValidatedInput.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::__get","p":"Illuminate/Support/ValidatedInput.html#method___get","d":"<p>Dynamically access input data.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::__set","p":"Illuminate/Support/ValidatedInput.html#method___set","d":"<p>Dynamically set input data.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::__isset","p":"Illuminate/Support/ValidatedInput.html#method___isset","d":"<p>Determine if an input key is set.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::__unset","p":"Illuminate/Support/ValidatedInput.html#method___unset","d":"<p>Remove an input key.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::offsetExists","p":"Illuminate/Support/ValidatedInput.html#method_offsetExists","d":"<p>Determine if an item exists at an offset.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::offsetGet","p":"Illuminate/Support/ValidatedInput.html#method_offsetGet","d":"<p>Get an item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::offsetSet","p":"Illuminate/Support/ValidatedInput.html#method_offsetSet","d":"<p>Set the item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::offsetUnset","p":"Illuminate/Support/ValidatedInput.html#method_offsetUnset","d":"<p>Unset the item at a given offset.</p>"},{"t":"M","n":"Illuminate\\Support\\ValidatedInput::getIterator","p":"Illuminate/Support/ValidatedInput.html#method_getIterator","d":"<p>Get an iterator for the input.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::hasBag","p":"Illuminate/Support/ViewErrorBag.html#method_hasBag","d":"<p>Checks if a named MessageBag exists in the bags.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::getBag","p":"Illuminate/Support/ViewErrorBag.html#method_getBag","d":"<p>Get a MessageBag instance from the bags.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::getBags","p":"Illuminate/Support/ViewErrorBag.html#method_getBags","d":"<p>Get all the bags.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::put","p":"Illuminate/Support/ViewErrorBag.html#method_put","d":"<p>Add a new MessageBag instance to the bags.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::any","p":"Illuminate/Support/ViewErrorBag.html#method_any","d":"<p>Determine if the default message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::count","p":"Illuminate/Support/ViewErrorBag.html#method_count","d":"<p>Get the number of messages in the default bag.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::__call","p":"Illuminate/Support/ViewErrorBag.html#method___call","d":"<p>Dynamically call methods on the default bag.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::__get","p":"Illuminate/Support/ViewErrorBag.html#method___get","d":"<p>Dynamically access a view error bag.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::__set","p":"Illuminate/Support/ViewErrorBag.html#method___set","d":"<p>Dynamically set a view error bag.</p>"},{"t":"M","n":"Illuminate\\Support\\ViewErrorBag::__toString","p":"Illuminate/Support/ViewErrorBag.html#method___toString","d":"<p>Convert the default bag to its string representation.</p>"},{"t":"M","n":"Illuminate\\Testing\\Assert::assertArraySubset","p":"Illuminate/Testing/Assert.html#method_assertArraySubset","d":"<p>Asserts that an array has a specified subset.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::__construct","p":"Illuminate/Testing/AssertableJsonString.html#method___construct","d":"<p>Create a new assertable JSON string instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::json","p":"Illuminate/Testing/AssertableJsonString.html#method_json","d":"<p>Validate and return the decoded response JSON.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertCount","p":"Illuminate/Testing/AssertableJsonString.html#method_assertCount","d":"<p>Assert that the response JSON has the expected count of items at the given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertExact","p":"Illuminate/Testing/AssertableJsonString.html#method_assertExact","d":"<p>Assert that the response has the exact given JSON.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertSimilar","p":"Illuminate/Testing/AssertableJsonString.html#method_assertSimilar","d":"<p>Assert that the response has the similar JSON as given.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertFragment","p":"Illuminate/Testing/AssertableJsonString.html#method_assertFragment","d":"<p>Assert that the response contains the given JSON fragment.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertMissing","p":"Illuminate/Testing/AssertableJsonString.html#method_assertMissing","d":"<p>Assert that the response does not contain the given JSON fragment.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertMissingExact","p":"Illuminate/Testing/AssertableJsonString.html#method_assertMissingExact","d":"<p>Assert that the response does not contain the exact JSON fragment.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertMissingPath","p":"Illuminate/Testing/AssertableJsonString.html#method_assertMissingPath","d":"<p>Assert that the response does not contain the given path.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertPath","p":"Illuminate/Testing/AssertableJsonString.html#method_assertPath","d":"<p>Assert that the expected value and type exists at the given path in the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertStructure","p":"Illuminate/Testing/AssertableJsonString.html#method_assertStructure","d":"<p>Assert that the response has a given JSON structure.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertSubset","p":"Illuminate/Testing/AssertableJsonString.html#method_assertSubset","d":"<p>Assert that the response is a superset of the given JSON.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::reorderAssocKeys","p":"Illuminate/Testing/AssertableJsonString.html#method_reorderAssocKeys","d":"<p>Reorder associative array keys to make it easy to compare arrays.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::assertJsonMessage","p":"Illuminate/Testing/AssertableJsonString.html#method_assertJsonMessage","d":"<p>Get the assertion message for assertJson.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::jsonSearchStrings","p":"Illuminate/Testing/AssertableJsonString.html#method_jsonSearchStrings","d":"<p>Get the strings we need to search for when examining the JSON.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::count","p":"Illuminate/Testing/AssertableJsonString.html#method_count","d":"<p>Get the total number of items in the underlying JSON array.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::offsetExists","p":"Illuminate/Testing/AssertableJsonString.html#method_offsetExists","d":"<p>Determine whether an offset exists.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::offsetGet","p":"Illuminate/Testing/AssertableJsonString.html#method_offsetGet","d":"<p>Get the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::offsetSet","p":"Illuminate/Testing/AssertableJsonString.html#method_offsetSet","d":"<p>Set the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Testing\\AssertableJsonString::offsetUnset","p":"Illuminate/Testing/AssertableJsonString.html#method_offsetUnset","d":"<p>Unset the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertOk","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertOk","d":"<p>Assert that the response has a 200 &quot;OK&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertCreated","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertCreated","d":"<p>Assert that the response has a 201 &quot;Created&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertAccepted","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertAccepted","d":"<p>Assert that the response has a 202 &quot;Accepted&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertNoContent","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertNoContent","d":"<p>Assert that the response has the given status code and no content.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertMovedPermanently","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertMovedPermanently","d":"<p>Assert that the response has a 301 &quot;Moved Permanently&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertFound","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertFound","d":"<p>Assert that the response has a 302 &quot;Found&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertBadRequest","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertBadRequest","d":"<p>Assert that the response has a 400 &quot;Bad Request&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertUnauthorized","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertUnauthorized","d":"<p>Assert that the response has a 401 &quot;Unauthorized&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertPaymentRequired","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertPaymentRequired","d":"<p>Assert that the response has a 402 &quot;Payment Required&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertForbidden","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertForbidden","d":"<p>Assert that the response has a 403 &quot;Forbidden&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertNotFound","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertNotFound","d":"<p>Assert that the response has a 404 &quot;Not Found&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertRequestTimeout","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertRequestTimeout","d":"<p>Assert that the response has a 408 &quot;Request Timeout&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertConflict","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertConflict","d":"<p>Assert that the response has a 409 &quot;Conflict&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertUnprocessable","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertUnprocessable","d":"<p>Assert that the response has a 422 &quot;Unprocessable Entity&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\AssertsStatusCodes::assertTooManyRequests","p":"Illuminate/Testing/Concerns/AssertsStatusCodes.html#method_assertTooManyRequests","d":"<p>Assert that the response has a 429 &quot;Too Many Requests&quot; status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\RunsInParallel::__construct","p":"Illuminate/Testing/Concerns/RunsInParallel.html#method___construct","d":"<p>Creates a new test runner instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\RunsInParallel::resolveApplicationUsing","p":"Illuminate/Testing/Concerns/RunsInParallel.html#method_resolveApplicationUsing","d":"<p>Set the application resolver callback.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\RunsInParallel::resolveRunnerUsing","p":"Illuminate/Testing/Concerns/RunsInParallel.html#method_resolveRunnerUsing","d":"<p>Set the runner resolver callback.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\RunsInParallel::execute","p":"Illuminate/Testing/Concerns/RunsInParallel.html#method_execute","d":"<p>Runs the test suite.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\RunsInParallel::getExitCode","p":"Illuminate/Testing/Concerns/RunsInParallel.html#method_getExitCode","d":"<p>Returns the highest exit code encountered throughout the course of test execution.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\RunsInParallel::forEachProcess","p":"Illuminate/Testing/Concerns/RunsInParallel.html#method_forEachProcess","d":"<p>Apply the given callback for each process.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\RunsInParallel::createApplication","p":"Illuminate/Testing/Concerns/RunsInParallel.html#method_createApplication","d":"<p>Creates the application.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\TestDatabases::bootTestDatabase","p":"Illuminate/Testing/Concerns/TestDatabases.html#method_bootTestDatabase","d":"<p>Boot a test database.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\TestDatabases::ensureTestDatabaseExists","p":"Illuminate/Testing/Concerns/TestDatabases.html#method_ensureTestDatabaseExists","d":"<p>Ensure a test database exists and returns its name.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\TestDatabases::ensureSchemaIsUpToDate","p":"Illuminate/Testing/Concerns/TestDatabases.html#method_ensureSchemaIsUpToDate","d":"<p>Ensure the current database test schema is up to date.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\TestDatabases::usingDatabase","p":"Illuminate/Testing/Concerns/TestDatabases.html#method_usingDatabase","d":"<p>Runs the given callable using the given database.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\TestDatabases::whenNotUsingInMemoryDatabase","p":"Illuminate/Testing/Concerns/TestDatabases.html#method_whenNotUsingInMemoryDatabase","d":"<p>Apply the given callback when tests are not using in memory database.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\TestDatabases::switchToDatabase","p":"Illuminate/Testing/Concerns/TestDatabases.html#method_switchToDatabase","d":"<p>Switch to the given database.</p>"},{"t":"M","n":"Illuminate\\Testing\\Concerns\\TestDatabases::testDatabase","p":"Illuminate/Testing/Concerns/TestDatabases.html#method_testDatabase","d":"<p>Returns the test database name.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\ArraySubset::__construct","p":"Illuminate/Testing/Constraints/ArraySubset.html#method___construct","d":"<p>Create a new array subset constraint instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\ArraySubset::evaluate","p":"Illuminate/Testing/Constraints/ArraySubset.html#method_evaluate","d":"<p>Evaluates the constraint for parameter $other.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\ArraySubset::toString","p":"Illuminate/Testing/Constraints/ArraySubset.html#method_toString","d":"<p>Returns a string representation of the constraint.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\ArraySubset::failureDescription","p":"Illuminate/Testing/Constraints/ArraySubset.html#method_failureDescription","d":"<p>Returns the description of the failure.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\CountInDatabase::__construct","p":"Illuminate/Testing/Constraints/CountInDatabase.html#method___construct","d":"<p>Create a new constraint instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\CountInDatabase::matches","p":"Illuminate/Testing/Constraints/CountInDatabase.html#method_matches","d":"<p>Check if the expected and actual count are equal.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\CountInDatabase::failureDescription","p":"Illuminate/Testing/Constraints/CountInDatabase.html#method_failureDescription","d":"<p>Get the description of the failure.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\CountInDatabase::toString","p":"Illuminate/Testing/Constraints/CountInDatabase.html#method_toString","d":"<p>Get a string representation of the object.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\HasInDatabase::__construct","p":"Illuminate/Testing/Constraints/HasInDatabase.html#method___construct","d":"<p>Create a new constraint instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\HasInDatabase::matches","p":"Illuminate/Testing/Constraints/HasInDatabase.html#method_matches","d":"<p>Check if the data is found in the given table.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\HasInDatabase::failureDescription","p":"Illuminate/Testing/Constraints/HasInDatabase.html#method_failureDescription","d":"<p>Get the description of the failure.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\HasInDatabase::getAdditionalInfo","p":"Illuminate/Testing/Constraints/HasInDatabase.html#method_getAdditionalInfo","d":"<p>Get additional info about the records found in the database table.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\HasInDatabase::toString","p":"Illuminate/Testing/Constraints/HasInDatabase.html#method_toString","d":"<p>Get a string representation of the object.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\NotSoftDeletedInDatabase::__construct","p":"Illuminate/Testing/Constraints/NotSoftDeletedInDatabase.html#method___construct","d":"<p>Create a new constraint instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\NotSoftDeletedInDatabase::matches","p":"Illuminate/Testing/Constraints/NotSoftDeletedInDatabase.html#method_matches","d":"<p>Check if the data is found in the given table.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\NotSoftDeletedInDatabase::failureDescription","p":"Illuminate/Testing/Constraints/NotSoftDeletedInDatabase.html#method_failureDescription","d":"<p>Get the description of the failure.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\NotSoftDeletedInDatabase::getAdditionalInfo","p":"Illuminate/Testing/Constraints/NotSoftDeletedInDatabase.html#method_getAdditionalInfo","d":"<p>Get additional info about the records found in the database table.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\NotSoftDeletedInDatabase::toString","p":"Illuminate/Testing/Constraints/NotSoftDeletedInDatabase.html#method_toString","d":"<p>Get a string representation of the object.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SeeInOrder::__construct","p":"Illuminate/Testing/Constraints/SeeInOrder.html#method___construct","d":"<p>Create a new constraint instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SeeInOrder::matches","p":"Illuminate/Testing/Constraints/SeeInOrder.html#method_matches","d":"<p>Determine if the rule passes validation.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SeeInOrder::failureDescription","p":"Illuminate/Testing/Constraints/SeeInOrder.html#method_failureDescription","d":"<p>Get the description of the failure.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SeeInOrder::toString","p":"Illuminate/Testing/Constraints/SeeInOrder.html#method_toString","d":"<p>Get a string representation of the object.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SoftDeletedInDatabase::__construct","p":"Illuminate/Testing/Constraints/SoftDeletedInDatabase.html#method___construct","d":"<p>Create a new constraint instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SoftDeletedInDatabase::matches","p":"Illuminate/Testing/Constraints/SoftDeletedInDatabase.html#method_matches","d":"<p>Check if the data is found in the given table.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SoftDeletedInDatabase::failureDescription","p":"Illuminate/Testing/Constraints/SoftDeletedInDatabase.html#method_failureDescription","d":"<p>Get the description of the failure.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SoftDeletedInDatabase::getAdditionalInfo","p":"Illuminate/Testing/Constraints/SoftDeletedInDatabase.html#method_getAdditionalInfo","d":"<p>Get additional info about the records found in the database table.</p>"},{"t":"M","n":"Illuminate\\Testing\\Constraints\\SoftDeletedInDatabase::toString","p":"Illuminate/Testing/Constraints/SoftDeletedInDatabase.html#method_toString","d":"<p>Get a string representation of the object.</p>"},{"t":"M","n":"Illuminate\\Testing\\Exceptions\\InvalidArgumentException::create","p":"Illuminate/Testing/Exceptions/InvalidArgumentException.html#method_create","d":"<p>Creates a new exception for an invalid argument.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::__construct","p":"Illuminate/Testing/Fluent/AssertableJson.html#method___construct","d":"<p>Create a new fluent, assertable JSON data instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::dotPath","p":"Illuminate/Testing/Fluent/AssertableJson.html#method_dotPath","d":"<p>Compose the absolute &quot;dot&quot; path to the given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::prop","p":"Illuminate/Testing/Fluent/AssertableJson.html#method_prop","d":"<p>Retrieve a prop within the current scope using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::scope","p":"Illuminate/Testing/Fluent/AssertableJson.html#method_scope","d":"<p>Instantiate a new &quot;scope&quot; at the path of the given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::first","p":"Illuminate/Testing/Fluent/AssertableJson.html#method_first","d":"<p>Instantiate a new &quot;scope&quot; on the first child element.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::each","p":"Illuminate/Testing/Fluent/AssertableJson.html#method_each","d":"<p>Instantiate a new &quot;scope&quot; on each child element.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::fromArray","p":"Illuminate/Testing/Fluent/AssertableJson.html#method_fromArray","d":"<p>Create a new instance from an array.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::fromAssertableJsonString","p":"Illuminate/Testing/Fluent/AssertableJson.html#method_fromAssertableJsonString","d":"<p>Create a new instance from an AssertableJsonString.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\AssertableJson::toArray","p":"Illuminate/Testing/Fluent/AssertableJson.html#method_toArray","d":"<p>Get the instance as an array.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Debugging::dump","p":"Illuminate/Testing/Fluent/Concerns/Debugging.html#method_dump","d":"<p>Dumps the given props.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Debugging::dd","p":"Illuminate/Testing/Fluent/Concerns/Debugging.html#method_dd","d":"<p>Dumps the given props and exits.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Debugging::prop","p":"Illuminate/Testing/Fluent/Concerns/Debugging.html#method_prop","d":"<p>Retrieve a prop within the current scope using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::count","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_count","d":"<p>Assert that the prop is of the expected size.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::has","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_has","d":"<p>Ensure that the given prop exists.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::hasAll","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_hasAll","d":"<p>Assert that all of the given props exist.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::hasAny","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_hasAny","d":"<p>Assert that at least one of the given props exists.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::missingAll","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_missingAll","d":"<p>Assert that none of the given props exist.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::missing","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_missing","d":"<p>Assert that the given prop does not exist.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::dotPath","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_dotPath","d":"<p>Compose the absolute &quot;dot&quot; path to the given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::interactsWith","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_interactsWith","d":"<p>Marks the property as interacted.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::prop","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_prop","d":"<p>Retrieve a prop within the current scope using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::scope","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_scope","d":"<p>Instantiate a new &quot;scope&quot; at the path of the given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::etc","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_etc","d":"<p>Disables the interaction check.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Has::first","p":"Illuminate/Testing/Fluent/Concerns/Has.html#method_first","d":"<p>Instantiate a new &quot;scope&quot; on the first element.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Interaction::interactsWith","p":"Illuminate/Testing/Fluent/Concerns/Interaction.html#method_interactsWith","d":"<p>Marks the property as interacted.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Interaction::interacted","p":"Illuminate/Testing/Fluent/Concerns/Interaction.html#method_interacted","d":"<p>Asserts that all properties have been interacted with.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Interaction::etc","p":"Illuminate/Testing/Fluent/Concerns/Interaction.html#method_etc","d":"<p>Disables the interaction check.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Interaction::prop","p":"Illuminate/Testing/Fluent/Concerns/Interaction.html#method_prop","d":"<p>Retrieve a prop within the current scope using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::where","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_where","d":"<p>Asserts that the property matches the expected value.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::whereNot","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_whereNot","d":"<p>Asserts that the property does not match the expected value.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::whereAll","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_whereAll","d":"<p>Asserts that all properties match their expected values.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::whereType","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_whereType","d":"<p>Asserts that the property is of the expected type.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::whereAllType","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_whereAllType","d":"<p>Asserts that all properties are of their expected types.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::whereContains","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_whereContains","d":"<p>Asserts that the property contains the expected values.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::ensureSorted","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_ensureSorted","d":"<p>Ensures that all properties are sorted the same way, recursively.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::dotPath","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_dotPath","d":"<p>Compose the absolute &quot;dot&quot; path to the given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::has","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_has","d":"<p>Ensure that the given prop exists.</p>"},{"t":"M","n":"Illuminate\\Testing\\Fluent\\Concerns\\Matching::prop","p":"Illuminate/Testing/Fluent/Concerns/Matching.html#method_prop","d":"<p>Retrieve a prop within the current scope using &quot;dot&quot; notation.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelConsoleOutput::__construct","p":"Illuminate/Testing/ParallelConsoleOutput.html#method___construct","d":"<p>Create a new Parallel ConsoleOutput instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelConsoleOutput::write","p":"Illuminate/Testing/ParallelConsoleOutput.html#method_write","d":"<p>Writes a message to the output.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelRunner::run","p":"Illuminate/Testing/ParallelRunner.html#method_run","d":"<p>Runs the test suite.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::__construct","p":"Illuminate/Testing/ParallelTesting.html#method___construct","d":"<p>Create a new parallel testing instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::resolveOptionsUsing","p":"Illuminate/Testing/ParallelTesting.html#method_resolveOptionsUsing","d":"<p>Set a callback that should be used when resolving options.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::resolveTokenUsing","p":"Illuminate/Testing/ParallelTesting.html#method_resolveTokenUsing","d":"<p>Set a callback that should be used when resolving the unique process token.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::setUpProcess","p":"Illuminate/Testing/ParallelTesting.html#method_setUpProcess","d":"<p>Register a &quot;setUp&quot; process callback.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::setUpTestCase","p":"Illuminate/Testing/ParallelTesting.html#method_setUpTestCase","d":"<p>Register a &quot;setUp&quot; test case callback.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::setUpTestDatabase","p":"Illuminate/Testing/ParallelTesting.html#method_setUpTestDatabase","d":"<p>Register a &quot;setUp&quot; test database callback.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::tearDownProcess","p":"Illuminate/Testing/ParallelTesting.html#method_tearDownProcess","d":"<p>Register a &quot;tearDown&quot; process callback.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::tearDownTestCase","p":"Illuminate/Testing/ParallelTesting.html#method_tearDownTestCase","d":"<p>Register a &quot;tearDown&quot; test case callback.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::callSetUpProcessCallbacks","p":"Illuminate/Testing/ParallelTesting.html#method_callSetUpProcessCallbacks","d":"<p>Call all of the &quot;setUp&quot; process callbacks.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::callSetUpTestCaseCallbacks","p":"Illuminate/Testing/ParallelTesting.html#method_callSetUpTestCaseCallbacks","d":"<p>Call all of the &quot;setUp&quot; test case callbacks.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::callSetUpTestDatabaseCallbacks","p":"Illuminate/Testing/ParallelTesting.html#method_callSetUpTestDatabaseCallbacks","d":"<p>Call all of the &quot;setUp&quot; test database callbacks.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::callTearDownProcessCallbacks","p":"Illuminate/Testing/ParallelTesting.html#method_callTearDownProcessCallbacks","d":"<p>Call all of the &quot;tearDown&quot; process callbacks.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::callTearDownTestCaseCallbacks","p":"Illuminate/Testing/ParallelTesting.html#method_callTearDownTestCaseCallbacks","d":"<p>Call all of the &quot;tearDown&quot; test case callbacks.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::option","p":"Illuminate/Testing/ParallelTesting.html#method_option","d":"<p>Get a parallel testing option.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::token","p":"Illuminate/Testing/ParallelTesting.html#method_token","d":"<p>Gets a unique test token.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::whenRunningInParallel","p":"Illuminate/Testing/ParallelTesting.html#method_whenRunningInParallel","d":"<p>Apply the callback if tests are running in parallel.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTesting::inParallel","p":"Illuminate/Testing/ParallelTesting.html#method_inParallel","d":"<p>Indicates if the current tests are been run in parallel.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTestingServiceProvider::boot","p":"Illuminate/Testing/ParallelTestingServiceProvider.html#method_boot","d":"<p>Boot the application's service providers.</p>"},{"t":"M","n":"Illuminate\\Testing\\ParallelTestingServiceProvider::register","p":"Illuminate/Testing/ParallelTestingServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::__construct","p":"Illuminate/Testing/PendingCommand.html#method___construct","d":"<p>Create a new pending console command run.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::expectsQuestion","p":"Illuminate/Testing/PendingCommand.html#method_expectsQuestion","d":"<p>Specify an expected question that will be asked when the command runs.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::expectsConfirmation","p":"Illuminate/Testing/PendingCommand.html#method_expectsConfirmation","d":"<p>Specify an expected confirmation question that will be asked when the command runs.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::expectsChoice","p":"Illuminate/Testing/PendingCommand.html#method_expectsChoice","d":"<p>Specify an expected choice question with expected answers that will be asked/shown when the command runs.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::expectsOutput","p":"Illuminate/Testing/PendingCommand.html#method_expectsOutput","d":"<p>Specify output that should be printed when the command runs.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::doesntExpectOutput","p":"Illuminate/Testing/PendingCommand.html#method_doesntExpectOutput","d":"<p>Specify output that should never be printed when the command runs.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::expectsOutputToContain","p":"Illuminate/Testing/PendingCommand.html#method_expectsOutputToContain","d":"<p>Specify that the given string should be contained in the command output.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::doesntExpectOutputToContain","p":"Illuminate/Testing/PendingCommand.html#method_doesntExpectOutputToContain","d":"<p>Specify that the given string shouldn't be contained in the command output.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::expectsTable","p":"Illuminate/Testing/PendingCommand.html#method_expectsTable","d":"<p>Specify a table that should be printed when the command runs.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::assertExitCode","p":"Illuminate/Testing/PendingCommand.html#method_assertExitCode","d":"<p>Assert that the command has the given exit code.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::assertNotExitCode","p":"Illuminate/Testing/PendingCommand.html#method_assertNotExitCode","d":"<p>Assert that the command does not have the given exit code.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::assertSuccessful","p":"Illuminate/Testing/PendingCommand.html#method_assertSuccessful","d":"<p>Assert that the command has the success exit code.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::assertOk","p":"Illuminate/Testing/PendingCommand.html#method_assertOk","d":"<p>Assert that the command has the success exit code.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::assertFailed","p":"Illuminate/Testing/PendingCommand.html#method_assertFailed","d":"<p>Assert that the command does not have the success exit code.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::execute","p":"Illuminate/Testing/PendingCommand.html#method_execute","d":"<p>Execute the command.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::run","p":"Illuminate/Testing/PendingCommand.html#method_run","d":"<p>Execute the command.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::verifyExpectations","p":"Illuminate/Testing/PendingCommand.html#method_verifyExpectations","d":"<p>Determine if expected questions / choices / outputs are fulfilled.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::mockConsoleOutput","p":"Illuminate/Testing/PendingCommand.html#method_mockConsoleOutput","d":"<p>Mock the application's console output.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::flushExpectations","p":"Illuminate/Testing/PendingCommand.html#method_flushExpectations","d":"<p>Flush the expectations from the test case.</p>"},{"t":"M","n":"Illuminate\\Testing\\PendingCommand::__destruct","p":"Illuminate/Testing/PendingCommand.html#method___destruct","d":"<p>Handle the object's destruction.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::__construct","p":"Illuminate/Testing/TestComponent.html#method___construct","d":"<p>Create a new test component instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::assertSee","p":"Illuminate/Testing/TestComponent.html#method_assertSee","d":"<p>Assert that the given string is contained within the rendered component.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::assertSeeInOrder","p":"Illuminate/Testing/TestComponent.html#method_assertSeeInOrder","d":"<p>Assert that the given strings are contained in order within the rendered component.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::assertSeeText","p":"Illuminate/Testing/TestComponent.html#method_assertSeeText","d":"<p>Assert that the given string is contained within the rendered component text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::assertSeeTextInOrder","p":"Illuminate/Testing/TestComponent.html#method_assertSeeTextInOrder","d":"<p>Assert that the given strings are contained in order within the rendered component text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::assertDontSee","p":"Illuminate/Testing/TestComponent.html#method_assertDontSee","d":"<p>Assert that the given string is not contained within the rendered component.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::assertDontSeeText","p":"Illuminate/Testing/TestComponent.html#method_assertDontSeeText","d":"<p>Assert that the given string is not contained within the rendered component text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::__toString","p":"Illuminate/Testing/TestComponent.html#method___toString","d":"<p>Get the string contents of the rendered component.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::__get","p":"Illuminate/Testing/TestComponent.html#method___get","d":"<p>Dynamically access properties on the underlying component.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestComponent::__call","p":"Illuminate/Testing/TestComponent.html#method___call","d":"<p>Dynamically call methods on the underlying component.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::__construct","p":"Illuminate/Testing/TestResponse.html#method___construct","d":"<p>Create a new test response instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::fromBaseResponse","p":"Illuminate/Testing/TestResponse.html#method_fromBaseResponse","d":"<p>Create a new TestResponse from another response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSuccessful","p":"Illuminate/Testing/TestResponse.html#method_assertSuccessful","d":"<p>Assert that the response has a successful status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertServerError","p":"Illuminate/Testing/TestResponse.html#method_assertServerError","d":"<p>Assert that the response is a server error.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertStatus","p":"Illuminate/Testing/TestResponse.html#method_assertStatus","d":"<p>Assert that the response has the given status code.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::statusMessageWithDetails","p":"Illuminate/Testing/TestResponse.html#method_statusMessageWithDetails","d":"<p>Get an assertion message for a status assertion containing extra details when available.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertRedirect","p":"Illuminate/Testing/TestResponse.html#method_assertRedirect","d":"<p>Assert whether the response is redirecting to a given URI.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertRedirectContains","p":"Illuminate/Testing/TestResponse.html#method_assertRedirectContains","d":"<p>Assert whether the response is redirecting to a URI that contains the given URI.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertRedirectToRoute","p":"Illuminate/Testing/TestResponse.html#method_assertRedirectToRoute","d":"<p>Assert whether the response is redirecting to a given route.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertRedirectToSignedRoute","p":"Illuminate/Testing/TestResponse.html#method_assertRedirectToSignedRoute","d":"<p>Assert whether the response is redirecting to a given signed route.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertHeader","p":"Illuminate/Testing/TestResponse.html#method_assertHeader","d":"<p>Asserts that the response contains the given header and equals the optional value.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertHeaderMissing","p":"Illuminate/Testing/TestResponse.html#method_assertHeaderMissing","d":"<p>Asserts that the response does not contain the given header.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertLocation","p":"Illuminate/Testing/TestResponse.html#method_assertLocation","d":"<p>Assert that the current location header matches the given URI.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertDownload","p":"Illuminate/Testing/TestResponse.html#method_assertDownload","d":"<p>Assert that the response offers a file download.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertPlainCookie","p":"Illuminate/Testing/TestResponse.html#method_assertPlainCookie","d":"<p>Asserts that the response contains the given cookie and equals the optional value.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertCookie","p":"Illuminate/Testing/TestResponse.html#method_assertCookie","d":"<p>Asserts that the response contains the given cookie and equals the optional value.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertCookieExpired","p":"Illuminate/Testing/TestResponse.html#method_assertCookieExpired","d":"<p>Asserts that the response contains the given cookie and is expired.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertCookieNotExpired","p":"Illuminate/Testing/TestResponse.html#method_assertCookieNotExpired","d":"<p>Asserts that the response contains the given cookie and is not expired.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertCookieMissing","p":"Illuminate/Testing/TestResponse.html#method_assertCookieMissing","d":"<p>Asserts that the response does not contain the given cookie.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::getCookie","p":"Illuminate/Testing/TestResponse.html#method_getCookie","d":"<p>Get the given cookie from the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertContent","p":"Illuminate/Testing/TestResponse.html#method_assertContent","d":"<p>Assert that the given string matches the response content.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertStreamedContent","p":"Illuminate/Testing/TestResponse.html#method_assertStreamedContent","d":"<p>Assert that the given string matches the streamed response content.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSee","p":"Illuminate/Testing/TestResponse.html#method_assertSee","d":"<p>Assert that the given string or array of strings are contained within the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSeeInOrder","p":"Illuminate/Testing/TestResponse.html#method_assertSeeInOrder","d":"<p>Assert that the given strings are contained in order within the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSeeText","p":"Illuminate/Testing/TestResponse.html#method_assertSeeText","d":"<p>Assert that the given string or array of strings are contained within the response text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSeeTextInOrder","p":"Illuminate/Testing/TestResponse.html#method_assertSeeTextInOrder","d":"<p>Assert that the given strings are contained in order within the response text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertDontSee","p":"Illuminate/Testing/TestResponse.html#method_assertDontSee","d":"<p>Assert that the given string or array of strings are not contained within the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertDontSeeText","p":"Illuminate/Testing/TestResponse.html#method_assertDontSeeText","d":"<p>Assert that the given string or array of strings are not contained within the response text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJson","p":"Illuminate/Testing/TestResponse.html#method_assertJson","d":"<p>Assert that the response is a superset of the given JSON.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonPath","p":"Illuminate/Testing/TestResponse.html#method_assertJsonPath","d":"<p>Assert that the expected value and type exists at the given path in the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertExactJson","p":"Illuminate/Testing/TestResponse.html#method_assertExactJson","d":"<p>Assert that the response has the exact given JSON.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSimilarJson","p":"Illuminate/Testing/TestResponse.html#method_assertSimilarJson","d":"<p>Assert that the response has the similar JSON as given.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonFragment","p":"Illuminate/Testing/TestResponse.html#method_assertJsonFragment","d":"<p>Assert that the response contains the given JSON fragment.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonMissing","p":"Illuminate/Testing/TestResponse.html#method_assertJsonMissing","d":"<p>Assert that the response does not contain the given JSON fragment.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonMissingExact","p":"Illuminate/Testing/TestResponse.html#method_assertJsonMissingExact","d":"<p>Assert that the response does not contain the exact JSON fragment.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonMissingPath","p":"Illuminate/Testing/TestResponse.html#method_assertJsonMissingPath","d":"<p>Assert that the response does not contain the given path.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonStructure","p":"Illuminate/Testing/TestResponse.html#method_assertJsonStructure","d":"<p>Assert that the response has a given JSON structure.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonCount","p":"Illuminate/Testing/TestResponse.html#method_assertJsonCount","d":"<p>Assert that the response JSON has the expected count of items at the given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonValidationErrors","p":"Illuminate/Testing/TestResponse.html#method_assertJsonValidationErrors","d":"<p>Assert that the response has the given JSON validation errors.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonValidationErrorFor","p":"Illuminate/Testing/TestResponse.html#method_assertJsonValidationErrorFor","d":"<p>Assert the response has any JSON validation errors for the given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonMissingValidationErrors","p":"Illuminate/Testing/TestResponse.html#method_assertJsonMissingValidationErrors","d":"<p>Assert that the response has no JSON validation errors for the given keys.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonIsArray","p":"Illuminate/Testing/TestResponse.html#method_assertJsonIsArray","d":"<p>Assert that the given key is a JSON array.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertJsonIsObject","p":"Illuminate/Testing/TestResponse.html#method_assertJsonIsObject","d":"<p>Assert that the given key is a JSON object.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::decodeResponseJson","p":"Illuminate/Testing/TestResponse.html#method_decodeResponseJson","d":"<p>Validate and return the decoded response JSON.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::json","p":"Illuminate/Testing/TestResponse.html#method_json","d":"<p>Validate and return the decoded response JSON.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::collect","p":"Illuminate/Testing/TestResponse.html#method_collect","d":"<p>Get the JSON decoded body of the response as a collection.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertViewIs","p":"Illuminate/Testing/TestResponse.html#method_assertViewIs","d":"<p>Assert that the response view equals the given value.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertViewHas","p":"Illuminate/Testing/TestResponse.html#method_assertViewHas","d":"<p>Assert that the response view has a given piece of bound data.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertViewHasAll","p":"Illuminate/Testing/TestResponse.html#method_assertViewHasAll","d":"<p>Assert that the response view has a given list of bound data.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::viewData","p":"Illuminate/Testing/TestResponse.html#method_viewData","d":"<p>Get a piece of data from the original view.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertViewMissing","p":"Illuminate/Testing/TestResponse.html#method_assertViewMissing","d":"<p>Assert that the response view is missing a piece of bound data.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::ensureResponseHasView","p":"Illuminate/Testing/TestResponse.html#method_ensureResponseHasView","d":"<p>Ensure that the response has a view as its original content.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::responseHasView","p":"Illuminate/Testing/TestResponse.html#method_responseHasView","d":"<p>Determine if the original response is a view.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertValid","p":"Illuminate/Testing/TestResponse.html#method_assertValid","d":"<p>Assert that the given keys do not have validation errors.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertInvalid","p":"Illuminate/Testing/TestResponse.html#method_assertInvalid","d":"<p>Assert that the response has the given validation errors.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSessionHas","p":"Illuminate/Testing/TestResponse.html#method_assertSessionHas","d":"<p>Assert that the session has a given value.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSessionHasAll","p":"Illuminate/Testing/TestResponse.html#method_assertSessionHasAll","d":"<p>Assert that the session has a given list of values.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSessionHasInput","p":"Illuminate/Testing/TestResponse.html#method_assertSessionHasInput","d":"<p>Assert that the session has a given value in the flashed input array.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSessionHasErrors","p":"Illuminate/Testing/TestResponse.html#method_assertSessionHasErrors","d":"<p>Assert that the session has the given errors.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSessionDoesntHaveErrors","p":"Illuminate/Testing/TestResponse.html#method_assertSessionDoesntHaveErrors","d":"<p>Assert that the session is missing the given errors.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSessionHasNoErrors","p":"Illuminate/Testing/TestResponse.html#method_assertSessionHasNoErrors","d":"<p>Assert that the session has no errors.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSessionHasErrorsIn","p":"Illuminate/Testing/TestResponse.html#method_assertSessionHasErrorsIn","d":"<p>Assert that the session has the given errors.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::assertSessionMissing","p":"Illuminate/Testing/TestResponse.html#method_assertSessionMissing","d":"<p>Assert that the session does not have a given key.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::session","p":"Illuminate/Testing/TestResponse.html#method_session","d":"<p>Get the current session store.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::dd","p":"Illuminate/Testing/TestResponse.html#method_dd","d":"<p>Dump the content from the response and end the script.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::ddHeaders","p":"Illuminate/Testing/TestResponse.html#method_ddHeaders","d":"<p>Dump the headers from the response and end the script.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::ddSession","p":"Illuminate/Testing/TestResponse.html#method_ddSession","d":"<p>Dump the session from the response and end the script.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::dump","p":"Illuminate/Testing/TestResponse.html#method_dump","d":"<p>Dump the content from the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::dumpHeaders","p":"Illuminate/Testing/TestResponse.html#method_dumpHeaders","d":"<p>Dump the headers from the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::dumpSession","p":"Illuminate/Testing/TestResponse.html#method_dumpSession","d":"<p>Dump the session from the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::streamedContent","p":"Illuminate/Testing/TestResponse.html#method_streamedContent","d":"<p>Get the streamed content from the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::withExceptions","p":"Illuminate/Testing/TestResponse.html#method_withExceptions","d":"<p>Set the previous exceptions on the response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::transformNotSuccessfulException","p":"Illuminate/Testing/TestResponse.html#method_transformNotSuccessfulException","d":"<p>This method is called when test method did not execute successfully.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::appendExceptionToException","p":"Illuminate/Testing/TestResponse.html#method_appendExceptionToException","d":"<p>Append an exception to the message of another exception.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::appendErrorsToException","p":"Illuminate/Testing/TestResponse.html#method_appendErrorsToException","d":"<p>Append errors to an exception message.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::appendMessageToException","p":"Illuminate/Testing/TestResponse.html#method_appendMessageToException","d":"<p>Append a message to an exception.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::__get","p":"Illuminate/Testing/TestResponse.html#method___get","d":"<p>Dynamically access base response parameters.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::__isset","p":"Illuminate/Testing/TestResponse.html#method___isset","d":"<p>Proxy isset() checks to the underlying base response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::offsetExists","p":"Illuminate/Testing/TestResponse.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::offsetGet","p":"Illuminate/Testing/TestResponse.html#method_offsetGet","d":"<p>Get the value for a given offset.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::offsetSet","p":"Illuminate/Testing/TestResponse.html#method_offsetSet","d":"<p>Set the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::offsetUnset","p":"Illuminate/Testing/TestResponse.html#method_offsetUnset","d":"<p>Unset the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestResponse::__call","p":"Illuminate/Testing/TestResponse.html#method___call","d":"<p>Handle dynamic calls into macros or pass missing methods to the base response.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::__construct","p":"Illuminate/Testing/TestView.html#method___construct","d":"<p>Create a new test view instance.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertViewHas","p":"Illuminate/Testing/TestView.html#method_assertViewHas","d":"<p>Assert that the response view has a given piece of bound data.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertViewHasAll","p":"Illuminate/Testing/TestView.html#method_assertViewHasAll","d":"<p>Assert that the response view has a given list of bound data.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertViewMissing","p":"Illuminate/Testing/TestView.html#method_assertViewMissing","d":"<p>Assert that the response view is missing a piece of bound data.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertSee","p":"Illuminate/Testing/TestView.html#method_assertSee","d":"<p>Assert that the given string is contained within the view.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertSeeInOrder","p":"Illuminate/Testing/TestView.html#method_assertSeeInOrder","d":"<p>Assert that the given strings are contained in order within the view.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertSeeText","p":"Illuminate/Testing/TestView.html#method_assertSeeText","d":"<p>Assert that the given string is contained within the view text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertSeeTextInOrder","p":"Illuminate/Testing/TestView.html#method_assertSeeTextInOrder","d":"<p>Assert that the given strings are contained in order within the view text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertDontSee","p":"Illuminate/Testing/TestView.html#method_assertDontSee","d":"<p>Assert that the given string is not contained within the view.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::assertDontSeeText","p":"Illuminate/Testing/TestView.html#method_assertDontSeeText","d":"<p>Assert that the given string is not contained within the view text.</p>"},{"t":"M","n":"Illuminate\\Testing\\TestView::__toString","p":"Illuminate/Testing/TestView.html#method___toString","d":"<p>Get the string contents of the rendered view.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::load","p":"Illuminate/Translation/ArrayLoader.html#method_load","d":"<p>Load the messages for the given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::addNamespace","p":"Illuminate/Translation/ArrayLoader.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::addJsonPath","p":"Illuminate/Translation/ArrayLoader.html#method_addJsonPath","d":"<p>Add a new JSON path to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::addMessages","p":"Illuminate/Translation/ArrayLoader.html#method_addMessages","d":"<p>Add messages to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\ArrayLoader::namespaces","p":"Illuminate/Translation/ArrayLoader.html#method_namespaces","d":"<p>Get an array of all the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::__construct","p":"Illuminate/Translation/FileLoader.html#method___construct","d":"<p>Create a new file loader instance.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::load","p":"Illuminate/Translation/FileLoader.html#method_load","d":"<p>Load the messages for the given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::loadNamespaced","p":"Illuminate/Translation/FileLoader.html#method_loadNamespaced","d":"<p>Load a namespaced translation group.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::loadNamespaceOverrides","p":"Illuminate/Translation/FileLoader.html#method_loadNamespaceOverrides","d":"<p>Load a local namespaced translation group for overrides.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::loadPaths","p":"Illuminate/Translation/FileLoader.html#method_loadPaths","d":"<p>Load a locale from a given path.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::loadJsonPaths","p":"Illuminate/Translation/FileLoader.html#method_loadJsonPaths","d":"<p>Load a locale from the given JSON file path.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::addNamespace","p":"Illuminate/Translation/FileLoader.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::namespaces","p":"Illuminate/Translation/FileLoader.html#method_namespaces","d":"<p>Get an array of all the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::addJsonPath","p":"Illuminate/Translation/FileLoader.html#method_addJsonPath","d":"<p>Add a new JSON path to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\FileLoader::jsonPaths","p":"Illuminate/Translation/FileLoader.html#method_jsonPaths","d":"<p>Get an array of all the registered paths to JSON translation files.</p>"},{"t":"M","n":"Illuminate\\Translation\\MessageSelector::choose","p":"Illuminate/Translation/MessageSelector.html#method_choose","d":"<p>Select a proper translation string based on the given number.</p>"},{"t":"M","n":"Illuminate\\Translation\\MessageSelector::getPluralIndex","p":"Illuminate/Translation/MessageSelector.html#method_getPluralIndex","d":"<p>Get the index to use for pluralization.</p>"},{"t":"M","n":"Illuminate\\Translation\\PotentiallyTranslatedString::__construct","p":"Illuminate/Translation/PotentiallyTranslatedString.html#method___construct","d":"<p>Create a new potentially translated string.</p>"},{"t":"M","n":"Illuminate\\Translation\\PotentiallyTranslatedString::translate","p":"Illuminate/Translation/PotentiallyTranslatedString.html#method_translate","d":"<p>Translate the string.</p>"},{"t":"M","n":"Illuminate\\Translation\\PotentiallyTranslatedString::translateChoice","p":"Illuminate/Translation/PotentiallyTranslatedString.html#method_translateChoice","d":"<p>Translates the string based on a count.</p>"},{"t":"M","n":"Illuminate\\Translation\\PotentiallyTranslatedString::original","p":"Illuminate/Translation/PotentiallyTranslatedString.html#method_original","d":"<p>Get the original string.</p>"},{"t":"M","n":"Illuminate\\Translation\\PotentiallyTranslatedString::__toString","p":"Illuminate/Translation/PotentiallyTranslatedString.html#method___toString","d":"<p>Get the potentially translated string.</p>"},{"t":"M","n":"Illuminate\\Translation\\PotentiallyTranslatedString::toString","p":"Illuminate/Translation/PotentiallyTranslatedString.html#method_toString","d":"<p>Get the potentially translated string.</p>"},{"t":"M","n":"Illuminate\\Translation\\TranslationServiceProvider::register","p":"Illuminate/Translation/TranslationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Translation\\TranslationServiceProvider::registerLoader","p":"Illuminate/Translation/TranslationServiceProvider.html#method_registerLoader","d":"<p>Register the translation line loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\TranslationServiceProvider::provides","p":"Illuminate/Translation/TranslationServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::__construct","p":"Illuminate/Translation/Translator.html#method___construct","d":"<p>Create a new translator instance.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::hasForLocale","p":"Illuminate/Translation/Translator.html#method_hasForLocale","d":"<p>Determine if a translation exists for a given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::has","p":"Illuminate/Translation/Translator.html#method_has","d":"<p>Determine if a translation exists.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::get","p":"Illuminate/Translation/Translator.html#method_get","d":"<p>Get the translation for the given key.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::choice","p":"Illuminate/Translation/Translator.html#method_choice","d":"<p>Get a translation according to an integer value.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::localeForChoice","p":"Illuminate/Translation/Translator.html#method_localeForChoice","d":"<p>Get the proper locale for a choice operation.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getLine","p":"Illuminate/Translation/Translator.html#method_getLine","d":"<p>Retrieve a language line out the loaded array.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::makeReplacements","p":"Illuminate/Translation/Translator.html#method_makeReplacements","d":"<p>Make the place-holder replacements on a line.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::addLines","p":"Illuminate/Translation/Translator.html#method_addLines","d":"<p>Add translation lines to the given locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::load","p":"Illuminate/Translation/Translator.html#method_load","d":"<p>Load the specified language group.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::isLoaded","p":"Illuminate/Translation/Translator.html#method_isLoaded","d":"<p>Determine if the given group has been loaded.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::addNamespace","p":"Illuminate/Translation/Translator.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::addJsonPath","p":"Illuminate/Translation/Translator.html#method_addJsonPath","d":"<p>Add a new JSON path to the loader.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::parseKey","p":"Illuminate/Translation/Translator.html#method_parseKey","d":"<p>Parse a key into namespace, group, and item.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::localeArray","p":"Illuminate/Translation/Translator.html#method_localeArray","d":"<p>Get the array of locales to be checked.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::determineLocalesUsing","p":"Illuminate/Translation/Translator.html#method_determineLocalesUsing","d":"<p>Specify a callback that should be invoked to determined the applicable locale array.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getSelector","p":"Illuminate/Translation/Translator.html#method_getSelector","d":"<p>Get the message selector instance.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::setSelector","p":"Illuminate/Translation/Translator.html#method_setSelector","d":"<p>Set the message selector instance.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getLoader","p":"Illuminate/Translation/Translator.html#method_getLoader","d":"<p>Get the language line loader implementation.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::locale","p":"Illuminate/Translation/Translator.html#method_locale","d":"<p>Get the default locale being used.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getLocale","p":"Illuminate/Translation/Translator.html#method_getLocale","d":"<p>Get the default locale being used.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::setLocale","p":"Illuminate/Translation/Translator.html#method_setLocale","d":"<p>Set the default locale.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::getFallback","p":"Illuminate/Translation/Translator.html#method_getFallback","d":"<p>Get the fallback locale being used.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::setFallback","p":"Illuminate/Translation/Translator.html#method_setFallback","d":"<p>Set the fallback locale being used.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::setLoaded","p":"Illuminate/Translation/Translator.html#method_setLoaded","d":"<p>Set the loaded translation groups.</p>"},{"t":"M","n":"Illuminate\\Translation\\Translator::stringable","p":"Illuminate/Translation/Translator.html#method_stringable","d":"<p>Add a handler to be executed in order to format a given class to a string during translation replacements.</p>"},{"t":"M","n":"Illuminate\\Validation\\ClosureValidationRule::__construct","p":"Illuminate/Validation/ClosureValidationRule.html#method___construct","d":"<p>Create a new pending potentially translated string.</p>"},{"t":"M","n":"Illuminate\\Validation\\ClosureValidationRule::passes","p":"Illuminate/Validation/ClosureValidationRule.html#method_passes","d":"<p>Determine if the validation rule passes.</p>"},{"t":"M","n":"Illuminate\\Validation\\ClosureValidationRule::message","p":"Illuminate/Validation/ClosureValidationRule.html#method_message","d":"<p>Get the validation error messages.</p>"},{"t":"M","n":"Illuminate\\Validation\\ClosureValidationRule::setValidator","p":"Illuminate/Validation/ClosureValidationRule.html#method_setValidator","d":"<p>Set the current validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\ClosureValidationRule::pendingPotentiallyTranslatedString","p":"Illuminate/Validation/ClosureValidationRule.html#method_pendingPotentiallyTranslatedString","d":"<p>Create a pending potentially translated string.</p>"},{"t":"M","n":"Illuminate\\Validation\\ClosureValidationRule::__destruct","p":"Illuminate/Validation/ClosureValidationRule.html#method___destruct","d":"<p>Handle the object's destruction.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FilterEmailValidation::__construct","p":"Illuminate/Validation/Concerns/FilterEmailValidation.html#method___construct","d":"<p>Create a new validation instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FilterEmailValidation::unicode","p":"Illuminate/Validation/Concerns/FilterEmailValidation.html#method_unicode","d":"<p>Create a new instance which allows any unicode characters in local-part.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FilterEmailValidation::isValid","p":"Illuminate/Validation/Concerns/FilterEmailValidation.html#method_isValid","d":"<p>Returns true if the given email is valid.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FilterEmailValidation::getError","p":"Illuminate/Validation/Concerns/FilterEmailValidation.html#method_getError","d":"<p>Returns the validation error.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FilterEmailValidation::getWarnings","p":"Illuminate/Validation/Concerns/FilterEmailValidation.html#method_getWarnings","d":"<p>Returns the validation warnings.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getMessage","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getMessage","d":"<p>Get the validation message for an attribute and rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getInlineMessage","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getInlineMessage","d":"<p>Get the proper inline error message for standard and size rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getFromLocalArray","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getFromLocalArray","d":"<p>Get the inline message for a rule if it exists.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getCustomMessageFromTranslator","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getCustomMessageFromTranslator","d":"<p>Get the custom error message from the translator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getWildcardCustomMessages","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getWildcardCustomMessages","d":"<p>Check the given messages for a wildcard key.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getSizeMessage","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getSizeMessage","d":"<p>Get the proper error message for an attribute and size rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getAttributeType","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getAttributeType","d":"<p>Get the data type of the given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::makeReplacements","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_makeReplacements","d":"<p>Replace all error message place-holders with actual values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getDisplayableAttribute","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getDisplayableAttribute","d":"<p>Get the displayable name of the attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getAttributeFromTranslations","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getAttributeFromTranslations","d":"<p>Get the given attribute from the attribute translations.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::replaceAttributePlaceholder","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_replaceAttributePlaceholder","d":"<p>Replace the :attribute placeholder in the given message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::replaceIndexPlaceholder","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_replaceIndexPlaceholder","d":"<p>Replace the :index placeholder in the given message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::replacePositionPlaceholder","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_replacePositionPlaceholder","d":"<p>Replace the :position placeholder in the given message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::replaceIndexOrPositionPlaceholder","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_replaceIndexOrPositionPlaceholder","d":"<p>Replace the :index or :position placeholder in the given message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::numberToIndexOrPositionWord","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_numberToIndexOrPositionWord","d":"<p>Get the word for a index or position segment.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::replaceInputPlaceholder","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_replaceInputPlaceholder","d":"<p>Replace the :input placeholder in the given message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getDisplayableValue","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getDisplayableValue","d":"<p>Get the displayable name of the value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::getAttributeList","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_getAttributeList","d":"<p>Transform an array of attributes to their displayable form.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::callReplacer","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_callReplacer","d":"<p>Call a custom validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\FormatsMessages::callClassBasedReplacer","p":"Illuminate/Validation/Concerns/FormatsMessages.html#method_callClassBasedReplacer","d":"<p>Call a class based validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceAcceptedIf","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceAcceptedIf","d":"<p>Replace all place-holders for the accepted_if rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDeclinedIf","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDeclinedIf","d":"<p>Replace all place-holders for the declined_if rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceBetween","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceBetween","d":"<p>Replace all place-holders for the between rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDateFormat","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDateFormat","d":"<p>Replace all place-holders for the date_format rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDecimal","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDecimal","d":"<p>Replace all place-holders for the decimal rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDifferent","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDifferent","d":"<p>Replace all place-holders for the different rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDigits","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDigits","d":"<p>Replace all place-holders for the digits rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDigitsBetween","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDigitsBetween","d":"<p>Replace all place-holders for the digits (between) rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMin","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMin","d":"<p>Replace all place-holders for the min rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMinDigits","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMinDigits","d":"<p>Replace all place-holders for the min digits rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMax","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMax","d":"<p>Replace all place-holders for the max rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMaxDigits","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMaxDigits","d":"<p>Replace all place-holders for the max digits rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMissingIf","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMissingIf","d":"<p>Replace all place-holders for the missing_if rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMissingUnless","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMissingUnless","d":"<p>Replace all place-holders for the missing_unless rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMissingWith","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMissingWith","d":"<p>Replace all place-holders for the missing_with rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMissingWithAll","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMissingWithAll","d":"<p>Replace all place-holders for the missing_with_all rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMultipleOf","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMultipleOf","d":"<p>Replace all place-holders for the multiple_of rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceIn","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceIn","d":"<p>Replace all place-holders for the in rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceNotIn","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceNotIn","d":"<p>Replace all place-holders for the not_in rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceInArray","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceInArray","d":"<p>Replace all place-holders for the in_array rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredArrayKeys","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredArrayKeys","d":"<p>Replace all place-holders for the required_array_keys rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMimetypes","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMimetypes","d":"<p>Replace all place-holders for the mimetypes rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceMimes","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceMimes","d":"<p>Replace all place-holders for the mimes rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredWith","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredWith","d":"<p>Replace all place-holders for the required_with rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredWithAll","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredWithAll","d":"<p>Replace all place-holders for the required_with_all rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredWithout","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredWithout","d":"<p>Replace all place-holders for the required_without rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredWithoutAll","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredWithoutAll","d":"<p>Replace all place-holders for the required_without_all rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceSize","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceSize","d":"<p>Replace all place-holders for the size rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceGt","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceGt","d":"<p>Replace all place-holders for the gt rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceLt","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceLt","d":"<p>Replace all place-holders for the lt rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceGte","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceGte","d":"<p>Replace all place-holders for the gte rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceLte","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceLte","d":"<p>Replace all place-holders for the lte rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredIf","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredIf","d":"<p>Replace all place-holders for the required_if rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredIfAccepted","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredIfAccepted","d":"<p>Replace all place-holders for the required_if_accepted rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceRequiredUnless","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceRequiredUnless","d":"<p>Replace all place-holders for the required_unless rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceProhibitedIf","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceProhibitedIf","d":"<p>Replace all place-holders for the prohibited_if rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceProhibitedUnless","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceProhibitedUnless","d":"<p>Replace all place-holders for the prohibited_unless rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceProhibits","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceProhibits","d":"<p>Replace all place-holders for the prohibited_with rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceSame","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceSame","d":"<p>Replace all place-holders for the same rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceBefore","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceBefore","d":"<p>Replace all place-holders for the before rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceBeforeOrEqual","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceBeforeOrEqual","d":"<p>Replace all place-holders for the before_or_equal rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceAfter","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceAfter","d":"<p>Replace all place-holders for the after rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceAfterOrEqual","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceAfterOrEqual","d":"<p>Replace all place-holders for the after_or_equal rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDateEquals","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDateEquals","d":"<p>Replace all place-holders for the date_equals rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDimensions","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDimensions","d":"<p>Replace all place-holders for the dimensions rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceEndsWith","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceEndsWith","d":"<p>Replace all place-holders for the ends_with rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDoesntEndWith","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDoesntEndWith","d":"<p>Replace all place-holders for the doesnt_end_with rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceStartsWith","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceStartsWith","d":"<p>Replace all place-holders for the starts_with rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ReplacesAttributes::replaceDoesntStartWith","p":"Illuminate/Validation/Concerns/ReplacesAttributes.html#method_replaceDoesntStartWith","d":"<p>Replace all place-holders for the doesnt_start_with rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAccepted","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAccepted","d":"<p>Validate that an attribute was &quot;accepted&quot;.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAcceptedIf","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAcceptedIf","d":"<p>Validate that an attribute was &quot;accepted&quot; when another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDeclined","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDeclined","d":"<p>Validate that an attribute was &quot;declined&quot;.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDeclinedIf","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDeclinedIf","d":"<p>Validate that an attribute was &quot;declined&quot; when another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateActiveUrl","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateActiveUrl","d":"<p>Validate that an attribute is an active URL.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDnsRecords","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDnsRecords","d":"<p>Get the DNS records for the given hostname.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAscii","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAscii","d":"<p>Validate that an attribute is 7 bit ASCII.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBail","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBail","d":"<p>&quot;Break&quot; on first validation fail.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBefore","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBefore","d":"<p>Validate the date is before a given date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBeforeOrEqual","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBeforeOrEqual","d":"<p>Validate the date is before or equal a given date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAfter","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAfter","d":"<p>Validate the date is after a given date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAfterOrEqual","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAfterOrEqual","d":"<p>Validate the date is equal or after a given date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::compareDates","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_compareDates","d":"<p>Compare a given date against another using an operator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDateFormat","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDateFormat","d":"<p>Get the date format for an attribute if it has one.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDateTimestamp","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDateTimestamp","d":"<p>Get the date timestamp.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::checkDateTimeOrder","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_checkDateTimeOrder","d":"<p>Given two date/time strings, check that one is after the other.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDateTimeWithOptionalFormat","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDateTimeWithOptionalFormat","d":"<p>Get a DateTime instance from a string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDateTime","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDateTime","d":"<p>Get a DateTime instance from a string with no format.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAlpha","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAlpha","d":"<p>Validate that an attribute contains only alphabetic characters.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAlphaDash","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAlphaDash","d":"<p>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateAlphaNum","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateAlphaNum","d":"<p>Validate that an attribute contains only alpha-numeric characters.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateArray","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateArray","d":"<p>Validate that an attribute is an array.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredArrayKeys","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredArrayKeys","d":"<p>Validate that an array has all of the given keys.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBetween","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBetween","d":"<p>Validate the size of an attribute is between a set of values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateBoolean","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateBoolean","d":"<p>Validate that an attribute is a boolean.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateConfirmed","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateConfirmed","d":"<p>Validate that an attribute has a matching confirmation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateCurrentPassword","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateCurrentPassword","d":"<p>Validate that the password of the currently authenticated user matches the given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDate","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDate","d":"<p>Validate that an attribute is a valid date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDateFormat","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDateFormat","d":"<p>Validate that an attribute matches a date format.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDateEquals","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDateEquals","d":"<p>Validate that an attribute is equal to another date.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDecimal","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDecimal","d":"<p>Validate that an attribute has a given number of decimal places.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDifferent","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDifferent","d":"<p>Validate that an attribute is different from another attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDigits","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDigits","d":"<p>Validate that an attribute has a given number of digits.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDigitsBetween","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDigitsBetween","d":"<p>Validate that an attribute is between a given number of digits.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDimensions","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDimensions","d":"<p>Validate the dimensions of an image matches the given values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::failsBasicDimensionChecks","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_failsBasicDimensionChecks","d":"<p>Test if the given width and height fail any conditions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::failsRatioCheck","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_failsRatioCheck","d":"<p>Determine if the given parameters fail a dimension ratio check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDistinct","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDistinct","d":"<p>Validate an attribute is unique among other values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getDistinctValues","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getDistinctValues","d":"<p>Get the values to distinct between.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::extractDistinctValues","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_extractDistinctValues","d":"<p>Extract the distinct values from the data.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateEmail","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateEmail","d":"<p>Validate that an attribute is a valid e-mail address.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateExists","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateExists","d":"<p>Validate the existence of an attribute value in a database table.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getExistCount","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getExistCount","d":"<p>Get the number of records that exist in storage.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateUnique","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateUnique","d":"<p>Validate the uniqueness of an attribute value on a given database table.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getUniqueIds","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getUniqueIds","d":"<p>Get the excluded ID column and value for the unique rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::prepareUniqueId","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_prepareUniqueId","d":"<p>Prepare the given ID for querying.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getUniqueExtra","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getUniqueExtra","d":"<p>Get the extra conditions for a unique rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::parseTable","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_parseTable","d":"<p>Parse the connection / table for the unique / exists rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getQueryColumn","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getQueryColumn","d":"<p>Get the column name for an exists / unique query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::guessColumnForQuery","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_guessColumnForQuery","d":"<p>Guess the database column from the given attribute name.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getExtraConditions","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getExtraConditions","d":"<p>Get the extra conditions for a unique / exists rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateFile","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateFile","d":"<p>Validate the given value is a valid file.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateFilled","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateFilled","d":"<p>Validate the given attribute is filled if it is present.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateGt","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateGt","d":"<p>Validate that an attribute is greater than another attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateLt","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateLt","d":"<p>Validate that an attribute is less than another attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateGte","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateGte","d":"<p>Validate that an attribute is greater than or equal another attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateLte","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateLte","d":"<p>Validate that an attribute is less than or equal another attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateLowercase","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateLowercase","d":"<p>Validate that an attribute is lowercase.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateUppercase","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateUppercase","d":"<p>Validate that an attribute is uppercase.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateImage","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateImage","d":"<p>Validate the MIME type of a file is an image MIME type.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateIn","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateIn","d":"<p>Validate an attribute is contained within a list of values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateInArray","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateInArray","d":"<p>Validate that the values of an attribute are in another attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateInteger","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateInteger","d":"<p>Validate that an attribute is an integer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateIp","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateIp","d":"<p>Validate that an attribute is a valid IP.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateIpv4","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateIpv4","d":"<p>Validate that an attribute is a valid IPv4.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateIpv6","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateIpv6","d":"<p>Validate that an attribute is a valid IPv6.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMacAddress","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMacAddress","d":"<p>Validate that an attribute is a valid MAC address.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateJson","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateJson","d":"<p>Validate the attribute is a valid JSON string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMax","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMax","d":"<p>Validate the size of an attribute is less than a maximum value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMaxDigits","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMaxDigits","d":"<p>Validate that an attribute has a maximum number of digits.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMimes","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMimes","d":"<p>Validate the guessed extension of a file upload is in a set of file extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMimetypes","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMimetypes","d":"<p>Validate the MIME type of a file upload attribute is in a set of MIME types.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::shouldBlockPhpUpload","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_shouldBlockPhpUpload","d":"<p>Check if PHP uploads are explicitly allowed.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMin","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMin","d":"<p>Validate the size of an attribute is greater than a minimum value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMinDigits","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMinDigits","d":"<p>Validate that an attribute has a minimum number of digits.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMissing","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMissing","d":"<p>Validate that an attribute is missing.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMissingIf","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMissingIf","d":"<p>Validate that an attribute is missing when another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMissingUnless","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMissingUnless","d":"<p>Validate that an attribute is missing unless another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMissingWith","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMissingWith","d":"<p>Validate that an attribute is missing when any given attribute is present.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMissingWithAll","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMissingWithAll","d":"<p>Validate that an attribute is missing when all given attributes are present.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateMultipleOf","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateMultipleOf","d":"<p>Validate the value of an attribute is a multiple of a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateNullable","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateNullable","d":"<p>&quot;Indicate&quot; validation should pass if value is null.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateNotIn","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateNotIn","d":"<p>Validate an attribute is not contained within a list of values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateNumeric","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateNumeric","d":"<p>Validate that an attribute is numeric.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validatePresent","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validatePresent","d":"<p>Validate that an attribute exists even if not filled.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRegex","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRegex","d":"<p>Validate that an attribute passes a regular expression check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateNotRegex","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateNotRegex","d":"<p>Validate that an attribute does not pass a regular expression check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequired","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequired","d":"<p>Validate that a required attribute exists.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredIf","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredIf","d":"<p>Validate that an attribute exists when another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredIfAccepted","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredIfAccepted","d":"<p>Validate that an attribute exists when another attribute was &quot;accepted&quot;.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateProhibited","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateProhibited","d":"<p>Validate that an attribute does not exist or is an empty string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateProhibitedIf","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateProhibitedIf","d":"<p>Validate that an attribute does not exist when another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateProhibitedUnless","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateProhibitedUnless","d":"<p>Validate that an attribute does not exist unless another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateProhibits","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateProhibits","d":"<p>Validate that other attributes do not exist when this attribute exists.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateExclude","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateExclude","d":"<p>Indicate that an attribute is excluded.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateExcludeIf","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateExcludeIf","d":"<p>Indicate that an attribute should be excluded when another attribute has a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateExcludeUnless","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateExcludeUnless","d":"<p>Indicate that an attribute should be excluded when another attribute does not have a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredUnless","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredUnless","d":"<p>Validate that an attribute exists when another attribute does not have a given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateExcludeWith","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateExcludeWith","d":"<p>Indicate that an attribute should be excluded when another attribute presents.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateExcludeWithout","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateExcludeWithout","d":"<p>Indicate that an attribute should be excluded when another attribute is missing.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::parseDependentRuleParameters","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_parseDependentRuleParameters","d":"<p>Prepare the values and the other value for validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::shouldConvertToBoolean","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_shouldConvertToBoolean","d":"<p>Check if parameter should be converted to boolean.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::convertValuesToBoolean","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_convertValuesToBoolean","d":"<p>Convert the given values to boolean if they are string &quot;true&quot; / &quot;false&quot;.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::convertValuesToNull","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_convertValuesToNull","d":"<p>Convert the given values to null if they are string &quot;null&quot;.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredWith","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredWith","d":"<p>Validate that an attribute exists when any other attribute exists.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredWithAll","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredWithAll","d":"<p>Validate that an attribute exists when all other attributes exist.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredWithout","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredWithout","d":"<p>Validate that an attribute exists when another attribute does not.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateRequiredWithoutAll","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateRequiredWithoutAll","d":"<p>Validate that an attribute exists when all other attributes do not.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::anyFailingRequired","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_anyFailingRequired","d":"<p>Determine if any of the given attributes fail the required test.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::allFailingRequired","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_allFailingRequired","d":"<p>Determine if all of the given attributes fail the required test.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateSame","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateSame","d":"<p>Validate that two attributes match.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateSize","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateSize","d":"<p>Validate the size of an attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateSometimes","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateSometimes","d":"<p>&quot;Validate&quot; optional attributes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateStartsWith","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateStartsWith","d":"<p>Validate the attribute starts with a given substring.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDoesntStartWith","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDoesntStartWith","d":"<p>Validate the attribute does not start with a given substring.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateEndsWith","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateEndsWith","d":"<p>Validate the attribute ends with a given substring.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateDoesntEndWith","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateDoesntEndWith","d":"<p>Validate the attribute does not end with a given substring.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateString","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateString","d":"<p>Validate that an attribute is a string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateTimezone","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateTimezone","d":"<p>Validate that an attribute is a valid timezone.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateUrl","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateUrl","d":"<p>Validate that an attribute is a valid URL.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateUlid","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateUlid","d":"<p>Validate that an attribute is a valid ULID.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::validateUuid","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_validateUuid","d":"<p>Validate that an attribute is a valid UUID.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::getSize","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_getSize","d":"<p>Get the size of an attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::isValidFileInstance","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_isValidFileInstance","d":"<p>Check that the given value is a valid file instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::compare","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_compare","d":"<p>Determine if a comparison passes between the given values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::parseNamedParameters","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_parseNamedParameters","d":"<p>Parse named parameters to $key =&gt; $value items.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::requireParameterCount","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_requireParameterCount","d":"<p>Require a certain number of parameters to be present.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::isSameType","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_isSameType","d":"<p>Check if the parameters are of the same type.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::shouldBeNumeric","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_shouldBeNumeric","d":"<p>Adds the existing rule to the numericRules array if the attribute's value is numeric.</p>"},{"t":"M","n":"Illuminate\\Validation\\Concerns\\ValidatesAttributes::trim","p":"Illuminate/Validation/Concerns/ValidatesAttributes.html#method_trim","d":"<p>Trim the value if it is a string.</p>"},{"t":"M","n":"Illuminate\\Validation\\ConditionalRules::__construct","p":"Illuminate/Validation/ConditionalRules.html#method___construct","d":"<p>Create a new conditional rules instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\ConditionalRules::passes","p":"Illuminate/Validation/ConditionalRules.html#method_passes","d":"<p>Determine if the conditional rules should be added.</p>"},{"t":"M","n":"Illuminate\\Validation\\ConditionalRules::rules","p":"Illuminate/Validation/ConditionalRules.html#method_rules","d":"<p>Get the rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\ConditionalRules::defaultRules","p":"Illuminate/Validation/ConditionalRules.html#method_defaultRules","d":"<p>Get the default rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::__construct","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method___construct","d":"<p>Create a new database presence verifier.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::getCount","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_getCount","d":"<p>Count the number of objects in a collection having the given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::getMultiCount","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_getMultiCount","d":"<p>Count the number of objects in a collection with the given values.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::addConditions","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_addConditions","d":"<p>Add the given conditions to the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::addWhere","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_addWhere","d":"<p>Add a &quot;where&quot; clause to the given query.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::table","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_table","d":"<p>Get a query builder for the given table.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifier::setConnection","p":"Illuminate/Validation/DatabasePresenceVerifier.html#method_setConnection","d":"<p>Set the connection to be used.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifierInterface::setConnection","p":"Illuminate/Validation/DatabasePresenceVerifierInterface.html#method_setConnection","d":"<p>Set the connection to be used.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::__construct","p":"Illuminate/Validation/Factory.html#method___construct","d":"<p>Create a new Validator factory instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::make","p":"Illuminate/Validation/Factory.html#method_make","d":"<p>Create a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::validate","p":"Illuminate/Validation/Factory.html#method_validate","d":"<p>Validate the given data against the provided rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::resolve","p":"Illuminate/Validation/Factory.html#method_resolve","d":"<p>Resolve a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::addExtensions","p":"Illuminate/Validation/Factory.html#method_addExtensions","d":"<p>Add the extensions to a validator instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::extend","p":"Illuminate/Validation/Factory.html#method_extend","d":"<p>Register a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::extendImplicit","p":"Illuminate/Validation/Factory.html#method_extendImplicit","d":"<p>Register a custom implicit validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::extendDependent","p":"Illuminate/Validation/Factory.html#method_extendDependent","d":"<p>Register a custom dependent validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::replacer","p":"Illuminate/Validation/Factory.html#method_replacer","d":"<p>Register a custom validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::includeUnvalidatedArrayKeys","p":"Illuminate/Validation/Factory.html#method_includeUnvalidatedArrayKeys","d":"<p>Indicate that unvalidated array keys should be included in validated data when the parent array is validated.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::excludeUnvalidatedArrayKeys","p":"Illuminate/Validation/Factory.html#method_excludeUnvalidatedArrayKeys","d":"<p>Indicate that unvalidated array keys should be excluded from the validated data, even if the parent array was validated.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::resolver","p":"Illuminate/Validation/Factory.html#method_resolver","d":"<p>Set the Validator instance resolver.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::getTranslator","p":"Illuminate/Validation/Factory.html#method_getTranslator","d":"<p>Get the Translator implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::getPresenceVerifier","p":"Illuminate/Validation/Factory.html#method_getPresenceVerifier","d":"<p>Get the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::setPresenceVerifier","p":"Illuminate/Validation/Factory.html#method_setPresenceVerifier","d":"<p>Set the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::getContainer","p":"Illuminate/Validation/Factory.html#method_getContainer","d":"<p>Get the container instance used by the validation factory.</p>"},{"t":"M","n":"Illuminate\\Validation\\Factory::setContainer","p":"Illuminate/Validation/Factory.html#method_setContainer","d":"<p>Set the container instance used by the validation factory.</p>"},{"t":"M","n":"Illuminate\\Validation\\InvokableValidationRule::__construct","p":"Illuminate/Validation/InvokableValidationRule.html#method___construct","d":"<p>Create a new explicit Invokable validation rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\InvokableValidationRule::make","p":"Illuminate/Validation/InvokableValidationRule.html#method_make","d":"<p>Create a new implicit or explicit Invokable validation rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\NestedRules::__construct","p":"Illuminate/Validation/NestedRules.html#method___construct","d":"<p>Create a new nested rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\NestedRules::compile","p":"Illuminate/Validation/NestedRules.html#method_compile","d":"<p>Compile the callback into an array of rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\NotPwnedVerifier::__construct","p":"Illuminate/Validation/NotPwnedVerifier.html#method___construct","d":"<p>Create a new uncompromised verifier.</p>"},{"t":"M","n":"Illuminate\\Validation\\NotPwnedVerifier::verify","p":"Illuminate/Validation/NotPwnedVerifier.html#method_verify","d":"<p>Verify that the given data has not been compromised in public breaches.</p>"},{"t":"M","n":"Illuminate\\Validation\\NotPwnedVerifier::getHash","p":"Illuminate/Validation/NotPwnedVerifier.html#method_getHash","d":"<p>Get the hash and its first 5 chars.</p>"},{"t":"M","n":"Illuminate\\Validation\\NotPwnedVerifier::search","p":"Illuminate/Validation/NotPwnedVerifier.html#method_search","d":"<p>Search by the given hash prefix and returns all occurrences of leaked passwords.</p>"},{"t":"M","n":"Illuminate\\Validation\\PresenceVerifierInterface::getCount","p":"Illuminate/Validation/PresenceVerifierInterface.html#method_getCount","d":"<p>Count the number of objects in a collection having the given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\PresenceVerifierInterface::getMultiCount","p":"Illuminate/Validation/PresenceVerifierInterface.html#method_getMultiCount","d":"<p>Count the number of objects in a collection with the given values.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::when","p":"Illuminate/Validation/Rule.html#method_when","d":"<p>Create a new conditional rule set.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::forEach","p":"Illuminate/Validation/Rule.html#method_forEach","d":"<p>Create a new nested rule set.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::unique","p":"Illuminate/Validation/Rule.html#method_unique","d":"<p>Get a unique constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::exists","p":"Illuminate/Validation/Rule.html#method_exists","d":"<p>Get an exists constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::in","p":"Illuminate/Validation/Rule.html#method_in","d":"<p>Get an in constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::notIn","p":"Illuminate/Validation/Rule.html#method_notIn","d":"<p>Get a not_in constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::requiredIf","p":"Illuminate/Validation/Rule.html#method_requiredIf","d":"<p>Get a required_if constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::excludeIf","p":"Illuminate/Validation/Rule.html#method_excludeIf","d":"<p>Get a exclude_if constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::prohibitedIf","p":"Illuminate/Validation/Rule.html#method_prohibitedIf","d":"<p>Get a prohibited_if constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::enum","p":"Illuminate/Validation/Rule.html#method_enum","d":"<p>Get an enum constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::file","p":"Illuminate/Validation/Rule.html#method_file","d":"<p>Get a file constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::imageFile","p":"Illuminate/Validation/Rule.html#method_imageFile","d":"<p>Get an image file constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rule::dimensions","p":"Illuminate/Validation/Rule.html#method_dimensions","d":"<p>Get a dimensions constraint builder instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::__construct","p":"Illuminate/Validation/Rules/DatabaseRule.html#method___construct","d":"<p>Create a new rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::resolveTableName","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_resolveTableName","d":"<p>Resolves the name of the table from the given string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::where","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_where","d":"<p>Set a &quot;where&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::whereNot","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_whereNot","d":"<p>Set a &quot;where not&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::whereNull","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_whereNull","d":"<p>Set a &quot;where null&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::whereNotNull","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_whereNotNull","d":"<p>Set a &quot;where not null&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::whereIn","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_whereIn","d":"<p>Set a &quot;where in&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::whereNotIn","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_whereNotIn","d":"<p>Set a &quot;where not in&quot; constraint on the query.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::withoutTrashed","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_withoutTrashed","d":"<p>Ignore soft deleted models during the existence check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::onlyTrashed","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_onlyTrashed","d":"<p>Only include soft deleted models during the existence check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::using","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_using","d":"<p>Register a custom query callback.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::queryCallbacks","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_queryCallbacks","d":"<p>Get the custom query callbacks for the rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\DatabaseRule::formatWheres","p":"Illuminate/Validation/Rules/DatabaseRule.html#method_formatWheres","d":"<p>Format the where clauses.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::__construct","p":"Illuminate/Validation/Rules/Dimensions.html#method___construct","d":"<p>Create a new dimensions rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::width","p":"Illuminate/Validation/Rules/Dimensions.html#method_width","d":"<p>Set the &quot;width&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::height","p":"Illuminate/Validation/Rules/Dimensions.html#method_height","d":"<p>Set the &quot;height&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::minWidth","p":"Illuminate/Validation/Rules/Dimensions.html#method_minWidth","d":"<p>Set the &quot;min width&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::minHeight","p":"Illuminate/Validation/Rules/Dimensions.html#method_minHeight","d":"<p>Set the &quot;min height&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::maxWidth","p":"Illuminate/Validation/Rules/Dimensions.html#method_maxWidth","d":"<p>Set the &quot;max width&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::maxHeight","p":"Illuminate/Validation/Rules/Dimensions.html#method_maxHeight","d":"<p>Set the &quot;max height&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::ratio","p":"Illuminate/Validation/Rules/Dimensions.html#method_ratio","d":"<p>Set the &quot;ratio&quot; constraint.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Dimensions::__toString","p":"Illuminate/Validation/Rules/Dimensions.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Enum::__construct","p":"Illuminate/Validation/Rules/Enum.html#method___construct","d":"<p>Create a new rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Enum::passes","p":"Illuminate/Validation/Rules/Enum.html#method_passes","d":"<p>Determine if the validation rule passes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Enum::message","p":"Illuminate/Validation/Rules/Enum.html#method_message","d":"<p>Get the validation error message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\ExcludeIf::__construct","p":"Illuminate/Validation/Rules/ExcludeIf.html#method___construct","d":"<p>Create a new exclude validation rule based on a condition.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\ExcludeIf::__toString","p":"Illuminate/Validation/Rules/ExcludeIf.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Exists::__toString","p":"Illuminate/Validation/Rules/Exists.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::defaults","p":"Illuminate/Validation/Rules/File.html#method_defaults","d":"<p>Set the default callback to be used for determining the file default rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::default","p":"Illuminate/Validation/Rules/File.html#method_default","d":"<p>Get the default configuration of the file rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::image","p":"Illuminate/Validation/Rules/File.html#method_image","d":"<p>Limit the uploaded file to only image types.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::types","p":"Illuminate/Validation/Rules/File.html#method_types","d":"<p>Limit the uploaded file to the given MIME types or file extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::size","p":"Illuminate/Validation/Rules/File.html#method_size","d":"<p>Indicate that the uploaded file should be exactly a certain size in kilobytes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::between","p":"Illuminate/Validation/Rules/File.html#method_between","d":"<p>Indicate that the uploaded file should be between a minimum and maximum size in kilobytes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::min","p":"Illuminate/Validation/Rules/File.html#method_min","d":"<p>Indicate that the uploaded file should be no less than the given number of kilobytes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::max","p":"Illuminate/Validation/Rules/File.html#method_max","d":"<p>Indicate that the uploaded file should be no more than the given number of kilobytes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::rules","p":"Illuminate/Validation/Rules/File.html#method_rules","d":"<p>Specify additional validation rules that should be merged with the default rules during validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::passes","p":"Illuminate/Validation/Rules/File.html#method_passes","d":"<p>Determine if the validation rule passes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::buildValidationRules","p":"Illuminate/Validation/Rules/File.html#method_buildValidationRules","d":"<p>Build the array of underlying validation rules based on the current state.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::buildMimetypes","p":"Illuminate/Validation/Rules/File.html#method_buildMimetypes","d":"<p>Separate the given mimetypes from extensions and return an array of correct rules to validate against.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::fail","p":"Illuminate/Validation/Rules/File.html#method_fail","d":"<p>Adds the given failures, and return false.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::message","p":"Illuminate/Validation/Rules/File.html#method_message","d":"<p>Get the validation error message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::setValidator","p":"Illuminate/Validation/Rules/File.html#method_setValidator","d":"<p>Set the current validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\File::setData","p":"Illuminate/Validation/Rules/File.html#method_setData","d":"<p>Set the current data under validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\ImageFile::__construct","p":"Illuminate/Validation/Rules/ImageFile.html#method___construct","d":"<p>Create a new image file rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\ImageFile::dimensions","p":"Illuminate/Validation/Rules/ImageFile.html#method_dimensions","d":"<p>The dimension constraints for the uploaded file.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\In::__construct","p":"Illuminate/Validation/Rules/In.html#method___construct","d":"<p>Create a new in rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\In::__toString","p":"Illuminate/Validation/Rules/In.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\NotIn::__construct","p":"Illuminate/Validation/Rules/NotIn.html#method___construct","d":"<p>Create a new &quot;not in&quot; rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\NotIn::__toString","p":"Illuminate/Validation/Rules/NotIn.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::__construct","p":"Illuminate/Validation/Rules/Password.html#method___construct","d":"<p>Create a new rule instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::defaults","p":"Illuminate/Validation/Rules/Password.html#method_defaults","d":"<p>Set the default callback to be used for determining a password's default rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::default","p":"Illuminate/Validation/Rules/Password.html#method_default","d":"<p>Get the default configuration of the password rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::required","p":"Illuminate/Validation/Rules/Password.html#method_required","d":"<p>Get the default configuration of the password rule and mark the field as required.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::sometimes","p":"Illuminate/Validation/Rules/Password.html#method_sometimes","d":"<p>Get the default configuration of the password rule and mark the field as sometimes being required.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::setValidator","p":"Illuminate/Validation/Rules/Password.html#method_setValidator","d":"<p>Set the performing validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::setData","p":"Illuminate/Validation/Rules/Password.html#method_setData","d":"<p>Set the data under validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::min","p":"Illuminate/Validation/Rules/Password.html#method_min","d":"<p>Sets the minimum size of the password.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::uncompromised","p":"Illuminate/Validation/Rules/Password.html#method_uncompromised","d":"<p>Ensures the password has not been compromised in data leaks.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::mixedCase","p":"Illuminate/Validation/Rules/Password.html#method_mixedCase","d":"<p>Makes the password require at least one uppercase and one lowercase letter.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::letters","p":"Illuminate/Validation/Rules/Password.html#method_letters","d":"<p>Makes the password require at least one letter.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::numbers","p":"Illuminate/Validation/Rules/Password.html#method_numbers","d":"<p>Makes the password require at least one number.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::symbols","p":"Illuminate/Validation/Rules/Password.html#method_symbols","d":"<p>Makes the password require at least one symbol.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::rules","p":"Illuminate/Validation/Rules/Password.html#method_rules","d":"<p>Specify additional validation rules that should be merged with the default rules during validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::passes","p":"Illuminate/Validation/Rules/Password.html#method_passes","d":"<p>Determine if the validation rule passes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::message","p":"Illuminate/Validation/Rules/Password.html#method_message","d":"<p>Get the validation error message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::getErrorMessage","p":"Illuminate/Validation/Rules/Password.html#method_getErrorMessage","d":"<p>Get the translated password error message.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Password::fail","p":"Illuminate/Validation/Rules/Password.html#method_fail","d":"<p>Adds the given failures, and return false.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\ProhibitedIf::__construct","p":"Illuminate/Validation/Rules/ProhibitedIf.html#method___construct","d":"<p>Create a new prohibited validation rule based on a condition.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\ProhibitedIf::__toString","p":"Illuminate/Validation/Rules/ProhibitedIf.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\RequiredIf::__construct","p":"Illuminate/Validation/Rules/RequiredIf.html#method___construct","d":"<p>Create a new required validation rule based on a condition.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\RequiredIf::__toString","p":"Illuminate/Validation/Rules/RequiredIf.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::ignore","p":"Illuminate/Validation/Rules/Unique.html#method_ignore","d":"<p>Ignore the given ID during the unique check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::ignoreModel","p":"Illuminate/Validation/Rules/Unique.html#method_ignoreModel","d":"<p>Ignore the given model during the unique check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Rules\\Unique::__toString","p":"Illuminate/Validation/Rules/Unique.html#method___toString","d":"<p>Convert the rule to a validation string.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::validateResolved","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_validateResolved","d":"<p>Validate the class instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::prepareForValidation","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_prepareForValidation","d":"<p>Prepare the data for validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::getValidatorInstance","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_getValidatorInstance","d":"<p>Get the validator instance for the request.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::passedValidation","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_passedValidation","d":"<p>Handle a passed validation attempt.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::failedValidation","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_failedValidation","d":"<p>Handle a failed validation attempt.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::passesAuthorization","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_passesAuthorization","d":"<p>Determine if the request passes the authorization check.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidatesWhenResolvedTrait::failedAuthorization","p":"Illuminate/Validation/ValidatesWhenResolvedTrait.html#method_failedAuthorization","d":"<p>Handle a failed authorization attempt.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::initializeAndGatherData","p":"Illuminate/Validation/ValidationData.html#method_initializeAndGatherData","d":"<p>Initialize and gather data for the given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::initializeAttributeOnData","p":"Illuminate/Validation/ValidationData.html#method_initializeAttributeOnData","d":"<p>Gather a copy of the attribute data filled with any missing attributes.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::extractValuesForWildcards","p":"Illuminate/Validation/ValidationData.html#method_extractValuesForWildcards","d":"<p>Get all of the exact attribute values for a given wildcard attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::extractDataFromPath","p":"Illuminate/Validation/ValidationData.html#method_extractDataFromPath","d":"<p>Extract data based on the given dot-notated path.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationData::getLeadingExplicitAttributePath","p":"Illuminate/Validation/ValidationData.html#method_getLeadingExplicitAttributePath","d":"<p>Get the explicit part of the attribute name.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::__construct","p":"Illuminate/Validation/ValidationException.html#method___construct","d":"<p>Create a new exception instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::withMessages","p":"Illuminate/Validation/ValidationException.html#method_withMessages","d":"<p>Create a new validation exception from a plain array of messages.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::summarize","p":"Illuminate/Validation/ValidationException.html#method_summarize","d":"<p>Create an error message summary from the validation errors.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::errors","p":"Illuminate/Validation/ValidationException.html#method_errors","d":"<p>Get all of the validation error messages.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::status","p":"Illuminate/Validation/ValidationException.html#method_status","d":"<p>Set the HTTP status code to be used for the response.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::errorBag","p":"Illuminate/Validation/ValidationException.html#method_errorBag","d":"<p>Set the error bag on the exception.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::redirectTo","p":"Illuminate/Validation/ValidationException.html#method_redirectTo","d":"<p>Set the URL to redirect to on a validation error.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationException::getResponse","p":"Illuminate/Validation/ValidationException.html#method_getResponse","d":"<p>Get the underlying response instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::__construct","p":"Illuminate/Validation/ValidationRuleParser.html#method___construct","d":"<p>Create a new validation rule parser.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::explode","p":"Illuminate/Validation/ValidationRuleParser.html#method_explode","d":"<p>Parse the human-friendly rules into a full rules array for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::explodeRules","p":"Illuminate/Validation/ValidationRuleParser.html#method_explodeRules","d":"<p>Explode the rules into an array of explicit rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::explodeExplicitRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_explodeExplicitRule","d":"<p>Explode the explicit rule into an array if necessary.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::prepareRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_prepareRule","d":"<p>Prepare the given rule for the Validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::explodeWildcardRules","p":"Illuminate/Validation/ValidationRuleParser.html#method_explodeWildcardRules","d":"<p>Define a set of rules that apply to each element in an array attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::mergeRules","p":"Illuminate/Validation/ValidationRuleParser.html#method_mergeRules","d":"<p>Merge additional rules into a given attribute(s).</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::mergeRulesForAttribute","p":"Illuminate/Validation/ValidationRuleParser.html#method_mergeRulesForAttribute","d":"<p>Merge additional rules into a given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::parse","p":"Illuminate/Validation/ValidationRuleParser.html#method_parse","d":"<p>Extract the rule name and parameters from a rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::parseArrayRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_parseArrayRule","d":"<p>Parse an array based rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::parseStringRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_parseStringRule","d":"<p>Parse a string based rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::parseParameters","p":"Illuminate/Validation/ValidationRuleParser.html#method_parseParameters","d":"<p>Parse a parameter list.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::ruleIsRegex","p":"Illuminate/Validation/ValidationRuleParser.html#method_ruleIsRegex","d":"<p>Determine if the rule is a regular expression.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::normalizeRule","p":"Illuminate/Validation/ValidationRuleParser.html#method_normalizeRule","d":"<p>Normalizes a rule so that we can accept short types.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationRuleParser::filterConditionalRules","p":"Illuminate/Validation/ValidationRuleParser.html#method_filterConditionalRules","d":"<p>Expand and conditional rules in the given array of rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::register","p":"Illuminate/Validation/ValidationServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::registerValidationFactory","p":"Illuminate/Validation/ValidationServiceProvider.html#method_registerValidationFactory","d":"<p>Register the validation factory.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::registerPresenceVerifier","p":"Illuminate/Validation/ValidationServiceProvider.html#method_registerPresenceVerifier","d":"<p>Register the database presence verifier.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::registerUncompromisedVerifier","p":"Illuminate/Validation/ValidationServiceProvider.html#method_registerUncompromisedVerifier","d":"<p>Register the uncompromised password verifier.</p>"},{"t":"M","n":"Illuminate\\Validation\\ValidationServiceProvider::provides","p":"Illuminate/Validation/ValidationServiceProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::__construct","p":"Illuminate/Validation/Validator.html#method___construct","d":"<p>Create a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::parseData","p":"Illuminate/Validation/Validator.html#method_parseData","d":"<p>Parse the data array, converting dots and asterisks.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::replacePlaceholders","p":"Illuminate/Validation/Validator.html#method_replacePlaceholders","d":"<p>Replace the placeholders used in data keys.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::replacePlaceholderInString","p":"Illuminate/Validation/Validator.html#method_replacePlaceholderInString","d":"<p>Replace the placeholders in the given string.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::after","p":"Illuminate/Validation/Validator.html#method_after","d":"<p>Add an after validation callback.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::passes","p":"Illuminate/Validation/Validator.html#method_passes","d":"<p>Determine if the data passes the validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::fails","p":"Illuminate/Validation/Validator.html#method_fails","d":"<p>Determine if the data fails the validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::shouldBeExcluded","p":"Illuminate/Validation/Validator.html#method_shouldBeExcluded","d":"<p>Determine if the attribute should be excluded.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::removeAttribute","p":"Illuminate/Validation/Validator.html#method_removeAttribute","d":"<p>Remove the given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::validate","p":"Illuminate/Validation/Validator.html#method_validate","d":"<p>Run the validator's rules against its data.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::validateWithBag","p":"Illuminate/Validation/Validator.html#method_validateWithBag","d":"<p>Run the validator's rules against its data.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::safe","p":"Illuminate/Validation/Validator.html#method_safe","d":"<p>Get a validated input container for the validated input.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::validated","p":"Illuminate/Validation/Validator.html#method_validated","d":"<p>Get the attributes and values that were validated.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::validateAttribute","p":"Illuminate/Validation/Validator.html#method_validateAttribute","d":"<p>Validate a given attribute against a rule.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::dependsOnOtherFields","p":"Illuminate/Validation/Validator.html#method_dependsOnOtherFields","d":"<p>Determine if the given rule depends on other fields.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getExplicitKeys","p":"Illuminate/Validation/Validator.html#method_getExplicitKeys","d":"<p>Get the explicit keys from an attribute flattened with dot notation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getPrimaryAttribute","p":"Illuminate/Validation/Validator.html#method_getPrimaryAttribute","d":"<p>Get the primary attribute name.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::replaceDotInParameters","p":"Illuminate/Validation/Validator.html#method_replaceDotInParameters","d":"<p>Replace each field parameter which has an escaped dot with the dot placeholder.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::replaceAsterisksInParameters","p":"Illuminate/Validation/Validator.html#method_replaceAsterisksInParameters","d":"<p>Replace each field parameter which has asterisks with the given keys.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::isValidatable","p":"Illuminate/Validation/Validator.html#method_isValidatable","d":"<p>Determine if the attribute is validatable.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::presentOrRuleIsImplicit","p":"Illuminate/Validation/Validator.html#method_presentOrRuleIsImplicit","d":"<p>Determine if the field is present, or the rule implies required.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::isImplicit","p":"Illuminate/Validation/Validator.html#method_isImplicit","d":"<p>Determine if a given rule implies the attribute is required.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::passesOptionalCheck","p":"Illuminate/Validation/Validator.html#method_passesOptionalCheck","d":"<p>Determine if the attribute passes any optional check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::isNotNullIfMarkedAsNullable","p":"Illuminate/Validation/Validator.html#method_isNotNullIfMarkedAsNullable","d":"<p>Determine if the attribute fails the nullable check.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::hasNotFailedPreviousRuleIfPresenceRule","p":"Illuminate/Validation/Validator.html#method_hasNotFailedPreviousRuleIfPresenceRule","d":"<p>Determine if it's a necessary presence validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::validateUsingCustomRule","p":"Illuminate/Validation/Validator.html#method_validateUsingCustomRule","d":"<p>Validate an attribute using a custom rule object.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::shouldStopValidating","p":"Illuminate/Validation/Validator.html#method_shouldStopValidating","d":"<p>Check if we should stop further validations on a given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addFailure","p":"Illuminate/Validation/Validator.html#method_addFailure","d":"<p>Add a failed rule and error message to the collection.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::excludeAttribute","p":"Illuminate/Validation/Validator.html#method_excludeAttribute","d":"<p>Add the given attribute to the list of excluded attributes.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::valid","p":"Illuminate/Validation/Validator.html#method_valid","d":"<p>Returns the data which was valid.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::invalid","p":"Illuminate/Validation/Validator.html#method_invalid","d":"<p>Returns the data which was invalid.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::attributesThatHaveMessages","p":"Illuminate/Validation/Validator.html#method_attributesThatHaveMessages","d":"<p>Generate an array of all attributes that have messages.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::failed","p":"Illuminate/Validation/Validator.html#method_failed","d":"<p>Get the failed validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::messages","p":"Illuminate/Validation/Validator.html#method_messages","d":"<p>Get the message container for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::errors","p":"Illuminate/Validation/Validator.html#method_errors","d":"<p>An alternative more semantic shortcut to the message container.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getMessageBag","p":"Illuminate/Validation/Validator.html#method_getMessageBag","d":"<p>Get the messages for the instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::hasRule","p":"Illuminate/Validation/Validator.html#method_hasRule","d":"<p>Determine if the given attribute has a rule in the given set.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getRule","p":"Illuminate/Validation/Validator.html#method_getRule","d":"<p>Get a rule and its parameters for a given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::attributes","p":"Illuminate/Validation/Validator.html#method_attributes","d":"<p>Get the data under validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getData","p":"Illuminate/Validation/Validator.html#method_getData","d":"<p>Get the data under validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setData","p":"Illuminate/Validation/Validator.html#method_setData","d":"<p>Set the data under validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getValue","p":"Illuminate/Validation/Validator.html#method_getValue","d":"<p>Get the value of a given attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getRules","p":"Illuminate/Validation/Validator.html#method_getRules","d":"<p>Get the validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getRulesWithoutPlaceholders","p":"Illuminate/Validation/Validator.html#method_getRulesWithoutPlaceholders","d":"<p>Get the validation rules with key placeholders removed.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setRules","p":"Illuminate/Validation/Validator.html#method_setRules","d":"<p>Set the validation rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addRules","p":"Illuminate/Validation/Validator.html#method_addRules","d":"<p>Parse the given rules and merge them into current rules.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::sometimes","p":"Illuminate/Validation/Validator.html#method_sometimes","d":"<p>Add conditions to a given field based on a Closure.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::stopOnFirstFailure","p":"Illuminate/Validation/Validator.html#method_stopOnFirstFailure","d":"<p>Instruct the validator to stop validating after the first rule failure.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addExtensions","p":"Illuminate/Validation/Validator.html#method_addExtensions","d":"<p>Register an array of custom validator extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addImplicitExtensions","p":"Illuminate/Validation/Validator.html#method_addImplicitExtensions","d":"<p>Register an array of custom implicit validator extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addDependentExtensions","p":"Illuminate/Validation/Validator.html#method_addDependentExtensions","d":"<p>Register an array of custom dependent validator extensions.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addExtension","p":"Illuminate/Validation/Validator.html#method_addExtension","d":"<p>Register a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addImplicitExtension","p":"Illuminate/Validation/Validator.html#method_addImplicitExtension","d":"<p>Register a custom implicit validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addDependentExtension","p":"Illuminate/Validation/Validator.html#method_addDependentExtension","d":"<p>Register a custom dependent validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addReplacers","p":"Illuminate/Validation/Validator.html#method_addReplacers","d":"<p>Register an array of custom validator message replacers.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addReplacer","p":"Illuminate/Validation/Validator.html#method_addReplacer","d":"<p>Register a custom validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setCustomMessages","p":"Illuminate/Validation/Validator.html#method_setCustomMessages","d":"<p>Set the custom messages for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setAttributeNames","p":"Illuminate/Validation/Validator.html#method_setAttributeNames","d":"<p>Set the custom attributes on the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addCustomAttributes","p":"Illuminate/Validation/Validator.html#method_addCustomAttributes","d":"<p>Add custom attributes to the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setImplicitAttributesFormatter","p":"Illuminate/Validation/Validator.html#method_setImplicitAttributesFormatter","d":"<p>Set the callback that used to format an implicit attribute.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setValueNames","p":"Illuminate/Validation/Validator.html#method_setValueNames","d":"<p>Set the custom values on the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::addCustomValues","p":"Illuminate/Validation/Validator.html#method_addCustomValues","d":"<p>Add the custom values for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setFallbackMessages","p":"Illuminate/Validation/Validator.html#method_setFallbackMessages","d":"<p>Set the fallback messages for the validator.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getPresenceVerifier","p":"Illuminate/Validation/Validator.html#method_getPresenceVerifier","d":"<p>Get the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setPresenceVerifier","p":"Illuminate/Validation/Validator.html#method_setPresenceVerifier","d":"<p>Set the Presence Verifier implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setException","p":"Illuminate/Validation/Validator.html#method_setException","d":"<p>Set the exception to throw upon failed validation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::getTranslator","p":"Illuminate/Validation/Validator.html#method_getTranslator","d":"<p>Get the Translator implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setTranslator","p":"Illuminate/Validation/Validator.html#method_setTranslator","d":"<p>Set the Translator implementation.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::setContainer","p":"Illuminate/Validation/Validator.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::callExtension","p":"Illuminate/Validation/Validator.html#method_callExtension","d":"<p>Call a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::callClassBasedExtension","p":"Illuminate/Validation/Validator.html#method_callClassBasedExtension","d":"<p>Call a class based validator extension.</p>"},{"t":"M","n":"Illuminate\\Validation\\Validator::__call","p":"Illuminate/Validation/Validator.html#method___call","d":"<p>Handle dynamic calls to class methods.</p>"},{"t":"M","n":"Illuminate\\View\\AnonymousComponent::__construct","p":"Illuminate/View/AnonymousComponent.html#method___construct","d":"<p>Create a new anonymous component instance.</p>"},{"t":"M","n":"Illuminate\\View\\AnonymousComponent::render","p":"Illuminate/View/AnonymousComponent.html#method_render","d":"<p>Get the view / view contents that represent the component.</p>"},{"t":"M","n":"Illuminate\\View\\AnonymousComponent::data","p":"Illuminate/View/AnonymousComponent.html#method_data","d":"<p>Get the data that should be supplied to the view.</p>"},{"t":"M","n":"Illuminate\\View\\AppendableAttributeValue::__construct","p":"Illuminate/View/AppendableAttributeValue.html#method___construct","d":"<p>Create a new appendable attribute value.</p>"},{"t":"M","n":"Illuminate\\View\\AppendableAttributeValue::__toString","p":"Illuminate/View/AppendableAttributeValue.html#method___toString","d":"<p>Get the string value.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::compile","p":"Illuminate/View/Compilers/BladeCompiler.html#method_compile","d":"<p>Compile the view at the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::appendFilePath","p":"Illuminate/View/Compilers/BladeCompiler.html#method_appendFilePath","d":"<p>Append the file path to the compiled string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::getOpenAndClosingPhpTokens","p":"Illuminate/View/Compilers/BladeCompiler.html#method_getOpenAndClosingPhpTokens","d":"<p>Get the open and closing PHP tag tokens from the given string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::getPath","p":"Illuminate/View/Compilers/BladeCompiler.html#method_getPath","d":"<p>Get the path currently being compiled.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::setPath","p":"Illuminate/View/Compilers/BladeCompiler.html#method_setPath","d":"<p>Set the path currently being compiled.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::compileString","p":"Illuminate/View/Compilers/BladeCompiler.html#method_compileString","d":"<p>Compile the given Blade template contents.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::render","p":"Illuminate/View/Compilers/BladeCompiler.html#method_render","d":null},{"t":"M","n":"Illuminate\\View\\Compilers\\BladeCompiler::__construct","p":"Illuminate/View/Compilers/BladeCompiler.html#method___construct","d":"<p>Create a new compiler instance.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Compiler::__construct","p":"Illuminate/View/Compilers/Compiler.html#method___construct","d":"<p>Create a new compiler instance.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Compiler::getCompiledPath","p":"Illuminate/View/Compilers/Compiler.html#method_getCompiledPath","d":"<p>Get the path to the compiled version of a view.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Compiler::isExpired","p":"Illuminate/View/Compilers/Compiler.html#method_isExpired","d":"<p>Determine if the view at the given path is expired.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Compiler::ensureCompiledDirectoryExists","p":"Illuminate/View/Compilers/Compiler.html#method_ensureCompiledDirectoryExists","d":"<p>Create the compiled file directory if necessary.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::getCompiledPath","p":"Illuminate/View/Compilers/CompilerInterface.html#method_getCompiledPath","d":"<p>Get the path to the compiled version of a view.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::isExpired","p":"Illuminate/View/Compilers/CompilerInterface.html#method_isExpired","d":"<p>Determine if the given view is expired.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::compile","p":"Illuminate/View/Compilers/CompilerInterface.html#method_compile","d":"<p>Compile the view at the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::__construct","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method___construct","d":"<p>Create a new component tag compiler.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::compile","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_compile","d":"<p>Compile the component and slot tags within the given string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::compileTags","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_compileTags","d":"<p>Compile the tags within the given string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::compileOpeningTags","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_compileOpeningTags","d":"<p>Compile the opening tags within the given string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::compileSelfClosingTags","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_compileSelfClosingTags","d":"<p>Compile the self-closing tags within the given string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::componentString","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_componentString","d":"<p>Compile the Blade component string for the given component and attributes.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::componentClass","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_componentClass","d":"<p>Get the component class for a given component alias.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::guessAnonymousComponentUsingPaths","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_guessAnonymousComponentUsingPaths","d":"<p>Attempt to find an anonymous component using the registered anonymous component paths.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::guessAnonymousComponentUsingNamespaces","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_guessAnonymousComponentUsingNamespaces","d":"<p>Attempt to find an anonymous component using the registered anonymous component namespaces.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::findClassByComponent","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_findClassByComponent","d":"<p>Find the class for the given component using the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::guessClassName","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_guessClassName","d":"<p>Guess the class name for the given component.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::formatClassName","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_formatClassName","d":"<p>Format the class name for the given component.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::guessViewName","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_guessViewName","d":"<p>Guess the view name for the given component.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::partitionDataAndAttributes","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_partitionDataAndAttributes","d":"<p>Partition the data and extra attributes from the given array of attributes.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::compileClosingTags","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_compileClosingTags","d":"<p>Compile the closing tags within the given string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::compileSlots","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_compileSlots","d":"<p>Compile the slot tags within the given string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::getAttributesFromAttributeString","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_getAttributesFromAttributeString","d":"<p>Get an array of attributes from the given attribute string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::parseShortAttributeSyntax","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_parseShortAttributeSyntax","d":"<p>Parses a short attribute syntax like :$foo into a fully-qualified syntax like :foo=&quot;$foo&quot;.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::parseAttributeBag","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_parseAttributeBag","d":"<p>Parse the attribute bag in a given attribute string into its fully-qualified syntax.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::parseComponentTagClassStatements","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_parseComponentTagClassStatements","d":"<p>Parse @class statements in a given attribute string into their fully-qualified syntax.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::parseComponentTagStyleStatements","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_parseComponentTagStyleStatements","d":"<p>Parse @style statements in a given attribute string into their fully-qualified syntax.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::parseBindAttributes","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_parseBindAttributes","d":"<p>Parse the &quot;bind&quot; attributes in a given attribute string into their fully-qualified syntax.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::compileAttributeEchos","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_compileAttributeEchos","d":"<p>Compile any Blade echo statements that are present in the attribute string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::escapeSingleQuotesOutsideOfPhpBlocks","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_escapeSingleQuotesOutsideOfPhpBlocks","d":"<p>Escape the single quotes in the given string that are outside of PHP blocks.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::attributesToString","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_attributesToString","d":"<p>Convert an array of attributes to a string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\ComponentTagCompiler::stripQuotes","p":"Illuminate/View/Compilers/ComponentTagCompiler.html#method_stripQuotes","d":"<p>Strip any quotes from the given string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileCan","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileCan","d":"<p>Compile the can statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileCannot","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileCannot","d":"<p>Compile the cannot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileCanany","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileCanany","d":"<p>Compile the canany statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileElsecan","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileElsecan","d":"<p>Compile the else-can statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileElsecannot","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileElsecannot","d":"<p>Compile the else-cannot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileElsecanany","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileElsecanany","d":"<p>Compile the else-canany statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileEndcan","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileEndcan","d":"<p>Compile the end-can statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileEndcannot","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileEndcannot","d":"<p>Compile the end-cannot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesAuthorizations::compileEndcanany","p":"Illuminate/View/Compilers/Concerns/CompilesAuthorizations.html#method_compileEndcanany","d":"<p>Compile the end-canany statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesClasses::compileClass","p":"Illuminate/View/Compilers/Concerns/CompilesClasses.html#method_compileClass","d":"<p>Compile the conditional class statement into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComments::compileComments","p":"Illuminate/View/Compilers/Concerns/CompilesComments.html#method_compileComments","d":"<p>Compile Blade comments into an empty string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileComponent","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileComponent","d":"<p>Compile the component statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::newComponentHash","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_newComponentHash","d":"<p>Get a new component hash for a component name.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileClassComponentOpening","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileClassComponentOpening","d":"<p>Compile a class component opening.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileEndComponent","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileEndComponent","d":"<p>Compile the end-component statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileEndComponentClass","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileEndComponentClass","d":"<p>Compile the end-component statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileSlot","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileSlot","d":"<p>Compile the slot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileEndSlot","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileEndSlot","d":"<p>Compile the end-slot statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileComponentFirst","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileComponentFirst","d":"<p>Compile the component-first statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileEndComponentFirst","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileEndComponentFirst","d":"<p>Compile the end-component-first statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileProps","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileProps","d":"<p>Compile the prop statement into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::compileAware","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_compileAware","d":"<p>Compile the aware statement into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesComponents::sanitizeComponentAttribute","p":"Illuminate/View/Compilers/Concerns/CompilesComponents.html#method_sanitizeComponentAttribute","d":"<p>Sanitize the given component attribute value.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileAuth","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileAuth","d":"<p>Compile the if-auth statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileElseAuth","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileElseAuth","d":"<p>Compile the else-auth statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndAuth","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndAuth","d":"<p>Compile the end-auth statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEnv","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEnv","d":"<p>Compile the env statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndEnv","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndEnv","d":"<p>Compile the end-env statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileProduction","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileProduction","d":"<p>Compile the production statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndProduction","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndProduction","d":"<p>Compile the end-production statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileGuest","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileGuest","d":"<p>Compile the if-guest statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileElseGuest","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileElseGuest","d":"<p>Compile the else-guest statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndGuest","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndGuest","d":"<p>Compile the end-guest statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileHasSection","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileHasSection","d":"<p>Compile the has-section statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileSectionMissing","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileSectionMissing","d":"<p>Compile the section-missing statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileIf","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileIf","d":"<p>Compile the if statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileUnless","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileUnless","d":"<p>Compile the unless statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileElseif","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileElseif","d":"<p>Compile the else-if statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileElse","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileElse","d":"<p>Compile the else statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndif","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndif","d":"<p>Compile the end-if statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndunless","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndunless","d":"<p>Compile the end-unless statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileIsset","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileIsset","d":"<p>Compile the if-isset statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndIsset","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndIsset","d":"<p>Compile the end-isset statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileSwitch","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileSwitch","d":"<p>Compile the switch statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileCase","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileCase","d":"<p>Compile the case statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileDefault","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileDefault","d":"<p>Compile the default statements in switch case into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndSwitch","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndSwitch","d":"<p>Compile the end switch statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileOnce","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileOnce","d":"<p>Compile a once block into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndOnce","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndOnce","d":"<p>Compile an end-once block into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileSelected","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileSelected","d":"<p>Compile a selected block into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileChecked","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileChecked","d":"<p>Compile a checked block into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileDisabled","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileDisabled","d":"<p>Compile a disabled block into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileRequired","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileRequired","d":"<p>Compile a required block into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileReadonly","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileReadonly","d":"<p>Compile a readonly block into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compilePushIf","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compilePushIf","d":"<p>Compile the push statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesConditionals::compileEndPushIf","p":"Illuminate/View/Compilers/Concerns/CompilesConditionals.html#method_compileEndPushIf","d":"<p>Compile the end-push statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::stringable","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_stringable","d":"<p>Add a handler to be executed before echoing a given class.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileEchos","d":"<p>Compile Blade echos into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::getEchoMethods","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_getEchoMethods","d":"<p>Get the echo methods in the proper order for compilation.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileRawEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileRawEchos","d":"<p>Compile the &quot;raw&quot; echo statements.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileRegularEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileRegularEchos","d":"<p>Compile the &quot;regular&quot; echo statements.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::compileEscapedEchos","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_compileEscapedEchos","d":"<p>Compile the escaped echo statements.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::addBladeCompilerVariable","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_addBladeCompilerVariable","d":"<p>Add an instance of the blade echo handler to the start of the compiled string.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::wrapInEchoHandler","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_wrapInEchoHandler","d":"<p>Wrap the echoable value in an echo handler if applicable.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesEchos::applyEchoHandler","p":"Illuminate/View/Compilers/Concerns/CompilesEchos.html#method_applyEchoHandler","d":"<p>Apply the echo handler for the value if it exists.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesErrors::compileError","p":"Illuminate/View/Compilers/Concerns/CompilesErrors.html#method_compileError","d":"<p>Compile the error statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesErrors::compileEnderror","p":"Illuminate/View/Compilers/Concerns/CompilesErrors.html#method_compileEnderror","d":"<p>Compile the enderror statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesFragments::compileFragment","p":"Illuminate/View/Compilers/Concerns/CompilesFragments.html#method_compileFragment","d":"<p>Compile the fragment statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesFragments::compileEndfragment","p":"Illuminate/View/Compilers/Concerns/CompilesFragments.html#method_compileEndfragment","d":"<p>Compile the end-fragment statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesHelpers::compileCsrf","p":"Illuminate/View/Compilers/Concerns/CompilesHelpers.html#method_compileCsrf","d":"<p>Compile the CSRF statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesHelpers::compileDd","p":"Illuminate/View/Compilers/Concerns/CompilesHelpers.html#method_compileDd","d":"<p>Compile the &quot;dd&quot; statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesHelpers::compileDump","p":"Illuminate/View/Compilers/Concerns/CompilesHelpers.html#method_compileDump","d":"<p>Compile the &quot;dump&quot; statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesHelpers::compileMethod","p":"Illuminate/View/Compilers/Concerns/CompilesHelpers.html#method_compileMethod","d":"<p>Compile the method statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesHelpers::compileVite","p":"Illuminate/View/Compilers/Concerns/CompilesHelpers.html#method_compileVite","d":"<p>Compile the &quot;vite&quot; statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesHelpers::compileViteReactRefresh","p":"Illuminate/View/Compilers/Concerns/CompilesHelpers.html#method_compileViteReactRefresh","d":"<p>Compile the &quot;viteReactRefresh&quot; statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileEach","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileEach","d":"<p>Compile the each statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileInclude","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileInclude","d":"<p>Compile the include statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileIncludeIf","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileIncludeIf","d":"<p>Compile the include-if statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileIncludeWhen","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileIncludeWhen","d":"<p>Compile the include-when statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileIncludeUnless","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileIncludeUnless","d":"<p>Compile the include-unless statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesIncludes::compileIncludeFirst","p":"Illuminate/View/Compilers/Concerns/CompilesIncludes.html#method_compileIncludeFirst","d":"<p>Compile the include-first statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesInjections::compileInject","p":"Illuminate/View/Compilers/Concerns/CompilesInjections.html#method_compileInject","d":"<p>Compile the inject statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesJs::compileJs","p":"Illuminate/View/Compilers/Concerns/CompilesJs.html#method_compileJs","d":"<p>Compile the &quot;@js&quot; directive into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesJson::compileJson","p":"Illuminate/View/Compilers/Concerns/CompilesJson.html#method_compileJson","d":"<p>Compile the JSON statement into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileExtends","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileExtends","d":"<p>Compile the extends statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileExtendsFirst","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileExtendsFirst","d":"<p>Compile the extends-first statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileSection","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileSection","d":"<p>Compile the section statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileParent","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileParent","d":"<p>Replace the @parent directive to a placeholder.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileYield","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileYield","d":"<p>Compile the yield statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileShow","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileShow","d":"<p>Compile the show statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileAppend","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileAppend","d":"<p>Compile the append statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileOverwrite","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileOverwrite","d":"<p>Compile the overwrite statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileStop","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileStop","d":"<p>Compile the stop statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLayouts::compileEndsection","p":"Illuminate/View/Compilers/Concerns/CompilesLayouts.html#method_compileEndsection","d":"<p>Compile the end-section statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileForelse","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileForelse","d":"<p>Compile the for-else statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEmpty","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEmpty","d":"<p>Compile the for-else-empty and empty statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndforelse","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndforelse","d":"<p>Compile the end-for-else statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndEmpty","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndEmpty","d":"<p>Compile the end-empty statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileFor","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileFor","d":"<p>Compile the for statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileForeach","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileForeach","d":"<p>Compile the for-each statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileBreak","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileBreak","d":"<p>Compile the break statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileContinue","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileContinue","d":"<p>Compile the continue statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndfor","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndfor","d":"<p>Compile the end-for statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndforeach","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndforeach","d":"<p>Compile the end-for-each statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileWhile","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileWhile","d":"<p>Compile the while statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesLoops::compileEndwhile","p":"Illuminate/View/Compilers/Concerns/CompilesLoops.html#method_compileEndwhile","d":"<p>Compile the end-while statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesRawPhp::compilePhp","p":"Illuminate/View/Compilers/Concerns/CompilesRawPhp.html#method_compilePhp","d":"<p>Compile the raw PHP statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesRawPhp::compileUnset","p":"Illuminate/View/Compilers/Concerns/CompilesRawPhp.html#method_compileUnset","d":"<p>Compile the unset statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compileStack","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compileStack","d":"<p>Compile the stack statements into the content.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compilePush","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compilePush","d":"<p>Compile the push statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compilePushOnce","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compilePushOnce","d":"<p>Compile the push-once statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compileEndpush","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compileEndpush","d":"<p>Compile the end-push statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compileEndpushOnce","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compileEndpushOnce","d":"<p>Compile the end-push-once statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compilePrepend","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compilePrepend","d":"<p>Compile the prepend statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compilePrependOnce","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compilePrependOnce","d":"<p>Compile the prepend-once statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compileEndprepend","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compileEndprepend","d":"<p>Compile the end-prepend statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStacks::compileEndprependOnce","p":"Illuminate/View/Compilers/Concerns/CompilesStacks.html#method_compileEndprependOnce","d":"<p>Compile the end-prepend-once statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesStyles::compileStyle","p":"Illuminate/View/Compilers/Concerns/CompilesStyles.html#method_compileStyle","d":"<p>Compile the conditional style statement into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesTranslations::compileLang","p":"Illuminate/View/Compilers/Concerns/CompilesTranslations.html#method_compileLang","d":"<p>Compile the lang statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesTranslations::compileEndlang","p":"Illuminate/View/Compilers/Concerns/CompilesTranslations.html#method_compileEndlang","d":"<p>Compile the end-lang statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\Concerns\\CompilesTranslations::compileChoice","p":"Illuminate/View/Compilers/Concerns/CompilesTranslations.html#method_compileChoice","d":"<p>Compile the choice statements into valid PHP.</p>"},{"t":"M","n":"Illuminate\\View\\Component::render","p":"Illuminate/View/Component.html#method_render","d":"<p>Get the view / view contents that represent the component.</p>"},{"t":"M","n":"Illuminate\\View\\Component::resolve","p":"Illuminate/View/Component.html#method_resolve","d":"<p>Resolve the component instance with the given data.</p>"},{"t":"M","n":"Illuminate\\View\\Component::extractConstructorParameters","p":"Illuminate/View/Component.html#method_extractConstructorParameters","d":"<p>Extract the constructor parameters for the component.</p>"},{"t":"M","n":"Illuminate\\View\\Component::resolveView","p":"Illuminate/View/Component.html#method_resolveView","d":"<p>Resolve the Blade view or view file that should be used when rendering the component.</p>"},{"t":"M","n":"Illuminate\\View\\Component::extractBladeViewFromString","p":"Illuminate/View/Component.html#method_extractBladeViewFromString","d":"<p>Create a Blade view with the raw component string content.</p>"},{"t":"M","n":"Illuminate\\View\\Component::createBladeViewFromString","p":"Illuminate/View/Component.html#method_createBladeViewFromString","d":"<p>Create a Blade view with the raw component string content.</p>"},{"t":"M","n":"Illuminate\\View\\Component::data","p":"Illuminate/View/Component.html#method_data","d":"<p>Get the data that should be supplied to the view.</p>"},{"t":"M","n":"Illuminate\\View\\Component::extractPublicProperties","p":"Illuminate/View/Component.html#method_extractPublicProperties","d":"<p>Extract the public properties for the component.</p>"},{"t":"M","n":"Illuminate\\View\\Component::extractPublicMethods","p":"Illuminate/View/Component.html#method_extractPublicMethods","d":"<p>Extract the public methods for the component.</p>"},{"t":"M","n":"Illuminate\\View\\Component::createVariableFromMethod","p":"Illuminate/View/Component.html#method_createVariableFromMethod","d":"<p>Create a callable variable from the given method.</p>"},{"t":"M","n":"Illuminate\\View\\Component::createInvokableVariable","p":"Illuminate/View/Component.html#method_createInvokableVariable","d":"<p>Create an invokable, toStringable variable for the given component method.</p>"},{"t":"M","n":"Illuminate\\View\\Component::shouldIgnore","p":"Illuminate/View/Component.html#method_shouldIgnore","d":"<p>Determine if the given property / method should be ignored.</p>"},{"t":"M","n":"Illuminate\\View\\Component::ignoredMethods","p":"Illuminate/View/Component.html#method_ignoredMethods","d":"<p>Get the methods that should be ignored.</p>"},{"t":"M","n":"Illuminate\\View\\Component::withName","p":"Illuminate/View/Component.html#method_withName","d":"<p>Set the component alias name.</p>"},{"t":"M","n":"Illuminate\\View\\Component::withAttributes","p":"Illuminate/View/Component.html#method_withAttributes","d":"<p>Set the extra attributes that the component should make available.</p>"},{"t":"M","n":"Illuminate\\View\\Component::newAttributeBag","p":"Illuminate/View/Component.html#method_newAttributeBag","d":"<p>Get a new attribute bag instance.</p>"},{"t":"M","n":"Illuminate\\View\\Component::shouldRender","p":"Illuminate/View/Component.html#method_shouldRender","d":"<p>Determine if the component should be rendered.</p>"},{"t":"M","n":"Illuminate\\View\\Component::view","p":"Illuminate/View/Component.html#method_view","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\View\\Component::factory","p":"Illuminate/View/Component.html#method_factory","d":"<p>Get the view factory instance.</p>"},{"t":"M","n":"Illuminate\\View\\Component::flushCache","p":"Illuminate/View/Component.html#method_flushCache","d":"<p>Flush the component's cached state.</p>"},{"t":"M","n":"Illuminate\\View\\Component::forgetFactory","p":"Illuminate/View/Component.html#method_forgetFactory","d":"<p>Forget the component's factory instance.</p>"},{"t":"M","n":"Illuminate\\View\\Component::forgetComponentsResolver","p":"Illuminate/View/Component.html#method_forgetComponentsResolver","d":"<p>Forget the component's resolver callback.</p>"},{"t":"M","n":"Illuminate\\View\\Component::resolveComponentsUsing","p":"Illuminate/View/Component.html#method_resolveComponentsUsing","d":"<p>Set the callback that should be used to resolve components within views.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::__construct","p":"Illuminate/View/ComponentAttributeBag.html#method___construct","d":"<p>Create a new component attribute bag instance.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::first","p":"Illuminate/View/ComponentAttributeBag.html#method_first","d":"<p>Get the first attribute's value.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::get","p":"Illuminate/View/ComponentAttributeBag.html#method_get","d":"<p>Get a given attribute from the attribute array.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::has","p":"Illuminate/View/ComponentAttributeBag.html#method_has","d":"<p>Determine if a given attribute exists in the attribute array.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::missing","p":"Illuminate/View/ComponentAttributeBag.html#method_missing","d":"<p>Determine if a given attribute is missing from the attribute array.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::only","p":"Illuminate/View/ComponentAttributeBag.html#method_only","d":"<p>Only include the given attribute from the attribute array.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::except","p":"Illuminate/View/ComponentAttributeBag.html#method_except","d":"<p>Exclude the given attribute from the attribute array.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::filter","p":"Illuminate/View/ComponentAttributeBag.html#method_filter","d":"<p>Filter the attributes, returning a bag of attributes that pass the filter.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::whereStartsWith","p":"Illuminate/View/ComponentAttributeBag.html#method_whereStartsWith","d":"<p>Return a bag of attributes that have keys starting with the given value / pattern.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::whereDoesntStartWith","p":"Illuminate/View/ComponentAttributeBag.html#method_whereDoesntStartWith","d":"<p>Return a bag of attributes with keys that do not start with the given value / pattern.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::thatStartWith","p":"Illuminate/View/ComponentAttributeBag.html#method_thatStartWith","d":"<p>Return a bag of attributes that have keys starting with the given value / pattern.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::onlyProps","p":"Illuminate/View/ComponentAttributeBag.html#method_onlyProps","d":"<p>Only include the given attribute from the attribute array.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::exceptProps","p":"Illuminate/View/ComponentAttributeBag.html#method_exceptProps","d":"<p>Exclude the given attribute from the attribute array.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::extractPropNames","p":"Illuminate/View/ComponentAttributeBag.html#method_extractPropNames","d":"<p>Extract prop names from given keys.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::class","p":"Illuminate/View/ComponentAttributeBag.html#method_class","d":"<p>Conditionally merge classes into the attribute bag.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::style","p":"Illuminate/View/ComponentAttributeBag.html#method_style","d":"<p>Conditionally merge styles into the attribute bag.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::merge","p":"Illuminate/View/ComponentAttributeBag.html#method_merge","d":"<p>Merge additional attributes / values into the attribute bag.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::shouldEscapeAttributeValue","p":"Illuminate/View/ComponentAttributeBag.html#method_shouldEscapeAttributeValue","d":"<p>Determine if the specific attribute value should be escaped.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::prepends","p":"Illuminate/View/ComponentAttributeBag.html#method_prepends","d":"<p>Create a new appendable attribute value.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::resolveAppendableAttributeDefault","p":"Illuminate/View/ComponentAttributeBag.html#method_resolveAppendableAttributeDefault","d":"<p>Resolve an appendable attribute value default value.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::getAttributes","p":"Illuminate/View/ComponentAttributeBag.html#method_getAttributes","d":"<p>Get all of the raw attributes.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::setAttributes","p":"Illuminate/View/ComponentAttributeBag.html#method_setAttributes","d":"<p>Set the underlying attributes.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::toHtml","p":"Illuminate/View/ComponentAttributeBag.html#method_toHtml","d":"<p>Get content as a string of HTML.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::__invoke","p":"Illuminate/View/ComponentAttributeBag.html#method___invoke","d":"<p>Merge additional attributes / values into the attribute bag.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::offsetExists","p":"Illuminate/View/ComponentAttributeBag.html#method_offsetExists","d":"<p>Determine if the given offset exists.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::offsetGet","p":"Illuminate/View/ComponentAttributeBag.html#method_offsetGet","d":"<p>Get the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::offsetSet","p":"Illuminate/View/ComponentAttributeBag.html#method_offsetSet","d":"<p>Set the value at a given offset.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::offsetUnset","p":"Illuminate/View/ComponentAttributeBag.html#method_offsetUnset","d":"<p>Remove the value at the given offset.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::getIterator","p":"Illuminate/View/ComponentAttributeBag.html#method_getIterator","d":"<p>Get an iterator for the items.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentAttributeBag::__toString","p":"Illuminate/View/ComponentAttributeBag.html#method___toString","d":"<p>Implode the attributes into a single HTML ready string.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentSlot::__construct","p":"Illuminate/View/ComponentSlot.html#method___construct","d":"<p>Create a new slot instance.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentSlot::withAttributes","p":"Illuminate/View/ComponentSlot.html#method_withAttributes","d":"<p>Set the extra attributes that the slot should make available.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentSlot::toHtml","p":"Illuminate/View/ComponentSlot.html#method_toHtml","d":"<p>Get the slot's HTML string.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentSlot::isEmpty","p":"Illuminate/View/ComponentSlot.html#method_isEmpty","d":"<p>Determine if the slot is empty.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentSlot::isNotEmpty","p":"Illuminate/View/ComponentSlot.html#method_isNotEmpty","d":"<p>Determine if the slot is not empty.</p>"},{"t":"M","n":"Illuminate\\View\\ComponentSlot::__toString","p":"Illuminate/View/ComponentSlot.html#method___toString","d":"<p>Get the slot's HTML string.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::startComponent","p":"Illuminate/View/Concerns/ManagesComponents.html#method_startComponent","d":"<p>Start a component rendering process.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::startComponentFirst","p":"Illuminate/View/Concerns/ManagesComponents.html#method_startComponentFirst","d":"<p>Get the first view that actually exists from the given list, and start a component.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::renderComponent","p":"Illuminate/View/Concerns/ManagesComponents.html#method_renderComponent","d":"<p>Render the current component.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::componentData","p":"Illuminate/View/Concerns/ManagesComponents.html#method_componentData","d":"<p>Get the data for the given component.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::getConsumableComponentData","p":"Illuminate/View/Concerns/ManagesComponents.html#method_getConsumableComponentData","d":"<p>Get an item from the component data that exists above the current component.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::slot","p":"Illuminate/View/Concerns/ManagesComponents.html#method_slot","d":"<p>Start the slot rendering process.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::endSlot","p":"Illuminate/View/Concerns/ManagesComponents.html#method_endSlot","d":"<p>Save the slot content for rendering.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::currentComponent","p":"Illuminate/View/Concerns/ManagesComponents.html#method_currentComponent","d":"<p>Get the index for the current component.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesComponents::flushComponents","p":"Illuminate/View/Concerns/ManagesComponents.html#method_flushComponents","d":"<p>Flush all of the component state.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::creator","p":"Illuminate/View/Concerns/ManagesEvents.html#method_creator","d":"<p>Register a view creator event.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::composers","p":"Illuminate/View/Concerns/ManagesEvents.html#method_composers","d":"<p>Register multiple view composers via an array.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::composer","p":"Illuminate/View/Concerns/ManagesEvents.html#method_composer","d":"<p>Register a view composer event.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::addViewEvent","p":"Illuminate/View/Concerns/ManagesEvents.html#method_addViewEvent","d":"<p>Add an event for a given view.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::addClassEvent","p":"Illuminate/View/Concerns/ManagesEvents.html#method_addClassEvent","d":"<p>Register a class based view composer.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::buildClassEventCallback","p":"Illuminate/View/Concerns/ManagesEvents.html#method_buildClassEventCallback","d":"<p>Build a class based container callback Closure.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::parseClassEvent","p":"Illuminate/View/Concerns/ManagesEvents.html#method_parseClassEvent","d":"<p>Parse a class based composer name.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::classEventMethodForPrefix","p":"Illuminate/View/Concerns/ManagesEvents.html#method_classEventMethodForPrefix","d":"<p>Determine the class event method based on the given prefix.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::addEventListener","p":"Illuminate/View/Concerns/ManagesEvents.html#method_addEventListener","d":"<p>Add a listener to the event dispatcher.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::callComposer","p":"Illuminate/View/Concerns/ManagesEvents.html#method_callComposer","d":"<p>Call the composer for a given view.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesEvents::callCreator","p":"Illuminate/View/Concerns/ManagesEvents.html#method_callCreator","d":"<p>Call the creator for a given view.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesFragments::startFragment","p":"Illuminate/View/Concerns/ManagesFragments.html#method_startFragment","d":"<p>Start injecting content into a fragment.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesFragments::stopFragment","p":"Illuminate/View/Concerns/ManagesFragments.html#method_stopFragment","d":"<p>Stop injecting content into a fragment.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesFragments::getFragment","p":"Illuminate/View/Concerns/ManagesFragments.html#method_getFragment","d":"<p>Get the contents of a fragment.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesFragments::getFragments","p":"Illuminate/View/Concerns/ManagesFragments.html#method_getFragments","d":"<p>Get the entire array of rendered fragments.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesFragments::flushFragments","p":"Illuminate/View/Concerns/ManagesFragments.html#method_flushFragments","d":"<p>Flush all of the fragments.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::startSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_startSection","d":"<p>Start injecting content into a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::inject","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_inject","d":"<p>Inject inline content into a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::yieldSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_yieldSection","d":"<p>Stop injecting content into a section and return its contents.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::stopSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_stopSection","d":"<p>Stop injecting content into a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::appendSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_appendSection","d":"<p>Stop injecting content into a section and append it.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::extendSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_extendSection","d":"<p>Append content to a given section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::yieldContent","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_yieldContent","d":"<p>Get the string contents of a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::parentPlaceholder","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_parentPlaceholder","d":"<p>Get the parent placeholder for the current request.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::parentPlaceholderSalt","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_parentPlaceholderSalt","d":"<p>Get the parent placeholder salt.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::hasSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_hasSection","d":"<p>Check if section exists.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::sectionMissing","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_sectionMissing","d":"<p>Check if section does not exist.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::getSection","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_getSection","d":"<p>Get the contents of a section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::getSections","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_getSections","d":"<p>Get the entire array of sections.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLayouts::flushSections","p":"Illuminate/View/Concerns/ManagesLayouts.html#method_flushSections","d":"<p>Flush all of the sections.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::addLoop","p":"Illuminate/View/Concerns/ManagesLoops.html#method_addLoop","d":"<p>Add new loop to the stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::incrementLoopIndices","p":"Illuminate/View/Concerns/ManagesLoops.html#method_incrementLoopIndices","d":"<p>Increment the top loop's indices.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::popLoop","p":"Illuminate/View/Concerns/ManagesLoops.html#method_popLoop","d":"<p>Pop a loop from the top of the loop stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::getLastLoop","p":"Illuminate/View/Concerns/ManagesLoops.html#method_getLastLoop","d":"<p>Get an instance of the last loop in the stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesLoops::getLoopStack","p":"Illuminate/View/Concerns/ManagesLoops.html#method_getLoopStack","d":"<p>Get the entire loop stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::startPush","p":"Illuminate/View/Concerns/ManagesStacks.html#method_startPush","d":"<p>Start injecting content into a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::stopPush","p":"Illuminate/View/Concerns/ManagesStacks.html#method_stopPush","d":"<p>Stop injecting content into a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::extendPush","p":"Illuminate/View/Concerns/ManagesStacks.html#method_extendPush","d":"<p>Append content to a given push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::startPrepend","p":"Illuminate/View/Concerns/ManagesStacks.html#method_startPrepend","d":"<p>Start prepending content into a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::stopPrepend","p":"Illuminate/View/Concerns/ManagesStacks.html#method_stopPrepend","d":"<p>Stop prepending content into a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::extendPrepend","p":"Illuminate/View/Concerns/ManagesStacks.html#method_extendPrepend","d":"<p>Prepend content to a given stack.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::yieldPushContent","p":"Illuminate/View/Concerns/ManagesStacks.html#method_yieldPushContent","d":"<p>Get the string contents of a push section.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesStacks::flushStacks","p":"Illuminate/View/Concerns/ManagesStacks.html#method_flushStacks","d":"<p>Flush all of the stacks.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesTranslations::startTranslation","p":"Illuminate/View/Concerns/ManagesTranslations.html#method_startTranslation","d":"<p>Start a translation block.</p>"},{"t":"M","n":"Illuminate\\View\\Concerns\\ManagesTranslations::renderTranslation","p":"Illuminate/View/Concerns/ManagesTranslations.html#method_renderTranslation","d":"<p>Render the current translation.</p>"},{"t":"M","n":"Illuminate\\View\\DynamicComponent::__construct","p":"Illuminate/View/DynamicComponent.html#method___construct","d":"<p>Create a new component instance.</p>"},{"t":"M","n":"Illuminate\\View\\DynamicComponent::render","p":"Illuminate/View/DynamicComponent.html#method_render","d":"<p>Get the view / contents that represent the component.</p>"},{"t":"M","n":"Illuminate\\View\\DynamicComponent::compileProps","p":"Illuminate/View/DynamicComponent.html#method_compileProps","d":"<p>Compile the @props directive for the component.</p>"},{"t":"M","n":"Illuminate\\View\\DynamicComponent::compileBindings","p":"Illuminate/View/DynamicComponent.html#method_compileBindings","d":"<p>Compile the bindings for the component.</p>"},{"t":"M","n":"Illuminate\\View\\DynamicComponent::compileSlots","p":"Illuminate/View/DynamicComponent.html#method_compileSlots","d":"<p>Compile the slots for the component.</p>"},{"t":"M","n":"Illuminate\\View\\DynamicComponent::classForComponent","p":"Illuminate/View/DynamicComponent.html#method_classForComponent","d":"<p>Get the class for the current component.</p>"},{"t":"M","n":"Illuminate\\View\\DynamicComponent::bindings","p":"Illuminate/View/DynamicComponent.html#method_bindings","d":"<p>Get the names of the variables that should be bound to the component.</p>"},{"t":"M","n":"Illuminate\\View\\DynamicComponent::compiler","p":"Illuminate/View/DynamicComponent.html#method_compiler","d":"<p>Get an instance of the Blade tag compiler.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::__construct","p":"Illuminate/View/Engines/CompilerEngine.html#method___construct","d":"<p>Create a new compiler engine instance.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::get","p":"Illuminate/View/Engines/CompilerEngine.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::handleViewException","p":"Illuminate/View/Engines/CompilerEngine.html#method_handleViewException","d":"<p>Handle a view exception.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::getMessage","p":"Illuminate/View/Engines/CompilerEngine.html#method_getMessage","d":"<p>Get the exception message for an exception.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::getCompiler","p":"Illuminate/View/Engines/CompilerEngine.html#method_getCompiler","d":"<p>Get the compiler implementation.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\CompilerEngine::forgetCompiledOrNotExpired","p":"Illuminate/View/Engines/CompilerEngine.html#method_forgetCompiledOrNotExpired","d":"<p>Clear the cache of views that were compiled or not expired.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\Engine::getLastRendered","p":"Illuminate/View/Engines/Engine.html#method_getLastRendered","d":"<p>Get the last view that was rendered.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\EngineResolver::register","p":"Illuminate/View/Engines/EngineResolver.html#method_register","d":"<p>Register a new engine resolver.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\EngineResolver::resolve","p":"Illuminate/View/Engines/EngineResolver.html#method_resolve","d":"<p>Resolve an engine instance by name.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\EngineResolver::forget","p":"Illuminate/View/Engines/EngineResolver.html#method_forget","d":"<p>Remove a resolved engine.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\FileEngine::__construct","p":"Illuminate/View/Engines/FileEngine.html#method___construct","d":"<p>Create a new file engine instance.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\FileEngine::get","p":"Illuminate/View/Engines/FileEngine.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\PhpEngine::__construct","p":"Illuminate/View/Engines/PhpEngine.html#method___construct","d":"<p>Create a new file engine instance.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\PhpEngine::get","p":"Illuminate/View/Engines/PhpEngine.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\PhpEngine::evaluatePath","p":"Illuminate/View/Engines/PhpEngine.html#method_evaluatePath","d":"<p>Get the evaluated contents of the view at the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Engines\\PhpEngine::handleViewException","p":"Illuminate/View/Engines/PhpEngine.html#method_handleViewException","d":"<p>Handle a view exception.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::__construct","p":"Illuminate/View/Factory.html#method___construct","d":"<p>Create a new view factory instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::file","p":"Illuminate/View/Factory.html#method_file","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::make","p":"Illuminate/View/Factory.html#method_make","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::first","p":"Illuminate/View/Factory.html#method_first","d":"<p>Get the first view that actually exists from the given list.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::renderWhen","p":"Illuminate/View/Factory.html#method_renderWhen","d":"<p>Get the rendered content of the view based on a given condition.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::renderUnless","p":"Illuminate/View/Factory.html#method_renderUnless","d":"<p>Get the rendered content of the view based on the negation of a given condition.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::renderEach","p":"Illuminate/View/Factory.html#method_renderEach","d":"<p>Get the rendered contents of a partial from a loop.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::normalizeName","p":"Illuminate/View/Factory.html#method_normalizeName","d":"<p>Normalize a view name.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::parseData","p":"Illuminate/View/Factory.html#method_parseData","d":"<p>Parse the given data into a raw array.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::viewInstance","p":"Illuminate/View/Factory.html#method_viewInstance","d":"<p>Create a new view instance from the given arguments.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::exists","p":"Illuminate/View/Factory.html#method_exists","d":"<p>Determine if a given view exists.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getEngineFromPath","p":"Illuminate/View/Factory.html#method_getEngineFromPath","d":"<p>Get the appropriate view engine for the given path.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getExtension","p":"Illuminate/View/Factory.html#method_getExtension","d":"<p>Get the extension used by the view file.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::share","p":"Illuminate/View/Factory.html#method_share","d":"<p>Add a piece of shared data to the environment.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::incrementRender","p":"Illuminate/View/Factory.html#method_incrementRender","d":"<p>Increment the rendering counter.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::decrementRender","p":"Illuminate/View/Factory.html#method_decrementRender","d":"<p>Decrement the rendering counter.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::doneRendering","p":"Illuminate/View/Factory.html#method_doneRendering","d":"<p>Check if there are no active render operations.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::hasRenderedOnce","p":"Illuminate/View/Factory.html#method_hasRenderedOnce","d":"<p>Determine if the given once token has been rendered.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::markAsRenderedOnce","p":"Illuminate/View/Factory.html#method_markAsRenderedOnce","d":"<p>Mark the given once token as having been rendered.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::addLocation","p":"Illuminate/View/Factory.html#method_addLocation","d":"<p>Add a location to the array of view locations.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::addNamespace","p":"Illuminate/View/Factory.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::prependNamespace","p":"Illuminate/View/Factory.html#method_prependNamespace","d":"<p>Prepend a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::replaceNamespace","p":"Illuminate/View/Factory.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::addExtension","p":"Illuminate/View/Factory.html#method_addExtension","d":"<p>Register a valid view extension and its engine.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::flushState","p":"Illuminate/View/Factory.html#method_flushState","d":"<p>Flush all of the factory state like sections and stacks.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::flushStateIfDoneRendering","p":"Illuminate/View/Factory.html#method_flushStateIfDoneRendering","d":"<p>Flush all of the section contents if done rendering.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getExtensions","p":"Illuminate/View/Factory.html#method_getExtensions","d":"<p>Get the extension to engine bindings.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getEngineResolver","p":"Illuminate/View/Factory.html#method_getEngineResolver","d":"<p>Get the engine resolver instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getFinder","p":"Illuminate/View/Factory.html#method_getFinder","d":"<p>Get the view finder instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::setFinder","p":"Illuminate/View/Factory.html#method_setFinder","d":"<p>Set the view finder instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::flushFinderCache","p":"Illuminate/View/Factory.html#method_flushFinderCache","d":"<p>Flush the cache of views located by the finder.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getDispatcher","p":"Illuminate/View/Factory.html#method_getDispatcher","d":"<p>Get the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::setDispatcher","p":"Illuminate/View/Factory.html#method_setDispatcher","d":"<p>Set the event dispatcher instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getContainer","p":"Illuminate/View/Factory.html#method_getContainer","d":"<p>Get the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::setContainer","p":"Illuminate/View/Factory.html#method_setContainer","d":"<p>Set the IoC container instance.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::shared","p":"Illuminate/View/Factory.html#method_shared","d":"<p>Get an item from the shared data.</p>"},{"t":"M","n":"Illuminate\\View\\Factory::getShared","p":"Illuminate/View/Factory.html#method_getShared","d":"<p>Get all of the shared data for the environment.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::__construct","p":"Illuminate/View/FileViewFinder.html#method___construct","d":"<p>Create a new file view loader instance.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::find","p":"Illuminate/View/FileViewFinder.html#method_find","d":"<p>Get the fully qualified location of the view.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::findNamespacedView","p":"Illuminate/View/FileViewFinder.html#method_findNamespacedView","d":"<p>Get the path to a template with a named path.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::parseNamespaceSegments","p":"Illuminate/View/FileViewFinder.html#method_parseNamespaceSegments","d":"<p>Get the segments of a template with a named path.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::findInPaths","p":"Illuminate/View/FileViewFinder.html#method_findInPaths","d":"<p>Find the given view in the list of paths.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getPossibleViewFiles","p":"Illuminate/View/FileViewFinder.html#method_getPossibleViewFiles","d":"<p>Get an array of possible view files.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::addLocation","p":"Illuminate/View/FileViewFinder.html#method_addLocation","d":"<p>Add a location to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::prependLocation","p":"Illuminate/View/FileViewFinder.html#method_prependLocation","d":"<p>Prepend a location to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::resolvePath","p":"Illuminate/View/FileViewFinder.html#method_resolvePath","d":"<p>Resolve the path.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::addNamespace","p":"Illuminate/View/FileViewFinder.html#method_addNamespace","d":"<p>Add a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::prependNamespace","p":"Illuminate/View/FileViewFinder.html#method_prependNamespace","d":"<p>Prepend a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::replaceNamespace","p":"Illuminate/View/FileViewFinder.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::addExtension","p":"Illuminate/View/FileViewFinder.html#method_addExtension","d":"<p>Register an extension with the view finder.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::hasHintInformation","p":"Illuminate/View/FileViewFinder.html#method_hasHintInformation","d":"<p>Returns whether or not the view name has any hint information.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::flush","p":"Illuminate/View/FileViewFinder.html#method_flush","d":"<p>Flush the cache of located views.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getFilesystem","p":"Illuminate/View/FileViewFinder.html#method_getFilesystem","d":"<p>Get the filesystem instance.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::setPaths","p":"Illuminate/View/FileViewFinder.html#method_setPaths","d":"<p>Set the active view paths.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getPaths","p":"Illuminate/View/FileViewFinder.html#method_getPaths","d":"<p>Get the active view paths.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getViews","p":"Illuminate/View/FileViewFinder.html#method_getViews","d":"<p>Get the views that have been located.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getHints","p":"Illuminate/View/FileViewFinder.html#method_getHints","d":"<p>Get the namespace to file path hints.</p>"},{"t":"M","n":"Illuminate\\View\\FileViewFinder::getExtensions","p":"Illuminate/View/FileViewFinder.html#method_getExtensions","d":"<p>Get registered extensions.</p>"},{"t":"M","n":"Illuminate\\View\\InvokableComponentVariable::__construct","p":"Illuminate/View/InvokableComponentVariable.html#method___construct","d":"<p>Create a new variable instance.</p>"},{"t":"M","n":"Illuminate\\View\\InvokableComponentVariable::resolveDisplayableValue","p":"Illuminate/View/InvokableComponentVariable.html#method_resolveDisplayableValue","d":"<p>Resolve the displayable value that the class is deferring.</p>"},{"t":"M","n":"Illuminate\\View\\InvokableComponentVariable::getIterator","p":"Illuminate/View/InvokableComponentVariable.html#method_getIterator","d":"<p>Get an interator instance for the variable.</p>"},{"t":"M","n":"Illuminate\\View\\InvokableComponentVariable::__get","p":"Illuminate/View/InvokableComponentVariable.html#method___get","d":"<p>Dynamically proxy attribute access to the variable.</p>"},{"t":"M","n":"Illuminate\\View\\InvokableComponentVariable::__call","p":"Illuminate/View/InvokableComponentVariable.html#method___call","d":"<p>Dynamically proxy method access to the variable.</p>"},{"t":"M","n":"Illuminate\\View\\InvokableComponentVariable::__invoke","p":"Illuminate/View/InvokableComponentVariable.html#method___invoke","d":"<p>Resolve the variable.</p>"},{"t":"M","n":"Illuminate\\View\\InvokableComponentVariable::__toString","p":"Illuminate/View/InvokableComponentVariable.html#method___toString","d":"<p>Resolve the variable as a string.</p>"},{"t":"M","n":"Illuminate\\View\\Middleware\\ShareErrorsFromSession::__construct","p":"Illuminate/View/Middleware/ShareErrorsFromSession.html#method___construct","d":"<p>Create a new error binder instance.</p>"},{"t":"M","n":"Illuminate\\View\\Middleware\\ShareErrorsFromSession::handle","p":"Illuminate/View/Middleware/ShareErrorsFromSession.html#method_handle","d":"<p>Handle an incoming request.</p>"},{"t":"M","n":"Illuminate\\View\\View::__construct","p":"Illuminate/View/View.html#method___construct","d":"<p>Create a new view instance.</p>"},{"t":"M","n":"Illuminate\\View\\View::fragment","p":"Illuminate/View/View.html#method_fragment","d":"<p>Get the evaluated contents of a given fragment.</p>"},{"t":"M","n":"Illuminate\\View\\View::fragments","p":"Illuminate/View/View.html#method_fragments","d":"<p>Get the evaluated contents for a given array of fragments.</p>"},{"t":"M","n":"Illuminate\\View\\View::fragmentIf","p":"Illuminate/View/View.html#method_fragmentIf","d":"<p>Get the evaluated contents of a given fragment if the given condition is true.</p>"},{"t":"M","n":"Illuminate\\View\\View::fragmentsIf","p":"Illuminate/View/View.html#method_fragmentsIf","d":"<p>Get the evaluated contents for a given array of fragments if the given condition is true.</p>"},{"t":"M","n":"Illuminate\\View\\View::render","p":"Illuminate/View/View.html#method_render","d":"<p>Get the string contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::renderContents","p":"Illuminate/View/View.html#method_renderContents","d":"<p>Get the contents of the view instance.</p>"},{"t":"M","n":"Illuminate\\View\\View::getContents","p":"Illuminate/View/View.html#method_getContents","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::gatherData","p":"Illuminate/View/View.html#method_gatherData","d":"<p>Get the data bound to the view instance.</p>"},{"t":"M","n":"Illuminate\\View\\View::renderSections","p":"Illuminate/View/View.html#method_renderSections","d":"<p>Get the sections of the rendered view.</p>"},{"t":"M","n":"Illuminate\\View\\View::with","p":"Illuminate/View/View.html#method_with","d":"<p>Add a piece of data to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::nest","p":"Illuminate/View/View.html#method_nest","d":"<p>Add a view instance to the view data.</p>"},{"t":"M","n":"Illuminate\\View\\View::withErrors","p":"Illuminate/View/View.html#method_withErrors","d":"<p>Add validation errors to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::formatErrors","p":"Illuminate/View/View.html#method_formatErrors","d":"<p>Parse the given errors into an appropriate value.</p>"},{"t":"M","n":"Illuminate\\View\\View::name","p":"Illuminate/View/View.html#method_name","d":"<p>Get the name of the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::getName","p":"Illuminate/View/View.html#method_getName","d":"<p>Get the name of the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::getData","p":"Illuminate/View/View.html#method_getData","d":"<p>Get the array of view data.</p>"},{"t":"M","n":"Illuminate\\View\\View::getPath","p":"Illuminate/View/View.html#method_getPath","d":"<p>Get the path to the view file.</p>"},{"t":"M","n":"Illuminate\\View\\View::setPath","p":"Illuminate/View/View.html#method_setPath","d":"<p>Set the path to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::getFactory","p":"Illuminate/View/View.html#method_getFactory","d":"<p>Get the view factory instance.</p>"},{"t":"M","n":"Illuminate\\View\\View::getEngine","p":"Illuminate/View/View.html#method_getEngine","d":"<p>Get the view's rendering engine.</p>"},{"t":"M","n":"Illuminate\\View\\View::offsetExists","p":"Illuminate/View/View.html#method_offsetExists","d":"<p>Determine if a piece of data is bound.</p>"},{"t":"M","n":"Illuminate\\View\\View::offsetGet","p":"Illuminate/View/View.html#method_offsetGet","d":"<p>Get a piece of bound data to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::offsetSet","p":"Illuminate/View/View.html#method_offsetSet","d":"<p>Set a piece of data on the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::offsetUnset","p":"Illuminate/View/View.html#method_offsetUnset","d":"<p>Unset a piece of data from the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__get","p":"Illuminate/View/View.html#method___get","d":"<p>Get a piece of data from the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__set","p":"Illuminate/View/View.html#method___set","d":"<p>Set a piece of data on the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__isset","p":"Illuminate/View/View.html#method___isset","d":"<p>Check if a piece of data is bound to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__unset","p":"Illuminate/View/View.html#method___unset","d":"<p>Remove a piece of bound data from the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::__call","p":"Illuminate/View/View.html#method___call","d":"<p>Dynamically bind parameters to the view.</p>"},{"t":"M","n":"Illuminate\\View\\View::toHtml","p":"Illuminate/View/View.html#method_toHtml","d":"<p>Get content as a string of HTML.</p>"},{"t":"M","n":"Illuminate\\View\\View::__toString","p":"Illuminate/View/View.html#method___toString","d":"<p>Get the string contents of the view.</p>"},{"t":"M","n":"Illuminate\\View\\ViewException::report","p":"Illuminate/View/ViewException.html#method_report","d":"<p>Report the exception.</p>"},{"t":"M","n":"Illuminate\\View\\ViewException::render","p":"Illuminate/View/ViewException.html#method_render","d":"<p>Render the exception into an HTTP response.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::find","p":"Illuminate/View/ViewFinderInterface.html#method_find","d":"<p>Get the fully qualified location of the view.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addLocation","p":"Illuminate/View/ViewFinderInterface.html#method_addLocation","d":"<p>Add a location to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_addNamespace","d":"<p>Add a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::prependNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_prependNamespace","d":"<p>Prepend a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::replaceNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addExtension","p":"Illuminate/View/ViewFinderInterface.html#method_addExtension","d":"<p>Add a valid view extension to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::flush","p":"Illuminate/View/ViewFinderInterface.html#method_flush","d":"<p>Flush the cache of located views.</p>"},{"t":"M","n":"Illuminate\\View\\ViewName::normalize","p":"Illuminate/View/ViewName.html#method_normalize","d":"<p>Normalize the given view name.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::register","p":"Illuminate/View/ViewServiceProvider.html#method_register","d":"<p>Register the service provider.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerFactory","p":"Illuminate/View/ViewServiceProvider.html#method_registerFactory","d":"<p>Register the view environment.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::createFactory","p":"Illuminate/View/ViewServiceProvider.html#method_createFactory","d":"<p>Create a new Factory Instance.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerViewFinder","p":"Illuminate/View/ViewServiceProvider.html#method_registerViewFinder","d":"<p>Register the view finder implementation.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerBladeCompiler","p":"Illuminate/View/ViewServiceProvider.html#method_registerBladeCompiler","d":"<p>Register the Blade compiler implementation.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerEngineResolver","p":"Illuminate/View/ViewServiceProvider.html#method_registerEngineResolver","d":"<p>Register the engine resolver instance.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerFileEngine","p":"Illuminate/View/ViewServiceProvider.html#method_registerFileEngine","d":"<p>Register the file engine implementation.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerPhpEngine","p":"Illuminate/View/ViewServiceProvider.html#method_registerPhpEngine","d":"<p>Register the PHP engine implementation.</p>"},{"t":"M","n":"Illuminate\\View\\ViewServiceProvider::registerBladeEngine","p":"Illuminate/View/ViewServiceProvider.html#method_registerBladeEngine","d":"<p>Register the Blade engine implementation.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::create","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_create","d":"<p>Create a new token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::exists","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_exists","d":"<p>Determine if a token record exists and is valid.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::recentlyCreatedToken","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_recentlyCreatedToken","d":"<p>Determine if the given user recently created a password reset token.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::delete","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_delete","d":"<p>Delete a token record.</p>"},{"t":"M","n":"Illuminate\\Auth\\Passwords\\TokenRepositoryInterface::deleteExpired","p":"Illuminate/Auth/Passwords/TokenRepositoryInterface.html#method_deleteExpired","d":"<p>Delete expired tokens.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::get","p":"Illuminate/Bus/BatchRepository.html#method_get","d":"<p>Retrieve a list of batches.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::find","p":"Illuminate/Bus/BatchRepository.html#method_find","d":"<p>Retrieve information about an existing batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::store","p":"Illuminate/Bus/BatchRepository.html#method_store","d":"<p>Store a new pending batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::incrementTotalJobs","p":"Illuminate/Bus/BatchRepository.html#method_incrementTotalJobs","d":"<p>Increment the total number of jobs within the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::decrementPendingJobs","p":"Illuminate/Bus/BatchRepository.html#method_decrementPendingJobs","d":"<p>Decrement the total number of pending jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::incrementFailedJobs","p":"Illuminate/Bus/BatchRepository.html#method_incrementFailedJobs","d":"<p>Increment the total number of failed jobs for the batch.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::markAsFinished","p":"Illuminate/Bus/BatchRepository.html#method_markAsFinished","d":"<p>Mark the batch that has the given ID as finished.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::cancel","p":"Illuminate/Bus/BatchRepository.html#method_cancel","d":"<p>Cancel the batch that has the given ID.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::delete","p":"Illuminate/Bus/BatchRepository.html#method_delete","d":"<p>Delete the batch that has the given ID.</p>"},{"t":"M","n":"Illuminate\\Bus\\BatchRepository::transaction","p":"Illuminate/Bus/BatchRepository.html#method_transaction","d":"<p>Execute the given Closure within a storage specific transaction.</p>"},{"t":"M","n":"Illuminate\\Bus\\PrunableBatchRepository::prune","p":"Illuminate/Bus/PrunableBatchRepository.html#method_prune","d":"<p>Prune all of the entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Console\\CommandMutex::create","p":"Illuminate/Console/CommandMutex.html#method_create","d":"<p>Attempt to obtain a command mutex for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\CommandMutex::exists","p":"Illuminate/Console/CommandMutex.html#method_exists","d":"<p>Determine if a command mutex exists for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\CommandMutex::forget","p":"Illuminate/Console/CommandMutex.html#method_forget","d":"<p>Release the mutex for the given command.</p>"},{"t":"M","n":"Illuminate\\Console\\Contracts\\NewLineAware::newLineWritten","p":"Illuminate/Console/Contracts/NewLineAware.html#method_newLineWritten","d":"<p>Whether a newline has already been written.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\CacheAware::useStore","p":"Illuminate/Console/Scheduling/CacheAware.html#method_useStore","d":"<p>Specify the cache store that should be used.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\EventMutex::create","p":"Illuminate/Console/Scheduling/EventMutex.html#method_create","d":"<p>Attempt to obtain an event mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\EventMutex::exists","p":"Illuminate/Console/Scheduling/EventMutex.html#method_exists","d":"<p>Determine if an event mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\EventMutex::forget","p":"Illuminate/Console/Scheduling/EventMutex.html#method_forget","d":"<p>Clear the event mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\SchedulingMutex::create","p":"Illuminate/Console/Scheduling/SchedulingMutex.html#method_create","d":"<p>Attempt to obtain a scheduling mutex for the given event.</p>"},{"t":"M","n":"Illuminate\\Console\\Scheduling\\SchedulingMutex::exists","p":"Illuminate/Console/Scheduling/SchedulingMutex.html#method_exists","d":"<p>Determine if a scheduling mutex exists for the given event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Authorizable::can","p":"Illuminate/Contracts/Auth/Access/Authorizable.html#method_can","d":"<p>Determine if the entity has a given ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::has","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_has","d":"<p>Determine if a given ability has been defined.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::define","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_define","d":"<p>Define a new ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::resource","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_resource","d":"<p>Define abilities for a resource.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::policy","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_policy","d":"<p>Define a policy class for a given class type.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::before","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_before","d":"<p>Register a callback to run before all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::after","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_after","d":"<p>Register a callback to run after all Gate checks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::allows","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_allows","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::denies","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_denies","d":"<p>Determine if the given ability should be denied for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::check","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_check","d":"<p>Determine if all of the given abilities should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::any","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_any","d":"<p>Determine if any one of the given abilities should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::authorize","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_authorize","d":"<p>Determine if the given ability should be granted for the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::inspect","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_inspect","d":"<p>Inspect the user for the given ability.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::raw","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_raw","d":"<p>Get the raw result from the authorization callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::getPolicyFor","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_getPolicyFor","d":"<p>Get a policy instance for a given class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::forUser","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_forUser","d":"<p>Get a guard instance for the given user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Access\\Gate::abilities","p":"Illuminate/Contracts/Auth/Access/Gate.html#method_abilities","d":"<p>Get all of the defined abilities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthIdentifierName","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthIdentifierName","d":"<p>Get the name of the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthIdentifier","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthIdentifier","d":"<p>Get the unique identifier for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getAuthPassword","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getAuthPassword","d":"<p>Get the password for the user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getRememberToken","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getRememberToken","d":"<p>Get the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::setRememberToken","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_setRememberToken","d":"<p>Set the token value for the &quot;remember me&quot; session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Authenticatable::getRememberTokenName","p":"Illuminate/Contracts/Auth/Authenticatable.html#method_getRememberTokenName","d":"<p>Get the column name for the &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\CanResetPassword::getEmailForPasswordReset","p":"Illuminate/Contracts/Auth/CanResetPassword.html#method_getEmailForPasswordReset","d":"<p>Get the e-mail address where password reset links are sent.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\CanResetPassword::sendPasswordResetNotification","p":"Illuminate/Contracts/Auth/CanResetPassword.html#method_sendPasswordResetNotification","d":"<p>Send the password reset notification.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Factory::guard","p":"Illuminate/Contracts/Auth/Factory.html#method_guard","d":"<p>Get a guard instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Factory::shouldUse","p":"Illuminate/Contracts/Auth/Factory.html#method_shouldUse","d":"<p>Set the default guard the factory should serve.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::check","p":"Illuminate/Contracts/Auth/Guard.html#method_check","d":"<p>Determine if the current user is authenticated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::guest","p":"Illuminate/Contracts/Auth/Guard.html#method_guest","d":"<p>Determine if the current user is a guest.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::user","p":"Illuminate/Contracts/Auth/Guard.html#method_user","d":"<p>Get the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::id","p":"Illuminate/Contracts/Auth/Guard.html#method_id","d":"<p>Get the ID for the currently authenticated user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::validate","p":"Illuminate/Contracts/Auth/Guard.html#method_validate","d":"<p>Validate a user's credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::hasUser","p":"Illuminate/Contracts/Auth/Guard.html#method_hasUser","d":"<p>Determine if the guard has a user instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\Guard::setUser","p":"Illuminate/Contracts/Auth/Guard.html#method_setUser","d":"<p>Set the current user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail::hasVerifiedEmail","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html#method_hasVerifiedEmail","d":"<p>Determine if the user has verified their email address.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail::markEmailAsVerified","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html#method_markEmailAsVerified","d":"<p>Mark the given user's email as verified.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail::sendEmailVerificationNotification","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html#method_sendEmailVerificationNotification","d":"<p>Send the email verification notification.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\MustVerifyEmail::getEmailForVerification","p":"Illuminate/Contracts/Auth/MustVerifyEmail.html#method_getEmailForVerification","d":"<p>Get the email address that should be used for verification.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::sendResetLink","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_sendResetLink","d":"<p>Send a password reset link to a user.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBroker::reset","p":"Illuminate/Contracts/Auth/PasswordBroker.html#method_reset","d":"<p>Reset the password for the given token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\PasswordBrokerFactory::broker","p":"Illuminate/Contracts/Auth/PasswordBrokerFactory.html#method_broker","d":"<p>Get a password broker instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::attempt","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_attempt","d":"<p>Attempt to authenticate a user using the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::once","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_once","d":"<p>Log a user into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::login","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_login","d":"<p>Log a user into the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::loginUsingId","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_loginUsingId","d":"<p>Log the given user ID into the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::onceUsingId","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_onceUsingId","d":"<p>Log the given user ID into the application without sessions or cookies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::viaRemember","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_viaRemember","d":"<p>Determine if the user was authenticated via &quot;remember me&quot; cookie.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\StatefulGuard::logout","p":"Illuminate/Contracts/Auth/StatefulGuard.html#method_logout","d":"<p>Log the user out of the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth::basic","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html#method_basic","d":"<p>Attempt to authenticate using HTTP Basic Auth.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\SupportsBasicAuth::onceBasic","p":"Illuminate/Contracts/Auth/SupportsBasicAuth.html#method_onceBasic","d":"<p>Perform a stateless HTTP Basic login attempt.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveById","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveById","d":"<p>Retrieve a user by their unique identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveByToken","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveByToken","d":"<p>Retrieve a user by their unique identifier and &quot;remember me&quot; token.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::updateRememberToken","p":"Illuminate/Contracts/Auth/UserProvider.html#method_updateRememberToken","d":"<p>Update the &quot;remember me&quot; token for the given user in storage.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::retrieveByCredentials","p":"Illuminate/Contracts/Auth/UserProvider.html#method_retrieveByCredentials","d":"<p>Retrieve a user by the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Auth\\UserProvider::validateCredentials","p":"Illuminate/Contracts/Auth/UserProvider.html#method_validateCredentials","d":"<p>Validate a user against the given credentials.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::auth","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_auth","d":"<p>Authenticate the incoming request for a given channel.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::validAuthenticationResponse","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_validAuthenticationResponse","d":"<p>Return the valid authentication response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Broadcaster::broadcast","p":"Illuminate/Contracts/Broadcasting/Broadcaster.html#method_broadcast","d":"<p>Broadcast the given event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\Factory::connection","p":"Illuminate/Contracts/Broadcasting/Factory.html#method_connection","d":"<p>Get a broadcaster implementation by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\HasBroadcastChannel::broadcastChannelRoute","p":"Illuminate/Contracts/Broadcasting/HasBroadcastChannel.html#method_broadcastChannelRoute","d":"<p>Get the broadcast channel route definition that is associated with the given entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\HasBroadcastChannel::broadcastChannel","p":"Illuminate/Contracts/Broadcasting/HasBroadcastChannel.html#method_broadcastChannel","d":"<p>Get the broadcast channel name that is associated with the given entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast::broadcastOn","p":"Illuminate/Contracts/Broadcasting/ShouldBroadcast.html#method_broadcastOn","d":"<p>Get the channels the event should broadcast on.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatch","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatch","d":"<p>Dispatch a command to its appropriate handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatchSync","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatchSync","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::dispatchNow","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_dispatchNow","d":"<p>Dispatch a command to its appropriate handler in the current process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::hasCommandHandler","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_hasCommandHandler","d":"<p>Determine if the given command has a handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::getCommandHandler","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_getCommandHandler","d":"<p>Retrieve the handler for a command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::pipeThrough","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_pipeThrough","d":"<p>Set the pipes commands should be piped through before dispatching.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\Dispatcher::map","p":"Illuminate/Contracts/Bus/Dispatcher.html#method_map","d":"<p>Map a command to a handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher::findBatch","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html#method_findBatch","d":"<p>Attempt to find the batch with the given ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher::batch","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html#method_batch","d":"<p>Create a new batch of queueable jobs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Bus\\QueueingDispatcher::dispatchToQueue","p":"Illuminate/Contracts/Bus/QueueingDispatcher.html#method_dispatchToQueue","d":"<p>Dispatch a command to its appropriate handler behind a queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Factory::store","p":"Illuminate/Contracts/Cache/Factory.html#method_store","d":"<p>Get a cache store instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::get","p":"Illuminate/Contracts/Cache/Lock.html#method_get","d":"<p>Attempt to acquire the lock.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::block","p":"Illuminate/Contracts/Cache/Lock.html#method_block","d":"<p>Attempt to acquire the lock for the given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::release","p":"Illuminate/Contracts/Cache/Lock.html#method_release","d":"<p>Release the lock.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::owner","p":"Illuminate/Contracts/Cache/Lock.html#method_owner","d":"<p>Returns the current owner of the lock.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Lock::forceRelease","p":"Illuminate/Contracts/Cache/Lock.html#method_forceRelease","d":"<p>Releases this lock in disregard of ownership.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\LockProvider::lock","p":"Illuminate/Contracts/Cache/LockProvider.html#method_lock","d":"<p>Get a lock instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\LockProvider::restoreLock","p":"Illuminate/Contracts/Cache/LockProvider.html#method_restoreLock","d":"<p>Restore a lock instance using the owner identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::pull","p":"Illuminate/Contracts/Cache/Repository.html#method_pull","d":null},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::put","p":"Illuminate/Contracts/Cache/Repository.html#method_put","d":"<p>Store an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::add","p":"Illuminate/Contracts/Cache/Repository.html#method_add","d":"<p>Store an item in the cache if the key does not exist.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::increment","p":"Illuminate/Contracts/Cache/Repository.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::decrement","p":"Illuminate/Contracts/Cache/Repository.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::forever","p":"Illuminate/Contracts/Cache/Repository.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::remember","p":"Illuminate/Contracts/Cache/Repository.html#method_remember","d":null},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::sear","p":"Illuminate/Contracts/Cache/Repository.html#method_sear","d":null},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::rememberForever","p":"Illuminate/Contracts/Cache/Repository.html#method_rememberForever","d":null},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::forget","p":"Illuminate/Contracts/Cache/Repository.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Repository::getStore","p":"Illuminate/Contracts/Cache/Repository.html#method_getStore","d":"<p>Get the cache store implementation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::get","p":"Illuminate/Contracts/Cache/Store.html#method_get","d":"<p>Retrieve an item from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::many","p":"Illuminate/Contracts/Cache/Store.html#method_many","d":"<p>Retrieve multiple items from the cache by key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::put","p":"Illuminate/Contracts/Cache/Store.html#method_put","d":"<p>Store an item in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::putMany","p":"Illuminate/Contracts/Cache/Store.html#method_putMany","d":"<p>Store multiple items in the cache for a given number of seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::increment","p":"Illuminate/Contracts/Cache/Store.html#method_increment","d":"<p>Increment the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::decrement","p":"Illuminate/Contracts/Cache/Store.html#method_decrement","d":"<p>Decrement the value of an item in the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::forever","p":"Illuminate/Contracts/Cache/Store.html#method_forever","d":"<p>Store an item in the cache indefinitely.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::forget","p":"Illuminate/Contracts/Cache/Store.html#method_forget","d":"<p>Remove an item from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::flush","p":"Illuminate/Contracts/Cache/Store.html#method_flush","d":"<p>Remove all items from the cache.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cache\\Store::getPrefix","p":"Illuminate/Contracts/Cache/Store.html#method_getPrefix","d":"<p>Get the cache key prefix.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::has","p":"Illuminate/Contracts/Config/Repository.html#method_has","d":"<p>Determine if the given configuration value exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::get","p":"Illuminate/Contracts/Config/Repository.html#method_get","d":"<p>Get the specified configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::all","p":"Illuminate/Contracts/Config/Repository.html#method_all","d":"<p>Get all of the configuration items for the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::set","p":"Illuminate/Contracts/Config/Repository.html#method_set","d":"<p>Set a given configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::prepend","p":"Illuminate/Contracts/Config/Repository.html#method_prepend","d":"<p>Prepend a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Config\\Repository::push","p":"Illuminate/Contracts/Config/Repository.html#method_push","d":"<p>Push a value onto an array configuration value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Application::call","p":"Illuminate/Contracts/Console/Application.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Application::output","p":"Illuminate/Contracts/Console/Application.html#method_output","d":"<p>Get the output from the last command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::bootstrap","p":"Illuminate/Contracts/Console/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for artisan commands.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::handle","p":"Illuminate/Contracts/Console/Kernel.html#method_handle","d":"<p>Handle an incoming console command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::call","p":"Illuminate/Contracts/Console/Kernel.html#method_call","d":"<p>Run an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::queue","p":"Illuminate/Contracts/Console/Kernel.html#method_queue","d":"<p>Queue an Artisan console command by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::all","p":"Illuminate/Contracts/Console/Kernel.html#method_all","d":"<p>Get all of the commands registered with the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::output","p":"Illuminate/Contracts/Console/Kernel.html#method_output","d":"<p>Get the output for the last run command.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Console\\Kernel::terminate","p":"Illuminate/Contracts/Console/Kernel.html#method_terminate","d":"<p>Terminate the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bound","p":"Illuminate/Contracts/Container/Container.html#method_bound","d":"<p>Determine if the given abstract type has been bound.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::alias","p":"Illuminate/Contracts/Container/Container.html#method_alias","d":"<p>Alias a type to a different name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::tag","p":"Illuminate/Contracts/Container/Container.html#method_tag","d":"<p>Assign a set of tags to a given binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::tagged","p":"Illuminate/Contracts/Container/Container.html#method_tagged","d":"<p>Resolve all of the bindings for a given tag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bind","p":"Illuminate/Contracts/Container/Container.html#method_bind","d":"<p>Register a binding with the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bindMethod","p":"Illuminate/Contracts/Container/Container.html#method_bindMethod","d":"<p>Bind a callback to resolve with Container::call.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::bindIf","p":"Illuminate/Contracts/Container/Container.html#method_bindIf","d":"<p>Register a binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::singleton","p":"Illuminate/Contracts/Container/Container.html#method_singleton","d":"<p>Register a shared binding in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::singletonIf","p":"Illuminate/Contracts/Container/Container.html#method_singletonIf","d":"<p>Register a shared binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::scoped","p":"Illuminate/Contracts/Container/Container.html#method_scoped","d":"<p>Register a scoped binding in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::scopedIf","p":"Illuminate/Contracts/Container/Container.html#method_scopedIf","d":"<p>Register a scoped binding if it hasn't already been registered.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::extend","p":"Illuminate/Contracts/Container/Container.html#method_extend","d":"<p>&quot;Extend&quot; an abstract type in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::instance","p":"Illuminate/Contracts/Container/Container.html#method_instance","d":"<p>Register an existing instance as shared in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::addContextualBinding","p":"Illuminate/Contracts/Container/Container.html#method_addContextualBinding","d":"<p>Add a contextual binding to the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::when","p":"Illuminate/Contracts/Container/Container.html#method_when","d":"<p>Define a contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::factory","p":"Illuminate/Contracts/Container/Container.html#method_factory","d":"<p>Get a closure to resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::flush","p":"Illuminate/Contracts/Container/Container.html#method_flush","d":"<p>Flush the container of all bindings and resolved instances.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::make","p":"Illuminate/Contracts/Container/Container.html#method_make","d":"<p>Resolve the given type from the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::call","p":"Illuminate/Contracts/Container/Container.html#method_call","d":"<p>Call the given Closure / class@method and inject its dependencies.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::resolved","p":"Illuminate/Contracts/Container/Container.html#method_resolved","d":"<p>Determine if the given abstract type has been resolved.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::beforeResolving","p":"Illuminate/Contracts/Container/Container.html#method_beforeResolving","d":"<p>Register a new before resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::resolving","p":"Illuminate/Contracts/Container/Container.html#method_resolving","d":"<p>Register a new resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\Container::afterResolving","p":"Illuminate/Contracts/Container/Container.html#method_afterResolving","d":"<p>Register a new after resolving callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::needs","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_needs","d":"<p>Define the abstract target that depends on the context.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::give","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_give","d":"<p>Define the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::giveTagged","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_giveTagged","d":"<p>Define tagged services to be used as the implementation for the contextual binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Container\\ContextualBindingBuilder::giveConfig","p":"Illuminate/Contracts/Container/ContextualBindingBuilder.html#method_giveConfig","d":"<p>Specify the configuration item to bind as a primitive.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::make","p":"Illuminate/Contracts/Cookie/Factory.html#method_make","d":"<p>Create a new cookie instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::forever","p":"Illuminate/Contracts/Cookie/Factory.html#method_forever","d":"<p>Create a cookie that lasts &quot;forever&quot; (five years).</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\Factory::forget","p":"Illuminate/Contracts/Cookie/Factory.html#method_forget","d":"<p>Expire the given cookie.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::queue","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_queue","d":"<p>Queue a cookie to send with the next response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::unqueue","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_unqueue","d":"<p>Remove a cookie from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Cookie\\QueueingFactory::getQueuedCookies","p":"Illuminate/Contracts/Cookie/QueueingFactory.html#method_getQueuedCookies","d":"<p>Get the cookies which have been queued for the next request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\Castable::castUsing","p":"Illuminate/Contracts/Database/Eloquent/Castable.html#method_castUsing","d":null},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsAttributes::get","p":"Illuminate/Contracts/Database/Eloquent/CastsAttributes.html#method_get","d":"<p>Transform the attribute from the underlying model values.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsAttributes::set","p":"Illuminate/Contracts/Database/Eloquent/CastsAttributes.html#method_set","d":"<p>Transform the attribute to its underlying model values.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\CastsInboundAttributes::set","p":"Illuminate/Contracts/Database/Eloquent/CastsInboundAttributes.html#method_set","d":"<p>Transform the attribute to its underlying model values.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\DeviatesCastableAttributes::increment","p":"Illuminate/Contracts/Database/Eloquent/DeviatesCastableAttributes.html#method_increment","d":"<p>Increment the attribute.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\DeviatesCastableAttributes::decrement","p":"Illuminate/Contracts/Database/Eloquent/DeviatesCastableAttributes.html#method_decrement","d":"<p>Decrement the attribute.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\SerializesCastableAttributes::serialize","p":"Illuminate/Contracts/Database/Eloquent/SerializesCastableAttributes.html#method_serialize","d":"<p>Serialize the attribute when converting the model to an array.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\SupportsPartialRelations::ofMany","p":"Illuminate/Contracts/Database/Eloquent/SupportsPartialRelations.html#method_ofMany","d":"<p>Indicate that the relation is a single result of a larger one-to-many relationship.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\SupportsPartialRelations::isOneOfMany","p":"Illuminate/Contracts/Database/Eloquent/SupportsPartialRelations.html#method_isOneOfMany","d":"<p>Determine whether the relationship is a one-of-many relationship.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Eloquent\\SupportsPartialRelations::getOneOfManySubQuery","p":"Illuminate/Contracts/Database/Eloquent/SupportsPartialRelations.html#method_getOneOfManySubQuery","d":"<p>Get the one of many inner join subselect query builder instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Database\\Query\\Expression::getValue","p":"Illuminate/Contracts/Database/Query/Expression.html#method_getValue","d":"<p>Get the value of the expression.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::report","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_report","d":"<p>Report or log an exception.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::shouldReport","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_shouldReport","d":"<p>Determine if the exception should be reported.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::render","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_render","d":"<p>Render an exception into an HTTP response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Debug\\ExceptionHandler::renderForConsole","p":"Illuminate/Contracts/Debug/ExceptionHandler.html#method_renderForConsole","d":"<p>Render an exception to the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::encrypt","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_encrypt","d":"<p>Encrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::decrypt","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_decrypt","d":"<p>Decrypt the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\Encrypter::getKey","p":"Illuminate/Contracts/Encryption/Encrypter.html#method_getKey","d":"<p>Get the encryption key that the encrypter is currently using.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\StringEncrypter::encryptString","p":"Illuminate/Contracts/Encryption/StringEncrypter.html#method_encryptString","d":"<p>Encrypt a string without serialization.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Encryption\\StringEncrypter::decryptString","p":"Illuminate/Contracts/Encryption/StringEncrypter.html#method_decryptString","d":"<p>Decrypt the given string without unserialization.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::listen","p":"Illuminate/Contracts/Events/Dispatcher.html#method_listen","d":"<p>Register an event listener with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::hasListeners","p":"Illuminate/Contracts/Events/Dispatcher.html#method_hasListeners","d":"<p>Determine if a given event has listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::subscribe","p":"Illuminate/Contracts/Events/Dispatcher.html#method_subscribe","d":"<p>Register an event subscriber with the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::until","p":"Illuminate/Contracts/Events/Dispatcher.html#method_until","d":"<p>Dispatch an event until the first non-null response is returned.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::dispatch","p":"Illuminate/Contracts/Events/Dispatcher.html#method_dispatch","d":"<p>Dispatch an event and call the listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::push","p":"Illuminate/Contracts/Events/Dispatcher.html#method_push","d":"<p>Register an event and payload to be fired later.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::flush","p":"Illuminate/Contracts/Events/Dispatcher.html#method_flush","d":"<p>Flush a set of pushed events.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::forget","p":"Illuminate/Contracts/Events/Dispatcher.html#method_forget","d":"<p>Remove a set of listeners from the dispatcher.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Events\\Dispatcher::forgetPushed","p":"Illuminate/Contracts/Events/Dispatcher.html#method_forgetPushed","d":"<p>Forget all of the queued listeners.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Cloud::url","p":"Illuminate/Contracts/Filesystem/Cloud.html#method_url","d":"<p>Get the URL for the file at the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Factory::disk","p":"Illuminate/Contracts/Filesystem/Factory.html#method_disk","d":"<p>Get a filesystem implementation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::exists","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_exists","d":"<p>Determine if a file exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::get","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_get","d":"<p>Get the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::readStream","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_readStream","d":"<p>Get a resource to read the file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::put","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_put","d":"<p>Write the contents of a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::writeStream","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_writeStream","d":"<p>Write a new file using a stream.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::getVisibility","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_getVisibility","d":"<p>Get the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::setVisibility","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_setVisibility","d":"<p>Set the visibility for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::prepend","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_prepend","d":"<p>Prepend to a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::append","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_append","d":"<p>Append to a file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::delete","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_delete","d":"<p>Delete the file at a given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::copy","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_copy","d":"<p>Copy a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::move","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_move","d":"<p>Move a file to a new location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::size","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_size","d":"<p>Get the file size of a given file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::lastModified","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_lastModified","d":"<p>Get the file's last modification time.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::files","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_files","d":"<p>Get an array of all files in a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::allFiles","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_allFiles","d":"<p>Get all of the files from the given directory (recursive).</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::directories","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_directories","d":"<p>Get all of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::allDirectories","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_allDirectories","d":"<p>Get all (recursive) of the directories within a given directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::makeDirectory","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_makeDirectory","d":"<p>Create a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Filesystem\\Filesystem::deleteDirectory","p":"Illuminate/Contracts/Filesystem/Filesystem.html#method_deleteDirectory","d":"<p>Recursively delete a directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::version","p":"Illuminate/Contracts/Foundation/Application.html#method_version","d":"<p>Get the version number of the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::basePath","p":"Illuminate/Contracts/Foundation/Application.html#method_basePath","d":"<p>Get the base path of the Laravel installation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::bootstrapPath","p":"Illuminate/Contracts/Foundation/Application.html#method_bootstrapPath","d":"<p>Get the path to the bootstrap directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::configPath","p":"Illuminate/Contracts/Foundation/Application.html#method_configPath","d":"<p>Get the path to the application configuration files.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::databasePath","p":"Illuminate/Contracts/Foundation/Application.html#method_databasePath","d":"<p>Get the path to the database directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::langPath","p":"Illuminate/Contracts/Foundation/Application.html#method_langPath","d":"<p>Get the path to the language files.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::publicPath","p":"Illuminate/Contracts/Foundation/Application.html#method_publicPath","d":"<p>Get the path to the public directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::resourcePath","p":"Illuminate/Contracts/Foundation/Application.html#method_resourcePath","d":"<p>Get the path to the resources directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::storagePath","p":"Illuminate/Contracts/Foundation/Application.html#method_storagePath","d":"<p>Get the path to the storage directory.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::environment","p":"Illuminate/Contracts/Foundation/Application.html#method_environment","d":"<p>Get or check the current application environment.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::runningInConsole","p":"Illuminate/Contracts/Foundation/Application.html#method_runningInConsole","d":"<p>Determine if the application is running in the console.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::runningUnitTests","p":"Illuminate/Contracts/Foundation/Application.html#method_runningUnitTests","d":"<p>Determine if the application is running unit tests.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::hasDebugModeEnabled","p":"Illuminate/Contracts/Foundation/Application.html#method_hasDebugModeEnabled","d":"<p>Determine if the application is running with debug mode enabled.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::maintenanceMode","p":"Illuminate/Contracts/Foundation/Application.html#method_maintenanceMode","d":"<p>Get an instance of the maintenance mode manager implementation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::isDownForMaintenance","p":"Illuminate/Contracts/Foundation/Application.html#method_isDownForMaintenance","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::registerConfiguredProviders","p":"Illuminate/Contracts/Foundation/Application.html#method_registerConfiguredProviders","d":"<p>Register all of the configured providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::register","p":"Illuminate/Contracts/Foundation/Application.html#method_register","d":"<p>Register a service provider with the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::registerDeferredProvider","p":"Illuminate/Contracts/Foundation/Application.html#method_registerDeferredProvider","d":"<p>Register a deferred provider and service.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::resolveProvider","p":"Illuminate/Contracts/Foundation/Application.html#method_resolveProvider","d":"<p>Resolve a service provider instance from the class name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::boot","p":"Illuminate/Contracts/Foundation/Application.html#method_boot","d":"<p>Boot the application's service providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::booting","p":"Illuminate/Contracts/Foundation/Application.html#method_booting","d":"<p>Register a new boot listener.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::booted","p":"Illuminate/Contracts/Foundation/Application.html#method_booted","d":"<p>Register a new &quot;booted&quot; listener.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::bootstrapWith","p":"Illuminate/Contracts/Foundation/Application.html#method_bootstrapWith","d":"<p>Run the given array of bootstrap classes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::getLocale","p":"Illuminate/Contracts/Foundation/Application.html#method_getLocale","d":"<p>Get the current application locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::getNamespace","p":"Illuminate/Contracts/Foundation/Application.html#method_getNamespace","d":"<p>Get the application namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::getProviders","p":"Illuminate/Contracts/Foundation/Application.html#method_getProviders","d":"<p>Get the registered service provider instances if any exist.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::hasBeenBootstrapped","p":"Illuminate/Contracts/Foundation/Application.html#method_hasBeenBootstrapped","d":"<p>Determine if the application has been bootstrapped before.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::loadDeferredProviders","p":"Illuminate/Contracts/Foundation/Application.html#method_loadDeferredProviders","d":"<p>Load and boot all of the remaining deferred providers.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::setLocale","p":"Illuminate/Contracts/Foundation/Application.html#method_setLocale","d":"<p>Set the current application locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::shouldSkipMiddleware","p":"Illuminate/Contracts/Foundation/Application.html#method_shouldSkipMiddleware","d":"<p>Determine if middleware has been disabled for the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::terminating","p":"Illuminate/Contracts/Foundation/Application.html#method_terminating","d":"<p>Register a terminating callback with the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\Application::terminate","p":"Illuminate/Contracts/Foundation/Application.html#method_terminate","d":"<p>Terminate the application.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesConfiguration::configurationIsCached","p":"Illuminate/Contracts/Foundation/CachesConfiguration.html#method_configurationIsCached","d":"<p>Determine if the application configuration is cached.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesConfiguration::getCachedConfigPath","p":"Illuminate/Contracts/Foundation/CachesConfiguration.html#method_getCachedConfigPath","d":"<p>Get the path to the configuration cache file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesConfiguration::getCachedServicesPath","p":"Illuminate/Contracts/Foundation/CachesConfiguration.html#method_getCachedServicesPath","d":"<p>Get the path to the cached services.php file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesRoutes::routesAreCached","p":"Illuminate/Contracts/Foundation/CachesRoutes.html#method_routesAreCached","d":"<p>Determine if the application routes are cached.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\CachesRoutes::getCachedRoutesPath","p":"Illuminate/Contracts/Foundation/CachesRoutes.html#method_getCachedRoutesPath","d":"<p>Get the path to the routes cache file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\ExceptionRenderer::render","p":"Illuminate/Contracts/Foundation/ExceptionRenderer.html#method_render","d":"<p>Renders the given exception as HTML.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode::activate","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html#method_activate","d":"<p>Take the application down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode::deactivate","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html#method_deactivate","d":"<p>Take the application out of maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode::active","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html#method_active","d":"<p>Determine if the application is currently down for maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Foundation\\MaintenanceMode::data","p":"Illuminate/Contracts/Foundation/MaintenanceMode.html#method_data","d":"<p>Get the data array which was provided when the application was placed into maintenance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::info","p":"Illuminate/Contracts/Hashing/Hasher.html#method_info","d":"<p>Get information about the given hashed value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::make","p":"Illuminate/Contracts/Hashing/Hasher.html#method_make","d":"<p>Hash the given value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::check","p":"Illuminate/Contracts/Hashing/Hasher.html#method_check","d":"<p>Check the given plain value against a hash.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Hashing\\Hasher::needsRehash","p":"Illuminate/Contracts/Hashing/Hasher.html#method_needsRehash","d":"<p>Check if the given hash has been hashed using the given options.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::bootstrap","p":"Illuminate/Contracts/Http/Kernel.html#method_bootstrap","d":"<p>Bootstrap the application for HTTP requests.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::handle","p":"Illuminate/Contracts/Http/Kernel.html#method_handle","d":"<p>Handle an incoming HTTP request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::terminate","p":"Illuminate/Contracts/Http/Kernel.html#method_terminate","d":"<p>Perform any final actions for the request lifecycle.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Http\\Kernel::getApplication","p":"Illuminate/Contracts/Http/Kernel.html#method_getApplication","d":"<p>Get the Laravel application instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Attachable::toMailAttachment","p":"Illuminate/Contracts/Mail/Attachable.html#method_toMailAttachment","d":"<p>Get an attachment instance for this entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Factory::mailer","p":"Illuminate/Contracts/Mail/Factory.html#method_mailer","d":"<p>Get a mailer instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\MailQueue::queue","p":"Illuminate/Contracts/Mail/MailQueue.html#method_queue","d":"<p>Queue a new e-mail message for sending.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\MailQueue::later","p":"Illuminate/Contracts/Mail/MailQueue.html#method_later","d":"<p>Queue a new e-mail message for sending after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::send","p":"Illuminate/Contracts/Mail/Mailable.html#method_send","d":"<p>Send the message using the given mailer.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::queue","p":"Illuminate/Contracts/Mail/Mailable.html#method_queue","d":"<p>Queue the given message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::later","p":"Illuminate/Contracts/Mail/Mailable.html#method_later","d":"<p>Deliver the queued message after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::cc","p":"Illuminate/Contracts/Mail/Mailable.html#method_cc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::bcc","p":"Illuminate/Contracts/Mail/Mailable.html#method_bcc","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::to","p":"Illuminate/Contracts/Mail/Mailable.html#method_to","d":"<p>Set the recipients of the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::locale","p":"Illuminate/Contracts/Mail/Mailable.html#method_locale","d":"<p>Set the locale of the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailable::mailer","p":"Illuminate/Contracts/Mail/Mailable.html#method_mailer","d":"<p>Set the name of the mailer that should be used to send the message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::to","p":"Illuminate/Contracts/Mail/Mailer.html#method_to","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::bcc","p":"Illuminate/Contracts/Mail/Mailer.html#method_bcc","d":"<p>Begin the process of mailing a mailable class instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::raw","p":"Illuminate/Contracts/Mail/Mailer.html#method_raw","d":"<p>Send a new message with only a raw text part.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Mail\\Mailer::send","p":"Illuminate/Contracts/Mail/Mailer.html#method_send","d":"<p>Send a new message using a view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Dispatcher::send","p":"Illuminate/Contracts/Notifications/Dispatcher.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Dispatcher::sendNow","p":"Illuminate/Contracts/Notifications/Dispatcher.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::channel","p":"Illuminate/Contracts/Notifications/Factory.html#method_channel","d":"<p>Get a channel instance by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::send","p":"Illuminate/Contracts/Notifications/Factory.html#method_send","d":"<p>Send the given notification to the given notifiable entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Notifications\\Factory::sendNow","p":"Illuminate/Contracts/Notifications/Factory.html#method_sendNow","d":"<p>Send the given notification immediately.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::url","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_url","d":"<p>Get the URL for a given cursor.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::appends","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::fragment","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::withQueryString","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_withQueryString","d":"<p>Add all current query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::previousPageUrl","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::nextPageUrl","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_nextPageUrl","d":"<p>The URL for the next page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::items","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_items","d":"<p>Get all of the items being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::previousCursor","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_previousCursor","d":"<p>Get the &quot;cursor&quot; of the previous set of items.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::nextCursor","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_nextCursor","d":"<p>Get the &quot;cursor&quot; of the next set of items.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::perPage","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_perPage","d":"<p>Determine how many items are being shown per page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::cursor","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_cursor","d":"<p>Get the current cursor being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::hasPages","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::path","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_path","d":"<p>Get the base path for paginator generated URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::isEmpty","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty or not.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::isNotEmpty","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_isNotEmpty","d":"<p>Determine if the list of items is not empty.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\CursorPaginator::render","p":"Illuminate/Contracts/Pagination/CursorPaginator.html#method_render","d":"<p>Render the paginator using a given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::getUrlRange","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_getUrlRange","d":"<p>Create a range of pagination URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::total","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_total","d":"<p>Determine the total number of items in the data store.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\LengthAwarePaginator::lastPage","p":"Illuminate/Contracts/Pagination/LengthAwarePaginator.html#method_lastPage","d":"<p>Get the page number of the last available page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::url","p":"Illuminate/Contracts/Pagination/Paginator.html#method_url","d":"<p>Get the URL for a given page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::appends","p":"Illuminate/Contracts/Pagination/Paginator.html#method_appends","d":"<p>Add a set of query string values to the paginator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::fragment","p":"Illuminate/Contracts/Pagination/Paginator.html#method_fragment","d":"<p>Get / set the URL fragment to be appended to URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::nextPageUrl","p":"Illuminate/Contracts/Pagination/Paginator.html#method_nextPageUrl","d":"<p>The URL for the next page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::previousPageUrl","p":"Illuminate/Contracts/Pagination/Paginator.html#method_previousPageUrl","d":"<p>Get the URL for the previous page, or null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::items","p":"Illuminate/Contracts/Pagination/Paginator.html#method_items","d":"<p>Get all of the items being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::firstItem","p":"Illuminate/Contracts/Pagination/Paginator.html#method_firstItem","d":"<p>Get the &quot;index&quot; of the first item being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::lastItem","p":"Illuminate/Contracts/Pagination/Paginator.html#method_lastItem","d":"<p>Get the &quot;index&quot; of the last item being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::perPage","p":"Illuminate/Contracts/Pagination/Paginator.html#method_perPage","d":"<p>Determine how many items are being shown per page.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::currentPage","p":"Illuminate/Contracts/Pagination/Paginator.html#method_currentPage","d":"<p>Determine the current page being paginated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::hasPages","p":"Illuminate/Contracts/Pagination/Paginator.html#method_hasPages","d":"<p>Determine if there are enough items to split into multiple pages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::hasMorePages","p":"Illuminate/Contracts/Pagination/Paginator.html#method_hasMorePages","d":"<p>Determine if there are more items in the data store.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::path","p":"Illuminate/Contracts/Pagination/Paginator.html#method_path","d":"<p>Get the base path for paginator generated URLs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::isEmpty","p":"Illuminate/Contracts/Pagination/Paginator.html#method_isEmpty","d":"<p>Determine if the list of items is empty or not.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::isNotEmpty","p":"Illuminate/Contracts/Pagination/Paginator.html#method_isNotEmpty","d":"<p>Determine if the list of items is not empty.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pagination\\Paginator::render","p":"Illuminate/Contracts/Pagination/Paginator.html#method_render","d":"<p>Render the paginator using a given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Hub::pipe","p":"Illuminate/Contracts/Pipeline/Hub.html#method_pipe","d":"<p>Send an object through one of the available pipelines.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::send","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_send","d":"<p>Set the traveler object being sent on the pipeline.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::through","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_through","d":"<p>Set the stops of the pipeline.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::via","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_via","d":"<p>Set the method to call on the stops.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Pipeline\\Pipeline::then","p":"Illuminate/Contracts/Pipeline/Pipeline.html#method_then","d":"<p>Run the pipeline with a final destination callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::id","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_id","d":"<p>Get the process ID if the process is still running.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::signal","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_signal","d":"<p>Send a signal to the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::running","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_running","d":"<p>Determine if the process is still running.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::output","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_output","d":"<p>Get the standard output for the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::errorOutput","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_errorOutput","d":"<p>Get the error output for the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::latestOutput","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_latestOutput","d":"<p>Get the latest standard output for the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::latestErrorOutput","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_latestErrorOutput","d":"<p>Get the latest error output for the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\InvokedProcess::wait","p":"Illuminate/Contracts/Process/InvokedProcess.html#method_wait","d":"<p>Wait for the process to finish.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::command","p":"Illuminate/Contracts/Process/ProcessResult.html#method_command","d":"<p>Get the original command executed by the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::successful","p":"Illuminate/Contracts/Process/ProcessResult.html#method_successful","d":"<p>Determine if the process was successful.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::failed","p":"Illuminate/Contracts/Process/ProcessResult.html#method_failed","d":"<p>Determine if the process failed.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::exitCode","p":"Illuminate/Contracts/Process/ProcessResult.html#method_exitCode","d":"<p>Get the exit code of the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::output","p":"Illuminate/Contracts/Process/ProcessResult.html#method_output","d":"<p>Get the standard output of the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::errorOutput","p":"Illuminate/Contracts/Process/ProcessResult.html#method_errorOutput","d":"<p>Get the error output of the process.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::throw","p":"Illuminate/Contracts/Process/ProcessResult.html#method_throw","d":"<p>Throw an exception if the process failed.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Process\\ProcessResult::throwIf","p":"Illuminate/Contracts/Process/ProcessResult.html#method_throwIf","d":"<p>Throw an exception if the process failed and the given condition is true.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\ClearableQueue::clear","p":"Illuminate/Contracts/Queue/ClearableQueue.html#method_clear","d":"<p>Delete all of the jobs from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\EntityResolver::resolve","p":"Illuminate/Contracts/Queue/EntityResolver.html#method_resolve","d":"<p>Resolve the entity for the given ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Factory::connection","p":"Illuminate/Contracts/Queue/Factory.html#method_connection","d":"<p>Resolve a queue connection instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::uuid","p":"Illuminate/Contracts/Queue/Job.html#method_uuid","d":"<p>Get the UUID of the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getJobId","p":"Illuminate/Contracts/Queue/Job.html#method_getJobId","d":"<p>Get the job identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::payload","p":"Illuminate/Contracts/Queue/Job.html#method_payload","d":"<p>Get the decoded body of the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::fire","p":"Illuminate/Contracts/Queue/Job.html#method_fire","d":"<p>Fire the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::release","p":"Illuminate/Contracts/Queue/Job.html#method_release","d":"<p>Release the job back into the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isReleased","p":"Illuminate/Contracts/Queue/Job.html#method_isReleased","d":"<p>Determine if the job was released back into the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::delete","p":"Illuminate/Contracts/Queue/Job.html#method_delete","d":"<p>Delete the job from the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isDeleted","p":"Illuminate/Contracts/Queue/Job.html#method_isDeleted","d":"<p>Determine if the job has been deleted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::isDeletedOrReleased","p":"Illuminate/Contracts/Queue/Job.html#method_isDeletedOrReleased","d":"<p>Determine if the job has been deleted or released.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::attempts","p":"Illuminate/Contracts/Queue/Job.html#method_attempts","d":"<p>Get the number of times the job has been attempted.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::hasFailed","p":"Illuminate/Contracts/Queue/Job.html#method_hasFailed","d":"<p>Determine if the job has been marked as a failure.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::markAsFailed","p":"Illuminate/Contracts/Queue/Job.html#method_markAsFailed","d":"<p>Mark the job as &quot;failed&quot;.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::fail","p":"Illuminate/Contracts/Queue/Job.html#method_fail","d":"<p>Delete the job, call the &quot;failed&quot; method, and raise the failed job event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::maxTries","p":"Illuminate/Contracts/Queue/Job.html#method_maxTries","d":"<p>Get the number of times to attempt a job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::maxExceptions","p":"Illuminate/Contracts/Queue/Job.html#method_maxExceptions","d":"<p>Get the maximum number of exceptions allowed, regardless of attempts.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::timeout","p":"Illuminate/Contracts/Queue/Job.html#method_timeout","d":"<p>Get the number of seconds the job can run.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::retryUntil","p":"Illuminate/Contracts/Queue/Job.html#method_retryUntil","d":"<p>Get the timestamp indicating when the job should timeout.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getName","p":"Illuminate/Contracts/Queue/Job.html#method_getName","d":"<p>Get the name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::resolveName","p":"Illuminate/Contracts/Queue/Job.html#method_resolveName","d":"<p>Get the resolved name of the queued job class.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getConnectionName","p":"Illuminate/Contracts/Queue/Job.html#method_getConnectionName","d":"<p>Get the name of the connection the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getQueue","p":"Illuminate/Contracts/Queue/Job.html#method_getQueue","d":"<p>Get the name of the queue the job belongs to.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Job::getRawBody","p":"Illuminate/Contracts/Queue/Job.html#method_getRawBody","d":"<p>Get the raw body string for the job.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::looping","p":"Illuminate/Contracts/Queue/Monitor.html#method_looping","d":"<p>Register a callback to be executed on every iteration through the queue loop.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::failing","p":"Illuminate/Contracts/Queue/Monitor.html#method_failing","d":"<p>Register a callback to be executed when a job fails after the maximum number of retries.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Monitor::stopping","p":"Illuminate/Contracts/Queue/Monitor.html#method_stopping","d":"<p>Register a callback to be executed when a daemon queue is stopping.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::size","p":"Illuminate/Contracts/Queue/Queue.html#method_size","d":"<p>Get the size of the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::push","p":"Illuminate/Contracts/Queue/Queue.html#method_push","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pushOn","p":"Illuminate/Contracts/Queue/Queue.html#method_pushOn","d":"<p>Push a new job onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pushRaw","p":"Illuminate/Contracts/Queue/Queue.html#method_pushRaw","d":"<p>Push a raw payload onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::later","p":"Illuminate/Contracts/Queue/Queue.html#method_later","d":"<p>Push a new job onto the queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::laterOn","p":"Illuminate/Contracts/Queue/Queue.html#method_laterOn","d":"<p>Push a new job onto a specific queue after (n) seconds.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::bulk","p":"Illuminate/Contracts/Queue/Queue.html#method_bulk","d":"<p>Push an array of jobs onto the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::pop","p":"Illuminate/Contracts/Queue/Queue.html#method_pop","d":"<p>Pop the next job off of the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::getConnectionName","p":"Illuminate/Contracts/Queue/Queue.html#method_getConnectionName","d":"<p>Get the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\Queue::setConnectionName","p":"Illuminate/Contracts/Queue/Queue.html#method_setConnectionName","d":"<p>Set the connection name for the queue.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableClass","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableClass","d":"<p>Get the type of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableIds","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableIds","d":"<p>Get the identifiers for all of the entities.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableRelations","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableRelations","d":"<p>Get the relationships of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableCollection::getQueueableConnection","p":"Illuminate/Contracts/Queue/QueueableCollection.html#method_getQueueableConnection","d":"<p>Get the connection of the entities being queued.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableEntity::getQueueableId","p":"Illuminate/Contracts/Queue/QueueableEntity.html#method_getQueueableId","d":"<p>Get the queueable identity for the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableEntity::getQueueableRelations","p":"Illuminate/Contracts/Queue/QueueableEntity.html#method_getQueueableRelations","d":"<p>Get the relationships for the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Queue\\QueueableEntity::getQueueableConnection","p":"Illuminate/Contracts/Queue/QueueableEntity.html#method_getQueueableConnection","d":"<p>Get the connection of the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connection::subscribe","p":"Illuminate/Contracts/Redis/Connection.html#method_subscribe","d":"<p>Subscribe to a set of given channels for messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connection::psubscribe","p":"Illuminate/Contracts/Redis/Connection.html#method_psubscribe","d":"<p>Subscribe to a set of given channels with wildcards.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connection::command","p":"Illuminate/Contracts/Redis/Connection.html#method_command","d":"<p>Run a command against the Redis database.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connector::connect","p":"Illuminate/Contracts/Redis/Connector.html#method_connect","d":"<p>Create a connection to a Redis cluster.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Connector::connectToCluster","p":"Illuminate/Contracts/Redis/Connector.html#method_connectToCluster","d":"<p>Create a connection to a Redis instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Redis\\Factory::connection","p":"Illuminate/Contracts/Redis/Factory.html#method_connection","d":"<p>Get a Redis connection by name.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar::bind","p":"Illuminate/Contracts/Routing/BindingRegistrar.html#method_bind","d":"<p>Add a new route parameter binder.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\BindingRegistrar::getBindingCallback","p":"Illuminate/Contracts/Routing/BindingRegistrar.html#method_getBindingCallback","d":"<p>Get the binding callback for a given binding.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::get","p":"Illuminate/Contracts/Routing/Registrar.html#method_get","d":"<p>Register a new GET route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::post","p":"Illuminate/Contracts/Routing/Registrar.html#method_post","d":"<p>Register a new POST route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::put","p":"Illuminate/Contracts/Routing/Registrar.html#method_put","d":"<p>Register a new PUT route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::delete","p":"Illuminate/Contracts/Routing/Registrar.html#method_delete","d":"<p>Register a new DELETE route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::patch","p":"Illuminate/Contracts/Routing/Registrar.html#method_patch","d":"<p>Register a new PATCH route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::options","p":"Illuminate/Contracts/Routing/Registrar.html#method_options","d":"<p>Register a new OPTIONS route with the router.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::match","p":"Illuminate/Contracts/Routing/Registrar.html#method_match","d":"<p>Register a new route with the given verbs.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::resource","p":"Illuminate/Contracts/Routing/Registrar.html#method_resource","d":"<p>Route a resource to a controller.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::group","p":"Illuminate/Contracts/Routing/Registrar.html#method_group","d":"<p>Create a route group with shared attributes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::substituteBindings","p":"Illuminate/Contracts/Routing/Registrar.html#method_substituteBindings","d":"<p>Substitute the route bindings onto the route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\Registrar::substituteImplicitBindings","p":"Illuminate/Contracts/Routing/Registrar.html#method_substituteImplicitBindings","d":"<p>Substitute the implicit Eloquent model bindings for the route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::make","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_make","d":"<p>Create a new response instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::noContent","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_noContent","d":"<p>Create a new &quot;no content&quot; response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::view","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_view","d":"<p>Create a new response for a given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::json","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_json","d":"<p>Create a new JSON response instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::jsonp","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_jsonp","d":"<p>Create a new JSONP response instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::stream","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_stream","d":"<p>Create a new streamed response instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::streamDownload","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_streamDownload","d":"<p>Create a new streamed response instance as a file download.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::download","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_download","d":"<p>Create a new file download response.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::file","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_file","d":"<p>Return the raw contents of a binary file.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectTo","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectTo","d":"<p>Create a new redirect response to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToRoute","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToRoute","d":"<p>Create a new redirect response to a named route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToAction","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToAction","d":"<p>Create a new redirect response to a controller action.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectGuest","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectGuest","d":"<p>Create a new redirect response, while putting the current URL in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\ResponseFactory::redirectToIntended","p":"Illuminate/Contracts/Routing/ResponseFactory.html#method_redirectToIntended","d":"<p>Create a new redirect response to the previously intended location.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::current","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_current","d":"<p>Get the current URL for the request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::previous","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_previous","d":"<p>Get the URL for the previous request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::to","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_to","d":"<p>Generate an absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::secure","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_secure","d":"<p>Generate a secure, absolute URL to the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::asset","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_asset","d":"<p>Generate the URL to an application asset.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::route","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_route","d":"<p>Get the URL to a named route.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::action","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_action","d":"<p>Get the URL to a controller action.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::getRootControllerNamespace","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_getRootControllerNamespace","d":"<p>Get the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlGenerator::setRootControllerNamespace","p":"Illuminate/Contracts/Routing/UrlGenerator.html#method_setRootControllerNamespace","d":"<p>Set the root controller namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::getRouteKey","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_getRouteKey","d":"<p>Get the value of the model's route key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::getRouteKeyName","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_getRouteKeyName","d":"<p>Get the route key for the model.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::resolveRouteBinding","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_resolveRouteBinding","d":"<p>Retrieve the model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Routing\\UrlRoutable::resolveChildRouteBinding","p":"Illuminate/Contracts/Routing/UrlRoutable.html#method_resolveChildRouteBinding","d":"<p>Retrieve the child model for a bound value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getName","p":"Illuminate/Contracts/Session/Session.html#method_getName","d":"<p>Get the name of the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setName","p":"Illuminate/Contracts/Session/Session.html#method_setName","d":"<p>Set the name of the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getId","p":"Illuminate/Contracts/Session/Session.html#method_getId","d":"<p>Get the current session ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setId","p":"Illuminate/Contracts/Session/Session.html#method_setId","d":"<p>Set the session ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::start","p":"Illuminate/Contracts/Session/Session.html#method_start","d":"<p>Start the session, reading the data from a handler.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::save","p":"Illuminate/Contracts/Session/Session.html#method_save","d":"<p>Save the session data to storage.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::all","p":"Illuminate/Contracts/Session/Session.html#method_all","d":"<p>Get all of the session data.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::exists","p":"Illuminate/Contracts/Session/Session.html#method_exists","d":"<p>Checks if a key exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::has","p":"Illuminate/Contracts/Session/Session.html#method_has","d":"<p>Checks if a key is present and not null.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::get","p":"Illuminate/Contracts/Session/Session.html#method_get","d":"<p>Get an item from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::pull","p":"Illuminate/Contracts/Session/Session.html#method_pull","d":"<p>Get the value of a given key and then forget it.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::put","p":"Illuminate/Contracts/Session/Session.html#method_put","d":"<p>Put a key / value pair or array of key / value pairs in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::token","p":"Illuminate/Contracts/Session/Session.html#method_token","d":"<p>Get the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::regenerateToken","p":"Illuminate/Contracts/Session/Session.html#method_regenerateToken","d":"<p>Regenerate the CSRF token value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::remove","p":"Illuminate/Contracts/Session/Session.html#method_remove","d":"<p>Remove an item from the session, returning its value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::forget","p":"Illuminate/Contracts/Session/Session.html#method_forget","d":"<p>Remove one or many items from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::flush","p":"Illuminate/Contracts/Session/Session.html#method_flush","d":"<p>Remove all of the items from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::invalidate","p":"Illuminate/Contracts/Session/Session.html#method_invalidate","d":"<p>Flush the session data and regenerate the ID.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::regenerate","p":"Illuminate/Contracts/Session/Session.html#method_regenerate","d":"<p>Generate a new session identifier.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::migrate","p":"Illuminate/Contracts/Session/Session.html#method_migrate","d":"<p>Generate a new session ID for the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::isStarted","p":"Illuminate/Contracts/Session/Session.html#method_isStarted","d":"<p>Determine if the session has been started.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::previousUrl","p":"Illuminate/Contracts/Session/Session.html#method_previousUrl","d":"<p>Get the previous URL from the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setPreviousUrl","p":"Illuminate/Contracts/Session/Session.html#method_setPreviousUrl","d":"<p>Set the &quot;previous&quot; URL in the session.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::getHandler","p":"Illuminate/Contracts/Session/Session.html#method_getHandler","d":"<p>Get the session handler instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::handlerNeedsRequest","p":"Illuminate/Contracts/Session/Session.html#method_handlerNeedsRequest","d":"<p>Determine if the session handler needs a request.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Session\\Session::setRequestOnHandler","p":"Illuminate/Contracts/Session/Session.html#method_setRequestOnHandler","d":"<p>Set the request on the handler instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Arrayable::toArray","p":"Illuminate/Contracts/Support/Arrayable.html#method_toArray","d":null},{"t":"M","n":"Illuminate\\Contracts\\Support\\CanBeEscapedWhenCastToString::escapeWhenCastingToString","p":"Illuminate/Contracts/Support/CanBeEscapedWhenCastToString.html#method_escapeWhenCastingToString","d":"<p>Indicate that the object's string representation should be escaped when __toString is invoked.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\DeferrableProvider::provides","p":"Illuminate/Contracts/Support/DeferrableProvider.html#method_provides","d":"<p>Get the services provided by the provider.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\DeferringDisplayableValue::resolveDisplayableValue","p":"Illuminate/Contracts/Support/DeferringDisplayableValue.html#method_resolveDisplayableValue","d":"<p>Resolve the displayable value that the class is deferring.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Htmlable::toHtml","p":"Illuminate/Contracts/Support/Htmlable.html#method_toHtml","d":"<p>Get content as a string of HTML.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Jsonable::toJson","p":"Illuminate/Contracts/Support/Jsonable.html#method_toJson","d":"<p>Convert the object to its JSON representation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::keys","p":"Illuminate/Contracts/Support/MessageBag.html#method_keys","d":"<p>Get the keys present in the message bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::add","p":"Illuminate/Contracts/Support/MessageBag.html#method_add","d":"<p>Add a message to the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::merge","p":"Illuminate/Contracts/Support/MessageBag.html#method_merge","d":"<p>Merge a new array of messages into the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::has","p":"Illuminate/Contracts/Support/MessageBag.html#method_has","d":"<p>Determine if messages exist for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::first","p":"Illuminate/Contracts/Support/MessageBag.html#method_first","d":"<p>Get the first message from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::get","p":"Illuminate/Contracts/Support/MessageBag.html#method_get","d":"<p>Get all of the messages from the bag for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::all","p":"Illuminate/Contracts/Support/MessageBag.html#method_all","d":"<p>Get all of the messages for every key in the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::forget","p":"Illuminate/Contracts/Support/MessageBag.html#method_forget","d":"<p>Remove a message from the bag.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::getMessages","p":"Illuminate/Contracts/Support/MessageBag.html#method_getMessages","d":"<p>Get the raw messages in the container.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::getFormat","p":"Illuminate/Contracts/Support/MessageBag.html#method_getFormat","d":"<p>Get the default message format.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::setFormat","p":"Illuminate/Contracts/Support/MessageBag.html#method_setFormat","d":"<p>Set the default message format.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::isEmpty","p":"Illuminate/Contracts/Support/MessageBag.html#method_isEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageBag::isNotEmpty","p":"Illuminate/Contracts/Support/MessageBag.html#method_isNotEmpty","d":"<p>Determine if the message bag has any messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\MessageProvider::getMessageBag","p":"Illuminate/Contracts/Support/MessageProvider.html#method_getMessageBag","d":"<p>Get the messages for the instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Renderable::render","p":"Illuminate/Contracts/Support/Renderable.html#method_render","d":"<p>Get the evaluated contents of the object.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Support\\Responsable::toResponse","p":"Illuminate/Contracts/Support/Responsable.html#method_toResponse","d":"<p>Create an HTTP response that represents the object.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\HasLocalePreference::preferredLocale","p":"Illuminate/Contracts/Translation/HasLocalePreference.html#method_preferredLocale","d":"<p>Get the preferred locale of the entity.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Loader::load","p":"Illuminate/Contracts/Translation/Loader.html#method_load","d":"<p>Load the messages for the given locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Loader::addNamespace","p":"Illuminate/Contracts/Translation/Loader.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Loader::addJsonPath","p":"Illuminate/Contracts/Translation/Loader.html#method_addJsonPath","d":"<p>Add a new JSON path to the loader.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Loader::namespaces","p":"Illuminate/Contracts/Translation/Loader.html#method_namespaces","d":"<p>Get an array of all the registered namespaces.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::get","p":"Illuminate/Contracts/Translation/Translator.html#method_get","d":"<p>Get the translation for a given key.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::choice","p":"Illuminate/Contracts/Translation/Translator.html#method_choice","d":"<p>Get a translation according to an integer value.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::getLocale","p":"Illuminate/Contracts/Translation/Translator.html#method_getLocale","d":"<p>Get the default locale being used.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Translation\\Translator::setLocale","p":"Illuminate/Contracts/Translation/Translator.html#method_setLocale","d":"<p>Set the default locale.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\DataAwareRule::setData","p":"Illuminate/Contracts/Validation/DataAwareRule.html#method_setData","d":"<p>Set the data under validation.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::make","p":"Illuminate/Contracts/Validation/Factory.html#method_make","d":"<p>Create a new Validator instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::extend","p":"Illuminate/Contracts/Validation/Factory.html#method_extend","d":"<p>Register a custom validator extension.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::extendImplicit","p":"Illuminate/Contracts/Validation/Factory.html#method_extendImplicit","d":"<p>Register a custom implicit validator extension.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Factory::replacer","p":"Illuminate/Contracts/Validation/Factory.html#method_replacer","d":"<p>Register a custom implicit validator message replacer.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\InvokableRule::__invoke","p":"Illuminate/Contracts/Validation/InvokableRule.html#method___invoke","d":"<p>Run the validation rule.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Rule::passes","p":"Illuminate/Contracts/Validation/Rule.html#method_passes","d":"<p>Determine if the validation rule passes.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Rule::message","p":"Illuminate/Contracts/Validation/Rule.html#method_message","d":"<p>Get the validation error message.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\UncompromisedVerifier::verify","p":"Illuminate/Contracts/Validation/UncompromisedVerifier.html#method_verify","d":"<p>Verify that the given data has not been compromised in data leaks.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\ValidatesWhenResolved::validateResolved","p":"Illuminate/Contracts/Validation/ValidatesWhenResolved.html#method_validateResolved","d":"<p>Validate the given class instance.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\ValidationRule::validate","p":"Illuminate/Contracts/Validation/ValidationRule.html#method_validate","d":"<p>Run the validation rule.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::validate","p":"Illuminate/Contracts/Validation/Validator.html#method_validate","d":"<p>Run the validator's rules against its data.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::validated","p":"Illuminate/Contracts/Validation/Validator.html#method_validated","d":"<p>Get the attributes and values that were validated.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::fails","p":"Illuminate/Contracts/Validation/Validator.html#method_fails","d":"<p>Determine if the data fails the validation rules.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::failed","p":"Illuminate/Contracts/Validation/Validator.html#method_failed","d":"<p>Get the failed validation rules.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::sometimes","p":"Illuminate/Contracts/Validation/Validator.html#method_sometimes","d":"<p>Add conditions to a given field based on a Closure.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::after","p":"Illuminate/Contracts/Validation/Validator.html#method_after","d":"<p>Add an after validation callback.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\Validator::errors","p":"Illuminate/Contracts/Validation/Validator.html#method_errors","d":"<p>Get all of the validation error messages.</p>"},{"t":"M","n":"Illuminate\\Contracts\\Validation\\ValidatorAwareRule::setValidator","p":"Illuminate/Contracts/Validation/ValidatorAwareRule.html#method_setValidator","d":"<p>Set the current validator.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Engine::get","p":"Illuminate/Contracts/View/Engine.html#method_get","d":"<p>Get the evaluated contents of the view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::exists","p":"Illuminate/Contracts/View/Factory.html#method_exists","d":"<p>Determine if a given view exists.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::file","p":"Illuminate/Contracts/View/Factory.html#method_file","d":"<p>Get the evaluated view contents for the given path.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::make","p":"Illuminate/Contracts/View/Factory.html#method_make","d":"<p>Get the evaluated view contents for the given view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::share","p":"Illuminate/Contracts/View/Factory.html#method_share","d":"<p>Add a piece of shared data to the environment.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::composer","p":"Illuminate/Contracts/View/Factory.html#method_composer","d":"<p>Register a view composer event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::creator","p":"Illuminate/Contracts/View/Factory.html#method_creator","d":"<p>Register a view creator event.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::addNamespace","p":"Illuminate/Contracts/View/Factory.html#method_addNamespace","d":"<p>Add a new namespace to the loader.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\Factory::replaceNamespace","p":"Illuminate/Contracts/View/Factory.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::name","p":"Illuminate/Contracts/View/View.html#method_name","d":"<p>Get the name of the view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::with","p":"Illuminate/Contracts/View/View.html#method_with","d":"<p>Add a piece of data to the view.</p>"},{"t":"M","n":"Illuminate\\Contracts\\View\\View::getData","p":"Illuminate/Contracts/View/View.html#method_getData","d":"<p>Get the array of view data.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::table","p":"Illuminate/Database/ConnectionInterface.html#method_table","d":"<p>Begin a fluent query against a database table.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::raw","p":"Illuminate/Database/ConnectionInterface.html#method_raw","d":"<p>Get a new raw query expression.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::selectOne","p":"Illuminate/Database/ConnectionInterface.html#method_selectOne","d":"<p>Run a select statement and return a single result.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::select","p":"Illuminate/Database/ConnectionInterface.html#method_select","d":"<p>Run a select statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::cursor","p":"Illuminate/Database/ConnectionInterface.html#method_cursor","d":"<p>Run a select statement against the database and returns a generator.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::insert","p":"Illuminate/Database/ConnectionInterface.html#method_insert","d":"<p>Run an insert statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::update","p":"Illuminate/Database/ConnectionInterface.html#method_update","d":"<p>Run an update statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::delete","p":"Illuminate/Database/ConnectionInterface.html#method_delete","d":"<p>Run a delete statement against the database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::statement","p":"Illuminate/Database/ConnectionInterface.html#method_statement","d":"<p>Execute an SQL statement and return the boolean result.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::affectingStatement","p":"Illuminate/Database/ConnectionInterface.html#method_affectingStatement","d":"<p>Run an SQL statement and get the number of rows affected.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::unprepared","p":"Illuminate/Database/ConnectionInterface.html#method_unprepared","d":"<p>Run a raw, unprepared query against the PDO connection.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::prepareBindings","p":"Illuminate/Database/ConnectionInterface.html#method_prepareBindings","d":"<p>Prepare the query bindings for execution.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::transaction","p":"Illuminate/Database/ConnectionInterface.html#method_transaction","d":"<p>Execute a Closure within a transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::beginTransaction","p":"Illuminate/Database/ConnectionInterface.html#method_beginTransaction","d":"<p>Start a new database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::commit","p":"Illuminate/Database/ConnectionInterface.html#method_commit","d":"<p>Commit the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::rollBack","p":"Illuminate/Database/ConnectionInterface.html#method_rollBack","d":"<p>Rollback the active database transaction.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::transactionLevel","p":"Illuminate/Database/ConnectionInterface.html#method_transactionLevel","d":"<p>Get the number of active transactions.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::pretend","p":"Illuminate/Database/ConnectionInterface.html#method_pretend","d":"<p>Execute the given callback in &quot;dry run&quot; mode.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionInterface::getDatabaseName","p":"Illuminate/Database/ConnectionInterface.html#method_getDatabaseName","d":"<p>Get the name of the connected database.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::connection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_connection","d":"<p>Get a database connection instance.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::getDefaultConnection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_getDefaultConnection","d":"<p>Get the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\ConnectionResolverInterface::setDefaultConnection","p":"Illuminate/Database/ConnectionResolverInterface.html#method_setDefaultConnection","d":"<p>Set the default connection name.</p>"},{"t":"M","n":"Illuminate\\Database\\Connectors\\ConnectorInterface::connect","p":"Illuminate/Database/Connectors/ConnectorInterface.html#method_connect","d":"<p>Establish a database connection.</p>"},{"t":"M","n":"Illuminate\\Database\\Eloquent\\Scope::apply","p":"Illuminate/Database/Eloquent/Scope.html#method_apply","d":"<p>Apply the scope to a given Eloquent query builder.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getRan","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getRan","d":"<p>Get the completed migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getMigrations","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getMigrations","d":"<p>Get the list of migrations.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getMigrationsByBatch","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getMigrationsByBatch","d":"<p>Get the list of the migrations by batch.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getLast","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getLast","d":"<p>Get the last migration batch.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getMigrationBatches","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getMigrationBatches","d":"<p>Get the completed migrations with their batch numbers.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::log","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_log","d":"<p>Log that a migration was run.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::delete","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_delete","d":"<p>Remove a migration from the log.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::getNextBatchNumber","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_getNextBatchNumber","d":"<p>Get the next migration batch number.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::createRepository","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_createRepository","d":"<p>Create the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::repositoryExists","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_repositoryExists","d":"<p>Determine if the migration repository exists.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::deleteRepository","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_deleteRepository","d":"<p>Delete the migration repository data store.</p>"},{"t":"M","n":"Illuminate\\Database\\Migrations\\MigrationRepositoryInterface::setSource","p":"Illuminate/Database/Migrations/MigrationRepositoryInterface.html#method_setSource","d":"<p>Set the information source to gather data.</p>"},{"t":"M","n":"Illuminate\\Http\\Resources\\PotentiallyMissing::isMissing","p":"Illuminate/Http/Resources/PotentiallyMissing.html#method_isMissing","d":"<p>Determine if the object should be considered &quot;missing&quot;.</p>"},{"t":"M","n":"Illuminate\\Queue\\Connectors\\ConnectorInterface::connect","p":"Illuminate/Queue/Connectors/ConnectorInterface.html#method_connect","d":"<p>Establish a queue connection.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::log","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_log","d":"<p>Log a failed job into storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::all","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_all","d":"<p>Get a list of all of the failed jobs.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::find","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_find","d":"<p>Get a single failed job.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::forget","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_forget","d":"<p>Delete a single failed job from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\FailedJobProviderInterface::flush","p":"Illuminate/Queue/Failed/FailedJobProviderInterface.html#method_flush","d":"<p>Flush all of the failed jobs from storage.</p>"},{"t":"M","n":"Illuminate\\Queue\\Failed\\PrunableFailedJobProvider::prune","p":"Illuminate/Queue/Failed/PrunableFailedJobProvider.html#method_prune","d":"<p>Prune all of the entries older than the given date.</p>"},{"t":"M","n":"Illuminate\\Routing\\Contracts\\CallableDispatcher::dispatch","p":"Illuminate/Routing/Contracts/CallableDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given callable.</p>"},{"t":"M","n":"Illuminate\\Routing\\Contracts\\ControllerDispatcher::dispatch","p":"Illuminate/Routing/Contracts/ControllerDispatcher.html#method_dispatch","d":"<p>Dispatch a request to a given controller and method.</p>"},{"t":"M","n":"Illuminate\\Routing\\Contracts\\ControllerDispatcher::getMiddleware","p":"Illuminate/Routing/Contracts/ControllerDispatcher.html#method_getMiddleware","d":"<p>Get the middleware for the controller instance.</p>"},{"t":"M","n":"Illuminate\\Routing\\Controllers\\HasMiddleware::middleware","p":"Illuminate/Routing/Controllers/HasMiddleware.html#method_middleware","d":"<p>Get the middleware that should be assigned to the controller.</p>"},{"t":"M","n":"Illuminate\\Routing\\Matching\\ValidatorInterface::matches","p":"Illuminate/Routing/Matching/ValidatorInterface.html#method_matches","d":"<p>Validate a given rule against a route and request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::add","p":"Illuminate/Routing/RouteCollectionInterface.html#method_add","d":"<p>Add a Route instance to the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::refreshNameLookups","p":"Illuminate/Routing/RouteCollectionInterface.html#method_refreshNameLookups","d":"<p>Refresh the name look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::refreshActionLookups","p":"Illuminate/Routing/RouteCollectionInterface.html#method_refreshActionLookups","d":"<p>Refresh the action look-up table.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::match","p":"Illuminate/Routing/RouteCollectionInterface.html#method_match","d":"<p>Find the first route matching a given request.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::get","p":"Illuminate/Routing/RouteCollectionInterface.html#method_get","d":"<p>Get routes from the collection by method.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::hasNamedRoute","p":"Illuminate/Routing/RouteCollectionInterface.html#method_hasNamedRoute","d":"<p>Determine if the route collection contains a given named route.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getByName","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getByName","d":"<p>Get a route instance by its name.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getByAction","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getByAction","d":"<p>Get a route instance by its controller action.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getRoutes","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getRoutes","d":"<p>Get all of the routes in the collection.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getRoutesByMethod","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getRoutesByMethod","d":"<p>Get all of the routes keyed by their HTTP verb / method.</p>"},{"t":"M","n":"Illuminate\\Routing\\RouteCollectionInterface::getRoutesByName","p":"Illuminate/Routing/RouteCollectionInterface.html#method_getRoutesByName","d":"<p>Get all of the routes keyed by their name.</p>"},{"t":"M","n":"Illuminate\\Session\\ExistenceAwareInterface::setExists","p":"Illuminate/Session/ExistenceAwareInterface.html#method_setExists","d":"<p>Set the existence state for the session.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::make","p":"Illuminate/Support/Enumerable.html#method_make","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::times","p":"Illuminate/Support/Enumerable.html#method_times","d":"<p>Create a new instance by invoking the callback a given amount of times.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::range","p":"Illuminate/Support/Enumerable.html#method_range","d":"<p>Create a collection with the given range.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::wrap","p":"Illuminate/Support/Enumerable.html#method_wrap","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::unwrap","p":"Illuminate/Support/Enumerable.html#method_unwrap","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::empty","p":"Illuminate/Support/Enumerable.html#method_empty","d":"<p>Create a new instance with no items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::all","p":"Illuminate/Support/Enumerable.html#method_all","d":"<p>Get all items in the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::average","p":"Illuminate/Support/Enumerable.html#method_average","d":"<p>Alias for the &quot;avg&quot; method.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::median","p":"Illuminate/Support/Enumerable.html#method_median","d":"<p>Get the median of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::mode","p":"Illuminate/Support/Enumerable.html#method_mode","d":"<p>Get the mode of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::collapse","p":"Illuminate/Support/Enumerable.html#method_collapse","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::some","p":"Illuminate/Support/Enumerable.html#method_some","d":"<p>Alias for the &quot;contains&quot; method.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::containsStrict","p":"Illuminate/Support/Enumerable.html#method_containsStrict","d":"<p>Determine if an item exists, using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::avg","p":"Illuminate/Support/Enumerable.html#method_avg","d":"<p>Get the average value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::contains","p":"Illuminate/Support/Enumerable.html#method_contains","d":"<p>Determine if an item exists in the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::doesntContain","p":"Illuminate/Support/Enumerable.html#method_doesntContain","d":"<p>Determine if an item is not contained in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::crossJoin","p":"Illuminate/Support/Enumerable.html#method_crossJoin","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::dd","p":"Illuminate/Support/Enumerable.html#method_dd","d":"<p>Dump the collection and end the script.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::dump","p":"Illuminate/Support/Enumerable.html#method_dump","d":"<p>Dump the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diff","p":"Illuminate/Support/Enumerable.html#method_diff","d":"<p>Get the items that are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffUsing","p":"Illuminate/Support/Enumerable.html#method_diffUsing","d":"<p>Get the items that are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffAssoc","p":"Illuminate/Support/Enumerable.html#method_diffAssoc","d":"<p>Get the items whose keys and values are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffAssocUsing","p":"Illuminate/Support/Enumerable.html#method_diffAssocUsing","d":"<p>Get the items whose keys and values are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffKeys","p":"Illuminate/Support/Enumerable.html#method_diffKeys","d":"<p>Get the items whose keys are not present in the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::diffKeysUsing","p":"Illuminate/Support/Enumerable.html#method_diffKeysUsing","d":"<p>Get the items whose keys are not present in the given items, using the callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::duplicates","p":"Illuminate/Support/Enumerable.html#method_duplicates","d":"<p>Retrieve duplicate items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::duplicatesStrict","p":"Illuminate/Support/Enumerable.html#method_duplicatesStrict","d":"<p>Retrieve duplicate items using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::each","p":"Illuminate/Support/Enumerable.html#method_each","d":"<p>Execute a callback over each item.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::eachSpread","p":"Illuminate/Support/Enumerable.html#method_eachSpread","d":"<p>Execute a callback over each nested chunk of items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::every","p":"Illuminate/Support/Enumerable.html#method_every","d":"<p>Determine if all items pass the given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::except","p":"Illuminate/Support/Enumerable.html#method_except","d":"<p>Get all items except for those with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::filter","p":"Illuminate/Support/Enumerable.html#method_filter","d":"<p>Run a filter over each of the items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::when","p":"Illuminate/Support/Enumerable.html#method_when","d":"<p>Apply the callback if the given &quot;value&quot; is (or resolves to) truthy.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whenEmpty","p":"Illuminate/Support/Enumerable.html#method_whenEmpty","d":"<p>Apply the callback if the collection is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whenNotEmpty","p":"Illuminate/Support/Enumerable.html#method_whenNotEmpty","d":"<p>Apply the callback if the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::unless","p":"Illuminate/Support/Enumerable.html#method_unless","d":"<p>Apply the callback if the given &quot;value&quot; is (or resolves to) truthy.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::unlessEmpty","p":"Illuminate/Support/Enumerable.html#method_unlessEmpty","d":"<p>Apply the callback unless the collection is empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::unlessNotEmpty","p":"Illuminate/Support/Enumerable.html#method_unlessNotEmpty","d":"<p>Apply the callback unless the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::where","p":"Illuminate/Support/Enumerable.html#method_where","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNull","p":"Illuminate/Support/Enumerable.html#method_whereNull","d":"<p>Filter items where the value for the given key is null.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNotNull","p":"Illuminate/Support/Enumerable.html#method_whereNotNull","d":"<p>Filter items where the value for the given key is not null.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereStrict","p":"Illuminate/Support/Enumerable.html#method_whereStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereIn","p":"Illuminate/Support/Enumerable.html#method_whereIn","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereInStrict","p":"Illuminate/Support/Enumerable.html#method_whereInStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereBetween","p":"Illuminate/Support/Enumerable.html#method_whereBetween","d":"<p>Filter items such that the value of the given key is between the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNotBetween","p":"Illuminate/Support/Enumerable.html#method_whereNotBetween","d":"<p>Filter items such that the value of the given key is not between the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNotIn","p":"Illuminate/Support/Enumerable.html#method_whereNotIn","d":"<p>Filter items by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereNotInStrict","p":"Illuminate/Support/Enumerable.html#method_whereNotInStrict","d":"<p>Filter items by the given key value pair using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::whereInstanceOf","p":"Illuminate/Support/Enumerable.html#method_whereInstanceOf","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::first","p":"Illuminate/Support/Enumerable.html#method_first","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::firstWhere","p":"Illuminate/Support/Enumerable.html#method_firstWhere","d":"<p>Get the first item by the given key value pair.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::flatten","p":"Illuminate/Support/Enumerable.html#method_flatten","d":"<p>Get a flattened array of the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::flip","p":"Illuminate/Support/Enumerable.html#method_flip","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::get","p":"Illuminate/Support/Enumerable.html#method_get","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::groupBy","p":"Illuminate/Support/Enumerable.html#method_groupBy","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::keyBy","p":"Illuminate/Support/Enumerable.html#method_keyBy","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::has","p":"Illuminate/Support/Enumerable.html#method_has","d":"<p>Determine if an item exists in the collection by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::hasAny","p":"Illuminate/Support/Enumerable.html#method_hasAny","d":"<p>Determine if any of the keys exist in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::implode","p":"Illuminate/Support/Enumerable.html#method_implode","d":"<p>Concatenate values of a given key as a string.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::intersect","p":"Illuminate/Support/Enumerable.html#method_intersect","d":"<p>Intersect the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::intersectByKeys","p":"Illuminate/Support/Enumerable.html#method_intersectByKeys","d":"<p>Intersect the collection with the given items by key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::isEmpty","p":"Illuminate/Support/Enumerable.html#method_isEmpty","d":"<p>Determine if the collection is empty or not.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::isNotEmpty","p":"Illuminate/Support/Enumerable.html#method_isNotEmpty","d":"<p>Determine if the collection is not empty.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::containsOneItem","p":"Illuminate/Support/Enumerable.html#method_containsOneItem","d":"<p>Determine if the collection contains a single item.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::join","p":"Illuminate/Support/Enumerable.html#method_join","d":"<p>Join all items from the collection using a string. The final items can use a separate glue string.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::keys","p":"Illuminate/Support/Enumerable.html#method_keys","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::last","p":"Illuminate/Support/Enumerable.html#method_last","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::map","p":"Illuminate/Support/Enumerable.html#method_map","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapSpread","p":"Illuminate/Support/Enumerable.html#method_mapSpread","d":"<p>Run a map over each nested chunk of items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapToDictionary","p":"Illuminate/Support/Enumerable.html#method_mapToDictionary","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapToGroups","p":"Illuminate/Support/Enumerable.html#method_mapToGroups","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapWithKeys","p":"Illuminate/Support/Enumerable.html#method_mapWithKeys","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::flatMap","p":"Illuminate/Support/Enumerable.html#method_flatMap","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::mapInto","p":"Illuminate/Support/Enumerable.html#method_mapInto","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::merge","p":"Illuminate/Support/Enumerable.html#method_merge","d":"<p>Merge the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::mergeRecursive","p":"Illuminate/Support/Enumerable.html#method_mergeRecursive","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::combine","p":"Illuminate/Support/Enumerable.html#method_combine","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::union","p":"Illuminate/Support/Enumerable.html#method_union","d":"<p>Union the collection with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::min","p":"Illuminate/Support/Enumerable.html#method_min","d":"<p>Get the min value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::max","p":"Illuminate/Support/Enumerable.html#method_max","d":"<p>Get the max value of a given key.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::nth","p":"Illuminate/Support/Enumerable.html#method_nth","d":"<p>Create a new collection consisting of every n-th element.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::only","p":"Illuminate/Support/Enumerable.html#method_only","d":"<p>Get the items with the specified keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::forPage","p":"Illuminate/Support/Enumerable.html#method_forPage","d":"<p>&quot;Paginate&quot; the collection by slicing it into a smaller collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::partition","p":"Illuminate/Support/Enumerable.html#method_partition","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::concat","p":"Illuminate/Support/Enumerable.html#method_concat","d":"<p>Push all of the given items onto the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::random","p":"Illuminate/Support/Enumerable.html#method_random","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::reduce","p":"Illuminate/Support/Enumerable.html#method_reduce","d":"<p>Reduce the collection to a single value.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::reduceSpread","p":"Illuminate/Support/Enumerable.html#method_reduceSpread","d":"<p>Reduce the collection to multiple aggregate values.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::replace","p":"Illuminate/Support/Enumerable.html#method_replace","d":"<p>Replace the collection items with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::replaceRecursive","p":"Illuminate/Support/Enumerable.html#method_replaceRecursive","d":"<p>Recursively replace the collection items with the given items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::reverse","p":"Illuminate/Support/Enumerable.html#method_reverse","d":"<p>Reverse items order.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::search","p":"Illuminate/Support/Enumerable.html#method_search","d":"<p>Search the collection for a given value and return the corresponding key if successful.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::shuffle","p":"Illuminate/Support/Enumerable.html#method_shuffle","d":"<p>Shuffle the items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sliding","p":"Illuminate/Support/Enumerable.html#method_sliding","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::skip","p":"Illuminate/Support/Enumerable.html#method_skip","d":"<p>Skip the first {$count} items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::skipUntil","p":"Illuminate/Support/Enumerable.html#method_skipUntil","d":"<p>Skip items in the collection until the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::skipWhile","p":"Illuminate/Support/Enumerable.html#method_skipWhile","d":"<p>Skip items in the collection while the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::slice","p":"Illuminate/Support/Enumerable.html#method_slice","d":"<p>Get a slice of items from the enumerable.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::split","p":"Illuminate/Support/Enumerable.html#method_split","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::sole","p":"Illuminate/Support/Enumerable.html#method_sole","d":"<p>Get the first item in the collection, but only if exactly one item exists. Otherwise, throw an exception.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::firstOrFail","p":"Illuminate/Support/Enumerable.html#method_firstOrFail","d":"<p>Get the first item in the collection but throw an exception if no matching items exist.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::chunk","p":"Illuminate/Support/Enumerable.html#method_chunk","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::chunkWhile","p":"Illuminate/Support/Enumerable.html#method_chunkWhile","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::splitIn","p":"Illuminate/Support/Enumerable.html#method_splitIn","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::sort","p":"Illuminate/Support/Enumerable.html#method_sort","d":"<p>Sort through each item with a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortDesc","p":"Illuminate/Support/Enumerable.html#method_sortDesc","d":"<p>Sort items in descending order.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortBy","p":"Illuminate/Support/Enumerable.html#method_sortBy","d":"<p>Sort the collection using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortByDesc","p":"Illuminate/Support/Enumerable.html#method_sortByDesc","d":"<p>Sort the collection in descending order using the given callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortKeys","p":"Illuminate/Support/Enumerable.html#method_sortKeys","d":"<p>Sort the collection keys.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortKeysDesc","p":"Illuminate/Support/Enumerable.html#method_sortKeysDesc","d":"<p>Sort the collection keys in descending order.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sortKeysUsing","p":"Illuminate/Support/Enumerable.html#method_sortKeysUsing","d":"<p>Sort the collection keys using a callback.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::sum","p":"Illuminate/Support/Enumerable.html#method_sum","d":"<p>Get the sum of the given values.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::take","p":"Illuminate/Support/Enumerable.html#method_take","d":"<p>Take the first or last {$limit} items.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::takeUntil","p":"Illuminate/Support/Enumerable.html#method_takeUntil","d":"<p>Take items in the collection until the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::takeWhile","p":"Illuminate/Support/Enumerable.html#method_takeWhile","d":"<p>Take items in the collection while the given condition is met.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::tap","p":"Illuminate/Support/Enumerable.html#method_tap","d":"<p>Pass the collection to the given callback and then return it.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::pipe","p":"Illuminate/Support/Enumerable.html#method_pipe","d":"<p>Pass the enumerable to the given callback and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::pipeInto","p":"Illuminate/Support/Enumerable.html#method_pipeInto","d":"<p>Pass the collection into a new class.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::pipeThrough","p":"Illuminate/Support/Enumerable.html#method_pipeThrough","d":"<p>Pass the collection through a series of callable pipes and return the result.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::pluck","p":"Illuminate/Support/Enumerable.html#method_pluck","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::reject","p":"Illuminate/Support/Enumerable.html#method_reject","d":"<p>Create a collection of all elements that do not pass a given truth test.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::undot","p":"Illuminate/Support/Enumerable.html#method_undot","d":"<p>Convert a flatten &quot;dot&quot; notation array into an expanded array.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::unique","p":"Illuminate/Support/Enumerable.html#method_unique","d":"<p>Return only unique items from the collection array.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::uniqueStrict","p":"Illuminate/Support/Enumerable.html#method_uniqueStrict","d":"<p>Return only unique items from the collection array using strict comparison.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::values","p":"Illuminate/Support/Enumerable.html#method_values","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::pad","p":"Illuminate/Support/Enumerable.html#method_pad","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::getIterator","p":"Illuminate/Support/Enumerable.html#method_getIterator","d":"<p>Get the values iterator.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::count","p":"Illuminate/Support/Enumerable.html#method_count","d":"<p>Count the number of items in the collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::countBy","p":"Illuminate/Support/Enumerable.html#method_countBy","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::zip","p":"Illuminate/Support/Enumerable.html#method_zip","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::collect","p":"Illuminate/Support/Enumerable.html#method_collect","d":"<p>Collect the values into a collection.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::toArray","p":"Illuminate/Support/Enumerable.html#method_toArray","d":null},{"t":"M","n":"Illuminate\\Support\\Enumerable::jsonSerialize","p":"Illuminate/Support/Enumerable.html#method_jsonSerialize","d":"<p>Convert the object into something JSON serializable.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::toJson","p":"Illuminate/Support/Enumerable.html#method_toJson","d":"<p>Get the collection of items as JSON.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::getCachingIterator","p":"Illuminate/Support/Enumerable.html#method_getCachingIterator","d":"<p>Get a CachingIterator instance.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::__toString","p":"Illuminate/Support/Enumerable.html#method___toString","d":"<p>Convert the collection to its string representation.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::escapeWhenCastingToString","p":"Illuminate/Support/Enumerable.html#method_escapeWhenCastingToString","d":"<p>Indicate that the model's string representation should be escaped when __toString is invoked.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::proxy","p":"Illuminate/Support/Enumerable.html#method_proxy","d":"<p>Add a method to the list of proxied methods.</p>"},{"t":"M","n":"Illuminate\\Support\\Enumerable::__get","p":"Illuminate/Support/Enumerable.html#method___get","d":"<p>Dynamically access collection proxies.</p>"},{"t":"M","n":"Illuminate\\Validation\\DatabasePresenceVerifierInterface::setConnection","p":"Illuminate/Validation/DatabasePresenceVerifierInterface.html#method_setConnection","d":"<p>Set the connection to be used.</p>"},{"t":"M","n":"Illuminate\\Validation\\PresenceVerifierInterface::getCount","p":"Illuminate/Validation/PresenceVerifierInterface.html#method_getCount","d":"<p>Count the number of objects in a collection having the given value.</p>"},{"t":"M","n":"Illuminate\\Validation\\PresenceVerifierInterface::getMultiCount","p":"Illuminate/Validation/PresenceVerifierInterface.html#method_getMultiCount","d":"<p>Count the number of objects in a collection with the given values.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::getCompiledPath","p":"Illuminate/View/Compilers/CompilerInterface.html#method_getCompiledPath","d":"<p>Get the path to the compiled version of a view.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::isExpired","p":"Illuminate/View/Compilers/CompilerInterface.html#method_isExpired","d":"<p>Determine if the given view is expired.</p>"},{"t":"M","n":"Illuminate\\View\\Compilers\\CompilerInterface::compile","p":"Illuminate/View/Compilers/CompilerInterface.html#method_compile","d":"<p>Compile the view at the given path.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::find","p":"Illuminate/View/ViewFinderInterface.html#method_find","d":"<p>Get the fully qualified location of the view.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addLocation","p":"Illuminate/View/ViewFinderInterface.html#method_addLocation","d":"<p>Add a location to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_addNamespace","d":"<p>Add a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::prependNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_prependNamespace","d":"<p>Prepend a namespace hint to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::replaceNamespace","p":"Illuminate/View/ViewFinderInterface.html#method_replaceNamespace","d":"<p>Replace the namespace hints for the given namespace.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::addExtension","p":"Illuminate/View/ViewFinderInterface.html#method_addExtension","d":"<p>Add a valid view extension to the finder.</p>"},{"t":"M","n":"Illuminate\\View\\ViewFinderInterface::flush","p":"Illuminate/View/ViewFinderInterface.html#method_flush","d":"<p>Flush the cache of located views.</p>"},{"t":"N","n":"","p":"[Global_Namespace].html"},{"t":"N","n":"Illuminate","p":"Illuminate.html"},{"t":"N","n":"Illuminate\\Auth","p":"Illuminate/Auth.html"},{"t":"N","n":"Illuminate\\Auth\\Access","p":"Illuminate/Auth/Access.html"},{"t":"N","n":"Illuminate\\Auth\\Access\\Events","p":"Illuminate/Auth/Access/Events.html"},{"t":"N","n":"Illuminate\\Auth\\Console","p":"Illuminate/Auth/Console.html"},{"t":"N","n":"Illuminate\\Auth\\Events","p":"Illuminate/Auth/Events.html"},{"t":"N","n":"Illuminate\\Auth\\Listeners","p":"Illuminate/Auth/Listeners.html"},{"t":"N","n":"Illuminate\\Auth\\Middleware","p":"Illuminate/Auth/Middleware.html"},{"t":"N","n":"Illuminate\\Auth\\Notifications","p":"Illuminate/Auth/Notifications.html"},{"t":"N","n":"Illuminate\\Auth\\Passwords","p":"Illuminate/Auth/Passwords.html"},{"t":"N","n":"Illuminate\\Broadcasting","p":"Illuminate/Broadcasting.html"},{"t":"N","n":"Illuminate\\Broadcasting\\Broadcasters","p":"Illuminate/Broadcasting/Broadcasters.html"},{"t":"N","n":"Illuminate\\Bus","p":"Illuminate/Bus.html"},{"t":"N","n":"Illuminate\\Bus\\Events","p":"Illuminate/Bus/Events.html"},{"t":"N","n":"Illuminate\\Cache","p":"Illuminate/Cache.html"},{"t":"N","n":"Illuminate\\Cache\\Console","p":"Illuminate/Cache/Console.html"},{"t":"N","n":"Illuminate\\Cache\\Events","p":"Illuminate/Cache/Events.html"},{"t":"N","n":"Illuminate\\Cache\\RateLimiting","p":"Illuminate/Cache/RateLimiting.html"},{"t":"N","n":"Illuminate\\Config","p":"Illuminate/Config.html"},{"t":"N","n":"Illuminate\\Console","p":"Illuminate/Console.html"},{"t":"N","n":"Illuminate\\Console\\Concerns","p":"Illuminate/Console/Concerns.html"},{"t":"N","n":"Illuminate\\Console\\Contracts","p":"Illuminate/Console/Contracts.html"},{"t":"N","n":"Illuminate\\Console\\Events","p":"Illuminate/Console/Events.html"},{"t":"N","n":"Illuminate\\Console\\Scheduling","p":"Illuminate/Console/Scheduling.html"},{"t":"N","n":"Illuminate\\Console\\View","p":"Illuminate/Console/View.html"},{"t":"N","n":"Illuminate\\Console\\View\\Components","p":"Illuminate/Console/View/Components.html"},{"t":"N","n":"Illuminate\\Console\\View\\Components\\Mutators","p":"Illuminate/Console/View/Components/Mutators.html"},{"t":"N","n":"Illuminate\\Container","p":"Illuminate/Container.html"},{"t":"N","n":"Illuminate\\Contracts","p":"Illuminate/Contracts.html"},{"t":"N","n":"Illuminate\\Contracts\\Auth","p":"Illuminate/Contracts/Auth.html"},{"t":"N","n":"Illuminate\\Contracts\\Auth\\Access","p":"Illuminate/Contracts/Auth/Access.html"},{"t":"N","n":"Illuminate\\Contracts\\Auth\\Middleware","p":"Illuminate/Contracts/Auth/Middleware.html"},{"t":"N","n":"Illuminate\\Contracts\\Broadcasting","p":"Illuminate/Contracts/Broadcasting.html"},{"t":"N","n":"Illuminate\\Contracts\\Bus","p":"Illuminate/Contracts/Bus.html"},{"t":"N","n":"Illuminate\\Contracts\\Cache","p":"Illuminate/Contracts/Cache.html"},{"t":"N","n":"Illuminate\\Contracts\\Config","p":"Illuminate/Contracts/Config.html"},{"t":"N","n":"Illuminate\\Contracts\\Console","p":"Illuminate/Contracts/Console.html"},{"t":"N","n":"Illuminate\\Contracts\\Container","p":"Illuminate/Contracts/Container.html"},{"t":"N","n":"Illuminate\\Contracts\\Cookie","p":"Illuminate/Contracts/Cookie.html"},{"t":"N","n":"Illuminate\\Contracts\\Database","p":"Illuminate/Contracts/Database.html"},{"t":"N","n":"Illuminate\\Contracts\\Database\\Eloquent","p":"Illuminate/Contracts/Database/Eloquent.html"},{"t":"N","n":"Illuminate\\Contracts\\Database\\Events","p":"Illuminate/Contracts/Database/Events.html"},{"t":"N","n":"Illuminate\\Contracts\\Database\\Query","p":"Illuminate/Contracts/Database/Query.html"},{"t":"N","n":"Illuminate\\Contracts\\Debug","p":"Illuminate/Contracts/Debug.html"},{"t":"N","n":"Illuminate\\Contracts\\Encryption","p":"Illuminate/Contracts/Encryption.html"},{"t":"N","n":"Illuminate\\Contracts\\Events","p":"Illuminate/Contracts/Events.html"},{"t":"N","n":"Illuminate\\Contracts\\Filesystem","p":"Illuminate/Contracts/Filesystem.html"},{"t":"N","n":"Illuminate\\Contracts\\Foundation","p":"Illuminate/Contracts/Foundation.html"},{"t":"N","n":"Illuminate\\Contracts\\Hashing","p":"Illuminate/Contracts/Hashing.html"},{"t":"N","n":"Illuminate\\Contracts\\Http","p":"Illuminate/Contracts/Http.html"},{"t":"N","n":"Illuminate\\Contracts\\Mail","p":"Illuminate/Contracts/Mail.html"},{"t":"N","n":"Illuminate\\Contracts\\Notifications","p":"Illuminate/Contracts/Notifications.html"},{"t":"N","n":"Illuminate\\Contracts\\Pagination","p":"Illuminate/Contracts/Pagination.html"},{"t":"N","n":"Illuminate\\Contracts\\Pipeline","p":"Illuminate/Contracts/Pipeline.html"},{"t":"N","n":"Illuminate\\Contracts\\Process","p":"Illuminate/Contracts/Process.html"},{"t":"N","n":"Illuminate\\Contracts\\Queue","p":"Illuminate/Contracts/Queue.html"},{"t":"N","n":"Illuminate\\Contracts\\Redis","p":"Illuminate/Contracts/Redis.html"},{"t":"N","n":"Illuminate\\Contracts\\Routing","p":"Illuminate/Contracts/Routing.html"},{"t":"N","n":"Illuminate\\Contracts\\Session","p":"Illuminate/Contracts/Session.html"},{"t":"N","n":"Illuminate\\Contracts\\Session\\Middleware","p":"Illuminate/Contracts/Session/Middleware.html"},{"t":"N","n":"Illuminate\\Contracts\\Support","p":"Illuminate/Contracts/Support.html"},{"t":"N","n":"Illuminate\\Contracts\\Translation","p":"Illuminate/Contracts/Translation.html"},{"t":"N","n":"Illuminate\\Contracts\\Validation","p":"Illuminate/Contracts/Validation.html"},{"t":"N","n":"Illuminate\\Contracts\\View","p":"Illuminate/Contracts/View.html"},{"t":"N","n":"Illuminate\\Cookie","p":"Illuminate/Cookie.html"},{"t":"N","n":"Illuminate\\Cookie\\Middleware","p":"Illuminate/Cookie/Middleware.html"},{"t":"N","n":"Illuminate\\Database","p":"Illuminate/Database.html"},{"t":"N","n":"Illuminate\\Database\\Capsule","p":"Illuminate/Database/Capsule.html"},{"t":"N","n":"Illuminate\\Database\\Concerns","p":"Illuminate/Database/Concerns.html"},{"t":"N","n":"Illuminate\\Database\\Connectors","p":"Illuminate/Database/Connectors.html"},{"t":"N","n":"Illuminate\\Database\\Console","p":"Illuminate/Database/Console.html"},{"t":"N","n":"Illuminate\\Database\\Console\\Factories","p":"Illuminate/Database/Console/Factories.html"},{"t":"N","n":"Illuminate\\Database\\Console\\Migrations","p":"Illuminate/Database/Console/Migrations.html"},{"t":"N","n":"Illuminate\\Database\\Console\\Seeds","p":"Illuminate/Database/Console/Seeds.html"},{"t":"N","n":"Illuminate\\Database\\DBAL","p":"Illuminate/Database/DBAL.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent","p":"Illuminate/Database/Eloquent.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent\\Casts","p":"Illuminate/Database/Eloquent/Casts.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent\\Concerns","p":"Illuminate/Database/Eloquent/Concerns.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent\\Factories","p":"Illuminate/Database/Eloquent/Factories.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent\\Relations","p":"Illuminate/Database/Eloquent/Relations.html"},{"t":"N","n":"Illuminate\\Database\\Eloquent\\Relations\\Concerns","p":"Illuminate/Database/Eloquent/Relations/Concerns.html"},{"t":"N","n":"Illuminate\\Database\\Events","p":"Illuminate/Database/Events.html"},{"t":"N","n":"Illuminate\\Database\\Migrations","p":"Illuminate/Database/Migrations.html"},{"t":"N","n":"Illuminate\\Database\\PDO","p":"Illuminate/Database/PDO.html"},{"t":"N","n":"Illuminate\\Database\\PDO\\Concerns","p":"Illuminate/Database/PDO/Concerns.html"},{"t":"N","n":"Illuminate\\Database\\Query","p":"Illuminate/Database/Query.html"},{"t":"N","n":"Illuminate\\Database\\Query\\Grammars","p":"Illuminate/Database/Query/Grammars.html"},{"t":"N","n":"Illuminate\\Database\\Query\\Processors","p":"Illuminate/Database/Query/Processors.html"},{"t":"N","n":"Illuminate\\Database\\Schema","p":"Illuminate/Database/Schema.html"},{"t":"N","n":"Illuminate\\Database\\Schema\\Grammars","p":"Illuminate/Database/Schema/Grammars.html"},{"t":"N","n":"Illuminate\\Encryption","p":"Illuminate/Encryption.html"},{"t":"N","n":"Illuminate\\Events","p":"Illuminate/Events.html"},{"t":"N","n":"Illuminate\\Filesystem","p":"Illuminate/Filesystem.html"},{"t":"N","n":"Illuminate\\Foundation","p":"Illuminate/Foundation.html"},{"t":"N","n":"Illuminate\\Foundation\\Auth","p":"Illuminate/Foundation/Auth.html"},{"t":"N","n":"Illuminate\\Foundation\\Auth\\Access","p":"Illuminate/Foundation/Auth/Access.html"},{"t":"N","n":"Illuminate\\Foundation\\Bootstrap","p":"Illuminate/Foundation/Bootstrap.html"},{"t":"N","n":"Illuminate\\Foundation\\Bus","p":"Illuminate/Foundation/Bus.html"},{"t":"N","n":"Illuminate\\Foundation\\Concerns","p":"Illuminate/Foundation/Concerns.html"},{"t":"N","n":"Illuminate\\Foundation\\Console","p":"Illuminate/Foundation/Console.html"},{"t":"N","n":"Illuminate\\Foundation\\Events","p":"Illuminate/Foundation/Events.html"},{"t":"N","n":"Illuminate\\Foundation\\Exceptions","p":"Illuminate/Foundation/Exceptions.html"},{"t":"N","n":"Illuminate\\Foundation\\Exceptions\\Whoops","p":"Illuminate/Foundation/Exceptions/Whoops.html"},{"t":"N","n":"Illuminate\\Foundation\\Http","p":"Illuminate/Foundation/Http.html"},{"t":"N","n":"Illuminate\\Foundation\\Http\\Events","p":"Illuminate/Foundation/Http/Events.html"},{"t":"N","n":"Illuminate\\Foundation\\Http\\Middleware","p":"Illuminate/Foundation/Http/Middleware.html"},{"t":"N","n":"Illuminate\\Foundation\\Providers","p":"Illuminate/Foundation/Providers.html"},{"t":"N","n":"Illuminate\\Foundation\\Routing","p":"Illuminate/Foundation/Routing.html"},{"t":"N","n":"Illuminate\\Foundation\\Support","p":"Illuminate/Foundation/Support.html"},{"t":"N","n":"Illuminate\\Foundation\\Support\\Providers","p":"Illuminate/Foundation/Support/Providers.html"},{"t":"N","n":"Illuminate\\Foundation\\Testing","p":"Illuminate/Foundation/Testing.html"},{"t":"N","n":"Illuminate\\Foundation\\Testing\\Concerns","p":"Illuminate/Foundation/Testing/Concerns.html"},{"t":"N","n":"Illuminate\\Foundation\\Testing\\Traits","p":"Illuminate/Foundation/Testing/Traits.html"},{"t":"N","n":"Illuminate\\Foundation\\Validation","p":"Illuminate/Foundation/Validation.html"},{"t":"N","n":"Illuminate\\Hashing","p":"Illuminate/Hashing.html"},{"t":"N","n":"Illuminate\\Http","p":"Illuminate/Http.html"},{"t":"N","n":"Illuminate\\Http\\Client","p":"Illuminate/Http/Client.html"},{"t":"N","n":"Illuminate\\Http\\Client\\Concerns","p":"Illuminate/Http/Client/Concerns.html"},{"t":"N","n":"Illuminate\\Http\\Client\\Events","p":"Illuminate/Http/Client/Events.html"},{"t":"N","n":"Illuminate\\Http\\Concerns","p":"Illuminate/Http/Concerns.html"},{"t":"N","n":"Illuminate\\Http\\Exceptions","p":"Illuminate/Http/Exceptions.html"},{"t":"N","n":"Illuminate\\Http\\Middleware","p":"Illuminate/Http/Middleware.html"},{"t":"N","n":"Illuminate\\Http\\Resources","p":"Illuminate/Http/Resources.html"},{"t":"N","n":"Illuminate\\Http\\Resources\\Json","p":"Illuminate/Http/Resources/Json.html"},{"t":"N","n":"Illuminate\\Http\\Testing","p":"Illuminate/Http/Testing.html"},{"t":"N","n":"Illuminate\\Log","p":"Illuminate/Log.html"},{"t":"N","n":"Illuminate\\Log\\Events","p":"Illuminate/Log/Events.html"},{"t":"N","n":"Illuminate\\Mail","p":"Illuminate/Mail.html"},{"t":"N","n":"Illuminate\\Mail\\Events","p":"Illuminate/Mail/Events.html"},{"t":"N","n":"Illuminate\\Mail\\Mailables","p":"Illuminate/Mail/Mailables.html"},{"t":"N","n":"Illuminate\\Mail\\Transport","p":"Illuminate/Mail/Transport.html"},{"t":"N","n":"Illuminate\\Notifications","p":"Illuminate/Notifications.html"},{"t":"N","n":"Illuminate\\Notifications\\Channels","p":"Illuminate/Notifications/Channels.html"},{"t":"N","n":"Illuminate\\Notifications\\Console","p":"Illuminate/Notifications/Console.html"},{"t":"N","n":"Illuminate\\Notifications\\Events","p":"Illuminate/Notifications/Events.html"},{"t":"N","n":"Illuminate\\Notifications\\Messages","p":"Illuminate/Notifications/Messages.html"},{"t":"N","n":"Illuminate\\Pagination","p":"Illuminate/Pagination.html"},{"t":"N","n":"Illuminate\\Pipeline","p":"Illuminate/Pipeline.html"},{"t":"N","n":"Illuminate\\Process","p":"Illuminate/Process.html"},{"t":"N","n":"Illuminate\\Process\\Exceptions","p":"Illuminate/Process/Exceptions.html"},{"t":"N","n":"Illuminate\\Queue","p":"Illuminate/Queue.html"},{"t":"N","n":"Illuminate\\Queue\\Capsule","p":"Illuminate/Queue/Capsule.html"},{"t":"N","n":"Illuminate\\Queue\\Connectors","p":"Illuminate/Queue/Connectors.html"},{"t":"N","n":"Illuminate\\Queue\\Console","p":"Illuminate/Queue/Console.html"},{"t":"N","n":"Illuminate\\Queue\\Events","p":"Illuminate/Queue/Events.html"},{"t":"N","n":"Illuminate\\Queue\\Failed","p":"Illuminate/Queue/Failed.html"},{"t":"N","n":"Illuminate\\Queue\\Jobs","p":"Illuminate/Queue/Jobs.html"},{"t":"N","n":"Illuminate\\Queue\\Middleware","p":"Illuminate/Queue/Middleware.html"},{"t":"N","n":"Illuminate\\Redis","p":"Illuminate/Redis.html"},{"t":"N","n":"Illuminate\\Redis\\Connections","p":"Illuminate/Redis/Connections.html"},{"t":"N","n":"Illuminate\\Redis\\Connectors","p":"Illuminate/Redis/Connectors.html"},{"t":"N","n":"Illuminate\\Redis\\Events","p":"Illuminate/Redis/Events.html"},{"t":"N","n":"Illuminate\\Redis\\Limiters","p":"Illuminate/Redis/Limiters.html"},{"t":"N","n":"Illuminate\\Routing","p":"Illuminate/Routing.html"},{"t":"N","n":"Illuminate\\Routing\\Console","p":"Illuminate/Routing/Console.html"},{"t":"N","n":"Illuminate\\Routing\\Contracts","p":"Illuminate/Routing/Contracts.html"},{"t":"N","n":"Illuminate\\Routing\\Controllers","p":"Illuminate/Routing/Controllers.html"},{"t":"N","n":"Illuminate\\Routing\\Events","p":"Illuminate/Routing/Events.html"},{"t":"N","n":"Illuminate\\Routing\\Exceptions","p":"Illuminate/Routing/Exceptions.html"},{"t":"N","n":"Illuminate\\Routing\\Matching","p":"Illuminate/Routing/Matching.html"},{"t":"N","n":"Illuminate\\Routing\\Middleware","p":"Illuminate/Routing/Middleware.html"},{"t":"N","n":"Illuminate\\Session","p":"Illuminate/Session.html"},{"t":"N","n":"Illuminate\\Session\\Console","p":"Illuminate/Session/Console.html"},{"t":"N","n":"Illuminate\\Session\\Middleware","p":"Illuminate/Session/Middleware.html"},{"t":"N","n":"Illuminate\\Support","p":"Illuminate/Support.html"},{"t":"N","n":"Illuminate\\Support\\Exceptions","p":"Illuminate/Support/Exceptions.html"},{"t":"N","n":"Illuminate\\Support\\Facades","p":"Illuminate/Support/Facades.html"},{"t":"N","n":"Illuminate\\Support\\Testing","p":"Illuminate/Support/Testing.html"},{"t":"N","n":"Illuminate\\Support\\Testing\\Fakes","p":"Illuminate/Support/Testing/Fakes.html"},{"t":"N","n":"Illuminate\\Support\\Traits","p":"Illuminate/Support/Traits.html"},{"t":"N","n":"Illuminate\\Testing","p":"Illuminate/Testing.html"},{"t":"N","n":"Illuminate\\Testing\\Concerns","p":"Illuminate/Testing/Concerns.html"},{"t":"N","n":"Illuminate\\Testing\\Constraints","p":"Illuminate/Testing/Constraints.html"},{"t":"N","n":"Illuminate\\Testing\\Exceptions","p":"Illuminate/Testing/Exceptions.html"},{"t":"N","n":"Illuminate\\Testing\\Fluent","p":"Illuminate/Testing/Fluent.html"},{"t":"N","n":"Illuminate\\Testing\\Fluent\\Concerns","p":"Illuminate/Testing/Fluent/Concerns.html"},{"t":"N","n":"Illuminate\\Translation","p":"Illuminate/Translation.html"},{"t":"N","n":"Illuminate\\Validation","p":"Illuminate/Validation.html"},{"t":"N","n":"Illuminate\\Validation\\Concerns","p":"Illuminate/Validation/Concerns.html"},{"t":"N","n":"Illuminate\\Validation\\Rules","p":"Illuminate/Validation/Rules.html"},{"t":"N","n":"Illuminate\\View","p":"Illuminate/View.html"},{"t":"N","n":"Illuminate\\View\\Compilers","p":"Illuminate/View/Compilers.html"},{"t":"N","n":"Illuminate\\View\\Compilers\\Concerns","p":"Illuminate/View/Compilers/Concerns.html"},{"t":"N","n":"Illuminate\\View\\Concerns","p":"Illuminate/View/Concerns.html"},{"t":"N","n":"Illuminate\\View\\Engines","p":"Illuminate/View/Engines.html"},{"t":"N","n":"Illuminate\\View\\Middleware","p":"Illuminate/View/Middleware.html"}]}
